android.support.annotation.AnimRes -> android.support.annotation.AnimRes:
android.support.annotation.AnimatorRes -> android.support.annotation.AnimatorRes:
android.support.annotation.AnyRes -> android.support.annotation.AnyRes:
android.support.annotation.ArrayRes -> android.support.annotation.ArrayRes:
android.support.annotation.AttrRes -> android.support.annotation.AttrRes:
android.support.annotation.BinderThread -> android.support.annotation.BinderThread:
android.support.annotation.BoolRes -> android.support.annotation.BoolRes:
android.support.annotation.CallSuper -> android.support.annotation.CallSuper:
android.support.annotation.CheckResult -> android.support.annotation.CheckResult:
    java.lang.String suggest() -> suggest
android.support.annotation.ColorInt -> android.support.annotation.ColorInt:
android.support.annotation.ColorRes -> android.support.annotation.ColorRes:
android.support.annotation.DimenRes -> android.support.annotation.DimenRes:
android.support.annotation.DrawableRes -> android.support.annotation.DrawableRes:
android.support.annotation.FloatRange -> android.support.annotation.FloatRange:
    double from() -> from
    double to() -> to
    boolean fromInclusive() -> fromInclusive
    boolean toInclusive() -> toInclusive
android.support.annotation.FractionRes -> android.support.annotation.FractionRes:
android.support.annotation.IdRes -> android.support.annotation.IdRes:
android.support.annotation.IntDef -> android.support.annotation.IntDef:
    long[] value() -> value
    boolean flag() -> flag
android.support.annotation.IntRange -> android.support.annotation.IntRange:
    long from() -> from
    long to() -> to
android.support.annotation.IntegerRes -> android.support.annotation.IntegerRes:
android.support.annotation.InterpolatorRes -> android.support.annotation.InterpolatorRes:
android.support.annotation.Keep -> android.support.annotation.Keep:
android.support.annotation.LayoutRes -> android.support.annotation.LayoutRes:
android.support.annotation.MainThread -> android.support.annotation.MainThread:
android.support.annotation.MenuRes -> android.support.annotation.MenuRes:
android.support.annotation.NonNull -> android.support.annotation.NonNull:
android.support.annotation.Nullable -> android.support.annotation.Nullable:
android.support.annotation.PluralsRes -> android.support.annotation.PluralsRes:
android.support.annotation.RawRes -> android.support.annotation.RawRes:
android.support.annotation.RequiresPermission -> android.support.annotation.RequiresPermission:
    java.lang.String value() -> value
    java.lang.String[] allOf() -> allOf
    java.lang.String[] anyOf() -> anyOf
    boolean conditional() -> conditional
android.support.annotation.RequiresPermission$Read -> android.support.annotation.RequiresPermission$Read:
    android.support.annotation.RequiresPermission value() -> value
android.support.annotation.RequiresPermission$Write -> android.support.annotation.RequiresPermission$Write:
    android.support.annotation.RequiresPermission value() -> value
android.support.annotation.Size -> android.support.annotation.Size:
    long value() -> value
    long min() -> min
    long max() -> max
    long multiple() -> multiple
android.support.annotation.StringDef -> android.support.annotation.StringDef:
    java.lang.String[] value() -> value
android.support.annotation.StringRes -> android.support.annotation.StringRes:
android.support.annotation.StyleRes -> android.support.annotation.StyleRes:
android.support.annotation.StyleableRes -> android.support.annotation.StyleableRes:
android.support.annotation.TransitionRes -> android.support.annotation.TransitionRes:
android.support.annotation.UiThread -> android.support.annotation.UiThread:
android.support.annotation.VisibleForTesting -> android.support.annotation.VisibleForTesting:
android.support.annotation.WorkerThread -> android.support.annotation.WorkerThread:
android.support.annotation.XmlRes -> android.support.annotation.XmlRes:
android.support.v4.app.ActivityCompat -> android.support.v4.app.a:
    void finishAffinity(android.app.Activity) -> a
    void finishAfterTransition(android.app.Activity) -> b
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> a
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> b
    void postponeEnterTransition(android.app.Activity) -> c
    void startPostponedEnterTransition(android.app.Activity) -> d
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> a
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.a$a:
    android.support.v4.app.SharedElementCallback mCallback -> a
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    void onRejectSharedElements(java.util.List) -> a
    void onMapSharedElements(java.util.List,java.util.Map) -> a
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> a
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> a
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.b:
    void finishAfterTransition(android.app.Activity) -> a
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> a
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> b
    void postponeEnterTransition(android.app.Activity) -> b
    void startPostponedEnterTransition(android.app.Activity) -> c
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> a
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.b$a:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    void onRejectSharedElements(java.util.List) -> a
    void onMapSharedElements(java.util.List,java.util.Map) -> a
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> a
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> a
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.b$b:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> a
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.c:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.d:
    void finishAffinity(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.e:
    boolean SUPPORTS_TRANSITIONS -> a
    android.support.v4.app.FragmentManagerImpl mManager -> b
    android.support.v4.app.BackStackRecord$Op mHead -> c
    android.support.v4.app.BackStackRecord$Op mTail -> d
    int mNumOp -> e
    int mEnterAnim -> f
    int mExitAnim -> g
    int mPopEnterAnim -> h
    int mPopExitAnim -> i
    int mTransition -> j
    int mTransitionStyle -> k
    boolean mAddToBackStack -> l
    boolean mAllowAddToBackStack -> m
    java.lang.String mName -> n
    boolean mCommitted -> o
    int mIndex -> p
    int mBreadCrumbTitleRes -> q
    java.lang.CharSequence mBreadCrumbTitleText -> r
    int mBreadCrumbShortTitleRes -> s
    java.lang.CharSequence mBreadCrumbShortTitleText -> t
    java.util.ArrayList mSharedElementSourceNames -> u
    java.util.ArrayList mSharedElementTargetNames -> v
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> a
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> b
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> b
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> a
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> a
    java.lang.String getName() -> c
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> a
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> b
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> a
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> a
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> a
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> a
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> a
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> b
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> a
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> a
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> b
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> a
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> a
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> a
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> a
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment val$inFragment -> a
    android.support.v4.app.BackStackRecord this$0 -> b
    android.view.View getView() -> a
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.g:
    android.view.View val$sceneRoot -> a
    java.lang.Object val$sharedElementTransition -> b
    java.util.ArrayList val$sharedElementTargets -> c
    android.support.v4.app.BackStackRecord$TransitionState val$state -> d
    boolean val$isBack -> e
    android.support.v4.app.Fragment val$inFragment -> f
    android.support.v4.app.Fragment val$outFragment -> g
    android.support.v4.app.BackStackRecord this$0 -> h
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.h:
    android.view.View val$sceneRoot -> a
    android.support.v4.app.BackStackRecord$TransitionState val$state -> b
    int val$containerId -> c
    java.lang.Object val$transition -> d
    android.support.v4.app.BackStackRecord this$0 -> e
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.e$a:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.e$b:
    android.support.v4.util.ArrayMap nameOverrides -> a
    java.util.ArrayList hiddenFragmentViews -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> c
    android.view.View nonExistentView -> d
    android.support.v4.app.BackStackRecord this$0 -> e
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    java.util.ArrayList mSharedElementSourceNames -> j
    java.util.ArrayList mSharedElementTargetNames -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.i:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.j:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$a:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.k:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.l:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.m:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$a:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.n:
    android.view.View findViewById(int) -> a
    boolean hasView() -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.o:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack(int,int) -> a
    int getBackStackEntryCount() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.util.List getFragments() -> d
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o$a:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> e
    void popBackStack(int,int) -> a
    int getBackStackEntryCount() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.util.List getFragments() -> d
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> f
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    void checkStateLoss() -> w
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> g
    void reportBackStackChanged() -> h
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> i
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> j
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> k
    void dispatchCreate() -> l
    void dispatchActivityCreated() -> m
    void dispatchStart() -> n
    void dispatchResume() -> o
    void dispatchPause() -> p
    void dispatchStop() -> q
    void dispatchReallyStop() -> r
    void dispatchDestroyView() -> s
    void dispatchDestroy() -> t
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> u
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> v
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.r:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.s:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.p$a:
    int[] Fragment -> a
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.u:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.w:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void ensureHierarchy(android.content.Context) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$a:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> e
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.y:
    java.lang.String getTransitionName(android.view.View) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> a
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> a
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    void setEpicenter(java.lang.Object,android.view.View) -> a
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList) -> a
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> a
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> c
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> b
    void findNamedViews(java.util.Map,android.view.View) -> a
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> a
    void removeTargets(java.lang.Object,java.util.ArrayList) -> a
    void addTargets(java.lang.Object,java.util.ArrayList) -> b
    boolean hasSimpleTarget(android.transition.Transition) -> a
    boolean isNullOrEmpty(java.util.List) -> a
    void access$000(java.util.ArrayList,android.view.View) -> a
    android.graphics.Rect access$100(android.view.View) -> b
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.z:
    android.graphics.Rect val$epicenter -> a
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.aa:
    android.view.View val$container -> a
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> b
    java.util.Map val$nameOverrides -> c
    java.util.Map val$renamedViews -> d
    android.transition.Transition val$enterTransition -> e
    java.util.ArrayList val$enteringViews -> f
    android.view.View val$nonExistentView -> g
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.ab:
    android.graphics.Rect mEpicenter -> b
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> a
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.ac:
    android.view.View val$sceneRoot -> a
    android.transition.Transition val$enterTransition -> b
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$enteringViews -> d
    android.transition.Transition val$exitTransition -> e
    java.util.ArrayList val$exitingViews -> f
    android.transition.Transition val$sharedElementTransition -> g
    java.util.ArrayList val$sharedElementTargets -> h
    java.util.Map val$renamedViews -> i
    java.util.ArrayList val$hiddenViews -> j
    android.transition.Transition val$overallTransition -> k
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.y$a:
    android.view.View epicenter -> a
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.y$b:
    android.view.View getView() -> a
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> j
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> k
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> a
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ad:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ae:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.af:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.af$a:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ag:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ag$a:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.ah:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    java.lang.String getParentActivityName(android.app.Activity) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> b
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.ah$a:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.ah$b:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.ah$c:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> b
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.ai:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> a
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> b
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aj:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.ak:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.al:
    android.app.Notification$Builder getBuilder() -> a
android.support.v4.app.NotificationCompat -> android.support.v4.app.am:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> b
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> b
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.am$a:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> e
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.an:
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.am$b:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.am$c:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.am$d:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mShowWhen -> k
    boolean mUseChronometer -> l
    android.support.v4.app.NotificationCompat$Style mStyle -> m
    java.lang.CharSequence mSubText -> n
    int mProgressMax -> o
    int mProgress -> p
    boolean mProgressIndeterminate -> q
    java.lang.String mGroupKey -> r
    boolean mGroupSummary -> s
    java.lang.String mSortKey -> t
    java.util.ArrayList mActions -> u
    boolean mLocalOnly -> v
    java.lang.String mCategory -> w
    android.os.Bundle mExtras -> x
    int mColor -> y
    int mVisibility -> z
    android.app.Notification mPublicVersion -> A
    android.app.Notification mNotification -> B
    java.util.ArrayList mPeople -> C
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> b
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> c
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.am$e:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.am$f:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.am$g:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.am$h:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.am$i:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.am$j:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.am$k:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.am$l:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.am$m:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.am$n:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.am$o:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.ao:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.ao$a:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.ap:
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.ap$a:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.aq:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.aq$a:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.aq$a$a:
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.ar:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.as:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.at:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.au:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    android.os.Bundle getExtras(android.app.Notification) -> a
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.au$a:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.av:
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.av$a:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
android.support.v4.app.RemoteInput -> android.support.v4.app.aw:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.ax:
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.aw$a:
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.aw$b:
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.aw$c:
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.aw$d:
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.ay:
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.az:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.az$a:
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.az$a$a:
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.ba:
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> a
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.SharedElementCallback -> android.support.v4.app.bb:
    android.graphics.Matrix mTempMatrix -> a
    int MAX_IMAGE_SIZE -> b
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> a
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> b
    void onRejectSharedElements(java.util.List) -> a
    void onMapSharedElements(java.util.List,java.util.Map) -> a
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> a
    android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> a
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.bc:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.bd:
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> a
    java.util.ArrayList mIntents -> b
    android.content.Context mSourceContext -> c
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> a
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> a
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> a
    java.util.Iterator iterator() -> iterator
    void startActivities() -> a
    void startActivities(android.os.Bundle) -> a
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.bd$a:
    android.content.Intent getSupportParentActivityIntent() -> a
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.bd$b:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.bd$c:
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.bd$d:
android.support.v4.content.ContextCompat -> android.support.v4.content.a:
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.b:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.c:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.d:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$a:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$b:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.e:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.e$a:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.e$b:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.e$c:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.e$d:
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.f:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> android.support.v4.content.g:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.g$a:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.a.a.a:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.a.a.a$a:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.a.a.a$b:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.a.a.a$c:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.a.a.a$d:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> b
android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl -> android.support.v4.a.a.a$e:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl -> android.support.v4.a.a.a$f:
android.support.v4.graphics.drawable.DrawableCompatBase -> android.support.v4.a.a.b:
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.a.a.c:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.a.a.d:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> a
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompatLollipop -> android.support.v4.a.a.e:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> a
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> a
    void setTint(android.graphics.drawable.Drawable,int) -> a
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> a
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> a
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.a.a.f:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.DrawableWrapperDonut -> android.support.v4.a.a.g:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> a
    android.content.res.ColorStateList mTintList -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    int mCurrentColor -> e
    android.graphics.drawable.Drawable mDrawable -> b
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean updateTint(int[]) -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb -> android.support.v4.a.a.h:
    void jumpToCurrentState() -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableWrapperKitKat -> android.support.v4.a.a.i:
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableWrapperLollipop -> android.support.v4.a.a.j:
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void getOutline(android.graphics.Outline) -> getOutline
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
android.support.v4.internal.view.SupportMenu -> android.support.v4.b.a.a:
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.b.a.b:
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> a
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.b.a.c:
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    java.lang.Object mDescriptionObj -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> a
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.a:
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$a:
    java.lang.String mMediaId -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.graphics.Bitmap mIcon -> e
    android.net.Uri mIconUri -> f
    android.os.Bundle mExtras -> g
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> b
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> c
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> a
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> a
    android.support.v4.media.MediaDescriptionCompat build() -> a
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.b:
    java.lang.String getMediaId(java.lang.Object) -> a
    java.lang.CharSequence getTitle(java.lang.Object) -> b
    java.lang.CharSequence getSubtitle(java.lang.Object) -> c
    java.lang.CharSequence getDescription(java.lang.Object) -> d
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> e
    android.net.Uri getIconUri(java.lang.Object) -> f
    android.os.Bundle getExtras(java.lang.Object) -> g
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
    java.lang.Object fromParcel(android.os.Parcel) -> a
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.b$a:
    java.lang.Object newInstance() -> a
    void setMediaId(java.lang.Object,java.lang.String) -> a
    void setTitle(java.lang.Object,java.lang.CharSequence) -> a
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> b
    void setDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> a
    void setIconUri(java.lang.Object,android.net.Uri) -> a
    void setExtras(java.lang.Object,android.os.Bundle) -> a
    java.lang.Object build(java.lang.Object) -> a
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> a
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> b
    java.lang.String[] PREFERRED_BITMAP_ORDER -> c
    java.lang.String[] PREFERRED_URI_ORDER -> d
    android.os.Bundle mBundle -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.c:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    int mRatingStyle -> a
    float mRatingValue -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.d:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.RatingCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> a
    long mId -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.a:
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.b:
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.c:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> a
    int audioStream -> b
    int controlType -> c
    int maxVolume -> d
    int currentVolume -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.d:
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    int mState -> a
    long mPosition -> b
    long mBufferedPosition -> c
    float mSpeed -> d
    long mActions -> e
    java.lang.CharSequence mErrorMessage -> f
    long mUpdateTime -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.e:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> a
    java.lang.CharSequence mName -> b
    int mIcon -> c
    android.os.Bundle mExtras -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.f:
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> a
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.os.AsyncTaskCompat -> android.support.v4.c.a:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> a
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.c.b:
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> a
android.support.v4.os.ParcelableCompat -> android.support.v4.c.c:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.c.c$a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.c.d:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.c.e:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.c.f:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.TraceCompat -> android.support.v4.c.g:
    void beginSection(java.lang.String) -> a
    void endSection() -> a
android.support.v4.os.TraceJellybeanMR2 -> android.support.v4.c.h:
    void beginSection(java.lang.String) -> a
    void endSection() -> a
android.support.v4.text.ICUCompat -> android.support.v4.d.a:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> a
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.d.a$a:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.d.a$b:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.d.a$c:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompatIcs -> android.support.v4.d.b:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.TextUtilsCompat -> android.support.v4.d.c:
    java.util.Locale ROOT -> a
    java.lang.String ARAB_SCRIPT_SUBTAG -> b
    java.lang.String HEBR_SCRIPT_SUBTAG -> c
    int getLayoutDirectionFromLocale(java.util.Locale) -> a
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> b
android.support.v4.util.ArrayMap -> android.support.v4.e.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    boolean retainAll(java.util.Collection) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.e.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.e.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.e.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.e.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.e.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> c
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.e.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.e.g$a:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.e.g$b:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.e.g$c:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.e.g$d:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.e.g$e:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pools -> android.support.v4.e.h:
android.support.v4.util.Pools$Pool -> android.support.v4.e.h$a:
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
android.support.v4.util.Pools$SimplePool -> android.support.v4.e.h$b:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    java.lang.Object acquire() -> a
    boolean release(java.lang.Object) -> a
    boolean isInPool(java.lang.Object) -> b
android.support.v4.util.SimpleArrayMap -> android.support.v4.e.i:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.e.j:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.a$a:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.b:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.a$b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.a$c:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.a$d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.d:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.e:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.d$a:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.f:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.g:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.f$a:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ActionProvider -> android.support.v4.view.h:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.view.View onCreateActionView() -> a
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> b
    boolean isVisible() -> c
    boolean onPerformDefaultAction() -> d
    boolean hasSubMenu() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> a
    void subUiVisibilityChanged(boolean) -> a
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> a
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> a
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.h$a:
    void onSubUiVisibilityChanged(boolean) -> a
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.h$b:
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.i:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.i$a:
    boolean onTouchEvent(android.view.MotionEvent) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.i$b:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    android.os.Handler mHandler -> h
    android.view.GestureDetector$OnGestureListener mListener -> i
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> j
    boolean mStillDown -> k
    boolean mDeferConfirmSingleTap -> l
    boolean mInLongPress -> m
    boolean mAlwaysInTapRegion -> n
    boolean mAlwaysInBiggerTapRegion -> o
    android.view.MotionEvent mCurrentDownEvent -> p
    android.view.MotionEvent mPreviousUpEvent -> q
    boolean mIsDoubleTapping -> r
    float mLastFocusX -> s
    float mLastFocusY -> t
    float mDownFocusX -> u
    float mDownFocusY -> v
    boolean mIsLongpressEnabled -> w
    android.view.VelocityTracker mVelocityTracker -> x
    void init(android.content.Context) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void cancel() -> a
    void cancelTaps() -> b
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    void dispatchLongPress() -> c
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.i$b$a:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.i$c:
    android.view.GestureDetector mDetector -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.j:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.j$a:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.j$b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.j$c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.k:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.l:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.l$a:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.l$b:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.l$c:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.l$d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.m:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.n:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.o:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> a
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.o$a:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.view.o$b:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.o$c:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.o$d:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.view.p:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.p$a:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> a
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.view.q:
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> a
    boolean sCheckedField -> b
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.q$a:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.view.r:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> a
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.s:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.t:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.t$a:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.t$b:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.t$c:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.u:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
android.support.v4.view.MenuItemCompat -> android.support.v4.view.v:
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.v$a:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.v$b:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.v$c:
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.v$d:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean isActionViewExpanded(android.view.MenuItem) -> c
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.v$e:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.w:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.x:
    boolean expandActionView(android.view.MenuItem) -> a
    boolean isActionViewExpanded(android.view.MenuItem) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.y:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
    int getSource(android.view.MotionEvent) -> d
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.y$a:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.y$b:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.y$c:
    int getSource(android.view.MotionEvent) -> b
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.y$d:
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.y$e:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
    int getSource(android.view.MotionEvent) -> b
    float getAxisValue(android.view.MotionEvent,int) -> e
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.z:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatGingerbread -> android.support.v4.view.aa:
    int getSource(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.view.ab:
    float getAxisValue(android.view.MotionEvent,int) -> a
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.ac:
    void stopNestedScroll() -> stopNestedScroll
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.ad:
    android.view.View mView -> a
    android.view.ViewParent mNestedScrollingParent -> b
    boolean mIsNestedScrollingEnabled -> c
    int[] mTempNestedScrollConsumed -> d
    void setNestedScrollingEnabled(boolean) -> a
    boolean isNestedScrollingEnabled() -> a
    boolean hasNestedScrollingParent() -> b
    boolean startNestedScroll(int) -> a
    void stopNestedScroll() -> c
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> a
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> a
    boolean dispatchNestedFling(float,float,boolean) -> a
    boolean dispatchNestedPreFling(float,float) -> a
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.ae:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.af:
    android.view.ViewGroup mViewGroup -> a
    int mNestedScrollAxes -> b
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> a
    int getNestedScrollAxes() -> a
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.ag:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ah:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.ai:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.aj:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$a:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$b:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$c:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$d:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ak:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ak$a:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScrollingView -> android.support.v4.view.al:
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.am:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.am$a:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.am$b:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.am$c:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.an:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    boolean isOpaque(android.view.View) -> j
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    float getTranslationX(android.view.View) -> m
    float getTranslationY(android.view.View) -> n
    int getMinimumWidth(android.view.View) -> o
    int getMinimumHeight(android.view.View) -> p
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> q
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    float getScaleX(android.view.View) -> r
    void setElevation(android.view.View,float) -> f
    int getWindowSystemUiVisibility(android.view.View) -> s
    void requestApplyInsets(android.view.View) -> t
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> u
    void jumpDrawablesToCurrentState(android.view.View) -> v
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    void stopNestedScroll(android.view.View) -> w
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$a:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    boolean isOpaque(android.view.View) -> j
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    float getTranslationX(android.view.View) -> m
    float getTranslationY(android.view.View) -> n
    float getScaleX(android.view.View) -> o
    int getMinimumWidth(android.view.View) -> p
    int getMinimumHeight(android.view.View) -> q
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> r
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    int getWindowSystemUiVisibility(android.view.View) -> s
    void requestApplyInsets(android.view.View) -> t
    void setElevation(android.view.View,float) -> f
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> u
    void jumpDrawablesToCurrentState(android.view.View) -> v
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> a
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> b
    void stopNestedScroll(android.view.View) -> w
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$b:
    boolean isOpaque(android.view.View) -> j
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$c:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$d:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    float getTranslationX(android.view.View) -> m
    float getTranslationY(android.view.View) -> n
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    float getScaleX(android.view.View) -> o
    void jumpDrawablesToCurrentState(android.view.View) -> v
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$e:
    java.lang.reflect.Field mAccessibilityDelegateField -> b
    boolean accessibilityDelegateCheckFailed -> c
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> r
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$f:
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    int getMinimumWidth(android.view.View) -> p
    int getMinimumHeight(android.view.View) -> q
    void requestApplyInsets(android.view.View) -> t
    boolean getFitsSystemWindows(android.view.View) -> u
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$g:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    int getWindowSystemUiVisibility(android.view.View) -> s
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$h:
    void setImportantForAccessibility(android.view.View,int) -> c
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.ViewCompat$i:
    void requestApplyInsets(android.view.View) -> t
    void setElevation(android.view.View,float) -> f
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    void stopNestedScroll(android.view.View) -> w
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$j:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasAccessibilityDelegate(android.view.View) -> b
    boolean hasTransientState(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View) -> d
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> e
    void setImportantForAccessibility(android.view.View,int) -> c
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> h
    android.view.ViewParent getParentForAccessibility(android.view.View) -> i
    boolean isOpaque(android.view.View) -> j
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> k
    int getMeasuredState(android.view.View) -> l
    float getScaleX(android.view.View) -> o
    float getTranslationX(android.view.View) -> m
    float getTranslationY(android.view.View) -> n
    int getMinimumWidth(android.view.View) -> p
    int getMinimumHeight(android.view.View) -> q
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> r
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setElevation(android.view.View,float) -> f
    int getWindowSystemUiVisibility(android.view.View) -> s
    void requestApplyInsets(android.view.View) -> t
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
    boolean getFitsSystemWindows(android.view.View) -> u
    void jumpDrawablesToCurrentState(android.view.View) -> v
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
    void stopNestedScroll(android.view.View) -> w
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ao:
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> a
    boolean isOpaque(android.view.View) -> a
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ap:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aq:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> b
    int resolveSizeAndState(int,int,int) -> a
    int getMeasuredWidthAndState(android.view.View) -> c
    int getMeasuredState(android.view.View) -> d
    float getTranslationX(android.view.View) -> e
    float getTranslationY(android.view.View) -> f
    float getScaleX(android.view.View) -> g
    void setTranslationX(android.view.View,float) -> a
    void setTranslationY(android.view.View,float) -> b
    void setAlpha(android.view.View,float) -> c
    void setScaleX(android.view.View,float) -> d
    void setScaleY(android.view.View,float) -> e
    void jumpDrawablesToCurrentState(android.view.View) -> h
    void setSaveFromParentEnabled(android.view.View,boolean) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ar:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.as:
    boolean hasTransientState(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> d
    int getMinimumWidth(android.view.View) -> e
    int getMinimumHeight(android.view.View) -> f
    void requestApplyInsets(android.view.View) -> g
    boolean getFitsSystemWindows(android.view.View) -> h
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.at:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
    int getWindowSystemUiVisibility(android.view.View) -> b
android.support.v4.view.ViewCompatLollipop -> android.support.v4.view.au:
    void requestApplyInsets(android.view.View) -> a
    void setElevation(android.view.View,float) -> a
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> a
    void stopNestedScroll(android.view.View) -> b
android.support.v4.view.ViewCompatLollipop$1 -> android.support.v4.view.av:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> a
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.aw:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.aw$a:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.aw$b:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.aw$c:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.aw$d:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.aw$e:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> b
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ax:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ay:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.az:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
    int getLayoutMode(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.az$a:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.az$b:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.az$c:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
    int getLayoutMode(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.az$d:
    int getLayoutMode(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl -> android.support.v4.view.az$e:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.az$f:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
    int getLayoutMode(android.view.ViewGroup) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ba:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.bb:
    int getLayoutMode(android.view.ViewGroup) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bc:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bd:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.be:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$a:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$b:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$c:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$d:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$e:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$f:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$g:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bf:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$h:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.bg:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.bg$a:
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.bg$b:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.bg$c:
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.bg$d:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.bg$e:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.view.bh:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> a
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> b
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> a
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> a
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> a
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.bi:
    java.lang.ref.WeakReference mView -> b
    java.lang.Runnable mStartAction -> c
    java.lang.Runnable mEndAction -> d
    int mOldLayerType -> e
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> b
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> c
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> d
    void cancel() -> a
    void start() -> b
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> b
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> a
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> c
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.bi$1:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.bi$a:
    java.util.WeakHashMap mStarterMap -> a
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> a
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> a
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> b
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> c
    void removeStartMessage(android.view.View) -> a
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> d
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.bi$a$a:
    java.lang.ref.WeakReference mViewRef -> a
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> b
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> c
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.bi$b:
    java.util.WeakHashMap mLayerMap -> b
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> a
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> a
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> b
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.bi$b$a:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.bi$c:
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.bi$d:
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.bi$e:
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.bi$f:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> a
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> a
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> a
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> d
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> a
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> b
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> c
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> b
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.bj:
    void setDuration(android.view.View,long) -> a
    void alpha(android.view.View,float) -> a
    void translationX(android.view.View,float) -> b
    void translationY(android.view.View,float) -> c
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> a
    void scaleY(android.view.View,float) -> d
    void cancel(android.view.View) -> a
    void start(android.view.View) -> b
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.bk:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.bl:
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.bm:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.bn:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> a
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.bo:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.bp:
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.bq:
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.br:
    void onAnimationUpdate(android.view.View) -> a
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.bs:
    int getSystemWindowInsetLeft() -> a
    int getSystemWindowInsetTop() -> b
    int getSystemWindowInsetRight() -> c
    int getSystemWindowInsetBottom() -> d
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> a
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.bt:
    android.view.WindowInsets mSource -> a
    int getSystemWindowInsetLeft() -> a
    int getSystemWindowInsetTop() -> b
    int getSystemWindowInsetRight() -> c
    int getSystemWindowInsetBottom() -> d
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> a
    android.view.WindowInsets unwrap() -> e
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> a
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> b
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.a.a$a:
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.a.a$b:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.a.a$c:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.a.a$d:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompatKitKat -> android.support.v4.view.a.b:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> a
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.c:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    void setCollectionInfo(java.lang.Object) -> b
    void setCollectionItemInfo(java.lang.Object) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> v
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.a.c$a:
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.a.c$b:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.c$c:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c$d:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> b
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.c$e:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.c$f:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.c$g:
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.c$h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> b
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.a.c$i:
    java.lang.Object mInfo -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.a.c$j:
    java.lang.Object mInfo -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> a
    java.lang.Object access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.a.d:
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.e:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.f:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.g:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.a.h:
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> a
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> b
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> a
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.i:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.i$a:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.i$b:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.i$c:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.i$d:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.l$a:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.o:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n$a:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object findFocus(int) -> b
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    void setScrollX(int) -> d
    void setScrollY(int) -> e
    void setMaxScrollX(int) -> f
    void setMaxScrollY(int) -> g
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.p$a:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.p$b:
    void setMaxScrollX(java.lang.Object,int) -> f
    void setMaxScrollY(java.lang.Object,int) -> g
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.p$c:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setMaxScrollX(java.lang.Object,int) -> f
    void setMaxScrollY(java.lang.Object,int) -> g
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.p$d:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.p$e:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setMaxScrollX(java.lang.Object,int) -> f
    void setMaxScrollY(java.lang.Object,int) -> g
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.q:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollX(java.lang.Object,int) -> c
    void setScrollY(java.lang.Object,int) -> d
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> e
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.a.r:
    void setMaxScrollX(java.lang.Object,int) -> a
    void setMaxScrollY(java.lang.Object,int) -> b
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.a:
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    android.view.animation.Interpolator mEdgeInterpolator -> b
    android.view.View mTarget -> c
    java.lang.Runnable mRunnable -> d
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    int mActivationDelay -> h
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    float[] mMaximumVelocity -> k
    boolean mAlreadyDelayed -> l
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    boolean mAnimating -> o
    boolean mEnabled -> p
    boolean mExclusive -> q
    int DEFAULT_ACTIVATION_DELAY -> r
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> a
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> a
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> b
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> c
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> a
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> d
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> e
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> b
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> c
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> a
    void startAnimating() -> b
    void requestStop() -> c
    float computeTargetVelocity(int,float,float,float) -> a
    void scrollTargetBy(int,int) -> a
    boolean canTargetScrollHorizontally(int) -> e
    boolean canTargetScrollVertically(int) -> f
    float getEdgeValue(float,float,float,float) -> a
    float constrainEdgeValue(float,float) -> f
    int constrain(int,int,int) -> b
    float constrain(float,float,float) -> b
    void cancelTargetTouch() -> d
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> a
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> b
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> a
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> c
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> d
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> b
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> e
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> c
    void access$600(android.support.v4.widget.AutoScrollHelper) -> f
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> g
    int access$800(int,int,int) -> a
    float access$900(float,float,float) -> a
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.a$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.a$a:
    int mRampUpDuration -> a
    int mRampDownDuration -> b
    float mTargetVelocityX -> c
    float mTargetVelocityY -> d
    long mStartTime -> e
    long mDeltaTime -> f
    int mDeltaX -> g
    int mDeltaY -> h
    long mStopTime -> i
    float mStopValue -> j
    int mEffectiveRampDown -> k
    void setRampUpDuration(int) -> a
    void setRampDownDuration(int) -> b
    void start() -> a
    void requestStop() -> b
    boolean isFinished() -> c
    float getValueAt(long) -> a
    float interpolateValue(float) -> a
    void computeScrollDelta() -> d
    void setTargetVelocity(float,float) -> a
    int getHorizontalDirection() -> e
    int getVerticalDirection() -> f
    int getDeltaX() -> g
    int getDeltaY() -> h
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.a$b:
    android.support.v4.widget.AutoScrollHelper this$0 -> a
    void run() -> run
android.support.v4.widget.CircleImageView -> android.support.v4.widget.b:
    android.view.animation.Animation$AnimationListener mListener -> a
    int mShadowRadius -> b
    boolean elevationSupported() -> a
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> a
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColor(int) -> setBackgroundColor
    int access$002(android.support.v4.widget.CircleImageView,int) -> a
    int access$000(android.support.v4.widget.CircleImageView) -> a
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.b$a:
    android.graphics.RadialGradient mRadialGradient -> b
    android.graphics.Paint mShadowPaint -> c
    int mCircleDiameter -> d
    android.support.v4.widget.CircleImageView this$0 -> a
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.c:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.d:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.e:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.e$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.e$a:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.e$b:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.f:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.f$a:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> b
    boolean CAN_HIDE_DESCENDANTS -> c
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> d
    int mMinDrawerMargin -> e
    int mScrimColor -> f
    float mScrimOpacity -> g
    android.graphics.Paint mScrimPaint -> h
    android.support.v4.widget.ViewDragHelper mLeftDragger -> i
    android.support.v4.widget.ViewDragHelper mRightDragger -> j
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> k
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> l
    int mDrawerState -> m
    boolean mInLayout -> n
    boolean mFirstLayout -> o
    int mLockModeLeft -> p
    int mLockModeRight -> q
    boolean mDisallowInterceptRequested -> r
    boolean mChildrenCanceledTouch -> s
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> t
    float mInitialMotionX -> u
    float mInitialMotionY -> v
    android.graphics.drawable.Drawable mShadowLeft -> w
    android.graphics.drawable.Drawable mShadowRight -> x
    android.graphics.drawable.Drawable mStatusBarBackground -> y
    java.lang.CharSequence mTitleLeft -> z
    java.lang.CharSequence mTitleRight -> A
    java.lang.Object mLastInsets -> B
    boolean mDrawStatusBarBackground -> C
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> a
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(android.view.View) -> a
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> a
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> b
    java.lang.String gravityToString(int) -> c
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> f
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> g
    android.view.View findVisibleDrawer() -> h
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> m
    int[] access$100() -> d
    boolean access$200() -> e
    android.view.View access$300(android.support.v4.widget.DrawerLayout) -> a
    boolean access$400(android.view.View) -> k
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$b:
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$c:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$d:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$e:
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$f:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.g:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$g:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.h:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.i:
    int[] THEME_ATTRS -> a
    void configureApplyInsets(android.view.View) -> a
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> a
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> a
    int getTopInset(java.lang.Object) -> a
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> a
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.i$a:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.j:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.k:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onPull(float,float) -> a
    boolean onRelease() -> c
    boolean onAbsorb(int) -> a
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.k$a:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.k$b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.k$c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.k$d:
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.l:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.m:
    boolean onPull(java.lang.Object,float,float) -> a
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.n:
    android.widget.ListView mTarget -> a
    void scrollTargetBy(int,int) -> a
    boolean canTargetScrollHorizontally(int) -> e
    boolean canTargetScrollVertically(int) -> f
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> b
    android.view.animation.Interpolator END_CURVE_INTERPOLATOR -> c
    android.view.animation.Interpolator START_CURVE_INTERPOLATOR -> d
    android.view.animation.Interpolator EASE_INTERPOLATOR -> e
    int[] COLORS -> f
    java.util.ArrayList mAnimators -> g
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> h
    float mRotation -> i
    android.content.res.Resources mResources -> j
    android.view.View mParent -> k
    android.view.animation.Animation mAnimation -> l
    float mRotationCount -> m
    double mWidth -> n
    double mHeight -> o
    boolean mFinishing -> a
    android.graphics.drawable.Drawable$Callback mCallback -> p
    void setSizeParameters(double,double,double,double,float,float) -> a
    void updateSizes(int) -> a
    void showArrow(boolean) -> a
    void setArrowScale(float) -> a
    void setStartEndTrim(float,float) -> a
    void setProgressRotation(float) -> b
    void setBackgroundColor(int) -> b
    void setColorSchemeColors(int[]) -> a
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> c
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    void setupAnimators() -> c
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> a
    android.view.animation.Interpolator access$300() -> a
    android.view.animation.Interpolator access$400() -> b
    float access$500(android.support.v4.widget.MaterialProgressDrawable) -> a
    float access$502(android.support.v4.widget.MaterialProgressDrawable,float) -> a
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.o:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.p:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> a
    android.support.v4.widget.MaterialProgressDrawable this$0 -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.q:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> a
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$EndCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$a:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$b:
    android.graphics.RectF mTempBounds -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mArrowPaint -> c
    android.graphics.drawable.Drawable$Callback mCallback -> d
    float mStartTrim -> e
    float mEndTrim -> f
    float mRotation -> g
    float mStrokeWidth -> h
    float mStrokeInset -> i
    int[] mColors -> j
    int mColorIndex -> k
    float mStartingStartTrim -> l
    float mStartingEndTrim -> m
    float mStartingRotation -> n
    boolean mShowArrow -> o
    android.graphics.Path mArrow -> p
    float mArrowScale -> q
    double mRingCenterRadius -> r
    int mArrowWidth -> s
    int mArrowHeight -> t
    int mAlpha -> u
    android.graphics.Paint mCirclePaint -> v
    int mBackgroundColor -> w
    void setBackgroundColor(int) -> a
    void setArrowDimensions(float,float) -> a
    void draw(android.graphics.Canvas,android.graphics.Rect) -> a
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> a
    void setColors(int[]) -> a
    void setColorIndex(int) -> b
    void goToNextColor() -> a
    void setColorFilter(android.graphics.ColorFilter) -> a
    void setAlpha(int) -> c
    int getAlpha() -> b
    void setStrokeWidth(float) -> a
    float getStrokeWidth() -> c
    void setStartTrim(float) -> b
    float getStartTrim() -> d
    float getStartingStartTrim() -> e
    float getStartingEndTrim() -> f
    void setEndTrim(float) -> c
    float getEndTrim() -> g
    void setRotation(float) -> d
    void setInsets(int,int) -> a
    void setCenterRadius(double) -> a
    double getCenterRadius() -> h
    void setShowArrow(boolean) -> a
    void setArrowScale(float) -> e
    float getStartingRotation() -> i
    void storeOriginals() -> j
    void resetOriginals() -> k
    void invalidateSelf() -> l
android.support.v4.widget.MaterialProgressDrawable$StartCurveInterpolator -> android.support.v4.widget.MaterialProgressDrawable$c:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    long mLastScroll -> a
    android.graphics.Rect mTempRect -> b
    android.support.v4.widget.ScrollerCompat mScroller -> c
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> d
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> e
    int mLastMotionY -> f
    boolean mIsLayoutDirty -> g
    boolean mIsLaidOut -> h
    android.view.View mChildToScrollTo -> i
    boolean mIsBeingDragged -> j
    android.view.VelocityTracker mVelocityTracker -> k
    boolean mFillViewport -> l
    boolean mSmoothScrollingEnabled -> m
    int mTouchSlop -> n
    int mMinimumVelocity -> o
    int mMaximumVelocity -> p
    int mActivePointerId -> q
    int[] mScrollOffset -> r
    int[] mScrollConsumed -> s
    int mNestedYOffset -> t
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> u
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> v
    int[] SCROLLVIEW_STYLEABLE -> w
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> x
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> y
    float mVerticalScrollFactor -> z
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void initScrollView() -> a
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScroll() -> b
    void setFillViewport(boolean) -> setFillViewport
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean inChild(int,int) -> c
    void initOrResetVelocityTracker() -> c
    void initVelocityTrackerIfNotExists() -> d
    void recycleVelocityTracker() -> e
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> a
    boolean pageScroll(int) -> a
    boolean fullScroll(int) -> b
    boolean scrollAndFocus(int,int,int) -> a
    boolean arrowScroll(int) -> c
    boolean isOffScreen(android.view.View) -> a
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    void doScrollY(int) -> e
    void smoothScrollBy(int,int) -> a
    void smoothScrollTo(int,int) -> b
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> b
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> a
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> a
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    void fling(int) -> d
    void flingWithNestedDispatch(int) -> f
    void endDrag() -> f
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> g
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> b
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> a
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$a:
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.r:
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.s:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> a
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.s$a:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.s$b:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.s$c:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.t:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.u:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.v:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> a
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    float getCurrVelocity() -> f
    boolean computeScrollOffset() -> g
    void startScroll(int,int,int,int) -> a
    void startScroll(int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation() -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.v$a:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.v$b:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.v$c:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    int getFinalX(java.lang.Object) -> g
    int getFinalY(java.lang.Object) -> h
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.v$d:
    float getCurrVelocity(java.lang.Object) -> d
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.w:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.x:
    float getCurrVelocity(java.lang.Object) -> a
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> g
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$b:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$c:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$d:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.y:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$e:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$f:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$g:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$h:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> a
    void onMeasure(int,int) -> onMeasure
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    java.lang.String LOG_TAG -> c
    android.view.View mTarget -> d
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> e
    boolean mRefreshing -> f
    int mTouchSlop -> g
    float mTotalDragDistance -> h
    int mMediumAnimationDuration -> i
    int mCurrentTargetOffsetTop -> j
    boolean mOriginalOffsetCalculated -> k
    float mInitialMotionY -> l
    float mInitialDownY -> m
    boolean mIsBeingDragged -> n
    int mActivePointerId -> o
    boolean mScale -> p
    boolean mReturningToStart -> q
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> r
    int[] LAYOUT_ATTRS -> s
    android.support.v4.widget.CircleImageView mCircleView -> t
    int mCircleViewIndex -> u
    int mFrom -> a
    float mStartingScale -> v
    int mOriginalOffsetTop -> b
    android.support.v4.widget.MaterialProgressDrawable mProgress -> w
    android.view.animation.Animation mScaleAnimation -> x
    android.view.animation.Animation mScaleDownAnimation -> y
    android.view.animation.Animation mAlphaStartAnimation -> z
    android.view.animation.Animation mAlphaMaxAnimation -> A
    android.view.animation.Animation mScaleDownToStartAnimation -> B
    float mSpinnerFinalOffset -> C
    boolean mNotify -> D
    int mCircleWidth -> E
    int mCircleHeight -> F
    boolean mUsingCustomStart -> G
    android.view.animation.Animation$AnimationListener mRefreshListener -> H
    android.view.animation.Animation mAnimateToCorrectPosition -> I
    android.view.animation.Animation mAnimateToStartPosition -> J
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> b
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> c
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> a
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> a
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> b
    void startProgressAlphaStartAnimation() -> d
    void startProgressAlphaMaxAnimation() -> e
    android.view.animation.Animation startAlphaAnimation(int,int) -> a
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    void ensureTarget() -> f
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean canChildScrollUp() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> a
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean isAnimationRunning(android.view.animation.Animation) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> a
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> b
    void moveToStart(float) -> a
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> c
    void setTargetOffsetTopAndBottom(int,boolean) -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> a
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> b
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> c
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> d
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> e
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> a
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> f
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> a
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> g
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> a
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> b
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> a
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> h
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> i
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> b
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> j
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.z:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.aa:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.ab:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.ac:
    int val$startingAlpha -> a
    int val$endingAlpha -> b
    android.support.v4.widget.SwipeRefreshLayout this$0 -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.ad:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.ae:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.af:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.ag:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$a:
    void onRefresh() -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ah:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ai:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.aj:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ah$a:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    int getDisplayOptions() -> a
    void setHomeButtonEnabled(boolean) -> a
    android.content.Context getThemedContext() -> b
    void setHideOnContentScrollEnabled(boolean) -> b
    void setElevation(float) -> a
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    void setShowHideAnimationEnabled(boolean) -> d
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchMenuVisibilityChanged(boolean) -> e
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> a
    boolean invalidateOptionsMenu() -> c
    boolean collapseActionView() -> d
    void setWindowTitle(java.lang.CharSequence) -> a
android.support.v7.app.ActionBar$DisplayOptions -> android.support.v7.app.ActionBar$DisplayOptions:
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    int gravity -> a
android.support.v7.app.ActionBar$NavigationMode -> android.support.v7.app.ActionBar$NavigationMode:
android.support.v7.app.ActionBar$OnMenuVisibilityListener -> android.support.v7.app.ActionBar$a:
    void onMenuVisibilityChanged(boolean) -> a
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.ActionBar$b:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
android.support.v7.app.ActionBarActivity -> android.support.v7.app.ActionBarActivity:
    android.support.v7.app.ActionBarActivityDelegate mDelegate -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> b
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onStop() -> onStop
    void onPostResume() -> onPostResume
    android.view.View onCreatePanelView(int) -> onCreatePanelView
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onDestroy() -> onDestroy
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> a
    void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    void superSetContentView(android.view.View) -> a
    boolean superOnCreatePanelMenu(int,android.view.Menu) -> a
    boolean superOnPreparePanel(int,android.view.View,android.view.Menu) -> a
    boolean superOnPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    void superOnPanelClosed(int,android.view.Menu) -> b
    boolean superOnMenuOpened(int,android.view.Menu) -> c
    void onBackPressed() -> onBackPressed
    void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> a
    void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> b
    boolean onSupportNavigateUp() -> c
    android.content.Intent getSupportParentActivityIntent() -> a
    boolean supportShouldUpRecreateTask(android.content.Intent) -> a
    void supportNavigateUpTo(android.content.Intent) -> b
    boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onContentChanged() -> onContentChanged
    void onSupportContentChanged() -> d
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.support.v7.app.ActionBarActivityDelegate getDelegate() -> e
android.support.v7.app.ActionBarActivityDelegate -> android.support.v7.app.a:
    android.support.v7.app.ActionBarActivity mActivity -> a
    android.support.v7.app.ActionBar mActionBar -> g
    android.view.MenuInflater mMenuInflater -> h
    boolean mHasActionBar -> b
    boolean mOverlayActionBar -> c
    boolean mOverlayActionMode -> d
    boolean mIsFloating -> e
    android.support.v7.internal.app.WindowCallback mDefaultWindowCallback -> f
    android.support.v7.internal.app.WindowCallback mWindowCallback -> i
    boolean mIsDestroyed -> j
    android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    android.support.v7.app.ActionBar getSupportActionBar() -> b
    android.support.v7.app.ActionBar peekSupportActionBar() -> c
    android.view.MenuInflater getMenuInflater() -> d
    void onCreate(android.os.Bundle) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> e
    void onPostResume() -> f
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onTitleChanged(java.lang.CharSequence) -> a
    void supportInvalidateOptionsMenu() -> g
    android.view.View onCreatePanelView(int) -> b
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onPanelClosed(int,android.view.Menu) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> c
    boolean onBackPressed() -> h
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    boolean onKeyShortcut(int,android.view.KeyEvent) -> b
    void onContentChanged() -> i
    android.content.Context getActionBarThemedContext() -> j
    android.view.View createView(java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> a
    android.support.v7.internal.app.WindowCallback getWindowCallback() -> k
    void destroy() -> l
    boolean isDestroyed() -> m
android.support.v7.app.ActionBarActivityDelegate$1 -> android.support.v7.app.b:
    android.support.v7.app.ActionBarActivityDelegate this$0 -> a
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onPanelClosed(int,android.view.Menu) -> b
    boolean onMenuOpened(int,android.view.Menu) -> c
    android.view.View onCreatePanelView(int) -> a
android.support.v7.app.ActionBarActivityDelegateBase -> android.support.v7.app.ActionBarActivityDelegateBase:
    android.support.v7.internal.widget.DecorContentParent mDecorContentParent -> k
    android.support.v7.app.ActionBarActivityDelegateBase$ActionMenuPresenterCallback mActionMenuPresenterCallback -> l
    android.support.v7.app.ActionBarActivityDelegateBase$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> m
    android.support.v7.view.ActionMode mActionMode -> g
    android.support.v7.internal.widget.ActionBarContextView mActionModeView -> h
    android.widget.PopupWindow mActionModePopup -> i
    java.lang.Runnable mShowActionModePopup -> j
    boolean mSubDecorInstalled -> n
    android.view.ViewGroup mWindowDecor -> o
    android.view.ViewGroup mSubDecor -> p
    android.view.View mStatusGuard -> q
    java.lang.CharSequence mTitleToSet -> r
    boolean mFeatureProgress -> s
    boolean mFeatureIndeterminateProgress -> t
    boolean mClosingActionMenu -> u
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState[] mPanels -> v
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState mPreparedPanel -> w
    boolean mInvalidatePanelMenuPosted -> x
    int mInvalidatePanelMenuFeatures -> y
    java.lang.Runnable mInvalidatePanelMenuRunnable -> z
    boolean mEnableDefaultActionBarUp -> A
    android.support.v7.internal.view.menu.ListMenuPresenter mToolbarListMenuPresenter -> B
    android.graphics.Rect mTempRect1 -> C
    android.graphics.Rect mTempRect2 -> D
    void onCreate(android.os.Bundle) -> a
    android.support.v7.app.ActionBar createSupportActionBar() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void onStop() -> e
    void onPostResume() -> f
    void setContentView(android.view.View) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onContentChanged() -> i
    void ensureSubDecor() -> n
    void onSubDecorInstalled() -> o
    void applyFixedSizeWindow() -> p
    void onTitleChanged(java.lang.CharSequence) -> a
    android.view.View onCreatePanelView(int) -> b
    boolean onCreatePanelMenu(int,android.view.Menu) -> c
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onPanelClosed(int,android.view.Menu) -> a
    boolean onMenuOpened(int,android.view.Menu) -> b
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> b
    void supportInvalidateOptionsMenu() -> g
    android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> a
    boolean onBackPressed() -> h
    boolean onKeyShortcut(int,android.view.KeyEvent) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    android.view.View createView(java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    void openPanel(android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState,android.view.KeyEvent) -> a
    void initializePanelDecor(android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState) -> a
    void reopenMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean initializePanelMenu(android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState) -> b
    boolean initializePanelContent(android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState) -> c
    boolean preparePanel(android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState,android.view.KeyEvent) -> b
    void checkCloseActionMenu(android.support.v7.internal.view.menu.MenuBuilder) -> b
    void closePanel(android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState,boolean) -> a
    void callOnPanelClosed(int,android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState,android.view.Menu) -> a
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState findMenuPanel(android.view.Menu) -> a
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState getPanelState(int,boolean) -> a
    boolean performPanelShortcut(android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState,int,android.view.KeyEvent,int) -> a
    void invalidatePanelMenu(int) -> c
    void doInvalidatePanelMenu(int) -> d
    int updateStatusGuard(int) -> e
    int access$000(android.support.v7.app.ActionBarActivityDelegateBase) -> a
    void access$100(android.support.v7.app.ActionBarActivityDelegateBase,int) -> a
    boolean access$202(android.support.v7.app.ActionBarActivityDelegateBase,boolean) -> a
    int access$002(android.support.v7.app.ActionBarActivityDelegateBase,int) -> b
    int access$300(android.support.v7.app.ActionBarActivityDelegateBase,int) -> c
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState access$600(android.support.v7.app.ActionBarActivityDelegateBase,android.view.Menu) -> a
    void access$700(android.support.v7.app.ActionBarActivityDelegateBase,int,android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState,android.view.Menu) -> a
    void access$800(android.support.v7.app.ActionBarActivityDelegateBase,android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState,boolean) -> a
    void access$900(android.support.v7.app.ActionBarActivityDelegateBase,android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.app.ActionBarActivityDelegateBase$1 -> android.support.v7.app.c:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void run() -> run
android.support.v7.app.ActionBarActivityDelegateBase$2 -> android.support.v7.app.d:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> a
android.support.v7.app.ActionBarActivityDelegateBase$3 -> android.support.v7.app.e:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void onFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.app.ActionBarActivityDelegateBase$4 -> android.support.v7.app.f:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void run() -> run
android.support.v7.app.ActionBarActivityDelegateBase$ActionMenuPresenterCallback -> android.support.v7.app.ActionBarActivityDelegateBase$a:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.app.ActionBarActivityDelegateBase$ActionModeCallbackWrapper -> android.support.v7.app.ActionBarActivityDelegateBase$b:
    android.support.v7.view.ActionMode$Callback mWrapped -> b
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState -> android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState:
    int featureId -> a
    android.view.ViewGroup decorView -> b
    android.view.View shownPanelView -> c
    android.support.v7.internal.view.menu.MenuBuilder menu -> d
    android.support.v7.internal.view.menu.ListMenuPresenter listMenuPresenter -> e
    android.content.Context listPresenterContext -> f
    boolean isPrepared -> g
    boolean isHandled -> h
    boolean isOpen -> i
    boolean qwertyMode -> j
    boolean refreshDecorView -> k
    boolean refreshMenuContent -> l
    android.os.Bundle frozenActionViewState -> m
    boolean hasPanelItems() -> a
    void setStyle(android.content.Context) -> a
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getListMenuView(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState$SavedState -> android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState$SavedState:
    int featureId -> a
    boolean isOpen -> b
    android.os.Bundle menuState -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState$SavedState readFromParcel(android.os.Parcel) -> b
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState$SavedState access$1100(android.os.Parcel) -> a
android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState$SavedState$1 -> android.support.v7.app.g:
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.app.ActionBarActivityDelegateBase$PanelFeatureState$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.app.ActionBarActivityDelegateBase$PanelMenuPresenterCallback -> android.support.v7.app.ActionBarActivityDelegateBase$c:
    android.support.v7.app.ActionBarActivityDelegateBase this$0 -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.app.ActionBarActivityDelegateHC -> android.support.v7.app.h:
    android.support.v7.internal.widget.NativeActionModeAwareLayout mNativeActionModeAwareLayout -> k
    void onSubDecorInstalled() -> o
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> a
android.support.v7.appcompat.R -> android.support.v7.appcompat.R:
android.support.v7.appcompat.R$anim -> android.support.v7.appcompat.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
android.support.v7.appcompat.R$attr -> android.support.v7.appcompat.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int barSize -> barSize
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int customNavigationLayout -> customNavigationLayout
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int elevation -> elevation
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int gapBetweenBars -> gapBetweenBars
    int goIcon -> goIcon
    int height -> height
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int maxButtonHeight -> maxButtonHeight
    int measureWithLargestChild -> measureWithLargestChild
    int middleBarArrowSize -> middleBarArrowSize
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int state_above_anchor -> state_above_anchor
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int title -> title
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titleTextAppearance -> titleTextAppearance
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int topBottomBarArrowSize -> topBottomBarArrowSize
    int track -> track
    int voiceIcon -> voiceIcon
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
android.support.v7.appcompat.R$bool -> android.support.v7.appcompat.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
android.support.v7.appcompat.R$color -> android.support.v7.appcompat.R$color:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int hint_foreground_material_dark -> hint_foreground_material_dark
    int hint_foreground_material_light -> hint_foreground_material_light
    int link_text_material_dark -> link_text_material_dark
    int link_text_material_light -> link_text_material_light
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
android.support.v7.appcompat.R$dimen -> android.support.v7.appcompat.R$dimen:
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_material -> abc_action_bar_default_padding_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
android.support.v7.appcompat.R$drawable -> android.support.v7.appcompat.R$drawable:
    int abc_ab_share_pack_holo_dark -> abc_ab_share_pack_holo_dark
    int abc_ab_share_pack_holo_light -> abc_ab_share_pack_holo_light
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_mtrl_am_alpha -> abc_ic_ab_back_mtrl_am_alpha
    int abc_ic_clear_mtrl_alpha -> abc_ic_clear_mtrl_alpha
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_mtrl_alpha -> abc_ic_go_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_moreoverflow_mtrl_alpha -> abc_ic_menu_moreoverflow_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_mtrl_alpha -> abc_ic_search_api_mtrl_alpha
    int abc_ic_voice_search_api_mtrl_alpha -> abc_ic_voice_search_api_mtrl_alpha
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
android.support.v7.appcompat.R$id -> android.support.v7.appcompat.R$id:
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int always -> always
    int beginning -> beginning
    int checkbox -> checkbox
    int collapseActionView -> collapseActionView
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int dialog -> dialog
    int disableHome -> disableHome
    int dropdown -> dropdown
    int edit_query -> edit_query
    int end -> end
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int home -> home
    int homeAsUp -> homeAsUp
    int icon -> icon
    int ifRoom -> ifRoom
    int image -> image
    int listMode -> listMode
    int list_item -> list_item
    int middle -> middle
    int never -> never
    int none -> none
    int normal -> normal
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int radio -> radio
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_voice_btn -> search_voice_btn
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int split_action_bar -> split_action_bar
    int submit_area -> submit_area
    int tabMode -> tabMode
    int title -> title
    int up -> up
    int useLogo -> useLogo
    int withText -> withText
    int wrap_content -> wrap_content
android.support.v7.appcompat.R$integer -> android.support.v7.appcompat.R$integer:
    int abc_max_action_buttons -> abc_max_action_buttons
android.support.v7.appcompat.R$layout -> android.support.v7.appcompat.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_dropdown_hint -> abc_simple_dropdown_hint
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
android.support.v7.appcompat.R$string -> android.support.v7.appcompat.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
android.support.v7.appcompat.R$style -> android.support.v7.appcompat.R$style:
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_V11_Theme_AppCompat -> Base_V11_Theme_AppCompat
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light -> Base_V11_Theme_AppCompat_Light
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V14_Theme_AppCompat -> Base_V14_Theme_AppCompat
    int Base_V14_Theme_AppCompat_Dialog -> Base_V14_Theme_AppCompat_Dialog
    int Base_V14_Theme_AppCompat_Light -> Base_V14_Theme_AppCompat_Light
    int Base_V14_Theme_AppCompat_Light_Dialog -> Base_V14_Theme_AppCompat_Light_Dialog
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_ActivityChooserView -> Base_Widget_AppCompat_Light_ActivityChooserView
    int Base_Widget_AppCompat_Light_AutoCompleteTextView -> Base_Widget_AppCompat_Light_AutoCompleteTextView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_DropDown_ActionBar -> Base_Widget_AppCompat_Spinner_DropDown_ActionBar
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Dialog -> Platform_AppCompat_Dialog
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_AppCompat_Light_Dialog -> Platform_AppCompat_Light_Dialog
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_ActionButton_CloseMode -> RtlOverlay_Widget_AppCompat_ActionButton_CloseMode
    int RtlOverlay_Widget_AppCompat_ActionButton_Overflow -> RtlOverlay_Widget_AppCompat_ActionButton_Overflow
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
android.support.v7.appcompat.R$styleable -> android.support.v7.appcompat.R$styleable:
    int[] ActionBar -> ActionBar
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_barSize -> DrawerArrowToggle_barSize
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_middleBarArrowSize -> DrawerArrowToggle_middleBarArrowSize
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int DrawerArrowToggle_topBottomBarArrowSize -> DrawerArrowToggle_topBottomBarArrowSize
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] PopupWindow -> PopupWindow
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_background -> Spinner_android_background
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_theme -> Toolbar_theme
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int[] View -> View
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
android.support.v7.gridlayout.R -> android.support.v7.gridlayout.R:
android.support.v7.gridlayout.R$attr -> android.support.v7.gridlayout.R$attr:
    int alignmentMode -> alignmentMode
    int columnCount -> columnCount
    int columnOrderPreserved -> columnOrderPreserved
    int layout_column -> layout_column
    int layout_columnSpan -> layout_columnSpan
    int layout_columnWeight -> layout_columnWeight
    int layout_gravity -> layout_gravity
    int layout_row -> layout_row
    int layout_rowSpan -> layout_rowSpan
    int layout_rowWeight -> layout_rowWeight
    int orientation -> orientation
    int rowCount -> rowCount
    int rowOrderPreserved -> rowOrderPreserved
    int useDefaultMargins -> useDefaultMargins
android.support.v7.gridlayout.R$dimen -> android.support.v7.gridlayout.R$dimen:
    int default_gap -> default_gap
android.support.v7.gridlayout.R$id -> android.support.v7.gridlayout.R$id:
    int alignBounds -> alignBounds
    int alignMargins -> alignMargins
    int bottom -> bottom
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int end -> end
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int horizontal -> horizontal
    int left -> left
    int right -> right
    int start -> start
    int top -> top
    int vertical -> vertical
android.support.v7.gridlayout.R$styleable -> android.support.v7.gridlayout.R$styleable:
    int[] GridLayout -> GridLayout
    int[] GridLayout_Layout -> GridLayout_Layout
    int GridLayout_Layout_android_layout_height -> GridLayout_Layout_android_layout_height
    int GridLayout_Layout_android_layout_margin -> GridLayout_Layout_android_layout_margin
    int GridLayout_Layout_android_layout_marginBottom -> GridLayout_Layout_android_layout_marginBottom
    int GridLayout_Layout_android_layout_marginLeft -> GridLayout_Layout_android_layout_marginLeft
    int GridLayout_Layout_android_layout_marginRight -> GridLayout_Layout_android_layout_marginRight
    int GridLayout_Layout_android_layout_marginTop -> GridLayout_Layout_android_layout_marginTop
    int GridLayout_Layout_android_layout_width -> GridLayout_Layout_android_layout_width
    int GridLayout_Layout_layout_column -> GridLayout_Layout_layout_column
    int GridLayout_Layout_layout_columnSpan -> GridLayout_Layout_layout_columnSpan
    int GridLayout_Layout_layout_columnWeight -> GridLayout_Layout_layout_columnWeight
    int GridLayout_Layout_layout_gravity -> GridLayout_Layout_layout_gravity
    int GridLayout_Layout_layout_row -> GridLayout_Layout_layout_row
    int GridLayout_Layout_layout_rowSpan -> GridLayout_Layout_layout_rowSpan
    int GridLayout_Layout_layout_rowWeight -> GridLayout_Layout_layout_rowWeight
    int GridLayout_alignmentMode -> GridLayout_alignmentMode
    int GridLayout_columnCount -> GridLayout_columnCount
    int GridLayout_columnOrderPreserved -> GridLayout_columnOrderPreserved
    int GridLayout_orientation -> GridLayout_orientation
    int GridLayout_rowCount -> GridLayout_rowCount
    int GridLayout_rowOrderPreserved -> GridLayout_rowOrderPreserved
    int GridLayout_useDefaultMargins -> GridLayout_useDefaultMargins
android.support.v7.internal.VersionUtils -> android.support.v7.internal.a:
    boolean isAtLeastL() -> a
android.support.v7.internal.app.WindowCallback -> android.support.v7.internal.a.a:
    boolean onMenuItemSelected(int,android.view.MenuItem) -> a
    boolean onCreatePanelMenu(int,android.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> a
    void onPanelClosed(int,android.view.Menu) -> b
    boolean onMenuOpened(int,android.view.Menu) -> c
    android.view.View onCreatePanelView(int) -> a
android.support.v7.internal.app.WindowDecorActionBar -> android.support.v7.internal.a.b:
    boolean ALLOW_SHOW_HIDE_ANIMATIONS -> i
    android.content.Context mContext -> j
    android.content.Context mThemedContext -> k
    android.support.v4.app.FragmentActivity mActivity -> l
    android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout -> m
    android.support.v7.internal.widget.ActionBarContainer mContainerView -> n
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> o
    android.support.v7.internal.widget.ActionBarContextView mContextView -> p
    android.support.v7.internal.widget.ActionBarContainer mSplitView -> q
    android.view.View mContentView -> r
    android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView -> s
    java.util.ArrayList mTabs -> t
    int mSavedTabPosition -> u
    boolean mDisplayHomeAsUpSet -> v
    android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode -> a
    android.support.v7.view.ActionMode mDeferredDestroyActionMode -> b
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback -> c
    boolean mLastMenuVisibility -> w
    java.util.ArrayList mMenuVisibilityListeners -> x
    int mContextDisplayMode -> y
    boolean mHasEmbeddedTabs -> z
    int mCurWindowVisibility -> A
    boolean mContentAnimations -> B
    boolean mHiddenByApp -> C
    boolean mHiddenBySystem -> D
    boolean mShowingForMode -> E
    boolean mNowShowing -> F
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> G
    boolean mShowHideAnimationEnabled -> H
    boolean mHideOnContentScroll -> d
    android.support.v4.view.ViewPropertyAnimatorListener mHideListener -> e
    android.support.v4.view.ViewPropertyAnimatorListener mShowListener -> f
    android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> g
    boolean $assertionsDisabled -> h
    void init(android.view.View) -> a
    android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View) -> b
    void setElevation(float) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> k
    void completeDeferredDestroyActionMode() -> e
    void onWindowVisibilityChanged(int) -> a
    void setShowHideAnimationEnabled(boolean) -> d
    void dispatchMenuVisibilityChanged(boolean) -> e
    void setDisplayHomeAsUpEnabled(boolean) -> f
    void setHomeButtonEnabled(boolean) -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    void setDisplayOptions(int,int) -> a
    int getNavigationMode() -> f
    int getDisplayOptions() -> a
    android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> a
    void enableContentAnimations(boolean) -> g
    void showForActionMode() -> k
    void showForSystem() -> g
    void hideForActionMode() -> l
    void hideForSystem() -> h
    void setHideOnContentScrollEnabled(boolean) -> b
    boolean checkShowingFlags(boolean,boolean,boolean) -> b
    void updateVisibility(boolean) -> l
    void doShow(boolean) -> h
    void doHide(boolean) -> i
    void animateToMode(boolean) -> j
    android.content.Context getThemedContext() -> b
    void onContentScrollStarted() -> i
    void onContentScrollStopped() -> j
    boolean collapseActionView() -> d
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> c
    boolean access$000(android.support.v7.internal.app.WindowDecorActionBar) -> a
    android.view.View access$100(android.support.v7.internal.app.WindowDecorActionBar) -> b
    android.support.v7.internal.widget.ActionBarContainer access$200(android.support.v7.internal.app.WindowDecorActionBar) -> c
    android.support.v7.internal.widget.ActionBarContainer access$300(android.support.v7.internal.app.WindowDecorActionBar) -> d
    int access$400(android.support.v7.internal.app.WindowDecorActionBar) -> e
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet access$502(android.support.v7.internal.app.WindowDecorActionBar,android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> a
    android.support.v7.internal.widget.ActionBarOverlayLayout access$600(android.support.v7.internal.app.WindowDecorActionBar) -> f
    boolean access$700(android.support.v7.internal.app.WindowDecorActionBar) -> g
    boolean access$800(android.support.v7.internal.app.WindowDecorActionBar) -> h
    boolean access$900(boolean,boolean,boolean) -> a
    android.support.v7.internal.widget.ActionBarContextView access$1000(android.support.v7.internal.app.WindowDecorActionBar) -> i
    android.support.v7.internal.widget.DecorToolbar access$1100(android.support.v7.internal.app.WindowDecorActionBar) -> j
    android.content.Context access$1200(android.support.v7.internal.app.WindowDecorActionBar) -> k
android.support.v7.internal.app.WindowDecorActionBar$1 -> android.support.v7.internal.a.c:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.internal.app.WindowDecorActionBar$2 -> android.support.v7.internal.a.d:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.internal.app.WindowDecorActionBar$3 -> android.support.v7.internal.a.e:
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    void onAnimationUpdate(android.view.View) -> a
android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl -> android.support.v7.internal.a.b$a:
    android.support.v7.view.ActionMode$Callback mCallback -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    java.lang.ref.WeakReference mCustomView -> d
    android.support.v7.internal.app.WindowDecorActionBar this$0 -> a
    android.view.MenuInflater getMenuInflater() -> a
    android.view.Menu getMenu() -> b
    void finish() -> c
    void invalidate() -> d
    boolean dispatchOnCreate() -> e
    void setCustomView(android.view.View) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    void setTitle(java.lang.CharSequence) -> b
    void setTitle(int) -> a
    void setSubtitle(int) -> b
    java.lang.CharSequence getTitle() -> f
    java.lang.CharSequence getSubtitle() -> g
    void setTitleOptionalHint(boolean) -> a
    boolean isTitleOptional() -> h
    android.view.View getCustomView() -> i
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.text.AllCapsTransformationMethod -> android.support.v7.internal.b.a:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.internal.transition.ActionBarTransition -> android.support.v7.internal.c.a:
    void beginDelayedTransition(android.view.ViewGroup) -> a
android.support.v7.internal.view.ActionBarPolicy -> android.support.v7.internal.view.a:
    android.content.Context mContext -> a
    android.support.v7.internal.view.ActionBarPolicy get(android.content.Context) -> a
    int getMaxActionButtons() -> a
    boolean showsOverflowMenuButton() -> b
    int getEmbeddedMenuWidthLimit() -> c
    boolean hasEmbeddedTabs() -> d
    int getTabContainerHeight() -> e
    boolean enableHomeButtonByDefault() -> f
    int getStackedTabMaxWidth() -> g
android.support.v7.internal.view.StandaloneActionMode -> android.support.v7.internal.view.b:
    android.content.Context mContext -> a
    android.support.v7.internal.widget.ActionBarContextView mContextView -> b
    android.support.v7.view.ActionMode$Callback mCallback -> c
    java.lang.ref.WeakReference mCustomView -> d
    boolean mFinished -> e
    boolean mFocusable -> f
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> g
    void setTitle(java.lang.CharSequence) -> b
    void setSubtitle(java.lang.CharSequence) -> a
    void setTitle(int) -> a
    void setSubtitle(int) -> b
    void setTitleOptionalHint(boolean) -> a
    boolean isTitleOptional() -> h
    void setCustomView(android.view.View) -> a
    void invalidate() -> d
    void finish() -> c
    android.view.Menu getMenu() -> b
    java.lang.CharSequence getTitle() -> f
    java.lang.CharSequence getSubtitle() -> g
    android.view.View getCustomView() -> i
    android.view.MenuInflater getMenuInflater() -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.SupportActionModeWrapper -> android.support.v7.internal.view.c:
    android.content.Context mContext -> a
    android.support.v7.view.ActionMode mWrappedObject -> b
    java.lang.Object getTag() -> getTag
    void setTag(java.lang.Object) -> setTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void invalidate() -> invalidate
    void finish() -> finish
    android.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    android.view.View getCustomView() -> getCustomView
    void setCustomView(android.view.View) -> setCustomView
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean getTitleOptionalHint() -> getTitleOptionalHint
    void setTitleOptionalHint(boolean) -> setTitleOptionalHint
    boolean isTitleOptional() -> isTitleOptional
android.support.v7.internal.view.SupportActionModeWrapper$CallbackWrapper -> android.support.v7.internal.view.c$a:
    android.view.ActionMode$Callback mWrappedCallback -> a
    android.content.Context mContext -> b
    android.support.v4.util.SimpleArrayMap mActionModes -> c
    android.support.v4.util.SimpleArrayMap mMenus -> d
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
    android.view.Menu getMenuWrapper(android.view.Menu) -> a
    android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> b
android.support.v7.internal.view.SupportMenuInflater -> android.support.v7.internal.view.d:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,android.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    java.lang.Object getRealOwner() -> c
    java.lang.Object findRealOwner(java.lang.Object) -> a
    android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater) -> a
    java.lang.Class[] access$200() -> a
    java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater) -> b
    java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater) -> c
    java.lang.Class[] access$500() -> b
    java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater) -> d
android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.internal.view.d$a:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.SupportMenuInflater$MenuState -> android.support.v7.internal.view.d$b:
    android.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    android.support.v4.view.ActionProvider itemActionProvider -> z
    android.support.v7.internal.view.SupportMenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(android.view.MenuItem) -> a
    void addItem() -> b
    android.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState) -> a
android.support.v7.internal.view.ViewPropertyAnimatorCompatSet -> android.support.v7.internal.view.e:
    java.util.ArrayList mAnimators -> a
    long mDuration -> b
    android.view.animation.Interpolator mInterpolator -> c
    android.support.v4.view.ViewPropertyAnimatorListener mListener -> d
    boolean mIsStarted -> e
    android.support.v4.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    void start() -> a
    void onAnimationsEnded() -> c
    void cancel() -> b
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setDuration(long) -> a
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> a
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> a
    android.support.v4.view.ViewPropertyAnimatorListener access$000(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> a
    void access$100(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> b
    java.util.ArrayList access$200(android.support.v7.internal.view.ViewPropertyAnimatorCompatSet) -> c
android.support.v7.internal.view.ViewPropertyAnimatorCompatSet$1 -> android.support.v7.internal.view.f:
    boolean mProxyStarted -> b
    int mProxyEndCount -> c
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet this$0 -> a
    void onAnimationStart(android.view.View) -> a
    void onEnd() -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.internal.view.menu.ActionMenuItem -> android.support.v7.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.content.Context mContext -> l
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    int mFlags -> n
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    android.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.view.MenuItem setVisible(boolean) -> setVisible
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.support.v4.view.ActionProvider getSupportActionProvider() -> a
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
android.support.v7.internal.view.menu.ActionMenuItemView -> android.support.v7.internal.view.menu.ActionMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    android.graphics.drawable.Drawable mIcon -> c
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> d
    android.support.v7.widget.ListPopupWindow$ForwardingListener mForwardingListener -> e
    android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> f
    boolean mAllowTextWithIcon -> g
    boolean mExpandedFormat -> h
    int mMinWidth -> i
    int mSavedPaddingLeft -> j
    int mMaxIconSize -> k
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setPadding(int,int,int,int) -> setPadding
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void setItemInvoker(android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    void setPopupCallback(android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
    android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback access$000(android.support.v7.internal.view.menu.ActionMenuItemView) -> a
    android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker access$100(android.support.v7.internal.view.menu.ActionMenuItemView) -> b
    android.support.v7.internal.view.menu.MenuItemImpl access$200(android.support.v7.internal.view.menu.ActionMenuItemView) -> c
android.support.v7.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.internal.view.menu.ActionMenuItemView$a:
    android.support.v7.internal.view.menu.ActionMenuItemView this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
android.support.v7.internal.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.internal.view.menu.ActionMenuItemView$b:
    android.support.v7.widget.ListPopupWindow getPopup() -> a
android.support.v7.internal.view.menu.BaseMenuPresenter -> android.support.v7.internal.view.menu.b:
    android.content.Context mSystemContext -> a
    android.content.Context mContext -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.view.LayoutInflater mSystemInflater -> d
    android.view.LayoutInflater mInflater -> e
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> g
    int mMenuLayoutRes -> h
    int mItemLayoutRes -> i
    android.support.v7.internal.view.menu.MenuView mMenuView -> f
    int mId -> j
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> b
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    android.support.v7.internal.view.menu.MenuPresenter$Callback getCallback() -> a
    android.support.v7.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> b
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> a
android.support.v7.internal.view.menu.BaseMenuWrapper -> android.support.v7.internal.view.menu.c:
    android.content.Context mContext -> a
    java.util.Map mMenuItems -> c
    java.util.Map mSubMenus -> d
    android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    void internalClear() -> a
    void internalRemoveGroup(int) -> a
    void internalRemoveItem(int) -> b
android.support.v7.internal.view.menu.BaseWrapper -> android.support.v7.internal.view.menu.d:
    java.lang.Object mWrappedObject -> b
android.support.v7.internal.view.menu.ExpandedMenuView -> android.support.v7.internal.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> b
    int mAnimations -> c
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    int getWindowAnimations() -> getWindowAnimations
android.support.v7.internal.view.menu.ListMenuItemView -> android.support.v7.internal.view.menu.ListMenuItemView:
    android.support.v7.internal.view.menu.MenuItemImpl mItemData -> a
    android.widget.ImageView mIconView -> b
    android.widget.RadioButton mRadioButton -> c
    android.widget.TextView mTitleView -> d
    android.widget.CheckBox mCheckBox -> e
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mBackground -> g
    int mTextAppearance -> h
    android.content.Context mTextAppearanceContext -> i
    boolean mPreserveIconSpacing -> j
    int mMenuType -> k
    android.content.Context mContext -> l
    android.view.LayoutInflater mInflater -> m
    boolean mForceShowIcon -> n
    void onFinishInflate() -> onFinishInflate
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
android.support.v7.internal.view.menu.ListMenuPresenter -> android.support.v7.internal.view.menu.e:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> c
    android.support.v7.internal.view.menu.ExpandedMenuView mMenuView -> d
    int mItemIndexOffset -> h
    int mThemeRes -> e
    int mItemLayoutRes -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mCallback -> i
    android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> g
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.widget.ListAdapter getAdapter() -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean flagActionItems() -> b
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    int access$000(android.support.v7.internal.view.menu.ListMenuPresenter) -> a
android.support.v7.internal.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.internal.view.menu.e$a:
    int mExpandedIndex -> b
    android.support.v7.internal.view.menu.ListMenuPresenter this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
android.support.v7.internal.view.menu.MenuBuilder -> android.support.v7.internal.view.menu.f:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    android.support.v7.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    android.support.v7.internal.view.menu.MenuItemImpl mExpandedItem -> x
    android.support.v7.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> a
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> a
    void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter,android.content.Context) -> a
    void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> c
    boolean dispatchSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder,android.support.v7.internal.view.menu.MenuPresenter) -> a
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> a
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> a
    void clear() -> clear
    void setExclusiveItemChecked(android.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> b
    int findGroupIndex(int) -> c
    int findGroupIndex(int,int) -> a
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> d
    boolean isQwertyMode() -> b
    void setShortcutsVisibleInner(boolean) -> d
    boolean isShortcutsVisible() -> c
    android.content.res.Resources getResources() -> d
    android.content.Context getContext() -> e
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void changeMenuMode() -> f
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    android.support.v7.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(android.view.MenuItem,int) -> a
    boolean performItemAction(android.view.MenuItem,android.support.v7.internal.view.menu.MenuPresenter,int) -> a
    void close(boolean) -> a
    void close() -> close
    void onItemsChanged(boolean) -> b
    void stopDispatchingItemsChanged() -> g
    void startDispatchingItemsChanged() -> h
    void onItemVisibleChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(android.support.v7.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> i
    void flagActionItems() -> j
    java.util.ArrayList getActionItems() -> k
    java.util.ArrayList getNonActionItems() -> l
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> a
    android.support.v7.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> a
    java.lang.CharSequence getHeaderTitle() -> m
    android.graphics.drawable.Drawable getHeaderIcon() -> n
    android.view.View getHeaderView() -> o
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean getOptionalIconsVisible() -> q
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    android.support.v7.internal.view.menu.MenuItemImpl getExpandedItem() -> r
android.support.v7.internal.view.menu.MenuBuilder$Callback -> android.support.v7.internal.view.menu.f$a:
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuBuilder$ItemInvoker -> android.support.v7.internal.view.menu.f$b:
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuDialogHelper -> android.support.v7.internal.view.menu.g:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> b
    android.app.AlertDialog mDialog -> c
    android.support.v7.internal.view.menu.ListMenuPresenter mPresenter -> a
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> d
    void show(android.os.IBinder) -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    void dismiss() -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.view.menu.MenuItemImpl -> android.support.v7.internal.view.menu.h:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> l
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    android.support.v4.view.ActionProvider mActionProvider -> s
    android.support.v4.view.MenuItemCompat$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> b
    boolean isEnabled() -> isEnabled
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> c
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> d
    java.lang.String getShortcutLabel() -> e
    boolean shouldShowShortcut() -> f
    android.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> a
    boolean isExclusiveCheckable() -> g
    boolean isChecked() -> isChecked
    android.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> b
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> c
    android.view.MenuItem setVisible(boolean) -> setVisible
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> h
    boolean shouldShowIcon() -> i
    boolean isActionButton() -> j
    boolean requestsActionButton() -> k
    boolean requiresActionButton() -> l
    void setIsActionButton(boolean) -> d
    boolean showsTextAsAction() -> m
    void setShowAsAction(int) -> setShowAsAction
    android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> a
    android.support.v4.internal.view.SupportMenuItem setActionView(int) -> a
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> a
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> a
    android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> b
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
    boolean hasCollapsibleActionView() -> n
    void setActionViewExpanded(boolean) -> e
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuItemImpl) -> a
android.support.v7.internal.view.menu.MenuItemImpl$1 -> android.support.v7.internal.view.menu.i:
    android.support.v7.internal.view.menu.MenuItemImpl this$0 -> a
    void onActionProviderVisibilityChanged(boolean) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS -> android.support.v7.internal.view.menu.j:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> c
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    android.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    android.view.MenuItem setShortcut(char,char) -> setShortcut
    android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    android.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    android.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    android.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    android.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    android.view.SubMenu getSubMenu() -> getSubMenu
    android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    android.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    void setExclusiveCheckable(boolean) -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.internal.view.menu.j$a:
    android.view.ActionProvider mInner -> a
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.View onCreateActionView() -> a
    boolean onPerformDefaultAction() -> d
    boolean hasSubMenu() -> e
    void onPrepareSubMenu(android.view.SubMenu) -> a
android.support.v7.internal.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.internal.view.menu.j$b:
    android.view.CollapsibleActionView mWrappedView -> a
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
    android.view.View getWrappedView() -> c
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.internal.view.menu.j$c:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v7.internal.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.internal.view.menu.j$d:
    android.support.v7.internal.view.menu.MenuItemWrapperICS this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.internal.view.menu.MenuItemWrapperJB -> android.support.v7.internal.view.menu.k:
    android.support.v7.internal.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> a
android.support.v7.internal.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.internal.view.menu.k$a:
    android.support.v4.view.ActionProvider$VisibilityListener mListener -> c
    android.support.v7.internal.view.menu.MenuItemWrapperJB this$0 -> d
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    boolean overridesItemVisibility() -> b
    boolean isVisible() -> c
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> a
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.internal.view.menu.MenuPopupHelper -> android.support.v7.internal.view.menu.l:
    int ITEM_LAYOUT -> a
    android.content.Context mContext -> c
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> e
    android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> f
    boolean mOverflowOnly -> g
    int mPopupMaxWidth -> h
    int mPopupStyleAttr -> i
    int mPopupStyleRes -> j
    android.view.View mAnchorView -> k
    android.support.v7.widget.ListPopupWindow mPopup -> l
    android.view.ViewTreeObserver mTreeObserver -> m
    android.support.v7.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> n
    boolean mForceShowIcon -> b
    android.view.ViewGroup mMeasureParent -> o
    boolean mHasContentWidth -> p
    int mContentWidth -> q
    int mDropDownGravity -> r
    void setAnchorView(android.view.View) -> a
    void setForceShowIcon(boolean) -> a
    void setGravity(int) -> a
    void show() -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> c
    boolean tryShow() -> d
    void dismiss() -> e
    void onDismiss() -> onDismiss
    boolean isShowing() -> f
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth() -> g
    void onGlobalLayout() -> onGlobalLayout
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> b
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
    boolean access$100(android.support.v7.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$200(android.support.v7.internal.view.menu.MenuPopupHelper) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$300(android.support.v7.internal.view.menu.MenuPopupHelper) -> c
android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter -> android.support.v7.internal.view.menu.l$a:
    android.support.v7.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    android.support.v7.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    android.support.v7.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.lang.Object getItem(int) -> getItem
    android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
android.support.v7.internal.view.menu.MenuPresenter -> android.support.v7.internal.view.menu.m:
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> b
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.internal.view.menu.MenuPresenter$Callback -> android.support.v7.internal.view.menu.m$a:
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView -> android.support.v7.internal.view.menu.n:
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.internal.view.menu.MenuView$ItemView -> android.support.v7.internal.view.menu.n$a:
    void initialize(android.support.v7.internal.view.menu.MenuItemImpl,int) -> a
    android.support.v7.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
android.support.v7.internal.view.menu.MenuWrapperFactory -> android.support.v7.internal.view.menu.o:
    android.view.Menu wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu) -> a
    android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> a
    android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> a
android.support.v7.internal.view.menu.MenuWrapperICS -> android.support.v7.internal.view.menu.p:
    android.view.MenuItem add(java.lang.CharSequence) -> add
    android.view.MenuItem add(int) -> add
    android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    android.view.MenuItem add(int,int,int,int) -> add
    android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    android.view.MenuItem findItem(int) -> findItem
    int size() -> size
    android.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.internal.view.menu.SubMenuBuilder -> android.support.v7.internal.view.menu.q:
    android.support.v7.internal.view.menu.MenuBuilder mParentMenu -> d
    android.support.v7.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> b
    boolean isShortcutsVisible() -> c
    android.view.Menu getParentMenu() -> s
    android.view.MenuItem getItem() -> getItem
    void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback) -> a
    android.support.v7.internal.view.menu.MenuBuilder getRootMenu() -> p
    boolean dispatchMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> a
android.support.v7.internal.view.menu.SubMenuWrapperICS -> android.support.v7.internal.view.menu.r:
    android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> b
    android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    android.view.SubMenu setIcon(int) -> setIcon
    android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    android.view.MenuItem getItem() -> getItem
android.support.v7.internal.widget.AbsActionBarView -> android.support.v7.internal.widget.a:
    android.view.animation.Interpolator sAlphaInterpolator -> j
    android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> a
    android.content.Context mPopupContext -> b
    android.support.v7.widget.ActionMenuView mMenuView -> c
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> d
    android.view.ViewGroup mSplitView -> e
    boolean mSplitActionBar -> f
    boolean mSplitWhenNarrow -> g
    int mContentHeight -> h
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> i
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitToolbar(boolean) -> setSplitToolbar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(android.view.ViewGroup) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> a
    boolean showOverflowMenu() -> a
    int measureChildView(android.view.View,int,int,int) -> a
    int next(int,int,boolean) -> a
    int positionChild(android.view.View,int,int,int,boolean) -> a
android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.internal.widget.a$a:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    android.support.v7.internal.widget.AbsActionBarView this$0 -> b
    android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.AbsSpinnerCompat -> android.support.v7.internal.widget.AbsSpinnerCompat:
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    int mSelectionLeftPadding -> d
    int mSelectionTopPadding -> e
    int mSelectionRightPadding -> f
    int mSelectionBottomPadding -> g
    android.graphics.Rect mSpinnerPadding -> h
    android.support.v7.internal.widget.AbsSpinnerCompat$RecycleBin mRecycler -> i
    android.database.DataSetObserver mDataSetObserver -> E
    void initAbsSpinner() -> k
    void setAdapter(android.widget.SpinnerAdapter) -> a
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int) -> setSelection
    void layout(int,boolean) -> a
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> c
    int getCount() -> getCount
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$000(android.support.v7.internal.widget.AbsSpinnerCompat,android.view.View,boolean) -> a
android.support.v7.internal.widget.AbsSpinnerCompat$RecycleBin -> android.support.v7.internal.widget.AbsSpinnerCompat$a:
    android.util.SparseArray mScrapHeap -> b
    android.support.v7.internal.widget.AbsSpinnerCompat this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
android.support.v7.internal.widget.AbsSpinnerCompat$SavedState -> android.support.v7.internal.widget.AbsSpinnerCompat$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.internal.widget.AbsSpinnerCompat$SavedState$1 -> android.support.v7.internal.widget.b:
    android.support.v7.internal.widget.AbsSpinnerCompat$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.AbsSpinnerCompat$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.ActionBarBackgroundDrawable -> android.support.v7.internal.widget.c:
    android.support.v7.internal.widget.ActionBarContainer mContainer -> a
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
android.support.v7.internal.widget.ActionBarBackgroundDrawableV21 -> android.support.v7.internal.widget.d:
    void getOutline(android.graphics.Outline) -> getOutline
android.support.v7.internal.widget.ActionBarContainer -> android.support.v7.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> f
    android.view.View mTabContainer -> g
    android.view.View mActionBarView -> h
    android.view.View mContextView -> i
    android.graphics.drawable.Drawable mBackground -> a
    android.graphics.drawable.Drawable mStackedBackground -> b
    android.graphics.drawable.Drawable mSplitBackground -> c
    boolean mIsSplit -> d
    boolean mIsStacked -> e
    int mHeight -> j
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setVisibility(int) -> setVisibility
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    boolean isCollapsed(android.view.View) -> a
    int getMeasuredHeightWithMargins(android.view.View) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v7.internal.widget.ActionBarContextView -> android.support.v7.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> j
    java.lang.CharSequence mSubtitle -> k
    android.view.View mClose -> l
    android.view.View mCustomView -> m
    android.widget.LinearLayout mTitleLayout -> n
    android.widget.TextView mTitleView -> o
    android.widget.TextView mSubtitleView -> p
    int mTitleStyleRes -> q
    int mSubtitleStyleRes -> r
    android.graphics.drawable.Drawable mSplitBackground -> s
    boolean mTitleOptional -> t
    int mCloseItemLayout -> u
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentAnimation -> v
    boolean mAnimateInOnLayout -> w
    int mAnimationMode -> x
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitToolbar(boolean) -> setSplitToolbar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> e
    void initForMode(android.support.v7.view.ActionMode) -> a
    void closeMode() -> b
    void finishAnimation() -> f
    void killMode() -> c
    boolean showOverflowMenu() -> a
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet makeInAnimation() -> g
    android.support.v7.internal.view.ViewPropertyAnimatorCompatSet makeOutAnimation() -> h
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void setTitleOptional(boolean) -> setTitleOptional
    boolean isTitleOptional() -> d
    void animateToVisibility(int) -> a
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setSplitView(android.view.ViewGroup) -> setSplitView
    int getContentHeight() -> getContentHeight
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
android.support.v7.internal.widget.ActionBarContextView$1 -> android.support.v7.internal.widget.e:
    android.support.v7.view.ActionMode val$mode -> a
    android.support.v7.internal.widget.ActionBarContextView this$0 -> b
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ActionBarOverlayLayout -> android.support.v7.internal.widget.ActionBarOverlayLayout:
    int mActionBarHeight -> b
    int mWindowVisibility -> c
    android.support.v7.internal.widget.ContentFrameLayout mContent -> d
    android.support.v7.internal.widget.ActionBarContainer mActionBarBottom -> e
    android.support.v7.internal.widget.ActionBarContainer mActionBarTop -> f
    android.support.v7.internal.widget.DecorToolbar mDecorToolbar -> g
    android.graphics.drawable.Drawable mWindowContentOverlay -> h
    boolean mIgnoreWindowContentOverlay -> i
    boolean mOverlayMode -> j
    boolean mHasNonEmbeddedTabs -> k
    boolean mHideOnContentScroll -> l
    boolean mAnimatingForFling -> m
    int mHideOnContentScrollReference -> n
    int mLastSystemUiVisibility -> o
    android.graphics.Rect mBaseContentInsets -> p
    android.graphics.Rect mLastBaseContentInsets -> q
    android.graphics.Rect mContentInsets -> r
    android.graphics.Rect mBaseInnerInsets -> s
    android.graphics.Rect mInnerInsets -> t
    android.graphics.Rect mLastInnerInsets -> u
    android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> v
    int ACTION_BAR_ANIMATE_DELAY -> w
    android.support.v4.widget.ScrollerCompat mFlingEstimator -> x
    android.support.v4.view.ViewPropertyAnimatorCompat mCurrentActionBarTopAnimator -> y
    android.support.v4.view.ViewPropertyAnimatorCompat mCurrentActionBarBottomAnimator -> z
    android.support.v4.view.ViewPropertyAnimatorListener mTopAnimatorListener -> A
    android.support.v4.view.ViewPropertyAnimatorListener mBottomAnimatorListener -> B
    java.lang.Runnable mRemoveActionBarHideOffset -> C
    java.lang.Runnable mAddActionBarHideOffset -> D
    int[] ATTRS -> a
    void init(android.content.Context) -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setActionBarVisibilityCallback(android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    void setOverlayMode(boolean) -> setOverlayMode
    boolean isInOverlayMode() -> a
    void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    void setShowingForActionMode(boolean) -> setShowingForActionMode
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> a
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> b
    android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void pullChildren() -> c
    android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View) -> a
    void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    int getActionBarHideOffset() -> getActionBarHideOffset
    void setActionBarHideOffset(int) -> setActionBarHideOffset
    void haltActionBarHideOffsetAnimations() -> j
    void postRemoveActionBarHideOffset() -> k
    void postAddActionBarHideOffset() -> l
    void removeActionBarHideOffset() -> m
    void addActionBarHideOffset() -> n
    boolean shouldHideActionBarOnFling(float,float) -> a
    void setWindowCallback(android.support.v7.internal.app.WindowCallback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    java.lang.CharSequence getTitle() -> getTitle
    void initFeature(int) -> a
    void setUiOptions(int) -> setUiOptions
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowMenuShowPending() -> f
    boolean showOverflowMenu() -> g
    boolean hideOverflowMenu() -> h
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopups() -> i
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v4.view.ViewPropertyAnimatorCompat access$002(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat) -> a
    boolean access$102(android.support.v7.internal.widget.ActionBarOverlayLayout,boolean) -> a
    android.support.v4.view.ViewPropertyAnimatorCompat access$202(android.support.v7.internal.widget.ActionBarOverlayLayout,android.support.v4.view.ViewPropertyAnimatorCompat) -> b
    void access$300(android.support.v7.internal.widget.ActionBarOverlayLayout) -> a
    android.support.v4.view.ViewPropertyAnimatorListener access$400(android.support.v7.internal.widget.ActionBarOverlayLayout) -> b
    android.support.v7.internal.widget.ActionBarContainer access$500(android.support.v7.internal.widget.ActionBarOverlayLayout) -> c
    android.support.v7.internal.widget.ActionBarContainer access$600(android.support.v7.internal.widget.ActionBarOverlayLayout) -> d
    android.support.v4.view.ViewPropertyAnimatorListener access$700(android.support.v7.internal.widget.ActionBarOverlayLayout) -> e
android.support.v7.internal.widget.ActionBarOverlayLayout$1 -> android.support.v7.internal.widget.f:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.ActionBarOverlayLayout$2 -> android.support.v7.internal.widget.g:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.ActionBarOverlayLayout$3 -> android.support.v7.internal.widget.h:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ActionBarOverlayLayout$4 -> android.support.v7.internal.widget.i:
    android.support.v7.internal.widget.ActionBarOverlayLayout this$0 -> a
    void run() -> run
android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> android.support.v7.internal.widget.ActionBarOverlayLayout$a:
    void onWindowVisibilityChanged(int) -> a
    void showForSystem() -> g
    void hideForSystem() -> h
    void enableContentAnimations(boolean) -> g
    void onContentScrollStarted() -> i
    void onContentScrollStopped() -> j
android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.internal.widget.ActionBarOverlayLayout$LayoutParams:
android.support.v7.internal.widget.ActivityChooserModel -> android.support.v7.internal.widget.j:
    java.lang.String LOG_TAG -> a
    java.lang.Object sRegistryLock -> b
    java.util.Map sDataModelRegistry -> c
    java.lang.Object mInstanceLock -> d
    java.util.List mActivities -> e
    java.util.List mHistoricalRecords -> f
    android.content.Context mContext -> g
    java.lang.String mHistoryFileName -> h
    android.content.Intent mIntent -> i
    android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> j
    int mHistoryMaxSize -> k
    boolean mCanReadHistoricalData -> l
    boolean mReadShareHistoryCalled -> m
    boolean mHistoricalRecordsChanged -> n
    boolean mReloadActivities -> o
    android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> p
    int getActivityCount() -> a
    android.content.pm.ResolveInfo getActivity(int) -> a
    int getActivityIndex(android.content.pm.ResolveInfo) -> a
    android.content.Intent chooseActivity(int) -> b
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setDefaultActivity(int) -> c
    void persistHistoricalDataIfNeeded() -> e
    int getHistorySize() -> c
    void ensureConsistentState() -> f
    boolean sortActivitiesIfNeeded() -> g
    boolean loadActivitiesIfNeeded() -> h
    boolean readHistoricalDataIfNeeded() -> i
    boolean addHisoricalRecord(android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord) -> a
    void pruneExcessiveHistoricalRecordsIfNeeded() -> j
    void readHistoricalDataImpl() -> k
    android.content.Context access$200(android.support.v7.internal.widget.ActivityChooserModel) -> a
    java.lang.String access$300() -> d
    java.lang.String access$400(android.support.v7.internal.widget.ActivityChooserModel) -> b
    boolean access$502(android.support.v7.internal.widget.ActivityChooserModel,boolean) -> a
android.support.v7.internal.widget.ActivityChooserModel$1 -> android.support.v7.internal.widget.j$1:
android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo -> android.support.v7.internal.widget.j$a:
    android.content.pm.ResolveInfo resolveInfo -> a
    float weight -> b
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(android.support.v7.internal.widget.ActivityChooserModel$ActivityResolveInfo) -> a
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
android.support.v7.internal.widget.ActivityChooserModel$ActivitySorter -> android.support.v7.internal.widget.j$b:
    void sort(android.content.Intent,java.util.List,java.util.List) -> a
android.support.v7.internal.widget.ActivityChooserModel$HistoricalRecord -> android.support.v7.internal.widget.j$c:
    android.content.ComponentName activity -> a
    long time -> b
    float weight -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v7.internal.widget.ActivityChooserModel$OnChooseActivityListener -> android.support.v7.internal.widget.j$d:
    boolean onChooseActivity(android.support.v7.internal.widget.ActivityChooserModel,android.content.Intent) -> a
android.support.v7.internal.widget.ActivityChooserModel$PersistHistoryAsyncTask -> android.support.v7.internal.widget.j$e:
    android.support.v7.internal.widget.ActivityChooserModel this$0 -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v7.internal.widget.ActivityChooserView -> android.support.v7.internal.widget.ActivityChooserView:
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> b
    android.support.v7.internal.widget.ActivityChooserView$Callbacks mCallbacks -> c
    android.support.v7.widget.LinearLayoutCompat mActivityChooserContent -> d
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> e
    android.widget.FrameLayout mExpandActivityOverflowButton -> f
    android.widget.ImageView mExpandActivityOverflowButtonImage -> g
    android.widget.FrameLayout mDefaultActivityButton -> h
    android.widget.ImageView mDefaultActivityButtonImage -> i
    int mListPopupMaxWidth -> j
    android.support.v4.view.ActionProvider mProvider -> a
    android.database.DataSetObserver mModelDataSetOberver -> k
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    android.support.v7.widget.ListPopupWindow mListPopupWindow -> m
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    boolean mIsSelectingDefaultActivity -> o
    int mInitialActivityCount -> p
    boolean mIsAttachedToWindow -> q
    int mDefaultActionButtonContentDescription -> r
    void setActivityChooserModel(android.support.v7.internal.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(android.support.v4.view.ActionProvider) -> setProvider
    boolean showPopup() -> a
    void showPopupUnchecked(int) -> a
    boolean dismissPopup() -> b
    boolean isShowingPopup() -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    android.support.v7.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> d
    android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter access$000(android.support.v7.internal.widget.ActivityChooserView) -> a
    android.support.v7.widget.ListPopupWindow access$100(android.support.v7.internal.widget.ActivityChooserView) -> b
    void access$400(android.support.v7.internal.widget.ActivityChooserView) -> c
    void access$500(android.support.v7.internal.widget.ActivityChooserView,int) -> a
    boolean access$600(android.support.v7.internal.widget.ActivityChooserView) -> d
    android.widget.FrameLayout access$700(android.support.v7.internal.widget.ActivityChooserView) -> e
    android.widget.FrameLayout access$800(android.support.v7.internal.widget.ActivityChooserView) -> f
    boolean access$602(android.support.v7.internal.widget.ActivityChooserView,boolean) -> a
    int access$900(android.support.v7.internal.widget.ActivityChooserView) -> g
    android.widget.PopupWindow$OnDismissListener access$1000(android.support.v7.internal.widget.ActivityChooserView) -> h
    android.database.DataSetObserver access$1100(android.support.v7.internal.widget.ActivityChooserView) -> i
android.support.v7.internal.widget.ActivityChooserView$1 -> android.support.v7.internal.widget.k:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.ActivityChooserView$2 -> android.support.v7.internal.widget.l:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.ActivityChooserView$3 -> android.support.v7.internal.widget.m:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onChanged() -> onChanged
android.support.v7.internal.widget.ActivityChooserView$ActivityChooserViewAdapter -> android.support.v7.internal.widget.ActivityChooserView$a:
    android.support.v7.internal.widget.ActivityChooserModel mDataModel -> b
    int mMaxActivityCount -> c
    boolean mShowDefaultActivity -> d
    boolean mHighlightDefaultActivity -> e
    boolean mShowFooterView -> f
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void setDataModel(android.support.v7.internal.widget.ActivityChooserModel) -> a
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> a
    void setMaxActivityCount(int) -> a
    android.content.pm.ResolveInfo getDefaultActivity() -> b
    void setShowFooterView(boolean) -> a
    int getActivityCount() -> c
    int getHistorySize() -> d
    android.support.v7.internal.widget.ActivityChooserModel getDataModel() -> e
    void setShowDefaultActivity(boolean,boolean) -> a
    boolean getShowDefaultActivity() -> f
android.support.v7.internal.widget.ActivityChooserView$Callbacks -> android.support.v7.internal.widget.ActivityChooserView$b:
    android.support.v7.internal.widget.ActivityChooserView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> a
android.support.v7.internal.widget.AdapterViewCompat -> android.support.v7.internal.widget.AdapterViewCompat:
    int mFirstPosition -> j
    int mSpecificTop -> k
    int mSyncPosition -> l
    long mSyncRowId -> m
    long mSyncHeight -> n
    boolean mNeedSync -> o
    int mSyncMode -> p
    int mLayoutHeight -> a
    boolean mInLayout -> q
    android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener mOnItemSelectedListener -> r
    android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener mOnItemClickListener -> s
    android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener mOnItemLongClickListener -> t
    boolean mDataChanged -> u
    int mNextSelectedPosition -> v
    long mNextSelectedRowId -> w
    int mSelectedPosition -> x
    long mSelectedRowId -> y
    android.view.View mEmptyView -> b
    int mItemCount -> z
    int mOldItemCount -> A
    int mOldSelectedPosition -> B
    long mOldSelectedRowId -> C
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    android.support.v7.internal.widget.AdapterViewCompat$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> D
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener) -> setOnItemClickListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> a
    void setOnItemLongClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener) -> setOnItemLongClickListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener) -> setOnItemSelectedListener
    android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> d
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> e
    void updateEmptyStatus(boolean) -> a
    long getItemIdAtPosition(int) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> f
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> g
    void checkSelectionChanged() -> h
    int findSyncPosition() -> i
    int lookForSelectablePosition(int,boolean) -> b
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> j
    void access$000(android.support.v7.internal.widget.AdapterViewCompat,android.os.Parcelable) -> a
    android.os.Parcelable access$100(android.support.v7.internal.widget.AdapterViewCompat) -> a
    void access$200(android.support.v7.internal.widget.AdapterViewCompat) -> b
android.support.v7.internal.widget.AdapterViewCompat$1 -> android.support.v7.internal.widget.AdapterViewCompat$1:
android.support.v7.internal.widget.AdapterViewCompat$AdapterDataSetObserver -> android.support.v7.internal.widget.AdapterViewCompat$a:
    android.os.Parcelable mInstanceState -> b
    android.support.v7.internal.widget.AdapterViewCompat this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener -> android.support.v7.internal.widget.AdapterViewCompat$b:
    void onItemClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> a
android.support.v7.internal.widget.AdapterViewCompat$OnItemLongClickListener -> android.support.v7.internal.widget.AdapterViewCompat$c:
android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener -> android.support.v7.internal.widget.AdapterViewCompat$d:
    void onItemSelected(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> a
    void onNothingSelected(android.support.v7.internal.widget.AdapterViewCompat) -> a
android.support.v7.internal.widget.AdapterViewCompat$SelectionNotifier -> android.support.v7.internal.widget.AdapterViewCompat$e:
    android.support.v7.internal.widget.AdapterViewCompat this$0 -> a
    void run() -> run
android.support.v7.internal.widget.AppCompatPopupWindow -> android.support.v7.internal.widget.AppCompatPopupWindow:
    boolean mOverlapAnchor -> a
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
android.support.v7.internal.widget.CompatTextView -> android.support.v7.internal.widget.CompatTextView:
android.support.v7.internal.widget.ContentFrameLayout -> android.support.v7.internal.widget.ContentFrameLayout:
    void dispatchFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.internal.widget.DecorContentParent -> android.support.v7.internal.widget.n:
    void setWindowCallback(android.support.v7.internal.app.WindowCallback) -> setWindowCallback
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void initFeature(int) -> a
    boolean canShowOverflowMenu() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowMenuShowPending() -> f
    boolean showOverflowMenu() -> g
    boolean hideOverflowMenu() -> h
    void setMenuPrepared() -> setMenuPrepared
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void dismissPopups() -> i
android.support.v7.internal.widget.DecorToolbar -> android.support.v7.internal.widget.o:
    android.view.ViewGroup getViewGroup() -> a
    android.content.Context getContext() -> b
    boolean isSplit() -> c
    boolean hasExpandedActionView() -> d
    void collapseActionView() -> e
    void setWindowCallback(android.support.v7.internal.app.WindowCallback) -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    java.lang.CharSequence getTitle() -> f
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setIcon(int) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setLogo(int) -> b
    boolean canShowOverflowMenu() -> i
    boolean isOverflowMenuShowing() -> j
    boolean isOverflowMenuShowPending() -> k
    boolean showOverflowMenu() -> l
    boolean hideOverflowMenu() -> m
    void setMenuPrepared() -> n
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void dismissPopupMenus() -> o
    int getDisplayOptions() -> p
    void setDisplayOptions(int) -> c
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    void setCollapsible(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> q
    void animateToVisibility(int) -> d
android.support.v7.internal.widget.DrawableWrapper -> android.support.v7.internal.widget.p:
    android.graphics.drawable.Drawable mDrawable -> a
    void draw(android.graphics.Canvas) -> draw
    void setBounds(int,int,int,int) -> setBounds
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    void jumpToCurrentState() -> jumpToCurrentState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
android.support.v7.internal.widget.FitWindowsFrameLayout -> android.support.v7.internal.widget.FitWindowsFrameLayout:
    android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.internal.widget.FitWindowsLinearLayout -> android.support.v7.internal.widget.FitWindowsLinearLayout:
    android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
android.support.v7.internal.widget.FitWindowsViewGroup -> android.support.v7.internal.widget.q:
    void setOnFitSystemWindowsListener(android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.internal.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> android.support.v7.internal.widget.q$a:
    void onFitSystemWindows(android.graphics.Rect) -> a
android.support.v7.internal.widget.ListViewCompat -> android.support.v7.internal.widget.ListViewCompat:
    int[] STATE_SET_NOTHING -> f
    android.graphics.Rect mSelectorRect -> a
    int mSelectionLeftPadding -> b
    int mSelectionTopPadding -> c
    int mSelectionRightPadding -> d
    int mSelectionBottomPadding -> e
    java.lang.reflect.Field mIsChildViewEnabled -> g
    android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable mSelector -> h
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void drawableStateChanged() -> drawableStateChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void updateSelectorStateCompat() -> a
    boolean shouldShowSelectorCompat() -> b
    boolean touchModeDrawsInPressedStateCompat() -> c
    void drawSelectorCompat(android.graphics.Canvas) -> a
    void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> a
    void positionSelectorLikeFocusCompat(int,android.view.View) -> a
    void positionSelectorCompat(int,android.view.View) -> b
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    void setSelectorEnabled(boolean) -> setSelectorEnabled
android.support.v7.internal.widget.ListViewCompat$GateKeeperDrawable -> android.support.v7.internal.widget.ListViewCompat$a:
    boolean mEnabled -> a
    void setEnabled(boolean) -> a
    boolean setState(int[]) -> setState
    void draw(android.graphics.Canvas) -> draw
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    boolean setVisible(boolean,boolean) -> setVisible
android.support.v7.internal.widget.NativeActionModeAwareLayout -> android.support.v7.internal.widget.NativeActionModeAwareLayout:
    android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener mActionModeForChildListener -> a
    void setActionModeForChildListener(android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener) -> setActionModeForChildListener
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
android.support.v7.internal.widget.NativeActionModeAwareLayout$OnActionModeForChildListener -> android.support.v7.internal.widget.NativeActionModeAwareLayout$a:
    android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> a
android.support.v7.internal.widget.RtlSpacingHelper -> android.support.v7.internal.widget.r:
    int mLeft -> a
    int mRight -> b
    int mStart -> c
    int mEnd -> d
    int mExplicitLeft -> e
    int mExplicitRight -> f
    boolean mIsRtl -> g
    boolean mIsRelative -> h
    int getLeft() -> a
    int getRight() -> b
    int getStart() -> c
    int getEnd() -> d
    void setRelative(int,int) -> a
    void setAbsolute(int,int) -> b
    void setDirection(boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView -> android.support.v7.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> f
    android.support.v7.widget.LinearLayoutCompat mTabLayout -> g
    android.support.v7.internal.widget.SpinnerCompat mTabSpinner -> h
    boolean mAllowCollapse -> i
    int mMaxTabWidth -> b
    int mStackedTabMaxWidth -> c
    int mContentHeight -> j
    int mSelectedTabIndex -> k
    android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim -> d
    android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> e
    android.view.animation.Interpolator sAlphaInterpolator -> l
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    android.support.v7.widget.LinearLayoutCompat createTabLayout() -> d
    android.support.v7.internal.widget.SpinnerCompat createSpinner() -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> a
    void onItemClick(android.support.v7.internal.widget.AdapterViewCompat,android.view.View,int,long) -> a
    android.support.v7.widget.LinearLayoutCompat access$200(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    android.support.v7.internal.widget.ScrollingTabContainerView$TabView access$300(android.support.v7.internal.widget.ScrollingTabContainerView,android.support.v7.app.ActionBar$Tab,boolean) -> a
android.support.v7.internal.widget.ScrollingTabContainerView$1 -> android.support.v7.internal.widget.s:
    android.view.View val$tabView -> a
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> b
    void run() -> run
android.support.v7.internal.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.internal.widget.ScrollingTabContainerView$a:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.internal.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.internal.widget.ScrollingTabContainerView$b:
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ScrollingTabContainerView$TabView -> android.support.v7.internal.widget.ScrollingTabContainerView$c:
    int[] BG_ATTRS -> b
    android.support.v7.app.ActionBar$Tab mTab -> c
    android.widget.TextView mTextView -> d
    android.widget.ImageView mIconView -> e
    android.view.View mCustomView -> f
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void bindTab(android.support.v7.app.ActionBar$Tab) -> a
    void setSelected(boolean) -> setSelected
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    boolean onLongClick(android.view.View) -> onLongClick
    android.support.v7.app.ActionBar$Tab getTab() -> b
android.support.v7.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> android.support.v7.internal.widget.ScrollingTabContainerView$d:
    boolean mCanceled -> b
    int mFinalVisibility -> c
    android.support.v7.internal.widget.ScrollingTabContainerView this$0 -> a
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.SpinnerCompat -> android.support.v7.internal.widget.SpinnerCompat:
    android.support.v7.widget.ListPopupWindow$ForwardingListener mForwardingListener -> F
    android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup mPopup -> G
    android.support.v7.internal.widget.SpinnerCompat$DropDownAdapter mTempAdapter -> H
    int mDropDownWidth -> E
    int mGravity -> I
    boolean mDisableChildrenWhenDisabled -> J
    android.graphics.Rect mTempRect -> K
    android.support.v7.internal.widget.TintManager mTintManager -> L
    void setEnabled(boolean) -> setEnabled
    void setAdapter(android.widget.SpinnerAdapter) -> a
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener) -> setOnItemClickListener
    void setOnItemClickListenerInt(android.support.v7.internal.widget.AdapterViewCompat$OnItemClickListener) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> a
    android.view.View makeView(int,boolean) -> c
    void setUpChild(android.view.View,boolean) -> a
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup access$100(android.support.v7.internal.widget.SpinnerCompat) -> a
android.support.v7.internal.widget.SpinnerCompat$1 -> android.support.v7.internal.widget.t:
    android.support.v7.internal.widget.SpinnerCompat$DropdownPopup val$popup -> a
    android.support.v7.internal.widget.SpinnerCompat this$0 -> b
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onForwardingStarted() -> b
android.support.v7.internal.widget.SpinnerCompat$2 -> android.support.v7.internal.widget.u:
    android.support.v7.internal.widget.SpinnerCompat this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.internal.widget.SpinnerCompat$DialogPopup -> android.support.v7.internal.widget.SpinnerCompat$a:
    android.app.AlertDialog mPopup -> b
    android.widget.ListAdapter mListAdapter -> c
    java.lang.CharSequence mPrompt -> d
    android.support.v7.internal.widget.SpinnerCompat this$0 -> a
    void dismiss() -> a
    boolean isShowing() -> b
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> c
    void onClick(android.content.DialogInterface,int) -> onClick
android.support.v7.internal.widget.SpinnerCompat$DropDownAdapter -> android.support.v7.internal.widget.SpinnerCompat$b:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
android.support.v7.internal.widget.SpinnerCompat$DropdownPopup -> android.support.v7.internal.widget.SpinnerCompat$c:
    java.lang.CharSequence mHintText -> c
    android.widget.ListAdapter mAdapter -> d
    android.support.v7.internal.widget.SpinnerCompat this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    android.widget.ListAdapter access$300(android.support.v7.internal.widget.SpinnerCompat$DropdownPopup) -> a
android.support.v7.internal.widget.SpinnerCompat$DropdownPopup$1 -> android.support.v7.internal.widget.v:
    android.support.v7.internal.widget.SpinnerCompat val$this$0 -> a
    android.support.v7.internal.widget.SpinnerCompat$DropdownPopup this$1 -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.internal.widget.SpinnerCompat$SavedState -> android.support.v7.internal.widget.SpinnerCompat$SavedState:
    boolean showDropdown -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.internal.widget.SpinnerCompat$SavedState$1 -> android.support.v7.internal.widget.w:
    android.support.v7.internal.widget.SpinnerCompat$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.internal.widget.SpinnerCompat$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.internal.widget.SpinnerCompat$SpinnerPopup -> android.support.v7.internal.widget.SpinnerCompat$d:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> c
    void dismiss() -> a
    boolean isShowing() -> b
    void setPromptText(java.lang.CharSequence) -> a
android.support.v7.internal.widget.TintCheckBox -> android.support.v7.internal.widget.TintCheckBox:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    void setButtonDrawable(int) -> setButtonDrawable
android.support.v7.internal.widget.TintCheckedTextView -> android.support.v7.internal.widget.TintCheckedTextView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    void setCheckMarkDrawable(int) -> setCheckMarkDrawable
android.support.v7.internal.widget.TintDrawableWrapper -> android.support.v7.internal.widget.x:
    android.content.res.ColorStateList mTintStateList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    int mCurrentColor -> c
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    boolean updateTint(int[]) -> a
android.support.v7.internal.widget.TintEditText -> android.support.v7.internal.widget.TintEditText:
    int[] TINT_ATTRS -> a
android.support.v7.internal.widget.TintImageView -> android.support.v7.internal.widget.TintImageView:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    void setImageResource(int) -> setImageResource
android.support.v7.internal.widget.TintManager -> android.support.v7.internal.widget.y:
    java.lang.String TAG -> b
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> a
    android.support.v7.internal.widget.TintManager$ColorFilterLruCache COLOR_FILTER_CACHE -> c
    int[] TINT_COLOR_CONTROL_NORMAL -> d
    int[] TINT_COLOR_CONTROL_ACTIVATED -> e
    int[] TINT_COLOR_BACKGROUND_MULTIPLY -> f
    int[] TINT_COLOR_CONTROL_STATE_LIST -> g
    int[] CONTAINERS_WITH_TINT_CHILDREN -> h
    android.content.Context mContext -> i
    android.content.res.Resources mResources -> j
    android.util.TypedValue mTypedValue -> k
    android.content.res.ColorStateList mDefaultColorStateList -> l
    android.content.res.ColorStateList mSwitchThumbStateList -> m
    android.content.res.ColorStateList mSwitchTrackStateList -> n
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    android.graphics.drawable.Drawable getDrawable(int) -> a
    void tintDrawable(int,android.graphics.drawable.Drawable) -> a
    boolean arrayContains(int[],int) -> a
    boolean isInTintList(int) -> d
    android.content.res.ColorStateList getDefaultColorStateList() -> a
    android.content.res.ColorStateList getSwitchTrackColorStateList() -> b
    android.content.res.ColorStateList getSwitchThumbColorStateList() -> c
    int getThemeAttrColor(int) -> b
    int getThemeAttrColor(int,float) -> a
    int getDisabledThemeAttrColor(int) -> c
android.support.v7.internal.widget.TintManager$ColorFilterLruCache -> android.support.v7.internal.widget.y$a:
    android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> a
    android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> a
    int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> b
android.support.v7.internal.widget.TintRadioButton -> android.support.v7.internal.widget.TintRadioButton:
    int[] TINT_ATTRS -> a
    android.support.v7.internal.widget.TintManager mTintManager -> b
    void setButtonDrawable(int) -> setButtonDrawable
android.support.v7.internal.widget.TintResources -> android.support.v7.internal.widget.z:
    android.support.v7.internal.widget.TintManager mTintManager -> a
    android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.v7.internal.widget.TintSpinner -> android.support.v7.internal.widget.TintSpinner:
    int[] TINT_ATTRS -> a
    void setPopupBackgroundDrawableV11(android.widget.Spinner,android.graphics.drawable.Drawable) -> a
android.support.v7.internal.widget.TintTypedArray -> android.support.v7.internal.widget.aa:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.support.v7.internal.widget.TintManager mTintManager -> c
    android.support.v7.internal.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> a
    android.graphics.drawable.Drawable getDrawable(int) -> a
    int length() -> a
    java.lang.CharSequence getText(int) -> b
    java.lang.String getString(int) -> c
    boolean getBoolean(int,boolean) -> a
    int getInt(int,int) -> a
    float getFloat(int,float) -> a
    int getInteger(int,int) -> b
    int getDimensionPixelOffset(int,int) -> c
    int getDimensionPixelSize(int,int) -> d
    int getLayoutDimension(int,int) -> e
    int getResourceId(int,int) -> f
    boolean hasValue(int) -> d
    void recycle() -> b
    android.support.v7.internal.widget.TintManager getTintManager() -> c
android.support.v7.internal.widget.ToolbarWidgetWrapper -> android.support.v7.internal.widget.ab:
    android.support.v7.widget.Toolbar mToolbar -> a
    int mDisplayOpts -> b
    android.view.View mTabView -> c
    android.view.View mCustomView -> d
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.graphics.drawable.Drawable mNavIcon -> g
    boolean mTitleSet -> h
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    android.support.v7.internal.app.WindowCallback mWindowCallback -> l
    boolean mMenuPrepared -> m
    android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter -> n
    int mNavigationMode -> o
    android.support.v7.internal.widget.TintManager mTintManager -> p
    int mDefaultNavigationContentDescription -> q
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> r
    void setDefaultNavigationContentDescription(int) -> e
    void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> b
    int detectDisplayOptions() -> r
    android.view.ViewGroup getViewGroup() -> a
    android.content.Context getContext() -> b
    boolean isSplit() -> c
    boolean hasExpandedActionView() -> d
    void collapseActionView() -> e
    void setWindowCallback(android.support.v7.internal.app.WindowCallback) -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    java.lang.CharSequence getTitle() -> f
    void setTitle(java.lang.CharSequence) -> b
    void setTitleInt(java.lang.CharSequence) -> e
    void setSubtitle(java.lang.CharSequence) -> c
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setIcon(int) -> a
    void setIcon(android.graphics.drawable.Drawable) -> a
    void setLogo(int) -> b
    void setLogo(android.graphics.drawable.Drawable) -> c
    void updateToolbarLogo() -> s
    boolean canShowOverflowMenu() -> i
    boolean isOverflowMenuShowing() -> j
    boolean isOverflowMenuShowPending() -> k
    boolean showOverflowMenu() -> l
    boolean hideOverflowMenu() -> m
    void setMenuPrepared() -> n
    void setMenu(android.view.Menu,android.support.v7.internal.view.menu.MenuPresenter$Callback) -> a
    void dismissPopupMenus() -> o
    int getDisplayOptions() -> p
    void setDisplayOptions(int) -> c
    void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView) -> a
    void setCollapsible(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    int getNavigationMode() -> q
    void setCustomView(android.view.View) -> a
    void animateToVisibility(int) -> d
    void setNavigationIcon(android.graphics.drawable.Drawable) -> d
    void setNavigationContentDescription(java.lang.CharSequence) -> d
    void setNavigationContentDescription(int) -> f
    void updateHomeAccessibility() -> t
    void updateNavigationIcon() -> u
    android.support.v7.widget.Toolbar access$000(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> a
    java.lang.CharSequence access$100(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> b
    android.support.v7.internal.app.WindowCallback access$200(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> c
    boolean access$300(android.support.v7.internal.widget.ToolbarWidgetWrapper) -> d
android.support.v7.internal.widget.ToolbarWidgetWrapper$1 -> android.support.v7.internal.widget.ac:
    android.support.v7.internal.view.menu.ActionMenuItem mNavItem -> a
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> b
    void onClick(android.view.View) -> onClick
android.support.v7.internal.widget.ToolbarWidgetWrapper$2 -> android.support.v7.internal.widget.ad:
    boolean mCanceled -> b
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.internal.widget.ToolbarWidgetWrapper$3 -> android.support.v7.internal.widget.ae:
    android.support.v7.internal.widget.ToolbarWidgetWrapper this$0 -> a
    void onAnimationStart(android.view.View) -> a
android.support.v7.internal.widget.ViewStubCompat -> android.support.v7.internal.widget.ViewStubCompat:
    int mLayoutResource -> a
    int mInflatedId -> b
    java.lang.ref.WeakReference mInflatedViewRef -> c
    android.view.LayoutInflater mInflater -> d
    android.support.v7.internal.widget.ViewStubCompat$OnInflateListener mInflateListener -> e
    int getInflatedId() -> getInflatedId
    void setInflatedId(int) -> setInflatedId
    int getLayoutResource() -> getLayoutResource
    void setLayoutResource(int) -> setLayoutResource
    void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    void onMeasure(int,int) -> onMeasure
    void draw(android.graphics.Canvas) -> draw
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setVisibility(int) -> setVisibility
    android.view.View inflate() -> a
    void setOnInflateListener(android.support.v7.internal.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
android.support.v7.internal.widget.ViewStubCompat$OnInflateListener -> android.support.v7.internal.widget.ViewStubCompat$a:
    void onInflate(android.support.v7.internal.widget.ViewStubCompat,android.view.View) -> a
android.support.v7.internal.widget.ViewUtils -> android.support.v7.internal.widget.af:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    boolean isLayoutRtl(android.view.View) -> a
    int combineMeasuredStates(int,int) -> a
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> a
    void makeOptionalFitsSystemWindows(android.view.View) -> b
android.support.v7.view.ActionMode -> android.support.v7.a.a:
    java.lang.Object mTag -> a
    boolean mTitleOptionalHint -> b
    void setTag(java.lang.Object) -> a
    java.lang.Object getTag() -> j
    void setTitle(java.lang.CharSequence) -> b
    void setTitle(int) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    void setSubtitle(int) -> b
    void setTitleOptionalHint(boolean) -> a
    boolean getTitleOptionalHint() -> k
    boolean isTitleOptional() -> h
    void setCustomView(android.view.View) -> a
    void invalidate() -> d
    void finish() -> c
    android.view.Menu getMenu() -> b
    java.lang.CharSequence getTitle() -> f
    java.lang.CharSequence getSubtitle() -> g
    android.view.View getCustomView() -> i
    android.view.MenuInflater getMenuInflater() -> a
android.support.v7.view.ActionMode$Callback -> android.support.v7.a.a$a:
    boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> a
    boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> b
    boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(android.support.v7.view.ActionMode) -> a
android.support.v7.view.CollapsibleActionView -> android.support.v7.a.b:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> y
    android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> g
    int mOpenSubMenuId -> h
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setReserveOverflow(boolean) -> c
    void setItemLimit(int) -> b
    void setExpandedActionViewsExclusive(boolean) -> d
    android.support.v7.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(android.support.v7.internal.view.menu.MenuItemImpl,android.support.v7.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(android.view.MenuItem) -> a
    boolean showOverflowMenu() -> c
    boolean hideOverflowMenu() -> d
    boolean dismissPopupMenus() -> e
    boolean hideSubMenus() -> f
    boolean isOverflowMenuShowing() -> g
    boolean isOverflowMenuShowPending() -> h
    boolean flagActionItems() -> b
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    void onSubUiVisibilityChanged(boolean) -> a
    void setMenuView(android.support.v7.widget.ActionMenuView) -> a
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$200(android.support.v7.widget.ActionMenuPresenter) -> a
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$300(android.support.v7.widget.ActionMenuPresenter) -> b
    android.support.v7.internal.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter) -> c
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup access$202(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$500(android.support.v7.widget.ActionMenuPresenter) -> d
    android.support.v7.internal.view.menu.MenuView access$600(android.support.v7.widget.ActionMenuPresenter) -> e
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$702(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu) -> a
    android.support.v7.internal.view.menu.MenuBuilder access$800(android.support.v7.widget.ActionMenuPresenter) -> f
    android.support.v7.internal.view.menu.MenuView access$900(android.support.v7.widget.ActionMenuPresenter) -> g
    android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable access$302(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable) -> a
    android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu access$700(android.support.v7.widget.ActionMenuPresenter) -> h
android.support.v7.widget.ActionMenuPresenter$1 -> android.support.v7.widget.ActionMenuPresenter$1:
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.ActionMenuPresenter$a:
    android.support.v7.internal.view.menu.SubMenuBuilder mSubMenu -> d
    android.support.v7.widget.ActionMenuPresenter this$0 -> c
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.ActionMenuPresenter$b:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.ActionMenuPresenter$c:
    android.support.v7.widget.ActionMenuPresenter$OverflowPopup mPopup -> b
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    void run() -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.ActionMenuPresenter$d:
    float[] mTempPts -> b
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean setFrame(int,int,int,int) -> setFrame
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.a:
    android.support.v7.widget.ActionMenuPresenter val$this$0 -> a
    android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> b
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.ActionMenuPresenter$e:
    android.support.v7.widget.ActionMenuPresenter this$0 -> c
    void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.ActionMenuPresenter$f:
    android.support.v7.widget.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
android.support.v7.widget.ActionMenuPresenter$SavedState -> android.support.v7.widget.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.ActionMenuPresenter$SavedState$1 -> android.support.v7.widget.b:
    android.support.v7.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.content.Context mContext -> b
    android.content.Context mPopupContext -> c
    int mPopupTheme -> d
    boolean mReserveOverflow -> e
    android.support.v7.widget.ActionMenuPresenter mPresenter -> f
    android.support.v7.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> g
    android.support.v7.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> h
    boolean mFormatItems -> i
    int mFormatItemsWidth -> j
    int mMinCellSize -> k
    int mGeneratedItemPadding -> l
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> m
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> c
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> a
    void setOverflowReserved(boolean) -> setOverflowReserved
    android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> b
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> c
    boolean invokeItem(android.support.v7.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(android.support.v7.internal.view.menu.MenuBuilder) -> a
    android.view.Menu getMenu() -> getMenu
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    android.support.v7.internal.view.menu.MenuBuilder peekMenu() -> d
    boolean showOverflowMenu() -> e
    boolean hideOverflowMenu() -> f
    boolean isOverflowMenuShowing() -> g
    boolean isOverflowMenuShowPending() -> h
    void dismissPopupMenus() -> i
    boolean hasSupportDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> b
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> j
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener access$200(android.support.v7.widget.ActionMenuView) -> a
    android.support.v7.internal.view.menu.MenuBuilder$Callback access$300(android.support.v7.widget.ActionMenuView) -> b
android.support.v7.widget.ActionMenuView$1 -> android.support.v7.widget.ActionMenuView$1:
android.support.v7.widget.ActionMenuView$ActionMenuChildView -> android.support.v7.widget.ActionMenuView$a:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.ActionMenuView$b:
    android.support.v7.widget.ActionMenuView this$0 -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.ActionMenuView$c:
    android.support.v7.widget.ActionMenuView this$0 -> a
    boolean onMenuItemSelected(android.support.v7.internal.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(android.support.v7.internal.view.menu.MenuBuilder) -> a
android.support.v7.widget.ActionMenuView$OnMenuItemClickListener -> android.support.v7.widget.ActionMenuView$d:
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.c:
    android.support.v4.util.Pools$Pool mUpdateOpPool -> g
    java.util.ArrayList mPendingUpdates -> a
    java.util.ArrayList mPostponedList -> b
    android.support.v7.widget.AdapterHelper$Callback mCallback -> c
    java.lang.Runnable mOnItemProcessedCallback -> d
    boolean mDisableRecycler -> e
    android.support.v7.widget.OpReorderer mOpReorderer -> f
    void reset() -> a
    void preProcess() -> b
    void consumePostponedUpdates() -> c
    void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp) -> c
    void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> d
    void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> e
    void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int) -> a
    int updatePositionWithPostponed(int,int) -> b
    boolean canFindInPreLayout(int) -> b
    void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp) -> f
    void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> g
    boolean hasPendingUpdates() -> d
    int findPositionOffset(int) -> a
    int findPositionOffset(int,int) -> a
    void consumeUpdatesInOnePass() -> e
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int) -> a
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void recycleUpdateOpsAndClearList(java.util.List) -> a
android.support.v7.widget.AdapterHelper$Callback -> android.support.v7.widget.c$a:
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> a
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> b
    void markViewHoldersUpdated(int,int) -> c
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    void offsetPositionsForAdd(int,int) -> d
    void offsetPositionsForMove(int,int) -> e
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.c$b:
    int cmd -> a
    int positionStart -> b
    int itemCount -> c
    java.lang.String cmdToString() -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v7.widget.ChildHelper -> android.support.v7.widget.d:
    android.support.v7.widget.ChildHelper$Callback mCallback -> a
    android.support.v7.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    void addView(android.view.View,boolean) -> a
    void addView(android.view.View,int,boolean) -> a
    int getOffset(int) -> e
    void removeView(android.view.View) -> a
    void removeViewAt(int) -> a
    android.view.View getChildAt(int) -> b
    void removeAllViewsUnfiltered() -> a
    android.view.View findHiddenNonRemovedView(int,int) -> a
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> a
    int getChildCount() -> b
    int getUnfilteredChildCount() -> c
    android.view.View getUnfilteredChildAt(int) -> c
    void detachViewFromParent(int) -> d
    int indexOfChild(android.view.View) -> b
    boolean isHidden(android.view.View) -> c
    void hide(android.view.View) -> d
    java.lang.String toString() -> toString
    boolean removeViewIfHidden(android.view.View) -> e
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.d$a:
    long mData -> a
    android.support.v7.widget.ChildHelper$Bucket next -> b
    void set(int) -> a
    void ensureNext() -> b
    void clear(int) -> b
    boolean get(int) -> c
    void reset() -> a
    void insert(int,boolean) -> a
    boolean remove(int) -> d
    int countOnesBefore(int) -> e
    java.lang.String toString() -> toString
android.support.v7.widget.ChildHelper$Callback -> android.support.v7.widget.d$b:
    int getChildCount() -> a
    void addView(android.view.View,int) -> a
    int indexOfChild(android.view.View) -> a
    void removeViewAt(int) -> a
    android.view.View getChildAt(int) -> b
    void removeAllViews() -> b
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void detachViewFromParent(int) -> c
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.e:
    java.util.ArrayList mPendingRemovals -> a
    java.util.ArrayList mPendingAdditions -> b
    java.util.ArrayList mPendingMoves -> c
    java.util.ArrayList mPendingChanges -> d
    java.util.ArrayList mAdditionsList -> e
    java.util.ArrayList mMovesList -> f
    java.util.ArrayList mChangesList -> g
    java.util.ArrayList mAddAnimations -> h
    java.util.ArrayList mMoveAnimations -> i
    java.util.ArrayList mRemoveAnimations -> j
    java.util.ArrayList mChangeAnimations -> k
    void runPendingAnimations() -> a
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> p
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> q
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> b
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> a
    void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> b
    boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    boolean isRunning() -> b
    void dispatchFinishedWhenDone() -> j
    void endAnimations() -> c
    void cancelAll(java.util.List) -> a
    void access$000(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    java.util.ArrayList access$100(android.support.v7.widget.DefaultItemAnimator) -> a
    void access$200(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> a
    java.util.ArrayList access$300(android.support.v7.widget.DefaultItemAnimator) -> b
    void access$400(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    java.util.ArrayList access$500(android.support.v7.widget.DefaultItemAnimator) -> c
    java.util.ArrayList access$700(android.support.v7.widget.DefaultItemAnimator) -> d
    void access$800(android.support.v7.widget.DefaultItemAnimator) -> e
    java.util.ArrayList access$900(android.support.v7.widget.DefaultItemAnimator) -> f
    java.util.ArrayList access$1100(android.support.v7.widget.DefaultItemAnimator) -> g
    java.util.ArrayList access$1300(android.support.v7.widget.DefaultItemAnimator) -> h
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.f:
    java.util.ArrayList val$moves -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.g:
    java.util.ArrayList val$changes -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.h:
    java.util.ArrayList val$additions -> a
    android.support.v7.widget.DefaultItemAnimator this$0 -> b
    void run() -> run
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.i:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.j:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void onAnimationStart(android.view.View) -> a
    void onAnimationCancel(android.view.View) -> c
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.k:
    android.support.v7.widget.RecyclerView$ViewHolder val$holder -> a
    int val$deltaX -> b
    int val$deltaY -> c
    android.support.v4.view.ViewPropertyAnimatorCompat val$animation -> d
    android.support.v7.widget.DefaultItemAnimator this$0 -> e
    void onAnimationStart(android.view.View) -> a
    void onAnimationCancel(android.view.View) -> c
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.l:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$oldViewAnim -> b
    android.support.v7.widget.DefaultItemAnimator this$0 -> c
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.m:
    android.support.v7.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.support.v4.view.ViewPropertyAnimatorCompat val$newViewAnimation -> b
    android.view.View val$newView -> c
    android.support.v7.widget.DefaultItemAnimator this$0 -> d
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.e$a:
    android.support.v7.widget.RecyclerView$ViewHolder oldHolder -> a
    android.support.v7.widget.RecyclerView$ViewHolder newHolder -> b
    int fromX -> c
    int fromY -> d
    int toX -> e
    int toY -> f
    java.lang.String toString() -> toString
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.e$b:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> a
    int fromX -> b
    int fromY -> c
    int toX -> d
    int toY -> e
android.support.v7.widget.DefaultItemAnimator$VpaListenerAdapter -> android.support.v7.widget.e$c:
    void onAnimationStart(android.view.View) -> a
    void onAnimationEnd(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
android.support.v7.widget.GridLayout -> android.support.v7.widget.GridLayout:
    android.util.Printer LOG_PRINTER -> a
    android.util.Printer NO_PRINTER -> b
    int ORIENTATION -> u
    int ROW_COUNT -> v
    int COLUMN_COUNT -> w
    int USE_DEFAULT_MARGINS -> x
    int ALIGNMENT_MODE -> y
    int ROW_ORDER_PRESERVED -> z
    int COLUMN_ORDER_PRESERVED -> A
    android.support.v7.widget.GridLayout$Axis mHorizontalAxis -> c
    android.support.v7.widget.GridLayout$Axis mVerticalAxis -> d
    int mOrientation -> e
    boolean mUseDefaultMargins -> f
    int mAlignmentMode -> g
    int mDefaultGap -> h
    int mLastLayoutParamsHashCode -> i
    android.util.Printer mPrinter -> j
    android.support.v7.widget.GridLayout$Alignment UNDEFINED_ALIGNMENT -> k
    android.support.v7.widget.GridLayout$Alignment LEADING -> B
    android.support.v7.widget.GridLayout$Alignment TRAILING -> C
    android.support.v7.widget.GridLayout$Alignment TOP -> l
    android.support.v7.widget.GridLayout$Alignment BOTTOM -> m
    android.support.v7.widget.GridLayout$Alignment START -> n
    android.support.v7.widget.GridLayout$Alignment END -> o
    android.support.v7.widget.GridLayout$Alignment LEFT -> p
    android.support.v7.widget.GridLayout$Alignment RIGHT -> q
    android.support.v7.widget.GridLayout$Alignment CENTER -> r
    android.support.v7.widget.GridLayout$Alignment BASELINE -> s
    android.support.v7.widget.GridLayout$Alignment FILL -> t
    int getOrientation() -> getOrientation
    void setOrientation(int) -> setOrientation
    int getRowCount() -> getRowCount
    void setRowCount(int) -> setRowCount
    int getColumnCount() -> getColumnCount
    void setColumnCount(int) -> setColumnCount
    boolean getUseDefaultMargins() -> getUseDefaultMargins
    void setUseDefaultMargins(boolean) -> setUseDefaultMargins
    int getAlignmentMode() -> getAlignmentMode
    void setAlignmentMode(int) -> setAlignmentMode
    void setRowOrderPreserved(boolean) -> setRowOrderPreserved
    void setColumnOrderPreserved(boolean) -> setColumnOrderPreserved
    android.util.Printer getPrinter() -> getPrinter
    void setPrinter(android.util.Printer) -> setPrinter
    int max2(int[],int) -> a
    java.lang.Object[] append(java.lang.Object[],java.lang.Object[]) -> a
    android.support.v7.widget.GridLayout$Alignment getAlignment(int,boolean) -> a
    int getDefaultMargin(android.view.View,boolean,boolean) -> b
    int getDefaultMargin(android.view.View,boolean,boolean,boolean) -> a
    int getDefaultMargin(android.view.View,android.support.v7.widget.GridLayout$LayoutParams,boolean,boolean) -> a
    int getMargin1(android.view.View,boolean,boolean) -> a
    boolean isLayoutRtlCompat() -> b
    int getMargin(android.view.View,boolean,boolean) -> c
    int getTotalMargin(android.view.View,boolean) -> b
    boolean fits(int[],int,int,int) -> a
    void procrusteanFill(int[],int,int,int) -> b
    void setCellGroup(android.support.v7.widget.GridLayout$LayoutParams,int,int,int,int) -> a
    int clip(android.support.v7.widget.GridLayout$Interval,boolean,int) -> a
    void validateLayoutParams() -> c
    void invalidateStructure() -> d
    void invalidateValues() -> e
    android.support.v7.widget.GridLayout$LayoutParams getLayoutParams(android.view.View) -> a
    void handleInvalidParams(java.lang.String) -> b
    void checkLayoutParams(android.support.v7.widget.GridLayout$LayoutParams,boolean) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.widget.GridLayout$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.widget.GridLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.widget.GridLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    int computeLayoutParamsHashCode() -> f
    void consistencyCheck() -> g
    void measureChildWithMargins2(android.view.View,int,int,int,int) -> a
    void measureChildrenWithMargins(int,int,boolean) -> a
    int adjust(int,int) -> a
    void onMeasure(int,int) -> onMeasure
    int getMeasurement(android.view.View,boolean) -> c
    int getMeasurementIncludingMargin(android.view.View,boolean) -> a
    void requestLayout() -> requestLayout
    android.support.v7.widget.GridLayout$Alignment getAlignment(android.support.v7.widget.GridLayout$Alignment,boolean) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.support.v7.widget.GridLayout$Spec spec(int,int,android.support.v7.widget.GridLayout$Alignment,float) -> a
    android.support.v7.widget.GridLayout$Spec spec(int,int,android.support.v7.widget.GridLayout$Alignment) -> a
    android.support.v7.widget.GridLayout$Spec spec(int,int) -> b
    android.support.v7.widget.GridLayout$Spec spec(int) -> a
    android.support.v7.widget.GridLayout$Alignment createSwitchingAlignment(android.support.v7.widget.GridLayout$Alignment,android.support.v7.widget.GridLayout$Alignment) -> a
    boolean canStretch(int) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$200(java.lang.String) -> a
    int access$300(android.support.v7.widget.GridLayout,android.view.View,boolean) -> a
android.support.v7.widget.GridLayout$1 -> android.support.v7.widget.n:
    void println(java.lang.String) -> println
android.support.v7.widget.GridLayout$2 -> android.support.v7.widget.o:
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
android.support.v7.widget.GridLayout$3 -> android.support.v7.widget.p:
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
android.support.v7.widget.GridLayout$4 -> android.support.v7.widget.q:
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
android.support.v7.widget.GridLayout$5 -> android.support.v7.widget.r:
    android.support.v7.widget.GridLayout$Alignment val$ltr -> a
    android.support.v7.widget.GridLayout$Alignment val$rtl -> b
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
android.support.v7.widget.GridLayout$6 -> android.support.v7.widget.s:
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
android.support.v7.widget.GridLayout$7 -> android.support.v7.widget.t:
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
    android.support.v7.widget.GridLayout$Bounds getBounds() -> a
android.support.v7.widget.GridLayout$7$1 -> android.support.v7.widget.u:
    int size -> e
    android.support.v7.widget.GridLayout$7 this$0 -> a
    void reset() -> a
    void include(int,int) -> a
    int size(boolean) -> a
    int getOffset(android.support.v7.widget.GridLayout,android.view.View,android.support.v7.widget.GridLayout$Alignment,int,boolean) -> a
android.support.v7.widget.GridLayout$8 -> android.support.v7.widget.v:
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
    int getSizeInCell(android.view.View,int,int) -> b
android.support.v7.widget.GridLayout$Alignment -> android.support.v7.widget.GridLayout$a:
    int getGravityOffset(android.view.View,int) -> a
    int getAlignmentValue(android.view.View,int,int) -> a
    int getSizeInCell(android.view.View,int,int) -> b
    android.support.v7.widget.GridLayout$Bounds getBounds() -> a
android.support.v7.widget.GridLayout$Arc -> android.support.v7.widget.GridLayout$b:
    android.support.v7.widget.GridLayout$Interval span -> a
    android.support.v7.widget.GridLayout$MutableInt value -> b
    boolean valid -> c
    java.lang.String toString() -> toString
android.support.v7.widget.GridLayout$Assoc -> android.support.v7.widget.GridLayout$c:
    java.lang.Class keyType -> a
    java.lang.Class valueType -> b
    android.support.v7.widget.GridLayout$Assoc of(java.lang.Class,java.lang.Class) -> a
    void put(java.lang.Object,java.lang.Object) -> a
    android.support.v7.widget.GridLayout$PackedMap pack() -> a
android.support.v7.widget.GridLayout$Axis -> android.support.v7.widget.GridLayout$d:
    boolean horizontal -> a
    int definedCount -> b
    int maxIndex -> x
    android.support.v7.widget.GridLayout$PackedMap groupBounds -> c
    boolean groupBoundsValid -> d
    android.support.v7.widget.GridLayout$PackedMap forwardLinks -> e
    boolean forwardLinksValid -> f
    android.support.v7.widget.GridLayout$PackedMap backwardLinks -> g
    boolean backwardLinksValid -> h
    int[] leadingMargins -> i
    boolean leadingMarginsValid -> j
    int[] trailingMargins -> k
    boolean trailingMarginsValid -> l
    android.support.v7.widget.GridLayout$Arc[] arcs -> m
    boolean arcsValid -> n
    int[] locations -> o
    boolean locationsValid -> p
    boolean hasWeights -> q
    boolean hasWeightsValid -> r
    int[] originalMeasurements -> s
    int[] deltas -> t
    boolean orderPreserved -> u
    android.support.v7.widget.GridLayout$MutableInt parentMin -> y
    android.support.v7.widget.GridLayout$MutableInt parentMax -> z
    boolean $assertionsDisabled -> v
    android.support.v7.widget.GridLayout this$0 -> w
    int calculateMaxIndex() -> k
    int getMaxIndex() -> l
    int getCount() -> a
    void setCount(int) -> a
    void setOrderPreserved(boolean) -> a
    android.support.v7.widget.GridLayout$PackedMap createGroupBounds() -> m
    void computeGroupBounds() -> n
    android.support.v7.widget.GridLayout$PackedMap getGroupBounds() -> b
    android.support.v7.widget.GridLayout$PackedMap createLinks(boolean) -> b
    void computeLinks(android.support.v7.widget.GridLayout$PackedMap,boolean) -> a
    android.support.v7.widget.GridLayout$PackedMap getForwardLinks() -> o
    android.support.v7.widget.GridLayout$PackedMap getBackwardLinks() -> p
    void include(java.util.List,android.support.v7.widget.GridLayout$Interval,android.support.v7.widget.GridLayout$MutableInt,boolean) -> a
    void include(java.util.List,android.support.v7.widget.GridLayout$Interval,android.support.v7.widget.GridLayout$MutableInt) -> a
    android.support.v7.widget.GridLayout$Arc[][] groupArcsByFirstVertex(android.support.v7.widget.GridLayout$Arc[]) -> a
    android.support.v7.widget.GridLayout$Arc[] topologicalSort(android.support.v7.widget.GridLayout$Arc[]) -> b
    android.support.v7.widget.GridLayout$Arc[] topologicalSort(java.util.List) -> a
    void addComponentSizes(java.util.List,android.support.v7.widget.GridLayout$PackedMap) -> a
    android.support.v7.widget.GridLayout$Arc[] createArcs() -> q
    void computeArcs() -> r
    android.support.v7.widget.GridLayout$Arc[] getArcs() -> c
    boolean relax(int[],android.support.v7.widget.GridLayout$Arc) -> a
    void init(int[]) -> a
    java.lang.String arcsToString(java.util.List) -> b
    void logError(java.lang.String,android.support.v7.widget.GridLayout$Arc[],boolean[]) -> a
    void solve(android.support.v7.widget.GridLayout$Arc[],int[]) -> a
    void computeMargins(boolean) -> c
    int[] getLeadingMargins() -> d
    int[] getTrailingMargins() -> e
    void solve(int[]) -> b
    boolean computeHasWeights() -> s
    boolean hasWeights() -> t
    int[] getOriginalMeasurements() -> f
    void recordOriginalMeasurement(int) -> d
    int[] getDeltas() -> g
    void shareOutDelta() -> u
    void solveAndDistributeSpace(int[]) -> c
    void computeLocations(int[]) -> d
    int[] getLocations() -> h
    int size(int[]) -> e
    void setParentConstraints(int,int) -> a
    int getMeasure(int,int) -> b
    int getMeasure(int) -> b
    void layout(int) -> c
    void invalidateStructure() -> i
    void invalidateValues() -> j
    void access$100(android.support.v7.widget.GridLayout$Axis,int) -> a
android.support.v7.widget.GridLayout$Axis$1 -> android.support.v7.widget.w:
    android.support.v7.widget.GridLayout$Arc[] result -> a
    int cursor -> b
    android.support.v7.widget.GridLayout$Arc[][] arcsByVertex -> c
    int[] visited -> d
    boolean $assertionsDisabled -> e
    android.support.v7.widget.GridLayout$Arc[] val$arcs -> f
    android.support.v7.widget.GridLayout$Axis this$1 -> g
    void walk(int) -> a
    android.support.v7.widget.GridLayout$Arc[] sort() -> a
android.support.v7.widget.GridLayout$Bounds -> android.support.v7.widget.GridLayout$e:
    int before -> b
    int after -> c
    int flexibility -> d
    void reset() -> a
    void include(int,int) -> a
    int size(boolean) -> a
    int getOffset(android.support.v7.widget.GridLayout,android.view.View,android.support.v7.widget.GridLayout$Alignment,int,boolean) -> a
    void include(android.support.v7.widget.GridLayout,android.view.View,android.support.v7.widget.GridLayout$Spec,android.support.v7.widget.GridLayout$Axis,int) -> a
    java.lang.String toString() -> toString
android.support.v7.widget.GridLayout$Interval -> android.support.v7.widget.GridLayout$f:
    int min -> a
    int max -> b
    int size() -> a
    android.support.v7.widget.GridLayout$Interval inverse() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v7.widget.GridLayout$LayoutParams -> android.support.v7.widget.GridLayout$LayoutParams:
    android.support.v7.widget.GridLayout$Interval DEFAULT_SPAN -> c
    int DEFAULT_SPAN_SIZE -> d
    int MARGIN -> e
    int LEFT_MARGIN -> f
    int TOP_MARGIN -> g
    int RIGHT_MARGIN -> h
    int BOTTOM_MARGIN -> i
    int COLUMN -> j
    int COLUMN_SPAN -> k
    int COLUMN_WEIGHT -> l
    int ROW -> m
    int ROW_SPAN -> n
    int ROW_WEIGHT -> o
    int GRAVITY -> p
    android.support.v7.widget.GridLayout$Spec rowSpec -> a
    android.support.v7.widget.GridLayout$Spec columnSpec -> b
    void reInitSuper(android.content.Context,android.util.AttributeSet) -> a
    void init(android.content.Context,android.util.AttributeSet) -> b
    void setBaseAttributes(android.content.res.TypedArray,int,int) -> setBaseAttributes
    void setRowSpecSpan(android.support.v7.widget.GridLayout$Interval) -> a
    void setColumnSpecSpan(android.support.v7.widget.GridLayout$Interval) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v7.widget.GridLayout$MutableInt -> android.support.v7.widget.GridLayout$g:
    int value -> a
    void reset() -> a
    java.lang.String toString() -> toString
android.support.v7.widget.GridLayout$PackedMap -> android.support.v7.widget.GridLayout$h:
    int[] index -> a
    java.lang.Object[] keys -> b
    java.lang.Object[] values -> c
    java.lang.Object getValue(int) -> a
    int[] createIndex(java.lang.Object[]) -> a
    java.lang.Object[] compact(java.lang.Object[],int[]) -> a
android.support.v7.widget.GridLayout$Spec -> android.support.v7.widget.GridLayout$i:
    android.support.v7.widget.GridLayout$Spec UNDEFINED -> a
    boolean startDefined -> b
    android.support.v7.widget.GridLayout$Interval span -> c
    android.support.v7.widget.GridLayout$Alignment alignment -> d
    float weight -> e
    android.support.v7.widget.GridLayout$Spec copyWriteSpan(android.support.v7.widget.GridLayout$Interval) -> a
    int getFlexibility() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    int MAIN_DIR_SPEC -> a
    boolean mPendingSpanCountChange -> b
    int mSpanCount -> c
    int[] mCachedBorders -> d
    android.view.View[] mSet -> e
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> f
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> g
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> h
    android.graphics.Rect mDecorInsets -> i
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void clearPreLayoutSpanMappingCache() -> B
    void cachePreLayoutSpanMapping() -> C
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> a
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> a
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> c
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> a
    void updateMeasurements() -> D
    void calculateItemBorders(int) -> h
    void onAnchorReady(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    void ensureAnchorIsInFirstSpan(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    android.view.View findReferenceChild(int,int,int) -> a
    int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> a
    int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> b
    int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> c
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> a
    int getMainDirSpec(int) -> i
    void measureChildWithDecorationsAndMargin(android.view.View,int,int) -> b
    int updateSpecWithExtra(int,int,int) -> b
    void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean) -> a
    boolean supportsPredictiveItemAnimations() -> b
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.GridLayoutManager$LayoutParams:
    int mSpanIndex -> e
    int mSpanSize -> f
    int getSpanIndex() -> a
    int getSpanSize() -> b
    int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams) -> a
    int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams) -> b
    int access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> a
    int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int) -> b
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.GridLayoutManager$a:
    android.util.SparseIntArray mSpanIndexCache -> a
    boolean mCacheSpanIndices -> b
    int getSpanSize(int) -> a
    void invalidateSpanIndexCache() -> a
    int getCachedSpanIndex(int,int) -> a
    int getSpanIndex(int,int) -> b
    int findReferenceIndexFromCache(int) -> b
    int getSpanGroupIndex(int,int) -> c
android.support.v7.widget.LayoutState -> android.support.v7.widget.x:
    int mAvailable -> a
    int mCurrentPosition -> b
    int mItemDirection -> c
    int mLayoutDirection -> d
    int mExtra -> e
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> a
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> a
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.LinearLayoutCompat:
    boolean mBaselineAligned -> a
    int mBaselineAlignedChildIndex -> b
    int mBaselineChildTop -> c
    int mOrientation -> d
    int mGravity -> e
    int mTotalLength -> f
    float mWeightSum -> g
    boolean mUseLargestChild -> h
    int[] mMaxAscent -> i
    int[] mMaxDescent -> j
    android.graphics.drawable.Drawable mDivider -> k
    int mDividerWidth -> l
    int mDividerHeight -> m
    int mShowDividers -> n
    int mDividerPadding -> o
    void setShowDividers(int) -> setShowDividers
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    int getShowDividers() -> getShowDividers
    android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    void setBaselineAligned(boolean) -> setBaselineAligned
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    int getBaseline() -> getBaseline
    int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    android.view.View getVirtualChildAt(int) -> b
    int getVirtualChildCount() -> getVirtualChildCount
    float getWeightSum() -> getWeightSum
    void setWeightSum(float) -> setWeightSum
    void onMeasure(int,int) -> onMeasure
    boolean hasDividerBeforeChildAt(int) -> c
    void measureVertical(int,int) -> a
    void forceUniformWidth(int,int) -> c
    void measureHorizontal(int,int) -> b
    void forceUniformHeight(int,int) -> d
    int getChildrenSkipCount(android.view.View,int) -> a
    int measureNullChild(int) -> d
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> a
    int getLocationOffset(android.view.View) -> a
    int getNextLocationOffset(android.view.View) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layoutVertical(int,int,int,int) -> a
    void layoutHorizontal(int,int,int,int) -> b
    void setChildFrame(android.view.View,int,int,int,int) -> a
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void setGravity(int) -> setGravity
    void setHorizontalGravity(int) -> setHorizontalGravity
    void setVerticalGravity(int) -> setVerticalGravity
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> b
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> j
    android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> b
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
android.support.v7.widget.LinearLayoutCompat$DividerMode -> android.support.v7.widget.LinearLayoutCompat$DividerMode:
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.LinearLayoutCompat$LayoutParams:
    float weight -> g
    int gravity -> h
android.support.v7.widget.LinearLayoutCompat$OrientationMode -> android.support.v7.widget.LinearLayoutCompat$OrientationMode:
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    int mOrientation -> j
    android.support.v7.widget.LinearLayoutManager$LayoutState mLayoutState -> a
    android.support.v7.widget.OrientationHelper mOrientationHelper -> k
    boolean mLastStackFromEnd -> b
    boolean mReverseLayout -> c
    boolean mShouldReverseLayout -> l
    boolean mStackFromEnd -> d
    boolean mSmoothScrollbarEnabled -> e
    int mPendingScrollPosition -> m
    int mPendingScrollPositionOffset -> n
    boolean mRecycleChildrenOnDetach -> f
    android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState -> o
    android.support.v7.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> p
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    boolean canScrollHorizontally() -> d
    boolean canScrollVertically() -> e
    int getOrientation() -> f
    void resolveShouldLayoutReverse() -> B
    android.view.View findViewByPosition(int) -> a
    int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> a
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void onAnchorReady(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> b
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> b
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> c
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> d
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> a
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> b
    void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> a
    void updateLayoutStateToFillEnd(int,int) -> c
    void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> b
    void updateLayoutStateToFillStart(int,int) -> d
    boolean isLayoutRTL() -> g
    void ensureLayoutState() -> h
    android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState() -> i
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> b
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> c
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> d
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> e
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> f
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> g
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> h
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> i
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> j
    void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> a
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> a
    void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> a
    void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> b
    void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState) -> a
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean) -> a
    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> a
    int convertFocusDirectionToLayoutDirection(int) -> h
    android.view.View getChildClosestToStart() -> C
    android.view.View getChildClosestToEnd() -> D
    android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> a
    android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> b
    android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$State) -> k
    android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$State) -> l
    android.view.View findFirstReferenceChild(int) -> i
    android.view.View findLastReferenceChild(int) -> j
    android.view.View findReferenceChild(int,int,int) -> a
    int findFirstVisibleItemPosition() -> j
    int findLastVisibleItemPosition() -> k
    android.view.View findOneVisibleChild(int,int,boolean,boolean) -> a
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    boolean supportsPredictiveItemAnimations() -> b
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.LinearLayoutManager$a:
    int mPosition -> a
    int mCoordinate -> b
    boolean mLayoutFromEnd -> c
    android.support.v7.widget.LinearLayoutManager this$0 -> d
    void reset() -> a
    void assignCoordinateFromPadding() -> b
    java.lang.String toString() -> toString
    boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State) -> a
    void assignFromViewAndKeepVisibleRect(android.view.View) -> a
    void assignFromView(android.view.View) -> b
    boolean access$000(android.support.v7.widget.LinearLayoutManager$AnchorInfo,android.view.View,android.support.v7.widget.RecyclerView$State) -> a
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.LinearLayoutManager$b:
    int mConsumed -> a
    boolean mFinished -> b
    boolean mIgnoreConsumed -> c
    boolean mFocusable -> d
    void resetInternal() -> a
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.LinearLayoutManager$c:
    boolean mRecycle -> a
    int mOffset -> b
    int mAvailable -> c
    int mCurrentPosition -> d
    int mItemDirection -> e
    int mLayoutDirection -> f
    int mScrollingOffset -> g
    int mExtra -> h
    boolean mIsPreLayout -> i
    int mLastScrollDelta -> j
    java.util.List mScrapList -> k
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> a
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> a
    android.view.View nextViewFromScrapList() -> b
    void assignPositionFromScrapList() -> a
    void assignPositionFromScrapList(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    android.support.v7.widget.RecyclerView$ViewHolder nextViewHolderInLimitedList(android.support.v7.widget.RecyclerView$ViewHolder) -> b
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.LinearLayoutManager$SavedState:
    int mAnchorPosition -> a
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean hasValidAnchor() -> a
    void invalidateAnchor() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.y:
    android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.ListPopupWindow:
    java.lang.reflect.Method sClipToWindowEnabledMethod -> a
    android.content.Context mContext -> c
    android.widget.PopupWindow mPopup -> d
    android.widget.ListAdapter mAdapter -> e
    android.support.v7.widget.ListPopupWindow$DropDownListView mDropDownList -> f
    int mDropDownHeight -> g
    int mDropDownWidth -> h
    int mDropDownHorizontalOffset -> i
    int mDropDownVerticalOffset -> j
    boolean mDropDownVerticalOffsetSet -> k
    int mDropDownGravity -> l
    boolean mDropDownAlwaysVisible -> m
    boolean mForceIgnoreOutsideTouch -> n
    int mListItemExpandMaximum -> b
    android.view.View mPromptView -> o
    int mPromptPosition -> p
    android.database.DataSetObserver mObserver -> q
    android.view.View mDropDownAnchorView -> r
    android.graphics.drawable.Drawable mDropDownListHighlight -> s
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> t
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> u
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> v
    android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> w
    android.support.v7.widget.ListPopupWindow$PopupScrollListener mScrollListener -> x
    android.support.v7.widget.ListPopupWindow$ListSelectorHider mHideSelector -> y
    java.lang.Runnable mShowDropDownRunnable -> z
    android.os.Handler mHandler -> A
    android.graphics.Rect mTempRect -> B
    boolean mModal -> C
    int mLayoutDirection -> D
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    android.view.View getAnchorView() -> d
    void setAnchorView(android.view.View) -> a
    void setDropDownGravity(int) -> b
    void setWidth(int) -> c
    void setContentWidth(int) -> d
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> c
    void dismiss() -> a
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void removePromptView() -> h
    void setInputMethodMode(int) -> e
    void clearListSelection() -> e
    boolean isShowing() -> b
    boolean isInputMethodNotNeeded() -> f
    android.widget.ListView getListView() -> g
    int buildDropDown() -> i
    void setPopupClipToScreenEnabled(boolean) -> b
    android.support.v7.widget.ListPopupWindow$DropDownListView access$600(android.support.v7.widget.ListPopupWindow) -> a
    android.widget.PopupWindow access$1100(android.support.v7.widget.ListPopupWindow) -> b
    android.support.v7.widget.ListPopupWindow$ResizePopupRunnable access$1200(android.support.v7.widget.ListPopupWindow) -> c
    android.os.Handler access$1300(android.support.v7.widget.ListPopupWindow) -> d
android.support.v7.widget.ListPopupWindow$1 -> android.support.v7.widget.z:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    android.support.v7.widget.ListPopupWindow getPopup() -> a
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.aa:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.ab:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.ListPopupWindow$DropDownListView -> android.support.v7.widget.ListPopupWindow$a:
    boolean mListSelectionHidden -> f
    boolean mHijackFocus -> g
    boolean mDrawsInPressedState -> h
    android.support.v4.view.ViewPropertyAnimatorCompat mClickAnimation -> i
    android.support.v4.widget.ListViewAutoScrollHelper mScrollHelper -> j
    boolean onForwardedEvent(android.view.MotionEvent,int) -> a
    void clickPressedItem(android.view.View,int) -> a
    void clearPressedItem() -> d
    void setPressedItem(android.view.View,int,float,float) -> a
    boolean touchModeDrawsInPressedStateCompat() -> c
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    boolean access$502(android.support.v7.widget.ListPopupWindow$DropDownListView,boolean) -> a
android.support.v7.widget.ListPopupWindow$ForwardingListener -> android.support.v7.widget.ListPopupWindow$b:
    float mScaledTouchSlop -> a
    int mTapTimeout -> b
    int mLongPressTimeout -> c
    android.view.View mSrc -> d
    java.lang.Runnable mDisallowIntercept -> e
    java.lang.Runnable mTriggerLongPress -> f
    boolean mForwarding -> g
    boolean mWasLongPress -> h
    int mActivePointerId -> i
    int[] mTmpLocation -> j
    android.support.v7.widget.ListPopupWindow getPopup() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onForwardingStarted() -> b
    boolean onForwardingStopped() -> c
    boolean onTouchObserved(android.view.MotionEvent) -> a
    void clearCallbacks() -> d
    void onLongPress() -> e
    boolean onTouchForwarded(android.view.MotionEvent) -> b
    boolean pointInView(android.view.View,float,float,float) -> a
    boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> a
    boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> b
    android.view.View access$900(android.support.v7.widget.ListPopupWindow$ForwardingListener) -> a
    void access$1000(android.support.v7.widget.ListPopupWindow$ForwardingListener) -> b
android.support.v7.widget.ListPopupWindow$ForwardingListener$DisallowIntercept -> android.support.v7.widget.ListPopupWindow$b$a:
    android.support.v7.widget.ListPopupWindow$ForwardingListener this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$ForwardingListener$TriggerLongPress -> android.support.v7.widget.ListPopupWindow$b$b:
    android.support.v7.widget.ListPopupWindow$ForwardingListener this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.ListPopupWindow$c:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.ListPopupWindow$d:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.ListPopupWindow$e:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.ListPopupWindow$f:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.ListPopupWindow$g:
    android.support.v7.widget.ListPopupWindow this$0 -> a
    void run() -> run
android.support.v7.widget.OpReorderer -> android.support.v7.widget.ac:
    android.support.v7.widget.OpReorderer$Callback mCallback -> a
    void reorderOps(java.util.List) -> a
    void swapMoveOp(java.util.List,int,int) -> a
    void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> c
    void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    int getLastMoveOutOfOrder(java.util.List) -> b
android.support.v7.widget.OpReorderer$Callback -> android.support.v7.widget.ac$a:
    android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int) -> a
    void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.ad:
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> a
    int mLastTotalSpace -> b
    void onLayoutComplete() -> a
    int getTotalSpaceChange() -> b
    int getDecoratedStart(android.view.View) -> a
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getStartAfterPadding() -> c
    int getEndAfterPadding() -> d
    int getEnd() -> e
    void offsetChildren(int) -> a
    int getTotalSpace() -> f
    int getEndPadding() -> g
    android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int) -> a
    android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> a
    android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> b
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.ae:
    int getEndAfterPadding() -> d
    int getEnd() -> e
    void offsetChildren(int) -> a
    int getStartAfterPadding() -> c
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedStart(android.view.View) -> a
    int getTotalSpace() -> f
    int getEndPadding() -> g
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.af:
    int getEndAfterPadding() -> d
    int getEnd() -> e
    void offsetChildren(int) -> a
    int getStartAfterPadding() -> c
    int getDecoratedMeasurement(android.view.View) -> c
    int getDecoratedMeasurementInOther(android.view.View) -> d
    int getDecoratedEnd(android.view.View) -> b
    int getDecoratedStart(android.view.View) -> a
    int getTotalSpace() -> f
    int getEndPadding() -> g
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> h
    android.support.v7.widget.RecyclerView$RecyclerViewDataObserver mObserver -> i
    android.support.v7.widget.RecyclerView$Recycler mRecycler -> a
    android.support.v7.widget.RecyclerView$SavedState mPendingSavedState -> j
    android.support.v7.widget.AdapterHelper mAdapterHelper -> b
    android.support.v7.widget.ChildHelper mChildHelper -> c
    boolean mClipToPadding -> k
    java.lang.Runnable mUpdateChildViewsRunnable -> l
    android.graphics.Rect mTempRect -> m
    android.support.v7.widget.RecyclerView$Adapter mAdapter -> n
    android.support.v7.widget.RecyclerView$LayoutManager mLayout -> o
    android.support.v7.widget.RecyclerView$RecyclerListener mRecyclerListener -> p
    java.util.ArrayList mItemDecorations -> q
    java.util.ArrayList mOnItemTouchListeners -> r
    android.support.v7.widget.RecyclerView$OnItemTouchListener mActiveOnItemTouchListener -> s
    boolean mIsAttached -> t
    boolean mHasFixedSize -> u
    boolean mFirstLayoutComplete -> v
    boolean mEatRequestLayout -> w
    boolean mLayoutRequestEaten -> x
    int mEatenAccessibilityChangeFlags -> y
    boolean mAdapterUpdateDuringMeasure -> z
    boolean mPostUpdatesOnAnimation -> A
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> B
    boolean mDataSetHasChangedAfterLayout -> C
    int mLayoutOrScrollCounter -> D
    android.support.v4.widget.EdgeEffectCompat mLeftGlow -> E
    android.support.v4.widget.EdgeEffectCompat mTopGlow -> F
    android.support.v4.widget.EdgeEffectCompat mRightGlow -> G
    android.support.v4.widget.EdgeEffectCompat mBottomGlow -> H
    android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator -> d
    int mScrollState -> I
    int mScrollPointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mInitialTouchX -> L
    int mInitialTouchY -> M
    int mLastTouchX -> N
    int mLastTouchY -> O
    int mTouchSlop -> P
    int mMinFlingVelocity -> Q
    int mMaxFlingVelocity -> R
    float mScrollFactor -> S
    android.support.v7.widget.RecyclerView$ViewFlinger mViewFlinger -> T
    android.support.v7.widget.RecyclerView$State mState -> e
    android.support.v7.widget.RecyclerView$OnScrollListener mScrollListener -> U
    java.util.List mScrollListeners -> V
    boolean mItemsAddedOrRemoved -> f
    boolean mItemsChanged -> g
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> W
    boolean mPostedAnimatorRunner -> aa
    android.support.v7.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> ab
    int[] mMinMaxLayoutPositions -> ac
    java.lang.Runnable mItemAnimatorRunner -> ad
    android.view.animation.Interpolator sQuinticInterpolator -> ae
    android.support.v7.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    void initChildrenHelper() -> s
    void initAdapterManager() -> a
    void setHasFixedSize(boolean) -> setHasFixedSize
    void setClipToPadding(boolean) -> setClipToPadding
    void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean) -> a
    android.support.v7.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    int getBaseline() -> getBaseline
    void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager) -> setLayoutManager
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    boolean removeAnimatingView(android.view.View) -> g
    android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    void setItemViewCacheSize(int) -> setItemViewCacheSize
    int getScrollState() -> getScrollState
    void setScrollState(int) -> setScrollState
    void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    void scrollTo(int,int) -> scrollTo
    void scrollBy(int,int) -> scrollBy
    void consumePendingUpdateOperations() -> t
    boolean scrollByInternal(int,int,boolean,int,int) -> a
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void eatRequestLayout() -> b
    void resumeRequestLayout(boolean) -> a
    void smoothScrollBy(int,int) -> a
    boolean fling(int,int) -> b
    void stopScroll() -> c
    void stopScrollersInternal() -> u
    void pullGlows(int,int,int,int) -> a
    void releaseGlows() -> v
    void considerReleasingGlowsOnScroll(int,int) -> i
    void absorbGlows(int,int) -> c
    void ensureLeftGlow() -> d
    void ensureRightGlow() -> e
    void ensureTopGlow() -> f
    void ensureBottomGlow() -> g
    void invalidateGlows() -> h
    android.view.View focusSearch(android.view.View,int) -> focusSearch
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> a
    boolean dispatchOnItemTouch(android.view.MotionEvent) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelTouch() -> w
    void onPointerUp(android.view.MotionEvent) -> c
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getScrollFactor() -> getScrollFactor
    void onMeasure(int,int) -> onMeasure
    void defaultOnMeasure(int,int) -> j
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    void onEnterLayoutOrScroll() -> x
    void onExitLayoutOrScroll() -> y
    void dispatchContentChangedIfNecessary() -> z
    boolean isRunningLayoutOrScroll() -> i
    boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    boolean supportsChangeAnimations() -> A
    void postAnimationRunner() -> B
    boolean predictiveItemAnimationsEnabled() -> C
    void processAdapterUpdatesAndSetAnimationFlags() -> D
    void dispatchLayout() -> j
    void findMinMaxChildLayoutPositions(int[]) -> a
    boolean didChildRangeChange(int,int) -> k
    void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void processDisappearingList(android.support.v4.util.ArrayMap) -> a
    void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.graphics.Rect,int,int) -> a
    void animateDisappearance(android.support.v7.widget.RecyclerView$ItemHolderInfo) -> a
    void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void markItemDecorInsetsDirty() -> k
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    void saveOldPositions() -> l
    void clearOldPositions() -> m
    void offsetPositionRecordsForMove(int,int) -> d
    void offsetPositionRecordsForInsert(int,int) -> e
    void offsetPositionRecordsForRemove(int,int,boolean) -> a
    void viewRangeUpdate(int,int) -> f
    void rebindUpdatedViewHolders() -> n
    void setDataSetChangedAfterLayout() -> E
    void markKnownViewsInvalid() -> o
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> a
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> b
    int getChildLayoutPosition(android.view.View) -> c
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> a
    void offsetChildrenVertical(int) -> a
    void onChildAttachedToWindow(android.view.View) -> d
    void onChildDetachedFromWindow(android.view.View) -> e
    void offsetChildrenHorizontal(int) -> b
    android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> f
    void onScrolled(int,int) -> g
    void dispatchOnScrolled(int,int) -> h
    void onScrollStateChanged(int) -> c
    void dispatchOnScrollStateChanged(int) -> d
    boolean hasPendingAdapterUpdates() -> p
    void dispatchChildDetached(android.view.View) -> h
    void dispatchChildAttached(android.view.View) -> i
    boolean access$100(android.support.v7.widget.RecyclerView) -> a
    boolean access$200(android.support.v7.widget.RecyclerView) -> b
    boolean access$300(android.support.v7.widget.RecyclerView) -> c
    boolean access$502(android.support.v7.widget.RecyclerView,boolean) -> a
    void access$600(android.support.v7.widget.RecyclerView,android.view.View) -> a
    void access$700(android.support.v7.widget.RecyclerView,android.view.View) -> b
    void access$800(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void access$900(android.support.v7.widget.RecyclerView,int) -> a
    android.support.v7.widget.RecyclerView$LayoutManager access$1100(android.support.v7.widget.RecyclerView) -> d
    android.view.animation.Interpolator access$2000() -> q
    void access$2100(android.support.v7.widget.RecyclerView) -> e
    android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView) -> f
    void access$2300(android.support.v7.widget.RecyclerView) -> g
    boolean access$2400(android.support.v7.widget.RecyclerView) -> h
    void access$2600(android.support.v7.widget.RecyclerView) -> i
    java.util.ArrayList access$2700(android.support.v7.widget.RecyclerView) -> j
    void access$2800(android.support.v7.widget.RecyclerView,int,int) -> a
    boolean access$2900(android.support.v7.widget.RecyclerView) -> k
    void access$3000(android.support.v7.widget.RecyclerView,int) -> b
    void access$3100(android.support.v7.widget.RecyclerView) -> l
    boolean access$3700() -> r
    android.view.accessibility.AccessibilityManager access$3800(android.support.v7.widget.RecyclerView) -> m
    android.support.v7.widget.RecyclerViewAccessibilityDelegate access$3900(android.support.v7.widget.RecyclerView) -> n
    android.support.v7.widget.RecyclerView$RecyclerListener access$4200(android.support.v7.widget.RecyclerView) -> o
    void access$4400(android.support.v7.widget.RecyclerView,int,int) -> b
    void access$4500(android.support.v7.widget.RecyclerView,int,int) -> c
    android.support.v7.widget.RecyclerView$ViewFlinger access$4800(android.support.v7.widget.RecyclerView) -> p
    boolean access$5100(android.support.v7.widget.RecyclerView,android.view.View) -> c
android.support.v7.widget.RecyclerView$1 -> android.support.v7.widget.ag:
    android.support.v7.widget.RecyclerView this$0 -> a
    void run() -> run
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.ah:
    android.support.v7.widget.RecyclerView this$0 -> a
    void run() -> run
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.ai:
    float getInterpolation(float) -> getInterpolation
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.aj:
    android.support.v7.widget.RecyclerView this$0 -> a
    int getChildCount() -> a
    void addView(android.view.View,int) -> a
    int indexOfChild(android.view.View) -> a
    void removeViewAt(int) -> a
    android.view.View getChildAt(int) -> b
    void removeAllViews() -> b
    android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> b
    void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void detachViewFromParent(int) -> c
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.ak:
    android.support.v7.widget.RecyclerView this$0 -> a
    android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    void offsetPositionsForRemovingInvisible(int,int) -> a
    void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> b
    void markViewHoldersUpdated(int,int) -> c
    void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> a
    void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> c
    void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> b
    void offsetPositionsForAdd(int,int) -> d
    void offsetPositionsForMove(int,int) -> e
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.RecyclerView$a:
    android.support.v7.widget.RecyclerView$AdapterDataObservable mObservable -> a
    boolean mHasStableIds -> b
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> a
    android.support.v7.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> b
    void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> b
    int getItemViewType(int) -> a
    long getItemId(int) -> b
    int getItemCount() -> a
    boolean hasStableIds() -> b
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> a
    void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> b
    void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView) -> a
    void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView) -> b
    void notifyDataSetChanged() -> c
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.RecyclerView$b:
    void notifyChanged() -> a
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.RecyclerView$c:
    void onChanged() -> a
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.RecyclerView$d:
    android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    long mAddDuration -> c
    long mRemoveDuration -> d
    long mMoveDuration -> e
    long mChangeDuration -> f
    boolean mSupportsChangeAnimations -> g
    long getMoveDuration() -> d
    long getAddDuration() -> e
    long getRemoveDuration() -> f
    long getChangeDuration() -> g
    boolean getSupportsChangeAnimations() -> h
    void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> a
    void runPendingAnimations() -> a
    boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> f
    void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> a
    void dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> g
    void dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> h
    void dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> i
    void dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> b
    void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void endAnimations() -> c
    boolean isRunning() -> b
    void dispatchAnimationsFinished() -> i
    void onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> j
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> k
    void onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> l
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> m
    void onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> n
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> o
    void onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> c
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> d
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener -> android.support.v7.widget.RecyclerView$d$a:
    void onAnimationsFinished() -> a
android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> android.support.v7.widget.RecyclerView$d$b:
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> d
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.RecyclerView$e:
    android.support.v7.widget.RecyclerView this$0 -> a
    void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> d
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.RecyclerView$f:
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> a
    void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> a
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> b
    void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> b
    void getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView) -> a
    void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> a
android.support.v7.widget.RecyclerView$ItemHolderInfo -> android.support.v7.widget.RecyclerView$g:
    android.support.v7.widget.RecyclerView$ViewHolder holder -> a
    int left -> b
    int top -> c
    int right -> d
    int bottom -> e
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.RecyclerView$h:
    android.support.v7.widget.ChildHelper mChildHelper -> q
    android.support.v7.widget.RecyclerView mRecyclerView -> r
    android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller -> s
    boolean mRequestedSimpleAnimations -> a
    boolean mIsAttachedToWindow -> b
    void setRecyclerView(android.support.v7.widget.RecyclerView) -> b
    void requestLayout() -> l
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    boolean supportsPredictiveItemAnimations() -> b
    void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView) -> c
    void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> b
    boolean isAttachedToWindow() -> m
    void postOnAnimation(java.lang.Runnable) -> a
    boolean removeCallbacks(java.lang.Runnable) -> b
    void onAttachedToWindow(android.support.v7.widget.RecyclerView) -> d
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView) -> e
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> a
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    boolean canScrollHorizontally() -> d
    boolean canScrollVertically() -> e
    boolean isSmoothScrolling() -> n
    int getLayoutDirection() -> o
    void addDisappearingView(android.view.View) -> a
    void addDisappearingView(android.view.View,int) -> a
    void addView(android.view.View) -> b
    void addView(android.view.View,int) -> b
    void addViewInt(android.view.View,int,boolean) -> a
    void removeView(android.view.View) -> c
    void removeViewAt(int) -> b
    int getBaseline() -> p
    int getPosition(android.view.View) -> d
    android.view.View findViewByPosition(int) -> a
    void detachViewAt(int) -> c
    void detachViewInternal(int,android.view.View) -> a
    void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams) -> a
    void attachView(android.view.View,int) -> c
    void moveView(int,int) -> a
    void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> a
    void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> a
    int getChildCount() -> q
    android.view.View getChildAt(int) -> d
    int getWidth() -> r
    int getHeight() -> s
    int getPaddingLeft() -> t
    int getPaddingTop() -> u
    int getPaddingRight() -> v
    int getPaddingBottom() -> w
    android.view.View getFocusedChild() -> x
    int getItemCount() -> y
    void offsetChildrenHorizontal(int) -> e
    void offsetChildrenVertical(int) -> f
    void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler) -> a
    void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View) -> a
    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler) -> b
    void measureChildWithMargins(android.view.View,int,int) -> a
    int getChildMeasureSpec(int,int,int,boolean) -> a
    int getDecoratedMeasuredWidth(android.view.View) -> e
    int getDecoratedMeasuredHeight(android.view.View) -> f
    void layoutDecorated(android.view.View,int,int,int,int) -> a
    int getDecoratedLeft(android.view.View) -> g
    int getDecoratedTop(android.view.View) -> h
    int getDecoratedRight(android.view.View) -> i
    int getDecoratedBottom(android.view.View) -> j
    void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> a
    int getTopDecorationHeight(android.view.View) -> k
    int getBottomDecorationHeight(android.view.View) -> l
    int getLeftDecorationWidth(android.view.View) -> m
    int getRightDecorationWidth(android.view.View) -> n
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    android.view.View onInterceptFocusSearch(android.view.View,int) -> d
    boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> a
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> a
    boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View) -> a
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> a
    boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> a
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> a
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> a
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> c
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> d
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> b
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> f
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> e
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> c
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> g
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> a
    void setMeasuredDimension(int,int) -> b
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    void stopSmoothScroller() -> z
    void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller) -> a
    void onScrollStateChanged(int) -> g
    void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> c
    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void requestSimpleAnimationsInNextLayout() -> A
    int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> d
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> e
    boolean performAccessibilityAction(int,android.os.Bundle) -> a
    boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> a
    boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> a
    boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> a
    boolean access$1700(android.support.v7.widget.RecyclerView$LayoutManager) -> a
    boolean access$1702(android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> a
    void access$4900(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.RecyclerView$SmoothScroller) -> a
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.RecyclerView$LayoutParams:
    android.support.v7.widget.RecyclerView$ViewHolder mViewHolder -> a
    android.graphics.Rect mDecorInsets -> b
    boolean mInsetsDirty -> c
    boolean mPendingInvalidate -> d
    boolean isItemRemoved() -> c
    boolean isItemChanged() -> d
    int getViewLayoutPosition() -> e
android.support.v7.widget.RecyclerView$OnItemTouchListener -> android.support.v7.widget.RecyclerView$i:
    boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> a
    void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> b
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.RecyclerView$j:
    void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> a
    void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> a
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.RecyclerView$k:
    android.util.SparseArray mScrap -> a
    android.util.SparseIntArray mMaxScrap -> b
    int mAttachCount -> c
    void clear() -> a
    android.support.v7.widget.RecyclerView$ViewHolder getRecycledView(int) -> a
    void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void attach(android.support.v7.widget.RecyclerView$Adapter) -> a
    void detach() -> b
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> a
    java.util.ArrayList getScrapHeapForType(int) -> b
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.RecyclerView$l:
    java.util.ArrayList mAttachedScrap -> a
    java.util.ArrayList mChangedScrap -> d
    java.util.ArrayList mCachedViews -> b
    java.util.List mUnmodifiableAttachedScrap -> e
    int mViewCacheMax -> f
    android.support.v7.widget.RecyclerView$RecycledViewPool mRecyclerPool -> g
    android.support.v7.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> h
    android.support.v7.widget.RecyclerView this$0 -> c
    void clear() -> a
    void setViewCacheSize(int) -> a
    java.util.List getScrapList() -> b
    boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    int convertPreLayoutPositionToPostLayout(int) -> b
    android.view.View getViewForPosition(int) -> c
    android.view.View getViewForPosition(int,boolean) -> a
    void attachAccessibilityDelegate(android.view.View) -> d
    void invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder) -> f
    void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> a
    void recycleView(android.view.View) -> a
    void recycleAndClearCachedViews() -> c
    void recycleCachedViewAt(int) -> d
    void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder) -> c
    void quickRecycleScrapView(android.view.View) -> b
    void scrapView(android.view.View) -> c
    void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> d
    int getScrapCount() -> d
    android.view.View getScrapViewAt(int) -> e
    void clearScrap() -> e
    android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> f
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForPosition(int,int,boolean) -> a
    android.support.v7.widget.RecyclerView$ViewHolder getScrapViewForId(long,int,boolean) -> a
    void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> e
    void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> a
    void offsetPositionRecordsForMove(int,int) -> a
    void offsetPositionRecordsForInsert(int,int) -> b
    void offsetPositionRecordsForRemove(int,int,boolean) -> b
    void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> a
    void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> a
    android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> f
    void viewRangeUpdate(int,int) -> c
    void setAdapterPositionsAsUnknown() -> g
    void markKnownViewsInvalid() -> h
    void clearOldPositions() -> i
    void markItemDecorInsetsDirty() -> j
    java.util.ArrayList access$1800(android.support.v7.widget.RecyclerView$Recycler) -> a
android.support.v7.widget.RecyclerView$RecyclerListener -> android.support.v7.widget.RecyclerView$m:
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.RecyclerView$n:
    android.support.v7.widget.RecyclerView this$0 -> a
    void onChanged() -> a
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void copyFrom(android.support.v7.widget.RecyclerView$SavedState) -> a
    void access$1300(android.support.v7.widget.RecyclerView$SavedState,android.support.v7.widget.RecyclerView$SavedState) -> a
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.al:
    android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.RecyclerView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.RecyclerView$SmoothScroller -> android.support.v7.widget.RecyclerView$o:
    int mTargetPosition -> a
    android.support.v7.widget.RecyclerView mRecyclerView -> b
    android.support.v7.widget.RecyclerView$LayoutManager mLayoutManager -> c
    boolean mPendingInitialRun -> d
    boolean mRunning -> e
    android.view.View mTargetView -> f
    android.support.v7.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> g
    void setTargetPosition(int) -> a
    void stop() -> a
    boolean isPendingInitialRun() -> b
    boolean isRunning() -> c
    int getTargetPosition() -> d
    void onAnimation(int,int) -> a
    int getChildPosition(android.view.View) -> a
    void onChildAttachedToWindow(android.view.View) -> b
    void onStop() -> e
    void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> a
    void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> a
    void access$2500(android.support.v7.widget.RecyclerView$SmoothScroller,int,int) -> a
android.support.v7.widget.RecyclerView$SmoothScroller$Action -> android.support.v7.widget.RecyclerView$o$a:
    int mDx -> a
    int mDy -> b
    int mDuration -> c
    android.view.animation.Interpolator mInterpolator -> d
    boolean changed -> e
    int consecutiveUpdates -> f
    void runIfNecessary(android.support.v7.widget.RecyclerView) -> a
    void validate() -> a
    void access$5000(android.support.v7.widget.RecyclerView$SmoothScroller$Action,android.support.v7.widget.RecyclerView) -> a
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.RecyclerView$p:
    int mTargetPosition -> f
    android.support.v4.util.ArrayMap mPreLayoutHolderMap -> a
    android.support.v4.util.ArrayMap mPostLayoutHolderMap -> b
    android.support.v4.util.ArrayMap mOldChangedHolders -> c
    java.util.List mDisappearingViewsInLayoutPass -> d
    android.util.SparseArray mData -> g
    int mItemCount -> e
    int mPreviousLayoutItemCount -> h
    int mDeletedInvisibleItemCountSincePreviousLayout -> i
    boolean mStructureChanged -> j
    boolean mInPreLayout -> k
    boolean mRunSimpleAnimations -> l
    boolean mRunPredictiveAnimations -> m
    boolean isPreLayout() -> a
    boolean willRunPredictiveAnimations() -> b
    int getTargetScrollPosition() -> c
    boolean hasTargetScrollPosition() -> d
    int getItemCount() -> e
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void removeFrom(android.support.v4.util.ArrayMap,android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void removeFromDisappearingList(android.view.View) -> a
    void addToDisappearingList(android.view.View) -> b
    java.lang.String toString() -> toString
    int access$1012(android.support.v7.widget.RecyclerView$State,int) -> a
    boolean access$1202(android.support.v7.widget.RecyclerView$State,boolean) -> a
    boolean access$1400(android.support.v7.widget.RecyclerView$State) -> a
    boolean access$1502(android.support.v7.widget.RecyclerView$State,boolean) -> b
    boolean access$1602(android.support.v7.widget.RecyclerView$State,boolean) -> c
    boolean access$1402(android.support.v7.widget.RecyclerView$State,boolean) -> d
    boolean access$1600(android.support.v7.widget.RecyclerView$State) -> b
    boolean access$1200(android.support.v7.widget.RecyclerView$State) -> c
    int access$1002(android.support.v7.widget.RecyclerView$State,int) -> b
    int access$1902(android.support.v7.widget.RecyclerView$State,int) -> c
    boolean access$1500(android.support.v7.widget.RecyclerView$State) -> d
    int access$4702(android.support.v7.widget.RecyclerView$State,int) -> d
android.support.v7.widget.RecyclerView$ViewCacheExtension -> android.support.v7.widget.RecyclerView$q:
    android.view.View getViewForPositionAndType(android.support.v7.widget.RecyclerView$Recycler,int,int) -> a
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.RecyclerView$r:
    int mLastFlingX -> b
    int mLastFlingY -> c
    android.support.v4.widget.ScrollerCompat mScroller -> d
    android.view.animation.Interpolator mInterpolator -> e
    boolean mEatRunOnAnimationRequest -> f
    boolean mReSchedulePostAnimationCallback -> g
    android.support.v7.widget.RecyclerView this$0 -> a
    void run() -> run
    void disableRunOnAnimationRequests() -> c
    void enableRunOnAnimationRequests() -> d
    void postOnAnimation() -> a
    void fling(int,int) -> a
    void smoothScrollBy(int,int) -> b
    void smoothScrollBy(int,int,int,int) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    int computeScrollDuration(int,int,int,int) -> b
    void smoothScrollBy(int,int,int) -> a
    void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> a
    void stop() -> b
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.RecyclerView$s:
    android.view.View itemView -> a
    int mPosition -> b
    int mOldPosition -> c
    long mItemId -> d
    int mItemViewType -> e
    int mPreLayoutPosition -> f
    android.support.v7.widget.RecyclerView$ViewHolder mShadowedHolder -> g
    android.support.v7.widget.RecyclerView$ViewHolder mShadowingHolder -> h
    int mFlags -> j
    int mIsRecyclableCount -> k
    android.support.v7.widget.RecyclerView$Recycler mScrapContainer -> l
    android.support.v7.widget.RecyclerView mOwnerRecyclerView -> i
    void flagRemovedAndOffsetPosition(int,int,boolean) -> a
    void offsetPosition(int,boolean) -> a
    void clearOldPosition() -> a
    void saveOldPosition() -> b
    boolean shouldIgnore() -> c
    int getPosition() -> d
    int getLayoutPosition() -> e
    long getItemId() -> f
    int getItemViewType() -> g
    boolean isScrap() -> h
    void unScrap() -> i
    boolean wasReturnedFromScrap() -> j
    void clearReturnedFromScrapFlag() -> k
    void clearTmpDetachFlag() -> l
    void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler) -> a
    boolean isInvalid() -> m
    boolean needsUpdate() -> n
    boolean isChanged() -> o
    boolean isBound() -> p
    boolean isRemoved() -> q
    boolean isTmpDetached() -> r
    boolean isAdapterPositionUnknown() -> s
    void setFlags(int,int) -> a
    void addFlags(int) -> a
    void resetInternal() -> t
    java.lang.String toString() -> toString
    void setIsRecyclable(boolean) -> a
    boolean isRecyclable() -> u
    boolean shouldBeKeptAsChild() -> v
    boolean doesTransientStatePreventRecycling() -> w
    boolean access$4000(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    android.support.v7.widget.RecyclerView$Recycler access$4102(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$Recycler) -> a
    boolean access$5200(android.support.v7.widget.RecyclerView$ViewHolder) -> b
    int access$5300(android.support.v7.widget.RecyclerView$ViewHolder) -> c
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.am:
    android.support.v7.widget.RecyclerView mRecyclerView -> b
    android.support.v4.view.AccessibilityDelegateCompat mItemDelegate -> c
    boolean shouldIgnore() -> c
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> b
    boolean access$000(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> a
android.support.v7.widget.RecyclerViewAccessibilityDelegate$1 -> android.support.v7.widget.an:
    android.support.v7.widget.RecyclerViewAccessibilityDelegate this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.ao:
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> a
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> a
    int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> b
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    boolean IS_AT_LEAST_FROYO -> c
    android.support.v7.widget.SearchView$SearchAutoComplete mQueryTextView -> d
    android.view.View mSearchEditFrame -> e
    android.view.View mSearchPlate -> f
    android.view.View mSubmitArea -> g
    android.widget.ImageView mSearchButton -> h
    android.widget.ImageView mSubmitButton -> i
    android.widget.ImageView mCloseButton -> j
    android.widget.ImageView mVoiceButton -> k
    android.widget.ImageView mSearchHintIcon -> l
    android.view.View mDropDownAnchor -> m
    int mSearchIconResId -> n
    int mSuggestionRowLayout -> o
    int mSuggestionCommitIconResId -> p
    android.content.Intent mVoiceWebSearchIntent -> q
    android.content.Intent mVoiceAppSearchIntent -> r
    android.support.v7.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> s
    android.support.v7.widget.SearchView$OnCloseListener mOnCloseListener -> t
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> u
    android.support.v7.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> v
    android.view.View$OnClickListener mOnSearchClickListener -> w
    boolean mIconifiedByDefault -> x
    boolean mIconified -> y
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> z
    boolean mSubmitButtonEnabled -> A
    java.lang.CharSequence mQueryHint -> B
    boolean mQueryRefinement -> C
    boolean mClearingFocus -> D
    int mMaxWidth -> E
    boolean mVoiceButtonEnabled -> F
    java.lang.CharSequence mOldQueryText -> G
    java.lang.CharSequence mUserQuery -> H
    boolean mExpandedInActionView -> I
    int mCollapsedImeOptions -> J
    android.app.SearchableInfo mSearchable -> K
    android.os.Bundle mAppSearchData -> L
    android.support.v7.internal.widget.TintManager mTintManager -> M
    android.support.v7.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> a
    java.lang.Runnable mShowImeRunnable -> N
    java.lang.Runnable mUpdateDrawableStateRunnable -> O
    java.lang.Runnable mReleaseCursorRunnable -> P
    java.util.WeakHashMap mOutsideDrawablesCache -> Q
    android.view.View$OnClickListener mOnClickListener -> R
    android.view.View$OnKeyListener mTextKeyListener -> b
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> S
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> T
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> U
    android.text.TextWatcher mTextWatcher -> V
    void addOnLayoutChangeListenerToDropDownAnchorSDK11() -> f
    void addOnLayoutChangeListenerToDropDownAnchorBase() -> g
    int getSuggestionRowLayout() -> getSuggestionRowLayout
    int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> h
    boolean isSubmitAreaEnabled() -> i
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> k
    void updateCloseButton() -> l
    void postUpdateFocusedState() -> m
    void updateFocusedState() -> n
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> o
    void updateSearchAutoComplete() -> p
    void updateVoiceButton(boolean) -> c
    void onTextChanged(java.lang.CharSequence) -> c
    void onSubmitQuery() -> q
    void dismissSuggestions() -> r
    void onCloseClicked() -> s
    void onSearchClicked() -> t
    void onVoiceClicked() -> u
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void adjustDropDownSizeAndPosition() -> v
    boolean onItemClicked(int,int,java.lang.String) -> a
    boolean onItemSelected(int) -> a
    void rewriteQueryFromSuggestion(int) -> e
    boolean launchSuggestion(int,int,java.lang.String) -> b
    void launchIntent(android.content.Intent) -> a
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    void forceSuggestionQuery() -> w
    boolean isLandscapeMode(android.content.Context) -> a
    void access$000(android.support.v7.widget.SearchView) -> a
    android.support.v4.widget.CursorAdapter access$100(android.support.v7.widget.SearchView) -> b
    android.view.View$OnFocusChangeListener access$200(android.support.v7.widget.SearchView) -> c
    void access$300(android.support.v7.widget.SearchView) -> d
    android.widget.ImageView access$400(android.support.v7.widget.SearchView) -> e
    void access$500(android.support.v7.widget.SearchView) -> f
    android.widget.ImageView access$600(android.support.v7.widget.SearchView) -> g
    void access$700(android.support.v7.widget.SearchView) -> h
    android.widget.ImageView access$800(android.support.v7.widget.SearchView) -> i
    void access$900(android.support.v7.widget.SearchView) -> j
    android.widget.ImageView access$1000(android.support.v7.widget.SearchView) -> k
    boolean access$1100() -> e
    void access$1200(android.support.v7.widget.SearchView) -> l
    android.support.v7.widget.SearchView$SearchAutoComplete access$1300(android.support.v7.widget.SearchView) -> m
    void access$1400(android.support.v7.widget.SearchView) -> n
    android.app.SearchableInfo access$1500(android.support.v7.widget.SearchView) -> o
    boolean access$1600(android.support.v7.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> a
    void access$1800(android.support.v7.widget.SearchView,int,java.lang.String,java.lang.String) -> a
    boolean access$1900(android.support.v7.widget.SearchView,int,int,java.lang.String) -> a
    boolean access$2000(android.support.v7.widget.SearchView,int) -> a
    void access$2100(android.support.v7.widget.SearchView,java.lang.CharSequence) -> a
    void access$2200(android.support.v7.widget.SearchView,boolean) -> a
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.ap:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.aq:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$11 -> android.support.v7.widget.ar:
    android.support.v7.widget.SearchView this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$12 -> android.support.v7.widget.as:
    android.support.v7.widget.SearchView this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.at:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.au:
    android.support.v7.widget.SearchView this$0 -> a
    void run() -> run
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.av:
    android.support.v7.widget.SearchView this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.aw:
    android.support.v7.widget.SearchView this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.ax:
    android.support.v7.widget.SearchView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.ay:
    android.support.v7.widget.SearchView this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.az:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.ba:
    android.support.v7.widget.SearchView this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$a:
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method showSoftInputUnchecked -> d
    void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> a
    void doAfterTextChanged(android.widget.AutoCompleteTextView) -> b
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    void showSoftInputUnchecked(android.view.inputmethod.InputMethodManager,android.view.View,int) -> a
android.support.v7.widget.SearchView$OnCloseListener -> android.support.v7.widget.SearchView$b:
    boolean onClose() -> a
android.support.v7.widget.SearchView$OnQueryTextListener -> android.support.v7.widget.SearchView$c:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v7.widget.SearchView$OnSuggestionListener -> android.support.v7.widget.SearchView$d:
    boolean onSuggestionSelect(int) -> a
    boolean onSuggestionClick(int) -> b
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    int[] POPUP_WINDOW_ATTRS -> a
    int mThreshold -> b
    android.support.v7.widget.SearchView mSearchView -> c
    android.support.v7.internal.widget.TintManager mTintManager -> d
    void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    boolean isEmpty() -> a
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$1700(android.support.v7.widget.SearchView$SearchAutoComplete) -> a
android.support.v7.widget.Space -> android.support.v7.widget.Space:
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> a
    void onMeasure(int,int) -> onMeasure
android.support.v7.widget.StaggeredGridLayoutManager -> android.support.v7.widget.StaggeredGridLayoutManager:
    int mSpanCount -> g
    android.support.v7.widget.StaggeredGridLayoutManager$Span[] mSpans -> h
    android.support.v7.widget.OrientationHelper mPrimaryOrientation -> a
    android.support.v7.widget.OrientationHelper mSecondaryOrientation -> b
    int mOrientation -> i
    int mSizePerSpan -> j
    android.support.v7.widget.LayoutState mLayoutState -> k
    boolean mReverseLayout -> l
    boolean mShouldReverseLayout -> c
    java.util.BitSet mRemainingSpans -> m
    int mPendingScrollPosition -> d
    int mPendingScrollPositionOffset -> e
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> f
    int mGapStrategy -> n
    boolean mLastLayoutFromEnd -> o
    boolean mLastLayoutRTL -> p
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> t
    int mFullSizeSpec -> u
    int mWidthSpec -> v
    int mHeightSpec -> w
    android.graphics.Rect mTmpRect -> x
    android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> y
    boolean mLaidOutInvalidFullSpan -> z
    boolean mSmoothScrollbarEnabled -> A
    java.lang.Runnable mCheckForGapsRunnable -> B
    boolean checkForGaps() -> B
    void onScrollStateChanged(int) -> g
    void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> a
    android.view.View hasGapsToFix() -> f
    boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> a
    void setReverseLayout(boolean) -> a
    void assertNotInLayoutOrScroll(java.lang.String) -> a
    void ensureOrientationHelper() -> C
    void resolveShouldLayoutReverse() -> D
    boolean isLayoutRTL() -> g
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> c
    boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> b
    void updateMeasureSpecs() -> h
    boolean supportsPredictiveItemAnimations() -> b
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> b
    int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> a
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> c
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> d
    int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> h
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> e
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> f
    int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> i
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> g
    void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams) -> a
    int getSpecForDimension(int,int) -> c
    void measureChildWithDecorationsAndMargin(android.view.View,int,int) -> b
    int updateSpecWithExtra(int,int,int) -> a
    void onRestoreInstanceState(android.os.Parcelable) -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    int findFirstVisibleItemPositionInt() -> i
    int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    android.view.View findFirstVisibleItemClosestToStart(boolean,boolean) -> a
    android.view.View findFirstVisibleItemClosestToEnd(boolean,boolean) -> b
    void fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> a
    void fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> b
    void updateLayoutStateToFillStart(int,android.support.v7.widget.RecyclerView$State) -> a
    void updateLayoutStateToFillEnd(int,android.support.v7.widget.RecyclerView$State) -> b
    void offsetChildrenHorizontal(int) -> e
    void offsetChildrenVertical(int) -> f
    void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> b
    void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> a
    void onItemsChanged(android.support.v7.widget.RecyclerView) -> a
    void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> a
    void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> c
    void handleUpdate(int,int,int) -> b
    int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> h
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> i
    void attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState) -> a
    void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.StaggeredGridLayoutManager$Span,int) -> a
    void appendViewToAllSpans(android.view.View) -> o
    void prependViewToAllSpans(android.view.View) -> p
    void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> b
    void updateAllRemainingSpans(int,int) -> d
    void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int) -> a
    int getMaxStart(int) -> j
    int getMinStart(int) -> k
    boolean areAllEndsEqual() -> j
    boolean areAllStartsEqual() -> k
    int getMaxEnd(int) -> l
    int getMinEnd(int) -> m
    void recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> a
    void recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> b
    boolean preferLastSpan(int) -> n
    android.support.v7.widget.StaggeredGridLayoutManager$Span getNextSpan(android.support.v7.widget.LayoutState) -> a
    boolean canScrollVertically() -> e
    boolean canScrollHorizontally() -> d
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    int calculateScrollDirectionForPosition(int) -> o
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    int getLastChildPosition() -> E
    int getFirstChildPosition() -> F
    int findFirstReferenceChildPosition(int) -> p
    int findLastReferenceChildPosition(int) -> q
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> a
    android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> a
android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo -> android.support.v7.widget.StaggeredGridLayoutManager$a:
    int mPosition -> a
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    boolean mInvalidateOffsets -> d
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> e
    void reset() -> a
    void assignCoordinateFromPadding() -> b
    void assignCoordinateFromPadding(int) -> a
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams:
    android.support.v7.widget.StaggeredGridLayoutManager$Span mSpan -> e
    boolean mFullSpan -> f
    int getSpanIndex() -> a
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup:
    int[] mData -> a
    java.util.List mFullSpanItems -> b
    int forceInvalidateAfter(int) -> a
    int invalidateAfter(int) -> b
    int getSpan(int) -> c
    void setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span) -> a
    int sizeForPosition(int) -> d
    void ensureSize(int) -> e
    void clear() -> a
    void offsetForRemoval(int,int) -> a
    void offsetFullSpansForRemoval(int,int) -> c
    void offsetForAddition(int,int) -> b
    void offsetFullSpansForAddition(int,int) -> d
    int invalidateFullSpansAfter(int) -> g
    void addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> f
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> a
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    int mPosition -> a
    int mGapDir -> b
    int[] mGapPerSpan -> c
    boolean mHasUnwantedGapAfter -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getGapForSpan(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.bb:
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState:
    int mAnchorPosition -> a
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    int[] mSpanLookup -> f
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void invalidateSpanInfo() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.bc:
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v7.widget.StaggeredGridLayoutManager$Span -> android.support.v7.widget.StaggeredGridLayoutManager$b:
    java.util.ArrayList mViews -> f
    int mCachedStart -> a
    int mCachedEnd -> b
    int mDeletedSize -> c
    int mIndex -> d
    android.support.v7.widget.StaggeredGridLayoutManager this$0 -> e
    int getStartLine(int) -> a
    void calculateCachedStart() -> a
    int getStartLine() -> b
    int getEndLine(int) -> b
    void calculateCachedEnd() -> c
    int getEndLine() -> d
    void prependToSpan(android.view.View) -> a
    void appendToSpan(android.view.View) -> b
    void cacheReferenceLineAndClear(boolean,int) -> a
    void clear() -> e
    void invalidateCache() -> f
    void setLine(int) -> c
    void popEnd() -> g
    void popStart() -> h
    int getDeletedSize() -> i
    android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> c
    void onOffset(int) -> d
    java.util.ArrayList access$300(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> a
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.bd:
    android.app.SearchManager mSearchManager -> j
    android.support.v7.widget.SearchView mSearchView -> k
    android.app.SearchableInfo mSearchable -> l
    android.content.Context mProviderContext -> m
    java.util.WeakHashMap mOutsideDrawablesCache -> n
    int mCommitIconResId -> o
    boolean mClosed -> p
    int mQueryRefinement -> q
    android.content.res.ColorStateList mUrlColor -> r
    int mText1Col -> s
    int mText2Col -> t
    int mText2UrlCol -> u
    int mIconName1Col -> v
    int mIconName2Col -> w
    int mFlagsCol -> x
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> d
    void changeCursor(android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> g
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> a
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> b
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.bd$a:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
android.support.v7.widget.SwitchCompat -> android.support.v7.widget.SwitchCompat:
    int[] TEXT_APPEARANCE_ATTRS -> a
    android.graphics.drawable.Drawable mThumbDrawable -> b
    android.graphics.drawable.Drawable mTrackDrawable -> c
    int mThumbTextPadding -> d
    int mSwitchMinWidth -> e
    int mSwitchPadding -> f
    boolean mSplitTrack -> g
    java.lang.CharSequence mTextOn -> h
    java.lang.CharSequence mTextOff -> i
    boolean mShowText -> j
    int mTouchMode -> k
    int mTouchSlop -> l
    float mTouchX -> m
    float mTouchY -> n
    android.view.VelocityTracker mVelocityTracker -> o
    int mMinFlingVelocity -> p
    float mThumbPosition -> q
    int mSwitchWidth -> r
    int mSwitchHeight -> s
    int mThumbWidth -> t
    int mSwitchLeft -> u
    int mSwitchTop -> v
    int mSwitchRight -> w
    int mSwitchBottom -> x
    android.text.TextPaint mTextPaint -> y
    android.content.res.ColorStateList mTextColors -> z
    android.text.Layout mOnLayout -> A
    android.text.Layout mOffLayout -> B
    android.text.method.TransformationMethod mSwitchTransformationMethod -> C
    android.view.animation.Animation mPositionAnimator -> D
    android.graphics.Rect mTempRect -> E
    android.support.v7.internal.widget.TintManager mTintManager -> F
    int[] CHECKED_STATE_SET -> G
    void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    void setSwitchPadding(int) -> setSwitchPadding
    int getSwitchPadding() -> getSwitchPadding
    void setSwitchMinWidth(int) -> setSwitchMinWidth
    int getSwitchMinWidth() -> getSwitchMinWidth
    void setThumbTextPadding(int) -> setThumbTextPadding
    int getThumbTextPadding() -> getThumbTextPadding
    void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    void setTrackResource(int) -> setTrackResource
    android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    void setThumbResource(int) -> setThumbResource
    android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    void setSplitTrack(boolean) -> setSplitTrack
    boolean getSplitTrack() -> getSplitTrack
    java.lang.CharSequence getTextOn() -> getTextOn
    void setTextOn(java.lang.CharSequence) -> setTextOn
    java.lang.CharSequence getTextOff() -> getTextOff
    void setTextOff(java.lang.CharSequence) -> setTextOff
    void setShowText(boolean) -> setShowText
    boolean getShowText() -> getShowText
    void onMeasure(int,int) -> onMeasure
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    android.text.Layout makeLayout(java.lang.CharSequence) -> a
    boolean hitThumb(float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancelSuperTouch(android.view.MotionEvent) -> a
    void stopDrag(android.view.MotionEvent) -> b
    void animateThumbToCheckedState(boolean) -> a
    void cancelPositionAnimator() -> a
    boolean getTargetCheckedState() -> getTargetCheckedState
    void setThumbPosition(float) -> setThumbPosition
    void toggle() -> toggle
    void setChecked(boolean) -> setChecked
    void onLayout(boolean,int,int,int,int) -> onLayout
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    int getThumbOffset() -> getThumbOffset
    int getThumbScrollRange() -> getThumbScrollRange
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void drawableStateChanged() -> drawableStateChanged
    void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    float constrain(float,float,float) -> a
    void access$000(android.support.v7.widget.SwitchCompat,float) -> a
android.support.v7.widget.SwitchCompat$1 -> android.support.v7.widget.be:
    float val$startPosition -> a
    float val$diff -> b
    android.support.v7.widget.SwitchCompat this$0 -> c
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    android.support.v7.widget.ActionMenuView mMenuView -> b
    android.widget.TextView mTitleTextView -> c
    android.widget.TextView mSubtitleTextView -> d
    android.widget.ImageButton mNavButtonView -> e
    android.widget.ImageView mLogoView -> f
    android.graphics.drawable.Drawable mCollapseIcon -> g
    java.lang.CharSequence mCollapseDescription -> h
    android.widget.ImageButton mCollapseButtonView -> i
    android.view.View mExpandedActionView -> a
    android.content.Context mPopupContext -> j
    int mPopupTheme -> k
    int mTitleTextAppearance -> l
    int mSubtitleTextAppearance -> m
    int mButtonGravity -> n
    int mMaxButtonHeight -> o
    int mTitleMarginStart -> p
    int mTitleMarginEnd -> q
    int mTitleMarginTop -> r
    int mTitleMarginBottom -> s
    android.support.v7.internal.widget.RtlSpacingHelper mContentInsets -> t
    int mGravity -> u
    java.lang.CharSequence mTitleText -> v
    java.lang.CharSequence mSubtitleText -> w
    int mTitleTextColor -> x
    int mSubtitleTextColor -> y
    boolean mEatingTouch -> z
    java.util.ArrayList mTempViews -> A
    int[] mTempMargins -> B
    android.support.v7.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> C
    android.support.v7.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> D
    android.support.v7.internal.widget.ToolbarWidgetWrapper mWrapper -> E
    android.support.v7.widget.ActionMenuPresenter mOuterActionMenuPresenter -> F
    android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> G
    android.support.v7.internal.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> H
    android.support.v7.internal.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> I
    boolean mCollapsible -> J
    int mMinHeight -> K
    java.lang.Runnable mShowOverflowMenuRunnable -> L
    android.support.v7.internal.widget.TintManager mTintManager -> M
    void setPopupTheme(int) -> setPopupTheme
    int getPopupTheme() -> getPopupTheme
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void setLogo(int) -> setLogo
    boolean canShowOverflowMenu() -> a
    boolean isOverflowMenuShowing() -> b
    boolean isOverflowMenuShowPending() -> c
    boolean showOverflowMenu() -> d
    boolean hideOverflowMenu() -> e
    void setMenu(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter) -> setMenu
    void dismissPopupMenus() -> f
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    android.graphics.drawable.Drawable getLogo() -> getLogo
    void setLogoDescription(int) -> setLogoDescription
    void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    java.lang.CharSequence getLogoDescription() -> getLogoDescription
    void ensureLogoView() -> j
    boolean hasExpandedActionView() -> g
    void collapseActionView() -> h
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(int) -> setTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(int) -> setSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    void setTitleTextColor(int) -> setTitleTextColor
    void setSubtitleTextColor(int) -> setSubtitleTextColor
    java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    void setNavigationContentDescription(int) -> setNavigationContentDescription
    void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    void setNavigationIcon(int) -> setNavigationIcon
    void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    android.view.Menu getMenu() -> getMenu
    void ensureMenu() -> k
    void ensureMenuView() -> l
    android.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    int getContentInsetStart() -> getContentInsetStart
    int getContentInsetEnd() -> getContentInsetEnd
    void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    int getContentInsetLeft() -> getContentInsetLeft
    int getContentInsetRight() -> getContentInsetRight
    void ensureNavButtonView() -> m
    void ensureCollapseButtonView() -> n
    void addSystemView(android.view.View) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void postShowOverflowMenu() -> o
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> a
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> a
    boolean shouldCollapse() -> p
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getViewListMeasuredWidth(java.util.List,int[]) -> a
    int layoutChildLeft(android.view.View,int,int[],int) -> a
    int layoutChildRight(android.view.View,int,int[],int) -> b
    int getChildTop(android.view.View,int) -> a
    int getChildVerticalGravity(int) -> a
    void addCustomViewsWithGravity(java.util.List,int) -> a
    int getChildHorizontalGravity(int) -> b
    boolean shouldLayout(android.view.View) -> b
    int getHorizontalMargins(android.view.View) -> c
    int getVerticalMargins(android.view.View) -> d
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> i
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.support.v7.internal.widget.DecorToolbar getWrapper() -> getWrapper
    void setChildVisibilityForExpandedActionView(boolean) -> setChildVisibilityForExpandedActionView
    void updateChildVisibilityForExpandedActionView(android.view.View) -> e
    void setCollapsible(boolean) -> setCollapsible
    void setMenuCallbacks(android.support.v7.internal.view.menu.MenuPresenter$Callback,android.support.v7.internal.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    void setMinimumHeight(int) -> setMinimumHeight
    int getMinimumHeightCompat() -> getMinimumHeightCompat
    android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,int) -> a
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.support.v7.widget.Toolbar$OnMenuItemClickListener access$000(android.support.v7.widget.Toolbar) -> a
    void access$200(android.support.v7.widget.Toolbar) -> b
    android.widget.ImageButton access$300(android.support.v7.widget.Toolbar) -> c
    int access$400(android.support.v7.widget.Toolbar) -> d
    void access$500(android.support.v7.widget.Toolbar,boolean) -> a
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.bf:
    android.support.v7.widget.Toolbar this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.bg:
    android.support.v7.widget.Toolbar this$0 -> a
    void run() -> run
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.bh:
    android.support.v7.widget.Toolbar this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.Toolbar$a:
    android.support.v7.internal.view.menu.MenuBuilder mMenu -> a
    android.support.v7.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    android.support.v7.widget.Toolbar this$0 -> c
    void initForMenu(android.content.Context,android.support.v7.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(android.support.v7.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(android.support.v7.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> b
    boolean expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl) -> b
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$LayoutParams:
    int mViewType -> b
    void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> a
android.support.v7.widget.Toolbar$OnMenuItemClickListener -> android.support.v7.widget.Toolbar$b:
    boolean onMenuItemClick(android.view.MenuItem) -> a
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.bi:
    android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.CustomPlatform:
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    int getCustomPlatformId() -> getCustomPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.FakeActivity -> cn.sharesdk.framework.FakeActivity:
    java.lang.Class shell -> shell
    android.app.Activity activity -> activity
    cn.sharesdk.framework.FakeActivity resultReceiver -> resultReceiver
    java.util.HashMap result -> result
    android.view.View contentView -> contentView
    void setShell(java.lang.Class) -> setShell
    void setActivity(android.app.Activity) -> setActivity
    void setContentViewLayoutResName(java.lang.String) -> setContentViewLayoutResName
    void setContentView(android.view.View) -> setContentView
    android.view.View getContentView() -> getContentView
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByResName(java.lang.String) -> findViewByResName
    void onCreate() -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    void finish() -> finish
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context getContext() -> getContext
    void show(android.content.Context,android.content.Intent) -> show
    void showForResult(android.content.Context,android.content.Intent,cn.sharesdk.framework.FakeActivity) -> showForResult
    cn.sharesdk.framework.FakeActivity getParent() -> getParent
    void setResult(java.util.HashMap) -> setResult
    void sendResult() -> sendResult
    void onResult(java.util.HashMap) -> onResult
    void runOnUIThread(java.lang.Runnable) -> runOnUIThread
    void runOnUIThread(java.lang.Runnable,long) -> runOnUIThread
    void setRequestedOrientation(int) -> setRequestedOrientation
    void requestPortraitOrientation() -> requestPortraitOrientation
    void requestLandscapeOrientation() -> requestLandscapeOrientation
    int getOrientation() -> getOrientation
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.Platform:
    int ACTION_AUTHORIZING -> ACTION_AUTHORIZING
    int ACTION_GETTING_FRIEND_LIST -> ACTION_GETTING_FRIEND_LIST
    int ACTION_SENDING_DIRECT_MESSAGE -> ACTION_SENDING_DIRECT_MESSAGE
    int ACTION_FOLLOWING_USER -> ACTION_FOLLOWING_USER
    int ACTION_TIMELINE -> ACTION_TIMELINE
    int ACTION_USER_INFOR -> ACTION_USER_INFOR
    int ACTION_SHARE -> ACTION_SHARE
    int ACTION_CUSTOMER -> ACTION_CUSTOMER
    int CUSTOMER_ACTION_MASK -> CUSTOMER_ACTION_MASK
    int SHARE_TEXT -> SHARE_TEXT
    int SHARE_IMAGE -> SHARE_IMAGE
    int SHARE_WEBPAGE -> SHARE_WEBPAGE
    int SHARE_MUSIC -> SHARE_MUSIC
    int SHARE_VIDEO -> SHARE_VIDEO
    int SHARE_APPS -> SHARE_APPS
    int SHARE_FILE -> SHARE_FILE
    int SHARE_EMOJI -> SHARE_EMOJI
    cn.sharesdk.framework.i a -> a
    android.content.Context context -> context
    cn.sharesdk.framework.PlatformDb db -> db
    cn.sharesdk.framework.PlatformActionListener listener -> listener
    void a() -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    void copyDevinfo(java.lang.String,java.lang.String) -> copyDevinfo
    void copyNetworkDevinfo(int,int) -> copyNetworkDevinfo
    java.lang.String getDevinfo(java.lang.String) -> getDevinfo
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> getDevinfo
    java.lang.String getNetworkDevinfo(java.lang.String,java.lang.String) -> getNetworkDevinfo
    java.lang.String getNetworkDevinfo(int,java.lang.String,java.lang.String) -> getNetworkDevinfo
    android.content.Context getContext() -> getContext
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getId() -> getId
    int getPlatformId() -> getPlatformId
    int getSortId() -> getSortId
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> setPlatformActionListener
    cn.sharesdk.framework.PlatformActionListener getPlatformActionListener() -> getPlatformActionListener
    boolean isValid() -> isValid
    void SSOSetting(boolean) -> SSOSetting
    boolean isSSODisable() -> isSSODisable
    boolean b() -> b
    void authorize() -> authorize
    void authorize(java.lang.String[]) -> authorize
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void innerAuthorize(int,java.lang.Object) -> innerAuthorize
    void share(cn.sharesdk.framework.Platform$ShareParams) -> share
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void followFriend(java.lang.String) -> followFriend
    void follow(java.lang.String) -> follow
    void getTimeLine(java.lang.String,int,int) -> getTimeLine
    void timeline(int,int,java.lang.String) -> timeline
    void showUser(java.lang.String) -> showUser
    void userInfor(java.lang.String) -> userInfor
    void listFriend(int,int,java.lang.String) -> listFriend
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void customerProtocol(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> customerProtocol
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void afterRegister(int,java.lang.Object) -> afterRegister
    cn.sharesdk.framework.PlatformDb getDb() -> getDb
    void removeAccount() -> removeAccount
    java.lang.String getShortLintk(java.lang.String,boolean) -> getShortLintk
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.lang.String uploadImageToFileServer(android.graphics.Bitmap) -> uploadImageToFileServer
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.Platform$ShareParams:
    java.lang.String text -> text
    java.lang.String imagePath -> imagePath
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.PlatformActionListener:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.PlatformDb:
    java.lang.String DB_NAME -> DB_NAME
    android.content.SharedPreferences db -> db
    java.lang.String platformNname -> platformNname
    int platformVersion -> platformVersion
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    java.lang.String getToken() -> getToken
    void putToken(java.lang.String) -> putToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void putTokenSecret(java.lang.String) -> putTokenSecret
    long getExpiresIn() -> getExpiresIn
    void putExpiresIn(long) -> putExpiresIn
    long getExpiresTime() -> getExpiresTime
    int getPlatformVersion() -> getPlatformVersion
    java.lang.String getPlatformNname() -> getPlatformNname
    void putUserId(java.lang.String) -> putUserId
    java.lang.String getUserId() -> getUserId
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserIcon() -> getUserIcon
    void removeAccount() -> removeAccount
    java.lang.String exportData() -> exportData
    void importData(java.lang.String) -> importData
    boolean isValid() -> isValid
    java.lang.String getUserGender() -> getUserGender
cn.sharesdk.framework.ReflectablePlatformActionListener -> cn.sharesdk.framework.ReflectablePlatformActionListener:
    int a -> a
    android.os.Handler$Callback b -> b
    int c -> c
    android.os.Handler$Callback d -> d
    int e -> e
    android.os.Handler$Callback f -> f
    void setOnCompleteCallback(int,android.os.Handler$Callback) -> setOnCompleteCallback
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void setOnErrorCallback(int,android.os.Handler$Callback) -> setOnErrorCallback
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void setOnCancelCallback(int,android.os.Handler$Callback) -> setOnCancelCallback
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.Service -> cn.sharesdk.framework.Service:
    android.content.Context a -> a
    java.lang.String b -> b
    void a(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    void a(java.lang.String) -> a
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getDeviceKey() -> getDeviceKey
    int getServiceVersionInt() -> getServiceVersionInt
    java.lang.String getServiceVersionName() -> getServiceVersionName
    void onBind() -> onBind
    void onUnbind() -> onUnbind
    android.content.Context a(cn.sharesdk.framework.Service) -> a
cn.sharesdk.framework.Service$ServiceEvent -> cn.sharesdk.framework.Service$ServiceEvent:
    int PLATFORM -> PLATFORM
    cn.sharesdk.framework.Service service -> service
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    java.util.HashMap filterShareContent(int,cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.ShareSDK:
    cn.sharesdk.framework.p a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> initSDK
    void initSDK(android.content.Context,boolean) -> initSDK
    void initSDK(android.content.Context,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,boolean) -> initSDK
    void stopSDK(android.content.Context) -> stopSDK
    void stopSDK() -> stopSDK
    void c() -> c
    void registerService(java.lang.Class) -> registerService
    void unregisterService(java.lang.Class) -> unregisterService
    cn.sharesdk.framework.Service getService(java.lang.Class) -> getService
    void registerPlatform(java.lang.Class) -> registerPlatform
    void unregisterPlatform(java.lang.Class) -> unregisterPlatform
    java.lang.String getSDKVersionName() -> getSDKVersionName
    int getSDKVersionCode() -> getSDKVersionCode
    void setConnTimeout(int) -> setConnTimeout
    void setReadTimeout(int) -> setReadTimeout
    void removeCookieOnAuthorize(boolean) -> removeCookieOnAuthorize
    cn.sharesdk.framework.Platform[] getPlatformList(android.content.Context) -> getPlatformList
    cn.sharesdk.framework.Platform[] getPlatformList() -> getPlatformList
    cn.sharesdk.framework.Platform getPlatform(android.content.Context,java.lang.String) -> getPlatform
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> getPlatform
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> logDemoEvent
    void logApiEvent(java.lang.String,int) -> logApiEvent
    void setPlatformDevInfo(java.lang.String,java.util.HashMap) -> setPlatformDevInfo
    java.lang.String platformIdToName(int) -> platformIdToName
    int platformNameToId(java.lang.String) -> platformNameToId
    boolean isRemoveCookieOnAuthorize() -> isRemoveCookieOnAuthorize
    void closeDebug() -> closeDebug
    boolean isDebug() -> isDebug
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
cn.sharesdk.framework.ShareSDKUIShell -> cn.sharesdk.framework.ShareSDKUIShell:
    java.util.HashMap a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    java.lang.String a(cn.sharesdk.framework.FakeActivity) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.FakeActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.TitleLayout:
    android.widget.ImageView btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView btnRight -> btnRight
    void init(android.content.Context) -> init
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.a:
    cn.sharesdk.framework.FakeActivity a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.authorize.AuthorizeAdapter -> cn.sharesdk.framework.authorize.AuthorizeAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    java.lang.String platform -> platform
    android.widget.RelativeLayout rlBody -> rlBody
    boolean popUpAnimationDisable -> popUpAnimationDisable
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setPlatformName(java.lang.String) -> setPlatformName
    java.lang.String getPlatformName() -> getPlatformName
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onResize(int,int,int,int) -> onResize
    void onDestroy() -> onDestroy
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void disablePopUpAnimation() -> disablePopUpAnimation
    boolean isPopUpAnimationDisable() -> isPopUpAnimationDisable
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void hideShareSDKLogo() -> hideShareSDKLogo
cn.sharesdk.framework.authorize.AuthorizeHelper -> cn.sharesdk.framework.authorize.AuthorizeHelper:
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.framework.authorize.AuthorizeListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.framework.authorize.RegisterView -> cn.sharesdk.framework.authorize.RegisterView:
    cn.sharesdk.framework.TitleLayout a -> a
    android.widget.RelativeLayout b -> b
    android.webkit.WebView c -> c
    android.widget.TextView d -> d
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
    android.view.View a() -> a
    void a(boolean) -> a
    android.webkit.WebView b() -> b
    cn.sharesdk.framework.TitleLayout c() -> c
    android.widget.RelativeLayout d() -> d
    android.widget.TextView a(cn.sharesdk.framework.authorize.RegisterView) -> a
cn.sharesdk.framework.authorize.ResizeLayout -> cn.sharesdk.framework.authorize.ResizeLayout:
    cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener a -> a
    void a(cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener -> cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener:
    void OnResize(int,int,int,int) -> OnResize
cn.sharesdk.framework.authorize.SSOListener -> cn.sharesdk.framework.authorize.SSOListener:
    void onFailed(java.lang.Throwable) -> onFailed
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
cn.sharesdk.framework.authorize.a -> cn.sharesdk.framework.authorize.a:
    cn.sharesdk.framework.authorize.AuthorizeHelper a -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeHelper) -> a
    void show(android.content.Context,android.content.Intent) -> show
    cn.sharesdk.framework.authorize.AuthorizeHelper a() -> a
cn.sharesdk.framework.authorize.b -> cn.sharesdk.framework.authorize.b:
    cn.sharesdk.framework.authorize.g a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c -> c
    java.lang.String a() -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.framework.authorize.c -> cn.sharesdk.framework.authorize.c:
    cn.sharesdk.framework.authorize.RegisterView a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.d -> cn.sharesdk.framework.authorize.d:
    int a -> a
    cn.sharesdk.framework.authorize.RegisterView b -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
cn.sharesdk.framework.authorize.e -> cn.sharesdk.framework.authorize.e:
    cn.sharesdk.framework.authorize.f c -> c
    cn.sharesdk.framework.authorize.SSOListener b -> b
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    void onCreate() -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
cn.sharesdk.framework.authorize.f -> cn.sharesdk.framework.authorize.f:
    cn.sharesdk.framework.authorize.e a -> a
    int b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    void a() -> a
    void a(int) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.content.Intent) -> a
cn.sharesdk.framework.authorize.g -> cn.sharesdk.framework.authorize.g:
    cn.sharesdk.framework.authorize.AuthorizeAdapter c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.framework.authorize.AuthorizeAdapter c() -> c
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void OnResize(int,int,int,int) -> OnResize
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.sharesdk.framework.authorize.g) -> a
    android.app.Activity b(cn.sharesdk.framework.authorize.g) -> b
cn.sharesdk.framework.authorize.g$a -> cn.sharesdk.framework.authorize.g$a:
    float[] a -> a
    float getInterpolation(float) -> getInterpolation
cn.sharesdk.framework.authorize.h -> cn.sharesdk.framework.authorize.h:
    cn.sharesdk.framework.authorize.g a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.i -> cn.sharesdk.framework.authorize.i:
    cn.sharesdk.framework.authorize.h a -> a
    void run() -> run
cn.sharesdk.framework.authorize.j -> cn.sharesdk.framework.authorize.j:
    cn.sharesdk.framework.authorize.g a -> a
    void run() -> run
cn.sharesdk.framework.b -> cn.sharesdk.framework.b:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.c -> cn.sharesdk.framework.c:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.d -> cn.sharesdk.framework.d:
    cn.sharesdk.framework.PlatformActionListener a -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a() -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void a(cn.sharesdk.framework.Platform,int,java.lang.Object) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d) -> a
    java.lang.String a(cn.sharesdk.framework.d,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.e -> cn.sharesdk.framework.e:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.d d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.f -> cn.sharesdk.framework.f:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.lang.Object c -> c
    cn.sharesdk.framework.d d -> d
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.g -> cn.sharesdk.framework.g:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE_PATH -> IMAGE_PATH
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String TITLE -> TITLE
    java.lang.String NOTEBOOK -> NOTEBOOK
    java.lang.String STACK -> STACK
    java.lang.String TAGS -> TAGS
    java.lang.String IS_PUBLIC -> IS_PUBLIC
    java.lang.String IS_FRIEND -> IS_FRIEND
    java.lang.String IS_FAMILY -> IS_FAMILY
    java.lang.String SAFETY_LEVEL -> SAFETY_LEVEL
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String VENUE_NAME -> VENUE_NAME
    java.lang.String VENUE_DESCRIPTION -> VENUE_DESCRIPTION
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String IMAGE_URL -> IMAGE_URL
    java.lang.String COMMENT -> COMMENT
    java.lang.String TITLE_URL -> TITLE_URL
    java.lang.String URL -> URL
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String SITE -> SITE
    java.lang.String SITE_URL -> SITE_URL
    java.lang.String GROPU_ID -> GROPU_ID
    java.lang.String EXT_INFO -> EXT_INFO
    java.lang.String SHARE_TYPE -> SHARE_TYPE
    java.lang.String MUSIC_URL -> MUSIC_URL
    java.lang.String IMAGE_DATA -> IMAGE_DATA
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String SCENCE -> SCENCE
    java.lang.String CUSTOM_FLAG -> CUSTOM_FLAG
    java.lang.String EXECUTE_URL -> EXECUTE_URL
    java.lang.String INSTALL_URL -> INSTALL_URL
    java.lang.String IS_SHARE_TENCENT_WEIBO -> IS_SHARE_TENCENT_WEIBO
    java.lang.String IMAGE_ARRAY -> IMAGE_ARRAY
    java.util.HashMap params -> params
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    java.lang.String getImagePath() -> getImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getNotebook() -> getNotebook
    void setNotebook(java.lang.String) -> setNotebook
    java.lang.String getStack() -> getStack
    void setStack(java.lang.String) -> setStack
    java.lang.String[] getTags() -> getTags
    void setTags(java.lang.String[]) -> setTags
    boolean isPublic() -> isPublic
    void setPublic(boolean) -> setPublic
    boolean isFriend() -> isFriend
    void setFriend(boolean) -> setFriend
    boolean isFamily() -> isFamily
    void setFamily(boolean) -> setFamily
    int getSafetyLevel() -> getSafetyLevel
    void setSafetyLevel(int) -> setSafetyLevel
    int getContentType() -> getContentType
    void setContentType(int) -> setContentType
    int getHidden() -> getHidden
    void setHidden(int) -> setHidden
    void setVenueName(java.lang.String) -> setVenueName
    java.lang.String getVenueName() -> getVenueName
    java.lang.String getVenueDescription() -> getVenueDescription
    void setVenueDescription(java.lang.String) -> setVenueDescription
    float getLatitude() -> getLatitude
    void setLatitude(float) -> setLatitude
    float getLongitude() -> getLongitude
    void setLongitude(float) -> setLongitude
    java.lang.String getTitleUrl() -> getTitleUrl
    void setTitleUrl(java.lang.String) -> setTitleUrl
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMusicUrl() -> getMusicUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    java.lang.String getSite() -> getSite
    void setSite(java.lang.String) -> setSite
    java.lang.String getSiteUrl() -> getSiteUrl
    void setSiteUrl(java.lang.String) -> setSiteUrl
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAuthor() -> getAuthor
    void setAuthor(java.lang.String) -> setAuthor
    android.graphics.Bitmap getImageData() -> getImageData
    void setImageData(android.graphics.Bitmap) -> setImageData
    int getShareType() -> getShareType
    void setShareType(int) -> setShareType
    int getScence() -> getScence
    void setScence(int) -> setScence
    java.lang.String getExtInfo() -> getExtInfo
    void setExtInfo(java.lang.String) -> setExtInfo
    java.lang.String[] getCustomFlag() -> getCustomFlag
    void setCustomFlag(java.lang.String[]) -> setCustomFlag
    java.lang.String getExecuteUrl() -> getExecuteUrl
    void setExecuteUrl() -> setExecuteUrl
    java.lang.String getInstallUrl() -> getInstallUrl
    void setInstallUrl() -> setInstallUrl
    boolean isShareTencentWeibo() -> isShareTencentWeibo
    void setShareTencentWeibo(boolean) -> setShareTencentWeibo
    java.lang.String[] getImageArray() -> getImageArray
    void setImageArray(java.lang.String[]) -> setImageArray
cn.sharesdk.framework.h -> cn.sharesdk.framework.h:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    int c() -> c
    void b(cn.sharesdk.framework.authorize.AuthorizeListener) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.i -> cn.sharesdk.framework.i:
    cn.sharesdk.framework.Platform a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.PlatformDb c -> c
    cn.sharesdk.framework.d d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    void a(java.lang.String) -> a
    int a() -> a
    int b() -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener c() -> c
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean f() -> f
    void a(java.lang.String[]) -> a
    boolean j() -> j
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void c(int,java.lang.Object) -> c
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,int,int) -> a
    void c(java.lang.String) -> c
    void a(int,int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb g() -> g
    void h() -> h
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String k() -> k
    cn.sharesdk.framework.PlatformActionListener i() -> i
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    boolean a(cn.sharesdk.framework.i) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.i) -> b
cn.sharesdk.framework.j -> cn.sharesdk.framework.j:
    java.lang.String[] a -> a
    cn.sharesdk.framework.i b -> b
    void run() -> run
cn.sharesdk.framework.k -> cn.sharesdk.framework.k:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.i c -> c
    void run() -> run
cn.sharesdk.framework.l -> cn.sharesdk.framework.l:
    android.os.Handler a -> a
    java.lang.String b -> b
    void a() -> a
    void a(int,int,java.lang.Object) -> a
    void b() -> b
    void b(int,int,java.lang.Object) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
cn.sharesdk.framework.m -> cn.sharesdk.framework.m:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message) -> onTooManyRedirects
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
cn.sharesdk.framework.n -> cn.sharesdk.framework.n:
    boolean a -> a
    java.util.ArrayList a(android.content.Context) -> a
    android.content.pm.PackageInfo c(android.content.Context) -> c
    java.util.ArrayList a(android.content.pm.PackageInfo,android.content.Context) -> a
    java.util.ArrayList d(android.content.Context) -> d
    void a(java.util.ArrayList) -> a
    void a(android.content.Context,java.lang.String,android.os.Handler,boolean,int) -> a
    void b(android.content.Context) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,android.graphics.Bitmap) -> a
    java.lang.String a() -> a
    int b() -> b
    void a(int,int,java.util.HashMap) -> a
cn.sharesdk.framework.network.HttpResponseCallback -> cn.sharesdk.framework.network.HttpResponseCallback:
    void onResponse(org.apache.http.HttpResponse) -> onResponse
cn.sharesdk.framework.network.OnReadListener -> cn.sharesdk.framework.network.OnReadListener:
    void onRead(long) -> onRead
cn.sharesdk.framework.network.ProgressCallback -> cn.sharesdk.framework.network.ProgressCallback:
    void onProgress(long,long) -> onProgress
cn.sharesdk.framework.network.RawNetworkCallback -> cn.sharesdk.framework.network.RawNetworkCallback:
    void onResponse(java.io.InputStream) -> onResponse
cn.sharesdk.framework.network.a -> cn.sharesdk.framework.network.a:
    byte[] a() -> a
cn.sharesdk.framework.network.b -> cn.sharesdk.framework.network.b:
    cn.sharesdk.framework.network.a a -> a
    cn.sharesdk.framework.network.b a(byte[]) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.c -> cn.sharesdk.framework.network.c:
    java.io.InputStream a -> a
    long b -> b
    cn.sharesdk.framework.network.OnReadListener c -> c
    int read() -> read
    int read(byte[],int,int) -> read
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    void reset() -> reset
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void a(cn.sharesdk.framework.network.OnReadListener) -> a
cn.sharesdk.framework.network.d -> cn.sharesdk.framework.network.d:
    java.io.File a -> a
    void a(java.io.File) -> a
    void a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.e -> cn.sharesdk.framework.network.e:
    long a -> a
    cn.sharesdk.framework.network.OnReadListener b -> b
    java.io.InputStream a() -> a
    long b() -> b
    org.apache.http.entity.InputStreamEntity c() -> c
cn.sharesdk.framework.network.f -> cn.sharesdk.framework.network.f:
    java.lang.String a -> a
    java.lang.Object b -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.network.g -> cn.sharesdk.framework.network.g:
    java.util.ArrayList a -> a
    cn.sharesdk.framework.network.g a(cn.sharesdk.framework.network.e) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.h -> cn.sharesdk.framework.network.h:
    java.util.ArrayList a -> a
    int b -> b
    void a(java.io.InputStream) -> a
    boolean a() -> a
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
cn.sharesdk.framework.network.i -> cn.sharesdk.framework.network.i:
    int a -> a
    int b -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,cn.sharesdk.framework.network.HttpResponseCallback) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,cn.sharesdk.framework.network.RawNetworkCallback) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.util.ArrayList) -> a
    org.apache.http.client.HttpClient a() -> a
cn.sharesdk.framework.network.j -> cn.sharesdk.framework.network.j:
    java.util.HashMap a -> a
    cn.sharesdk.framework.network.i b -> b
    void onResponse(org.apache.http.HttpResponse) -> onResponse
cn.sharesdk.framework.network.k -> cn.sharesdk.framework.network.k:
    cn.sharesdk.framework.network.k c -> c
    cn.sharesdk.framework.network.k a() -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.lang.String,int) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,cn.sharesdk.framework.network.RawNetworkCallback,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.network.l -> cn.sharesdk.framework.network.l:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
cn.sharesdk.framework.network.m -> cn.sharesdk.framework.network.m:
    cn.sharesdk.framework.network.l a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
cn.sharesdk.framework.network.n -> cn.sharesdk.framework.network.n:
    java.lang.StringBuilder a -> a
    cn.sharesdk.framework.network.n a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.o -> cn.sharesdk.framework.o:
    cn.sharesdk.framework.n a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.p -> cn.sharesdk.framework.p:
    cn.sharesdk.framework.p$a b -> b
    android.content.Context c -> c
    java.util.HashMap d -> d
    java.util.ArrayList e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.util.HashMap j -> j
    java.lang.String k -> k
    boolean l -> l
    java.lang.String m -> m
    boolean n -> n
    boolean o -> o
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void a() -> a
    void i() -> i
    void j() -> j
    void a(android.os.Message) -> a
    void k() -> k
    void l() -> l
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void a(java.lang.Class) -> a
    void b(java.lang.Class) -> b
    cn.sharesdk.framework.Service c(java.lang.Class) -> c
    void d(java.lang.Class) -> d
    void e(java.lang.Class) -> e
    cn.sharesdk.framework.Platform b(java.lang.String) -> b
    cn.sharesdk.framework.Platform[] c() -> c
    java.lang.String d() -> d
    int e() -> e
    void a(int) -> a
    void b(int) -> b
    void b(boolean) -> b
    boolean f() -> f
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(int) -> c
    int c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean g() -> g
    boolean h() -> h
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    java.lang.String a(cn.sharesdk.framework.p) -> a
cn.sharesdk.framework.p$a -> cn.sharesdk.framework.p$a:
    cn.sharesdk.framework.p$a a -> a
    cn.sharesdk.framework.p$a b -> b
    cn.sharesdk.framework.p$a c -> c
    cn.sharesdk.framework.p$a[] d -> d
    cn.sharesdk.framework.p$a[] values() -> values
    cn.sharesdk.framework.p$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.q -> cn.sharesdk.framework.q:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.p b -> b
    void run() -> run
cn.sharesdk.framework.r -> cn.sharesdk.framework.r:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.statistics.NewAppReceiver -> cn.sharesdk.framework.statistics.NewAppReceiver:
    java.lang.String[] a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.statistics.NewAppReceiver$a -> cn.sharesdk.framework.statistics.NewAppReceiver$a:
    cn.sharesdk.framework.utils.f a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
    long b() -> b
    void a(long) -> a
cn.sharesdk.framework.statistics.NewAppReceiver$b -> cn.sharesdk.framework.statistics.NewAppReceiver$b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.sharesdk.framework.statistics.a -> cn.sharesdk.framework.statistics.a:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a d -> d
    java.lang.String b -> b
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String c -> c
    boolean h -> h
    cn.sharesdk.framework.network.i i -> i
    cn.sharesdk.framework.statistics.a a(android.content.Context) -> a
    void a(boolean) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    long a() -> a
    long a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.util.ArrayList) -> a
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    java.lang.String g(java.lang.String) -> g
    java.lang.String a(java.lang.String,cn.sharesdk.framework.statistics.a$a) -> a
    java.lang.String a(android.graphics.Bitmap,cn.sharesdk.framework.statistics.a$a) -> a
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(android.graphics.Bitmap) -> a
    void b() -> b
    boolean c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(java.lang.String,byte[]) -> a
    java.lang.String h(java.lang.String) -> h
    org.json.JSONObject g() -> g
    java.lang.String a(java.lang.String,java.lang.String,int,boolean,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String d(java.lang.String,java.lang.String) -> d
    java.util.HashMap e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String f(java.lang.String) -> f
    java.lang.String b(java.lang.String,java.lang.String) -> b
cn.sharesdk.framework.statistics.a$a -> cn.sharesdk.framework.statistics.a$a:
    cn.sharesdk.framework.statistics.a$a a -> a
    cn.sharesdk.framework.statistics.a$a b -> b
    cn.sharesdk.framework.statistics.a$a[] c -> c
    cn.sharesdk.framework.statistics.a$a[] values() -> values
    cn.sharesdk.framework.statistics.a$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.statistics.a.a -> cn.sharesdk.framework.statistics.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.statistics.a.b -> cn.sharesdk.framework.statistics.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.a b -> b
    cn.sharesdk.framework.statistics.a.b c -> c
    cn.sharesdk.framework.statistics.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.statistics.a.c -> cn.sharesdk.framework.statistics.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.sharesdk.framework.statistics.a.c c -> c
    cn.sharesdk.framework.statistics.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,int) -> a
    int c(java.lang.String) -> c
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String e() -> e
    void a(long) -> a
    java.lang.Long f() -> f
cn.sharesdk.framework.statistics.a.d -> cn.sharesdk.framework.statistics.a.d:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.statistics.a.e -> cn.sharesdk.framework.statistics.a.e:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.statistics.b -> cn.sharesdk.framework.statistics.b:
    cn.sharesdk.framework.statistics.b b -> b
    android.content.Context c -> c
    cn.sharesdk.framework.utils.b d -> d
    cn.sharesdk.framework.statistics.a e -> e
    java.lang.String f -> f
    android.os.Handler g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    boolean l -> l
    cn.sharesdk.framework.statistics.b a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void b(cn.sharesdk.framework.statistics.b.c) -> b
    void c(android.os.Message) -> c
    void c(cn.sharesdk.framework.statistics.b.c) -> c
    void c() -> c
    boolean d() -> d
    void e() -> e
cn.sharesdk.framework.statistics.b.a -> cn.sharesdk.framework.statistics.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.b -> cn.sharesdk.framework.statistics.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.c -> cn.sharesdk.framework.statistics.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.d -> cn.sharesdk.framework.statistics.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.e -> cn.sharesdk.framework.statistics.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.f -> cn.sharesdk.framework.statistics.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.statistics.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.f$a -> cn.sharesdk.framework.statistics.b.f$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.g -> cn.sharesdk.framework.statistics.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.utils.BitmapHelper -> cn.sharesdk.framework.utils.BitmapHelper:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    java.lang.String saveViewToImage(android.view.View) -> saveViewToImage
    java.lang.String saveViewToImage(android.view.View,int,int) -> saveViewToImage
    android.graphics.Bitmap captureView(android.view.View,int,int) -> captureView
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> blur
    android.graphics.Bitmap a(android.graphics.Bitmap,int,boolean) -> a
    android.graphics.Bitmap roundBitmap(android.graphics.Bitmap,int,int,float,float,float,float) -> roundBitmap
    int[] fixRect(int[],int[]) -> fixRect
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> saveBitmap
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap) -> saveBitmap
    android.graphics.Bitmap$CompressFormat getBmpFormat(byte[]) -> getBmpFormat
    android.graphics.Bitmap$CompressFormat getBmpFormat(java.lang.String) -> getBmpFormat
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.framework.utils.Escaper -> cn.sharesdk.framework.utils.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
cn.sharesdk.framework.utils.R -> cn.sharesdk.framework.utils.R:
    java.lang.String a -> a
    float b -> b
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int[] getScreenSize(android.content.Context) -> getScreenSize
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getResId(java.lang.Class,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    int getRawRes(android.content.Context,java.lang.String) -> getRawRes
    void setCacheRoot(java.lang.String) -> setCacheRoot
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    java.lang.String toWordText(java.lang.String,int) -> toWordText
    long strToDate(java.lang.String) -> strToDate
    long dateStrToLong(java.lang.String) -> dateStrToLong
    java.util.Date longToDate(long) -> longToDate
    java.lang.String longToTime(long,int) -> longToTime
    long parseTwitterDate(java.lang.String) -> parseTwitterDate
    int[] covertTimeInYears(long) -> covertTimeInYears
    android.net.Uri pathToContentUri(android.content.Context,java.lang.String) -> pathToContentUri
    java.lang.String contentUriToPath(android.content.Context,android.net.Uri) -> contentUriToPath
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodeUrl(java.util.ArrayList) -> encodeUrl
    android.os.Bundle urlToBundle(java.lang.String) -> urlToBundle
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    void copyFile(java.io.FileInputStream,java.io.FileOutputStream) -> copyFile
cn.sharesdk.framework.utils.UIHandler -> cn.sharesdk.framework.utils.UIHandler:
    java.lang.String[] prays -> prays
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void reset() -> reset
    void printPray() -> printPray
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$000(android.os.Message) -> access$000
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.utils.a:
    cn.sharesdk.framework.utils.d a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String a(byte[],int,int) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    byte[] c(byte[]) -> c
    byte[] a(java.io.InputStream) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.utils.b:
    android.content.Context a -> a
    cn.sharesdk.framework.utils.b b -> b
    cn.sharesdk.framework.utils.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.Object b(java.lang.String) -> b
    java.lang.String m() -> m
    java.lang.String n() -> n
    int o() -> o
    boolean A() -> A
    boolean B() -> B
    java.lang.String p() -> p
    java.lang.String C() -> C
    void c(java.lang.String) -> c
    java.lang.String q() -> q
    java.lang.String r() -> r
    int s() -> s
    java.lang.String t() -> t
    java.util.ArrayList a(boolean) -> a
    boolean a(android.content.pm.PackageInfo) -> a
    java.lang.String u() -> u
    boolean a(java.lang.String) -> a
    java.lang.String v() -> v
    boolean w() -> w
    java.lang.String x() -> x
    java.lang.String y() -> y
    java.lang.String z() -> z
cn.sharesdk.framework.utils.b$1 -> cn.sharesdk.framework.utils.b$1:
cn.sharesdk.framework.utils.b$a -> cn.sharesdk.framework.utils.b$a:
    boolean a -> a
    java.util.concurrent.BlockingQueue c -> c
    cn.sharesdk.framework.utils.b b -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder a() -> a
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.utils.c:
    char[] a -> a
    java.lang.String a(byte[]) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.utils.d:
    java.util.HashMap a(java.lang.String) -> a
    java.util.HashMap a(org.json.JSONObject) -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
    java.lang.String a(java.util.HashMap) -> a
    org.json.JSONObject b(java.util.HashMap) -> b
    boolean a(java.lang.Object) -> a
    java.util.ArrayList b(java.lang.Object) -> b
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.utils.e:
    android.content.Context c -> c
    java.lang.String d -> d
    cn.sharesdk.framework.utils.e$a a -> a
    cn.sharesdk.framework.utils.e$b b -> b
    void a(android.content.Context) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.Object[]) -> b
    int b(java.lang.Throwable) -> b
    int c(java.lang.Throwable) -> c
    int c(java.lang.Object,java.lang.Object[]) -> c
    int a(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> a
    android.content.Context a() -> a
    java.lang.String b() -> b
cn.sharesdk.framework.utils.e$a -> cn.sharesdk.framework.utils.e$a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
cn.sharesdk.framework.utils.e$b -> cn.sharesdk.framework.utils.e$b:
    int a(int,java.lang.String) -> a
    int b(int,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.utils.f:
    java.io.File a -> a
    java.util.HashMap b -> b
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String,java.lang.Object) -> b
    java.lang.Object e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Long) -> a
    long c(java.lang.String) -> c
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object d(java.lang.String) -> d
cn.sharesdk.framework.utils.g -> cn.sharesdk.framework.utils.g:
    cn.sharesdk.framework.utils.g$b a -> a
    cn.sharesdk.framework.utils.h b -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    cn.sharesdk.framework.utils.g$b a() -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.util.ArrayList b(java.lang.String,java.util.ArrayList) -> b
    java.util.ArrayList b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> b
    java.util.ArrayList c(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> c
    void a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String,java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(long,java.util.ArrayList,java.lang.String) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.util.ArrayList a(long,java.lang.String) -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.g$1 -> cn.sharesdk.framework.utils.g$1:
    int[] a -> a
cn.sharesdk.framework.utils.g$a -> cn.sharesdk.framework.utils.g$a:
    cn.sharesdk.framework.utils.g$a a -> a
    cn.sharesdk.framework.utils.g$a b -> b
    cn.sharesdk.framework.utils.g$a[] c -> c
    cn.sharesdk.framework.utils.g$a[] values() -> values
    cn.sharesdk.framework.utils.g$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.utils.g$b -> cn.sharesdk.framework.utils.g$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.sharesdk.framework.utils.h -> cn.sharesdk.framework.utils.h:
    char[] a -> a
    char[] b -> b
    boolean c -> c
    boolean[] d -> d
    boolean[] a(java.lang.String) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    char[] a(int) -> a
cn.sharesdk.framework.utils.i -> cn.sharesdk.framework.utils.i:
    java.lang.Object a(java.lang.Object) -> a
cn.sharesdk.framework.utils.j -> cn.sharesdk.framework.utils.j:
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.utils.k -> cn.sharesdk.framework.utils.k:
    java.lang.ThreadLocal a -> a
    char[] a(int) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String a(java.lang.String,int) -> a
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int b(java.lang.CharSequence,int,int) -> b
    char[] a(char[],int,int) -> a
cn.sharesdk.framework.utils.l -> cn.sharesdk.framework.utils.l:
    int a -> a
    char[] b -> b
    java.lang.Appendable c -> c
    cn.sharesdk.framework.utils.k d -> d
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void a(char[],int) -> a
cn.sharesdk.framework.utils.m -> cn.sharesdk.framework.utils.m:
    char[] a() -> a
    java.lang.Object initialValue() -> initialValue
cn.sharesdk.framework.utils.n -> cn.sharesdk.framework.utils.n:
    java.util.HashMap a(java.lang.String) -> a
cn.sharesdk.framework.utils.n$a -> cn.sharesdk.framework.utils.n$a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap a() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
cn.sharesdk.onekeyshare.CustomerLogo -> cn.sharesdk.onekeyshare.CustomerLogo:
    java.lang.String label -> label
    android.graphics.Bitmap logo -> logo
    android.view.View$OnClickListener listener -> listener
cn.sharesdk.onekeyshare.EditPage -> cn.sharesdk.onekeyshare.EditPage:
    int MAX_TEXT_COUNT -> MAX_TEXT_COUNT
    int DIM_COLOR -> DIM_COLOR
    java.util.HashMap reqData -> reqData
    android.widget.RelativeLayout rlPage -> rlPage
    android.widget.LinearLayout llBody -> llBody
    android.widget.RelativeLayout rlThumb -> rlThumb
    android.widget.EditText etContent -> etContent
    android.widget.TextView tvCounter -> tvCounter
    android.widget.ImageView ivPin -> ivPin
    android.widget.ImageView ivImage -> ivImage
    android.graphics.Bitmap image -> image
    boolean shareImage -> shareImage
    android.widget.LinearLayout llPlat -> llPlat
    cn.sharesdk.framework.Platform[] platformList -> platformList
    android.view.View[] views -> views
    boolean dialogMode -> dialogMode
    android.view.View tmpBgView -> tmpBgView
    android.graphics.drawable.Drawable background -> background
    java.util.ArrayList toFriendList -> toFriendList
    android.view.View llTitle -> llTitle
    void setShareData(java.util.HashMap) -> setShareData
    void setDialogMode() -> setDialogMode
    void setActivity(android.app.Activity) -> setActivity
    void setBackGround(android.view.View) -> setBackGround
    void onCreate() -> onCreate
    android.widget.RelativeLayout getPageView() -> getPageView
    android.view.View getPageTitle() -> getPageTitle
    android.widget.LinearLayout getPageBody() -> getPageBody
    android.widget.LinearLayout getMainBody() -> getMainBody
    android.widget.RelativeLayout getThumbView() -> getThumbView
    void showThumb() -> showThumb
    android.widget.LinearLayout getBodyBottom() -> getBodyBottom
    android.widget.LinearLayout getAtLine(java.lang.String) -> getAtLine
    android.view.View getSep() -> getSep
    android.widget.LinearLayout getPlatformList() -> getPlatformList
    android.widget.ImageView getImagePin() -> getImagePin
    void genBackground() -> genBackground
    java.lang.String getName(java.lang.String) -> getName
    void onClick(android.view.View) -> onClick
    void afterPlatformListGot() -> afterPlatformListGot
    android.graphics.Bitmap getPlatLogo(cn.sharesdk.framework.Platform) -> getPlatLogo
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.HashMap) -> onResult
    void hideSoftInput() -> hideSoftInput
    boolean onFinish() -> onFinish
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    cn.sharesdk.framework.Platform[] access$002(cn.sharesdk.onekeyshare.EditPage,cn.sharesdk.framework.Platform[]) -> access$002
    cn.sharesdk.framework.Platform[] access$000(cn.sharesdk.onekeyshare.EditPage) -> access$000
    android.graphics.Bitmap access$100(cn.sharesdk.onekeyshare.EditPage) -> access$100
    android.app.Activity access$200(cn.sharesdk.onekeyshare.EditPage) -> access$200
    android.widget.RelativeLayout access$300(cn.sharesdk.onekeyshare.EditPage) -> access$300
    android.widget.ImageView access$400(cn.sharesdk.onekeyshare.EditPage) -> access$400
    boolean access$502(cn.sharesdk.onekeyshare.EditPage,boolean) -> access$502
    java.util.HashMap access$600(cn.sharesdk.onekeyshare.EditPage) -> access$600
    android.graphics.Bitmap access$102(cn.sharesdk.onekeyshare.EditPage,android.graphics.Bitmap) -> access$102
    android.app.Activity access$700(cn.sharesdk.onekeyshare.EditPage) -> access$700
    boolean access$500(cn.sharesdk.onekeyshare.EditPage) -> access$500
    android.widget.ImageView access$800(cn.sharesdk.onekeyshare.EditPage) -> access$800
    android.app.Activity access$900(cn.sharesdk.onekeyshare.EditPage) -> access$900
    android.widget.LinearLayout access$1000(cn.sharesdk.onekeyshare.EditPage) -> access$1000
    void access$1100(cn.sharesdk.onekeyshare.EditPage) -> access$1100
    android.graphics.drawable.Drawable access$1200(cn.sharesdk.onekeyshare.EditPage) -> access$1200
    android.widget.RelativeLayout access$1300(cn.sharesdk.onekeyshare.EditPage) -> access$1300
cn.sharesdk.onekeyshare.EditPage$1 -> cn.sharesdk.onekeyshare.EditPage$1:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.EditPage$1$1 -> cn.sharesdk.onekeyshare.EditPage$1$1:
    cn.sharesdk.onekeyshare.EditPage$1 this$1 -> this$1
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.EditPage$2 -> cn.sharesdk.onekeyshare.EditPage$2:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.EditPage$3 -> cn.sharesdk.onekeyshare.EditPage$3:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.EditPage$4 -> cn.sharesdk.onekeyshare.EditPage$4:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.EditPage$4$1 -> cn.sharesdk.onekeyshare.EditPage$4$1:
    cn.sharesdk.onekeyshare.EditPage$4 this$1 -> this$1
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.EditPage$5 -> cn.sharesdk.onekeyshare.EditPage$5:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.EditPage$6 -> cn.sharesdk.onekeyshare.EditPage$6:
    int val$postSel -> val$postSel
    int val$dp_24 -> val$dp_24
    int val$dp_9 -> val$dp_9
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.EditPage$7 -> cn.sharesdk.onekeyshare.EditPage$7:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.EditPage$8 -> cn.sharesdk.onekeyshare.EditPage$8:
    cn.sharesdk.onekeyshare.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.FollowList -> cn.sharesdk.onekeyshare.FollowList:
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.FollowList$FollowAdapter adapter -> adapter
    int lastPosition -> lastPosition
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.sharesdk.onekeyshare.FollowList$1 -> cn.sharesdk.onekeyshare.FollowList$1:
cn.sharesdk.onekeyshare.FollowList$FollowAdapter -> cn.sharesdk.onekeyshare.FollowList$FollowAdapter:
    int FOLLOW_LIST_EMPTY -> FOLLOW_LIST_EMPTY
    int curPage -> curPage
    java.util.ArrayList follows -> follows
    java.util.HashMap map -> map
    boolean hasNext -> hasNext
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.FollowList$PRTHeader llHeader -> llHeader
    android.graphics.Bitmap bmChd -> bmChd
    android.graphics.Bitmap bmUnch -> bmUnch
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void next() -> next
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.sharesdk.onekeyshare.FollowList$Following getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    java.util.ArrayList parseList(java.util.HashMap) -> parseList
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> onReversed
    java.lang.Object getItem(int) -> getItem
cn.sharesdk.onekeyshare.FollowList$FollowListItem -> cn.sharesdk.onekeyshare.FollowList$FollowListItem:
    m.framework.ui.widget.asyncview.AsyncImageView aivIcon -> aivIcon
    android.widget.TextView tvName -> tvName
    android.widget.TextView tvSign -> tvSign
    android.widget.ImageView ivCheck -> ivCheck
cn.sharesdk.onekeyshare.FollowList$Following -> cn.sharesdk.onekeyshare.FollowList$Following:
    boolean checked -> checked
    java.lang.String screeName -> screeName
    java.lang.String description -> description
    java.lang.String uid -> uid
    java.lang.String icon -> icon
cn.sharesdk.onekeyshare.FollowList$PRTHeader -> cn.sharesdk.onekeyshare.FollowList$PRTHeader:
    android.widget.TextView tvHeader -> tvHeader
    cn.sharesdk.onekeyshare.FollowList$RotateImageView ivArrow -> ivArrow
    android.widget.ProgressBar pbRefreshing -> pbRefreshing
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void reverse() -> reverse
cn.sharesdk.onekeyshare.FollowList$RotateImageView -> cn.sharesdk.onekeyshare.FollowList$RotateImageView:
    int rotation -> rotation
    void setRotation(int) -> setRotation
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.OnekeyShare -> cn.sharesdk.onekeyshare.OnekeyShare:
    int MSG_TOAST -> MSG_TOAST
    int MSG_ACTION_CCALLBACK -> MSG_ACTION_CCALLBACK
    int MSG_CANCEL_NOTIFY -> MSG_CANCEL_NOTIFY
    android.widget.FrameLayout flPage -> flPage
    cn.sharesdk.onekeyshare.PlatformGridView grid -> grid
    android.widget.Button btnCancel -> btnCancel
    boolean finishing -> finishing
    boolean canceled -> canceled
    java.util.HashMap reqMap -> reqMap
    java.util.ArrayList customers -> customers
    int notifyIcon -> notifyIcon
    java.lang.String notifyTitle -> notifyTitle
    boolean silent -> silent
    cn.sharesdk.framework.PlatformActionListener callback -> callback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    boolean dialogMode -> dialogMode
    boolean disableSSO -> disableSSO
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    void show(android.content.Context) -> show
    void setNotification(int,java.lang.String) -> setNotification
    void setAddress(java.lang.String) -> setAddress
    void setTitle(java.lang.String) -> setTitle
    void setTitleUrl(java.lang.String) -> setTitleUrl
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    void setUrl(java.lang.String) -> setUrl
    void setFilePath(java.lang.String) -> setFilePath
    void setComment(java.lang.String) -> setComment
    void setSite(java.lang.String) -> setSite
    void setSiteUrl(java.lang.String) -> setSiteUrl
    void setVenueName(java.lang.String) -> setVenueName
    void setVenueDescription(java.lang.String) -> setVenueDescription
    void setLatitude(float) -> setLatitude
    void setLongitude(float) -> setLongitude
    void setSilent(boolean) -> setSilent
    void setPlatform(java.lang.String) -> setPlatform
    void setInstallUrl(java.lang.String) -> setInstallUrl
    void setExecuteUrl(java.lang.String) -> setExecuteUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    void setCallback(cn.sharesdk.framework.PlatformActionListener) -> setCallback
    cn.sharesdk.framework.PlatformActionListener getCallback() -> getCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback getShareContentCustomizeCallback() -> getShareContentCustomizeCallback
    void setCustomerLogo(android.graphics.Bitmap,java.lang.String,android.view.View$OnClickListener) -> setCustomerLogo
    void disableSSOWhenAuthorize() -> disableSSOWhenAuthorize
    void setDialogMode() -> setDialogMode
    void addHiddenPlatform(java.lang.String) -> addHiddenPlatform
    void setViewToShare(android.view.View) -> setViewToShare
    void setImageArray(java.lang.String[]) -> setImageArray
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void onCreate() -> onCreate
    void initPageView() -> initPageView
    void onClick(android.view.View) -> onClick
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onFinish() -> onFinish
    void share(java.util.HashMap) -> share
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> showNotification
    void setShareFromQQAuthSupport(boolean) -> setShareFromQQAuthSupport
    void access$001(cn.sharesdk.onekeyshare.OnekeyShare) -> access$001
cn.sharesdk.onekeyshare.OnekeyShare$1 -> cn.sharesdk.onekeyshare.OnekeyShare$1:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> this$0
    void onResult(java.util.HashMap) -> onResult
cn.sharesdk.onekeyshare.OnekeyShare$2 -> cn.sharesdk.onekeyshare.OnekeyShare$2:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.sharesdk.onekeyshare.PicViewer -> cn.sharesdk.onekeyshare.PicViewer:
    android.widget.ImageView ivViewer -> ivViewer
    android.graphics.Bitmap pic -> pic
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.PlatformGridView -> cn.sharesdk.onekeyshare.PlatformGridView:
    int MIN_CLICK_INTERVAL -> MIN_CLICK_INTERVAL
    int MSG_PLATFORM_LIST_GOT -> MSG_PLATFORM_LIST_GOT
    int LINE_PER_PAGE -> LINE_PER_PAGE
    int COLUMN_PER_LINE -> COLUMN_PER_LINE
    int PAGE_SIZE -> PAGE_SIZE
    m.framework.ui.widget.viewpager.ViewPagerClassic pager -> pager
    android.graphics.Bitmap grayPoint -> grayPoint
    android.graphics.Bitmap whitePoint -> whitePoint
    boolean silent -> silent
    cn.sharesdk.framework.Platform[] platformList -> platformList
    java.util.HashMap reqData -> reqData
    cn.sharesdk.onekeyshare.OnekeyShare parent -> parent
    java.util.ArrayList customers -> customers
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    long lastClickTime -> lastClickTime
    void init(android.content.Context) -> init
    void calPageSize() -> calPageSize
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> afterPlatformListGot
    void onConfigurationChanged() -> onConfigurationChanged
    void setData(java.util.HashMap,boolean) -> setData
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(cn.sharesdk.onekeyshare.OnekeyShare) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    cn.sharesdk.framework.Platform[] access$000(cn.sharesdk.onekeyshare.PlatformGridView) -> access$000
    cn.sharesdk.framework.Platform[] access$002(cn.sharesdk.onekeyshare.PlatformGridView,cn.sharesdk.framework.Platform[]) -> access$002
    cn.sharesdk.onekeyshare.OnekeyShare access$100(cn.sharesdk.onekeyshare.PlatformGridView) -> access$100
    java.util.HashMap access$200(cn.sharesdk.onekeyshare.PlatformGridView) -> access$200
    java.util.ArrayList access$300(cn.sharesdk.onekeyshare.PlatformGridView) -> access$300
    int access$400(cn.sharesdk.onekeyshare.PlatformGridView) -> access$400
    int access$500(cn.sharesdk.onekeyshare.PlatformGridView) -> access$500
cn.sharesdk.onekeyshare.PlatformGridView$1 -> cn.sharesdk.onekeyshare.PlatformGridView$1:
    cn.sharesdk.onekeyshare.PlatformGridView this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.PlatformGridView$2 -> cn.sharesdk.onekeyshare.PlatformGridView$2:
    cn.sharesdk.onekeyshare.PlatformGridView this$0 -> this$0
    void onResult(java.util.HashMap) -> onResult
cn.sharesdk.onekeyshare.PlatformGridView$GridView -> cn.sharesdk.onekeyshare.PlatformGridView$GridView:
    java.lang.Object[] beans -> beans
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter platformAdapter -> platformAdapter
    void setData(int,java.lang.Object[]) -> setData
    void init() -> init
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> getView
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> getIcon
    java.lang.String getName(cn.sharesdk.framework.Platform) -> getName
cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter -> cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter:
    cn.sharesdk.onekeyshare.PlatformGridView$GridView[] girds -> girds
    java.util.List logos -> logos
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.PlatformGridView platformGridView -> platformGridView
    int getCount() -> getCount
    android.view.View getView(int,android.view.ViewGroup) -> getView
    void onScreenChange(int,int) -> onScreenChange
    cn.sharesdk.onekeyshare.PlatformGridView access$600(cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter) -> access$600
    android.view.View$OnClickListener access$700(cn.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter) -> access$700
cn.sharesdk.onekeyshare.Shake2Share -> cn.sharesdk.onekeyshare.Shake2Share:
    int UPDATE_INTERVAL -> UPDATE_INTERVAL
    int SHAKE_THRESHOLD -> SHAKE_THRESHOLD
    cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener listener -> listener
    android.hardware.SensorManager mSensorManager -> mSensorManager
    long mLastUpdateTime -> mLastUpdateTime
    float mLastX -> mLastX
    float mLastY -> mLastY
    float mLastZ -> mLastZ
    boolean shaken -> shaken
    void setOnShakeListener(cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener) -> setOnShakeListener
    void setActivity(android.app.Activity) -> setActivity
    void onCreate() -> onCreate
    void startSensor() -> startSensor
    void onDestroy() -> onDestroy
    void stopSensor() -> stopSensor
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener -> cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener:
    void onShake() -> onShake
cn.sharesdk.onekeyshare.ShareContentCustomizeCallback -> cn.sharesdk.onekeyshare.ShareContentCustomizeCallback:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> onShare
cn.sharesdk.onekeyshare.ShareCore -> cn.sharesdk.onekeyshare.ShareCore:
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> share
    boolean isUseClientToShare(java.lang.String) -> isUseClientToShare
    boolean canAuthorize(android.content.Context,java.lang.String) -> canAuthorize
    boolean canGetUserInfo(android.content.Context,java.lang.String) -> canGetUserInfo
cn.sharesdk.sina.weibo.SinaWeibo -> cn.sharesdk.sina.weibo.SinaWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.PlatformDb a(cn.sharesdk.sina.weibo.SinaWeibo) -> a
    cn.sharesdk.framework.PlatformDb b(cn.sharesdk.sina.weibo.SinaWeibo) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.sina.weibo.SinaWeibo) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.sina.weibo.SinaWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.sina.weibo.SinaWeibo) -> e
    void a(cn.sharesdk.sina.weibo.SinaWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.sina.weibo.SinaWeibo) -> f
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.sina.weibo.SinaWeibo) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.sina.weibo.SinaWeibo) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.sina.weibo.SinaWeibo) -> i
cn.sharesdk.sina.weibo.SinaWeibo$ShareParams -> cn.sharesdk.sina.weibo.SinaWeibo$ShareParams:
    java.lang.String imageUrl -> imageUrl
    float longitude -> longitude
    float latitude -> latitude
cn.sharesdk.sina.weibo.a -> cn.sharesdk.sina.weibo.a:
    cn.sharesdk.sina.weibo.e a -> a
    cn.sharesdk.sina.weibo.SinaWeibo b -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.b -> cn.sharesdk.sina.weibo.b:
    boolean d -> d
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,java.lang.String) -> a
    android.content.Intent b(java.lang.String) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener a(cn.sharesdk.sina.weibo.b) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.sina.weibo.b) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.sina.weibo.b) -> c
cn.sharesdk.sina.weibo.c -> cn.sharesdk.sina.weibo.c:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.sina.weibo.b c -> c
    void run() -> run
cn.sharesdk.sina.weibo.d -> cn.sharesdk.sina.weibo.d:
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    void a() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(android.content.Intent) -> b
    void a(int,int,android.content.Intent) -> a
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
cn.sharesdk.sina.weibo.e -> cn.sharesdk.sina.weibo.e:
    cn.sharesdk.sina.weibo.e b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String[] g -> g
    cn.sharesdk.sina.weibo.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap b(int,int,java.lang.String) -> b
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.sina.weibo.e,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.sina.weibo.f -> cn.sharesdk.sina.weibo.f:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.sina.weibo.e b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.QQ -> cn.sharesdk.tencent.qq.QQ:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.QQ) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qq.QQ) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qq.QQ) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qq.QQ) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qq.QQ) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qq.QQ) -> f
    void a(cn.sharesdk.tencent.qq.QQ,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.tencent.qq.QQ) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.tencent.qq.QQ) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.tencent.qq.QQ) -> i
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qq.QQ) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qq.QQ) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qq.QQ) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qq.QQ) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qq.QQ) -> n
cn.sharesdk.tencent.qq.QQ$ShareParams -> cn.sharesdk.tencent.qq.QQ$ShareParams:
    java.lang.String title -> title
    java.lang.String titleUrl -> titleUrl
    java.lang.String imageUrl -> imageUrl
    java.lang.String musicUrl -> musicUrl
cn.sharesdk.tencent.qq.QQClientNotExistException -> cn.sharesdk.tencent.qq.QQClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.QQWebShareAdapter -> cn.sharesdk.tencent.qq.QQWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.a -> cn.sharesdk.tencent.qq.a:
    cn.sharesdk.tencent.qq.e a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.b -> cn.sharesdk.tencent.qq.b:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qq.c -> cn.sharesdk.tencent.qq.c:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
cn.sharesdk.tencent.qq.d -> cn.sharesdk.tencent.qq.d:
    java.lang.String a -> a
    cn.sharesdk.tencent.qq.c b -> b
    void run() -> run
cn.sharesdk.tencent.qq.e -> cn.sharesdk.tencent.qq.e:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qq.e c -> c
    java.lang.String d -> d
    java.lang.String[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    cn.sharesdk.tencent.qq.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String b() -> b
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    java.util.HashMap e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener,boolean) -> a
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    void a(cn.sharesdk.tencent.qq.e,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qq.f -> cn.sharesdk.tencent.qq.f:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qq.e b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.g -> cn.sharesdk.tencent.qq.g:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qq.h -> cn.sharesdk.tencent.qq.h:
    java.lang.String a -> a
    cn.sharesdk.framework.Platform b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void onCreate() -> onCreate
cn.sharesdk.tencent.qq.i -> cn.sharesdk.tencent.qq.i:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void onCreate() -> onCreate
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    int[] a() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.app.Activity a(cn.sharesdk.tencent.qq.i) -> a
    android.app.Activity b(cn.sharesdk.tencent.qq.i) -> b
    void a(cn.sharesdk.tencent.qq.i,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
cn.sharesdk.tencent.qq.j -> cn.sharesdk.tencent.qq.j:
    java.lang.String a -> a
    android.os.Bundle b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    cn.sharesdk.tencent.qq.i f -> f
    void run() -> run
cn.sharesdk.tencent.qq.k -> cn.sharesdk.tencent.qq.k:
    java.lang.String a -> a
    cn.sharesdk.framework.PlatformActionListener b -> b
    java.lang.String c -> c
    cn.sharesdk.tencent.qq.QQWebShareAdapter d -> d
    cn.sharesdk.framework.authorize.RegisterView e -> e
    android.webkit.WebView f -> f
    boolean g -> g
    boolean h -> h
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String) -> b
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qq.QQWebShareAdapter b() -> b
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.k) -> a
    java.lang.String b(cn.sharesdk.tencent.qq.k) -> b
    void a(cn.sharesdk.tencent.qq.k,java.lang.String) -> a
    boolean a(cn.sharesdk.tencent.qq.k,boolean) -> a
    android.app.Activity c(cn.sharesdk.tencent.qq.k) -> c
    android.app.Activity d(cn.sharesdk.tencent.qq.k) -> d
    android.app.Activity e(cn.sharesdk.tencent.qq.k) -> e
    android.app.Activity f(cn.sharesdk.tencent.qq.k) -> f
cn.sharesdk.tencent.qq.l -> cn.sharesdk.tencent.qq.l:
    cn.sharesdk.tencent.qq.k a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qq.m -> cn.sharesdk.tencent.qq.m:
    cn.sharesdk.tencent.qq.l a -> a
    void run() -> run
cn.sharesdk.tencent.qq.n -> cn.sharesdk.tencent.qq.n:
    cn.sharesdk.tencent.qq.k a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
cn.sharesdk.tencent.qzone.QZone -> cn.sharesdk.tencent.qzone.QZone:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.framework.Platform$ShareParams) -> b
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.QZone) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qzone.QZone) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qzone.QZone) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qzone.QZone) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qzone.QZone) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qzone.QZone) -> f
    void a(cn.sharesdk.tencent.qzone.QZone,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.tencent.qzone.QZone) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.tencent.qzone.QZone) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.tencent.qzone.QZone) -> i
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qzone.QZone) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qzone.QZone) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qzone.QZone) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qzone.QZone) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qzone.QZone) -> n
cn.sharesdk.tencent.qzone.QZone$ShareParams -> cn.sharesdk.tencent.qzone.QZone$ShareParams:
    java.lang.String title -> title
    java.lang.String imageUrl -> imageUrl
    java.lang.String titleUrl -> titleUrl
    java.lang.String comment -> comment
    java.lang.String site -> site
    java.lang.String siteUrl -> siteUrl
    boolean webShare -> webShare
cn.sharesdk.tencent.qzone.QZoneWebShareAdapter -> cn.sharesdk.tencent.qzone.QZoneWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qzone.a -> cn.sharesdk.tencent.qzone.a:
    cn.sharesdk.tencent.qzone.f a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.b -> cn.sharesdk.tencent.qzone.b:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.tencent.qzone.QZone c -> c
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.c -> cn.sharesdk.tencent.qzone.c:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.d -> cn.sharesdk.tencent.qzone.d:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
cn.sharesdk.tencent.qzone.e -> cn.sharesdk.tencent.qzone.e:
    java.lang.String a -> a
    cn.sharesdk.tencent.qzone.d b -> b
    void run() -> run
cn.sharesdk.tencent.qzone.f -> cn.sharesdk.tencent.qzone.f:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qzone.f c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    cn.sharesdk.framework.network.k g -> g
    java.lang.String[] h -> h
    cn.sharesdk.tencent.qzone.f a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String a() -> a
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.util.HashMap d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    java.lang.String b() -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    java.util.HashMap a(java.lang.String,java.lang.String) -> a
    java.util.HashMap e(java.lang.String) -> e
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    void a(cn.sharesdk.tencent.qzone.f,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qzone.g -> cn.sharesdk.tencent.qzone.g:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qzone.f b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.h -> cn.sharesdk.tencent.qzone.h:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qzone.i -> cn.sharesdk.tencent.qzone.i:
    java.lang.String a -> a
    boolean b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter i -> i
    void a(java.lang.String,boolean) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter b() -> b
    void onCreate() -> onCreate
    void c() -> c
    void d() -> d
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.i) -> a
    java.lang.String b(cn.sharesdk.tencent.qzone.i) -> b
    void a(cn.sharesdk.tencent.qzone.i,java.lang.String) -> a
    void b(cn.sharesdk.tencent.qzone.i,java.lang.String) -> b
cn.sharesdk.tencent.qzone.j -> cn.sharesdk.tencent.qzone.j:
    cn.sharesdk.tencent.qzone.i a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qzone.k -> cn.sharesdk.tencent.qzone.k:
    cn.sharesdk.tencent.qzone.j a -> a
    void run() -> run
cn.sharesdk.tencent.qzone.l -> cn.sharesdk.tencent.qzone.l:
    cn.sharesdk.tencent.qzone.i a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.sharesdk.wechat.favorite.WechatFavorite -> cn.sharesdk.wechat.favorite.WechatFavorite:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    boolean c() -> c
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.favorite.WechatFavorite) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.favorite.WechatFavorite) -> b
    void a(cn.sharesdk.wechat.favorite.WechatFavorite,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.favorite.WechatFavorite) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.favorite.WechatFavorite) -> d
cn.sharesdk.wechat.favorite.WechatFavorite$ShareParams -> cn.sharesdk.wechat.favorite.WechatFavorite$ShareParams:
cn.sharesdk.wechat.favorite.a -> cn.sharesdk.wechat.favorite.a:
    cn.sharesdk.wechat.favorite.WechatFavorite a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.friends.Wechat -> cn.sharesdk.wechat.friends.Wechat:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean isValid() -> isValid
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.friends.Wechat) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.friends.Wechat) -> b
    void a(cn.sharesdk.wechat.friends.Wechat,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.friends.Wechat) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.friends.Wechat) -> d
cn.sharesdk.wechat.friends.Wechat$ShareParams -> cn.sharesdk.wechat.friends.Wechat$ShareParams:
cn.sharesdk.wechat.friends.a -> cn.sharesdk.wechat.friends.a:
    cn.sharesdk.wechat.friends.Wechat a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.moments.WechatMoments -> cn.sharesdk.wechat.moments.WechatMoments:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.moments.WechatMoments) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.moments.WechatMoments) -> b
    void a(cn.sharesdk.wechat.moments.WechatMoments,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.moments.WechatMoments) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.moments.WechatMoments) -> d
cn.sharesdk.wechat.moments.WechatMoments$ShareParams -> cn.sharesdk.wechat.moments.WechatMoments$ShareParams:
cn.sharesdk.wechat.moments.a -> cn.sharesdk.wechat.moments.a:
    cn.sharesdk.wechat.moments.WechatMoments a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.utils.WXAppExtendObject -> cn.sharesdk.wechat.utils.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXEmojiObject -> cn.sharesdk.wechat.utils.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXFileObject -> cn.sharesdk.wechat.utils.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXImageObject -> cn.sharesdk.wechat.utils.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage -> cn.sharesdk.wechat.utils.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject -> cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage$a -> cn.sharesdk.wechat.utils.WXMediaMessage$a:
    android.os.Bundle a(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    cn.sharesdk.wechat.utils.WXMediaMessage a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WXMusicObject -> cn.sharesdk.wechat.utils.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXTextObject -> cn.sharesdk.wechat.utils.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXVideoObject -> cn.sharesdk.wechat.utils.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXWebpageObject -> cn.sharesdk.wechat.utils.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WechatClientNotExistException -> cn.sharesdk.wechat.utils.WechatClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException -> cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatHandlerActivity -> cn.sharesdk.wechat.utils.WechatHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
cn.sharesdk.wechat.utils.WechatHelper -> cn.sharesdk.wechat.utils.WechatHelper:
    boolean a -> a
    cn.sharesdk.wechat.utils.WechatHelper b -> b
    cn.sharesdk.wechat.utils.j c -> c
    cn.sharesdk.wechat.utils.k d -> d
    cn.sharesdk.wechat.utils.WechatHelper a() -> a
    void a(cn.sharesdk.wechat.utils.k) -> a
    void a(cn.sharesdk.wechat.utils.k,cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.wechat.utils.k) -> b
    void a(java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> c
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> c
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    byte[] a(java.lang.String) -> a
    int a(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    byte[] a(android.content.Context,byte[]) -> a
    byte[] a(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity) -> a
    boolean b() -> b
    boolean c() -> c
    void a(cn.sharesdk.wechat.utils.WXMediaMessage,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
cn.sharesdk.wechat.utils.WechatHelper$ShareParams -> cn.sharesdk.wechat.utils.WechatHelper$ShareParams:
    int shareType -> shareType
    java.lang.String title -> title
    java.lang.String musicUrl -> musicUrl
    java.lang.String url -> url
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap imageData -> imageData
    int scene -> scene
    java.lang.String filePath -> filePath
    java.lang.String extInfo -> extInfo
cn.sharesdk.wechat.utils.WechatResp -> cn.sharesdk.wechat.utils.WechatResp:
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int a() -> a
    void b(android.os.Bundle) -> b
    void a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WechatResp$ErrCode -> cn.sharesdk.wechat.utils.WechatResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException -> cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.a -> cn.sharesdk.wechat.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.b -> cn.sharesdk.wechat.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.c -> cn.sharesdk.wechat.utils.c:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.d -> cn.sharesdk.wechat.utils.d:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.e -> cn.sharesdk.wechat.utils.e:
    int a() -> a
cn.sharesdk.wechat.utils.f -> cn.sharesdk.wechat.utils.f:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.g -> cn.sharesdk.wechat.utils.g:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.network.k c -> c
    cn.sharesdk.framework.Platform d -> d
    int e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a(android.os.Bundle,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(java.lang.String,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    cn.sharesdk.framework.Platform a(cn.sharesdk.wechat.utils.g) -> a
    int b(cn.sharesdk.wechat.utils.g) -> b
    cn.sharesdk.framework.network.k c(cn.sharesdk.wechat.utils.g) -> c
    java.lang.String d(cn.sharesdk.wechat.utils.g) -> d
    java.lang.String e(cn.sharesdk.wechat.utils.g) -> e
    void a(cn.sharesdk.wechat.utils.g,java.lang.String) -> a
cn.sharesdk.wechat.utils.h -> cn.sharesdk.wechat.utils.h:
    java.lang.String a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.wechat.utils.g c -> c
    void run() -> run
cn.sharesdk.wechat.utils.i -> cn.sharesdk.wechat.utils.i:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.wechat.utils.g b -> b
    void run() -> run
cn.sharesdk.wechat.utils.j -> cn.sharesdk.wechat.utils.j:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(cn.sharesdk.wechat.utils.l) -> a
    boolean a() -> a
    boolean c() -> c
    byte[] a(java.lang.String,java.lang.String,int) -> a
    java.lang.String a(java.lang.String) -> a
    boolean b() -> b
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity,cn.sharesdk.wechat.utils.k) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.wechat.utils.k -> cn.sharesdk.wechat.utils.k:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d -> d
    cn.sharesdk.wechat.utils.g e -> e
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(cn.sharesdk.wechat.utils.g) -> a
    void a(cn.sharesdk.wechat.utils.WechatResp) -> a
    cn.sharesdk.framework.Platform$ShareParams a() -> a
    cn.sharesdk.framework.Platform b() -> b
    cn.sharesdk.framework.PlatformActionListener c() -> c
cn.sharesdk.wechat.utils.l -> cn.sharesdk.wechat.utils.l:
    java.lang.String c -> c
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
com.baoyz.swipemenulistview.SwipeMenu -> com.baoyz.swipemenulistview.a:
    android.content.Context mContext -> a
    java.util.List mItems -> b
    int mViewType -> c
    android.content.Context getContext() -> a
    void addMenuItem(com.baoyz.swipemenulistview.SwipeMenuItem) -> a
    java.util.List getMenuItems() -> b
    void setViewType(int) -> a
com.baoyz.swipemenulistview.SwipeMenuAdapter -> com.baoyz.swipemenulistview.b:
    android.widget.ListAdapter mAdapter -> a
    android.content.Context mContext -> b
    com.baoyz.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener onMenuItemClickListener -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void createMenu(com.baoyz.swipemenulistview.SwipeMenu) -> a
    void onItemClick(com.baoyz.swipemenulistview.SwipeMenuView,com.baoyz.swipemenulistview.SwipeMenu,int) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    boolean hasStableIds() -> hasStableIds
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
com.baoyz.swipemenulistview.SwipeMenuCreator -> com.baoyz.swipemenulistview.c:
    void create(com.baoyz.swipemenulistview.SwipeMenu) -> a
com.baoyz.swipemenulistview.SwipeMenuItem -> com.baoyz.swipemenulistview.d:
    android.content.Context mContext -> a
    java.lang.String title -> b
    android.graphics.drawable.Drawable icon -> c
    android.graphics.drawable.Drawable background -> d
    int titleColor -> e
    int titleSize -> f
    int width -> g
    int getTitleColor() -> a
    int getTitleSize() -> b
    void setTitleSize(int) -> a
    void setTitleColor(int) -> b
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    android.graphics.drawable.Drawable getIcon() -> d
    android.graphics.drawable.Drawable getBackground() -> e
    void setBackground(android.graphics.drawable.Drawable) -> a
    int getWidth() -> f
    void setWidth(int) -> c
com.baoyz.swipemenulistview.SwipeMenuLayout -> com.baoyz.swipemenulistview.SwipeMenuLayout:
    android.view.View mContentView -> a
    com.baoyz.swipemenulistview.SwipeMenuView mMenuView -> b
    int mDownX -> c
    int state -> d
    android.support.v4.view.GestureDetectorCompat mGestureDetector -> e
    android.view.GestureDetector$OnGestureListener mGestureListener -> f
    boolean isFling -> g
    int MIN_FLING -> h
    int MAX_VELOCITYX -> i
    android.support.v4.widget.ScrollerCompat mOpenScroller -> j
    android.support.v4.widget.ScrollerCompat mCloseScroller -> k
    int mBaseX -> l
    int position -> m
    android.view.animation.Interpolator mCloseInterpolator -> n
    android.view.animation.Interpolator mOpenInterpolator -> o
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void init() -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onSwipe(android.view.MotionEvent) -> a
    boolean isOpen() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void swipe(int) -> a
    void computeScroll() -> computeScroll
    void smoothCloseMenu() -> b
    void smoothOpenMenu() -> c
    void closeMenu() -> d
    android.view.View getContentView() -> getContentView
    com.baoyz.swipemenulistview.SwipeMenuView getMenuView() -> getMenuView
    int dp2px(int) -> b
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setMenuHeight(int) -> setMenuHeight
    boolean access$002(com.baoyz.swipemenulistview.SwipeMenuLayout,boolean) -> a
    int access$100(com.baoyz.swipemenulistview.SwipeMenuLayout) -> a
    int access$200(com.baoyz.swipemenulistview.SwipeMenuLayout) -> b
com.baoyz.swipemenulistview.SwipeMenuLayout$1 -> com.baoyz.swipemenulistview.e:
    com.baoyz.swipemenulistview.SwipeMenuLayout this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.baoyz.swipemenulistview.SwipeMenuListView -> com.baoyz.swipemenulistview.SwipeMenuListView:
    int MAX_Y -> a
    int MAX_X -> b
    float mDownX -> c
    float mDownY -> d
    int mTouchState -> e
    int mTouchPosition -> f
    com.baoyz.swipemenulistview.SwipeMenuLayout mTouchView -> g
    com.baoyz.swipemenulistview.SwipeMenuListView$OnSwipeListener mOnSwipeListener -> h
    com.baoyz.swipemenulistview.SwipeMenuCreator mMenuCreator -> i
    com.baoyz.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener mOnMenuItemClickListener -> j
    android.view.animation.Interpolator mCloseInterpolator -> k
    android.view.animation.Interpolator mOpenInterpolator -> l
    void init() -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setCloseInterpolator(android.view.animation.Interpolator) -> setCloseInterpolator
    void setOpenInterpolator(android.view.animation.Interpolator) -> setOpenInterpolator
    android.view.animation.Interpolator getOpenInterpolator() -> getOpenInterpolator
    android.view.animation.Interpolator getCloseInterpolator() -> getCloseInterpolator
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int dp2px(int) -> a
    void setMenuCreator(com.baoyz.swipemenulistview.SwipeMenuCreator) -> setMenuCreator
    void setOnMenuItemClickListener(com.baoyz.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    void setOnSwipeListener(com.baoyz.swipemenulistview.SwipeMenuListView$OnSwipeListener) -> setOnSwipeListener
    void setAdapter(android.widget.Adapter) -> setAdapter
    com.baoyz.swipemenulistview.SwipeMenuCreator access$000(com.baoyz.swipemenulistview.SwipeMenuListView) -> a
    com.baoyz.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener access$100(com.baoyz.swipemenulistview.SwipeMenuListView) -> b
    com.baoyz.swipemenulistview.SwipeMenuLayout access$200(com.baoyz.swipemenulistview.SwipeMenuListView) -> c
com.baoyz.swipemenulistview.SwipeMenuListView$1 -> com.baoyz.swipemenulistview.f:
    com.baoyz.swipemenulistview.SwipeMenuListView this$0 -> a
    void createMenu(com.baoyz.swipemenulistview.SwipeMenu) -> a
    void onItemClick(com.baoyz.swipemenulistview.SwipeMenuView,com.baoyz.swipemenulistview.SwipeMenu,int) -> a
com.baoyz.swipemenulistview.SwipeMenuListView$OnMenuItemClickListener -> com.baoyz.swipemenulistview.SwipeMenuListView$a:
    boolean onMenuItemClick(int,com.baoyz.swipemenulistview.SwipeMenu,int) -> a
com.baoyz.swipemenulistview.SwipeMenuListView$OnSwipeListener -> com.baoyz.swipemenulistview.SwipeMenuListView$b:
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.baoyz.swipemenulistview.SwipeMenuView -> com.baoyz.swipemenulistview.SwipeMenuView:
    com.baoyz.swipemenulistview.SwipeMenuListView mListView -> a
    com.baoyz.swipemenulistview.SwipeMenuLayout mLayout -> b
    com.baoyz.swipemenulistview.SwipeMenu mMenu -> c
    com.baoyz.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener onItemClickListener -> d
    int position -> e
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void addItem(com.baoyz.swipemenulistview.SwipeMenuItem,int) -> a
    android.widget.ImageView createIcon(com.baoyz.swipemenulistview.SwipeMenuItem) -> a
    android.widget.TextView createTitle(com.baoyz.swipemenulistview.SwipeMenuItem) -> b
    void onClick(android.view.View) -> onClick
    com.baoyz.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener getOnSwipeItemClickListener() -> getOnSwipeItemClickListener
    void setOnSwipeItemClickListener(com.baoyz.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener) -> setOnSwipeItemClickListener
    void setLayout(com.baoyz.swipemenulistview.SwipeMenuLayout) -> setLayout
com.baoyz.swipemenulistview.SwipeMenuView$OnSwipeItemClickListener -> com.baoyz.swipemenulistview.SwipeMenuView$a:
    void onItemClick(com.baoyz.swipemenulistview.SwipeMenuView,com.baoyz.swipemenulistview.SwipeMenu,int) -> a
com.dkhs.portfolio.R -> com.dkhs.portfolio.R:
com.dkhs.portfolio.R$anim -> com.dkhs.portfolio.R$anim:
    int abc_fade_in -> abc_fade_in
    int abc_fade_out -> abc_fade_out
    int abc_slide_in_bottom -> abc_slide_in_bottom
    int abc_slide_in_top -> abc_slide_in_top
    int abc_slide_out_bottom -> abc_slide_out_bottom
    int abc_slide_out_top -> abc_slide_out_top
    int activity_in_from_bottom -> activity_in_from_bottom
    int activity_in_from_left -> activity_in_from_left
    int activity_in_from_right -> activity_in_from_right
    int activity_out_to_left -> activity_out_to_left
    int activity_out_to_right -> activity_out_to_right
    int imofan_round_progress_bar_1 -> imofan_round_progress_bar_1
    int menu_in -> menu_in
    int menu_out -> menu_out
    int push_bottom_in -> push_bottom_in
    int push_bottom_out -> push_bottom_out
    int rotate_around_center_point -> rotate_around_center_point
    int slide_in_right -> slide_in_right
    int slide_out_left -> slide_out_left
com.dkhs.portfolio.R$array -> com.dkhs.portfolio.R$array:
    int combination_order -> combination_order
    int create_type -> create_type
    int detail_news_titles -> detail_news_titles
    int emoji_code -> emoji_code
    int emoji_res -> emoji_res
    int fund_detail_more -> fund_detail_more
    int fund_profile_title -> fund_profile_title
    int fund_sort_keys -> fund_sort_keys
    int fund_sort_values -> fund_sort_values
    int fund_stype_values -> fund_stype_values
    int fund_tab_titles -> fund_tab_titles
    int fund_type_chis -> fund_type_chis
    int fund_type_keys -> fund_type_keys
    int img_eidt_list -> img_eidt_list
    int long_click_type -> long_click_type
    int main_info_title -> main_info_title
    int order_type -> order_type
    int query_compare_type -> query_compare_type
    int quotes_title -> quotes_title
    int refer_funds -> refer_funds
    int select_optional_stock -> select_optional_stock
    int select_stock -> select_stock
    int stock_quote_info_title -> stock_quote_info_title
    int trend_title -> trend_title
    int yanbao_items -> yanbao_items
com.dkhs.portfolio.R$attr -> com.dkhs.portfolio.R$attr:
    int SwipeBackLayoutStyle -> SwipeBackLayoutStyle
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarPopupTheme -> actionBarPopupTheme
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarTheme -> actionBarTheme
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionLayout -> actionLayout
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModeCopyDrawable -> actionModeCopyDrawable
    int actionModeCutDrawable -> actionModeCutDrawable
    int actionModeFindDrawable -> actionModeFindDrawable
    int actionModePasteDrawable -> actionModePasteDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeSelectAllDrawable -> actionModeSelectAllDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionModeWebSearchDrawable -> actionModeWebSearchDrawable
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionOverflowMenuStyle -> actionOverflowMenuStyle
    int actionProviderClass -> actionProviderClass
    int actionViewClass -> actionViewClass
    int activeColor -> activeColor
    int activeType -> activeType
    int activityChooserViewStyle -> activityChooserViewStyle
    int alignmentMode -> alignmentMode
    int auto_play -> auto_play
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int barSize -> barSize
    int border_inside_color -> border_inside_color
    int border_outside_color -> border_outside_color
    int border_thickness -> border_thickness
    int buttonBarButtonStyle -> buttonBarButtonStyle
    int buttonBarStyle -> buttonBarStyle
    int centered -> centered
    int centered_ -> centered_
    int circular_progress_border_width -> circular_progress_border_width
    int circular_progress_color -> circular_progress_color
    int circular_progress_duration -> circular_progress_duration
    int circular_progress_indeterminate -> circular_progress_indeterminate
    int circular_progress_max -> circular_progress_max
    int circular_progress_size -> circular_progress_size
    int clipPadding -> clipPadding
    int closeIcon -> closeIcon
    int closeItemLayout -> closeItemLayout
    int collapseContentDescription -> collapseContentDescription
    int collapseIcon -> collapseIcon
    int color -> color
    int colorAccent -> colorAccent
    int colorButtonNormal -> colorButtonNormal
    int colorControlActivated -> colorControlActivated
    int colorControlHighlight -> colorControlHighlight
    int colorControlNormal -> colorControlNormal
    int colorPrimary -> colorPrimary
    int colorPrimaryDark -> colorPrimaryDark
    int colorSwitchThumbNormal -> colorSwitchThumbNormal
    int columnCount -> columnCount
    int columnOrderPreserved -> columnOrderPreserved
    int commitIcon -> commitIcon
    int contentInsetEnd -> contentInsetEnd
    int contentInsetLeft -> contentInsetLeft
    int contentInsetRight -> contentInsetRight
    int contentInsetStart -> contentInsetStart
    int customNavigationLayout -> customNavigationLayout
    int defDrawable -> defDrawable
    int disableChildrenWhenDisabled -> disableChildrenWhenDisabled
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerHorizontal -> dividerHorizontal
    int dividerPadding -> dividerPadding
    int dividerVertical -> dividerVertical
    int drawableSize -> drawableSize
    int drawerArrowStyle -> drawerArrowStyle
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int edge_flag -> edge_flag
    int edge_size -> edge_size
    int editTextBackground -> editTextBackground
    int editTextColor -> editTextColor
    int elevation -> elevation
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fadeDelay -> fadeDelay
    int fadeLength -> fadeLength
    int fadeOut -> fadeOut
    int fades -> fades
    int fillColor -> fillColor
    int footerColor -> footerColor
    int footerIndicatorHeight -> footerIndicatorHeight
    int footerIndicatorStyle -> footerIndicatorStyle
    int footerIndicatorUnderlinePadding -> footerIndicatorUnderlinePadding
    int footerLineHeight -> footerLineHeight
    int footerPadding -> footerPadding
    int gapBetweenBars -> gapBetweenBars
    int gapWidth -> gapWidth
    int goIcon -> goIcon
    int gridHeightWeight -> gridHeightWeight
    int gridWidthWeight -> gridWidthWeight
    int height -> height
    int height_ratio -> height_ratio
    int hideOnContentScroll -> hideOnContentScroll
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int inactiveColor -> inactiveColor
    int inactiveType -> inactiveType
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int isLightTheme -> isLightTheme
    int itemPadding -> itemPadding
    int layout -> layout
    int layout_column -> layout_column
    int layout_columnSpan -> layout_columnSpan
    int layout_columnWeight -> layout_columnWeight
    int layout_gravity -> layout_gravity
    int layout_row -> layout_row
    int layout_rowSpan -> layout_rowSpan
    int layout_rowWeight -> layout_rowWeight
    int linePosition -> linePosition
    int lineWidth -> lineWidth
    int listChoiceBackgroundIndicator -> listChoiceBackgroundIndicator
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeight -> listPreferredItemHeight
    int listPreferredItemHeightLarge -> listPreferredItemHeightLarge
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int maxButtonHeight -> maxButtonHeight
    int maxContainSize -> maxContainSize
    int measureWithLargestChild -> measureWithLargestChild
    int middleBarArrowSize -> middleBarArrowSize
    int minTextSize -> minTextSize
    int navigationContentDescription -> navigationContentDescription
    int navigationIcon -> navigationIcon
    int navigationMode -> navigationMode
    int needVisible -> needVisible
    int orientation -> orientation
    int overlapAnchor -> overlapAnchor
    int paddingEnd -> paddingEnd
    int paddingStart -> paddingStart
    int pageColor -> pageColor
    int panelBackground -> panelBackground
    int panelMenuListTheme -> panelMenuListTheme
    int panelMenuListWidth -> panelMenuListWidth
    int perLoadCount -> perLoadCount
    int popupMenuStyle -> popupMenuStyle
    int popupPromptView -> popupPromptView
    int popupTheme -> popupTheme
    int popupWindowStyle -> popupWindowStyle
    int precision -> precision
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int prompt -> prompt
    int queryBackground -> queryBackground
    int queryHint -> queryHint
    int radius -> radius
    int radius_ -> radius_
    int rcheaderLayout -> rcheaderLayout
    int rowCount -> rowCount
    int rowOrderPreserved -> rowOrderPreserved
    int searchIcon -> searchIcon
    int searchViewStyle -> searchViewStyle
    int selectableItemBackground -> selectableItemBackground
    int selectableItemBackgroundBorderless -> selectableItemBackgroundBorderless
    int selectedBold -> selectedBold
    int selectedColor_ -> selectedColor_
    int shadow_bottom -> shadow_bottom
    int shadow_left -> shadow_left
    int shadow_right -> shadow_right
    int shape -> shape
    int showAsAction -> showAsAction
    int showDividers -> showDividers
    int showText -> showText
    int sidebuffer -> sidebuffer
    int sizeToFit -> sizeToFit
    int snap -> snap
    int spacing -> spacing
    int spinBars -> spinBars
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerMode -> spinnerMode
    int spinnerStyle -> spinnerStyle
    int splitTrack -> splitTrack
    int state_above_anchor -> state_above_anchor
    int strokeColor -> strokeColor
    int strokeWidth_ -> strokeWidth_
    int style -> style
    int submitBackground -> submitBackground
    int subtitle -> subtitle
    int subtitleTextAppearance -> subtitleTextAppearance
    int subtitleTextStyle -> subtitleTextStyle
    int suggestionRowLayout -> suggestionRowLayout
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int textAllCaps -> textAllCaps
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItem -> textAppearanceListItem
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int theme -> theme
    int thickness -> thickness
    int thumbTextPadding -> thumbTextPadding
    int title -> title
    int titleMarginBottom -> titleMarginBottom
    int titleMarginEnd -> titleMarginEnd
    int titleMarginStart -> titleMarginStart
    int titleMarginTop -> titleMarginTop
    int titleMargins -> titleMargins
    int titlePadding -> titlePadding
    int titleTextAppearance -> titleTextAppearance
    int titleTextStyle -> titleTextStyle
    int toolbarNavigationButtonStyle -> toolbarNavigationButtonStyle
    int toolbarStyle -> toolbarStyle
    int topBottomBarArrowSize -> topBottomBarArrowSize
    int topPadding -> topPadding
    int track -> track
    int unselectedColor_ -> unselectedColor_
    int useDefaultMargins -> useDefaultMargins
    int voiceIcon -> voiceIcon
    int vpiCirclePageIndicatorStyle -> vpiCirclePageIndicatorStyle
    int vpiIconPageIndicatorStyle -> vpiIconPageIndicatorStyle
    int vpiLinePageIndicatorStyle -> vpiLinePageIndicatorStyle
    int vpiTabPageIndicatorStyle -> vpiTabPageIndicatorStyle
    int vpiTitlePageIndicatorStyle -> vpiTitlePageIndicatorStyle
    int vpiUnderlinePageIndicatorStyle -> vpiUnderlinePageIndicatorStyle
    int width_ratio -> width_ratio
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowFixedHeightMajor -> windowFixedHeightMajor
    int windowFixedHeightMinor -> windowFixedHeightMinor
    int windowFixedWidthMajor -> windowFixedWidthMajor
    int windowFixedWidthMinor -> windowFixedWidthMinor
com.dkhs.portfolio.R$bool -> com.dkhs.portfolio.R$bool:
    int abc_action_bar_embed_tabs -> abc_action_bar_embed_tabs
    int abc_action_bar_embed_tabs_pre_jb -> abc_action_bar_embed_tabs_pre_jb
    int abc_action_bar_expanded_action_views_exclusive -> abc_action_bar_expanded_action_views_exclusive
    int abc_config_actionMenuItemAllCaps -> abc_config_actionMenuItemAllCaps
    int abc_config_allowActionMenuItemTextWithIcon -> abc_config_allowActionMenuItemTextWithIcon
    int abc_config_showMenuShortcutsWhenKeyboardPresent -> abc_config_showMenuShortcutsWhenKeyboardPresent
    int circular_progress_indeterminate -> circular_progress_indeterminate
com.dkhs.portfolio.R$color -> com.dkhs.portfolio.R$color:
    int abc_background_cache_hint_selector_material_dark -> abc_background_cache_hint_selector_material_dark
    int abc_background_cache_hint_selector_material_light -> abc_background_cache_hint_selector_material_light
    int abc_input_method_navigation_guard -> abc_input_method_navigation_guard
    int abc_primary_text_disable_only_material_dark -> abc_primary_text_disable_only_material_dark
    int abc_primary_text_disable_only_material_light -> abc_primary_text_disable_only_material_light
    int abc_primary_text_material_dark -> abc_primary_text_material_dark
    int abc_primary_text_material_light -> abc_primary_text_material_light
    int abc_search_url_text -> abc_search_url_text
    int abc_search_url_text_normal -> abc_search_url_text_normal
    int abc_search_url_text_pressed -> abc_search_url_text_pressed
    int abc_search_url_text_selected -> abc_search_url_text_selected
    int abc_secondary_text_material_dark -> abc_secondary_text_material_dark
    int abc_secondary_text_material_light -> abc_secondary_text_material_light
    int accent_material_dark -> accent_material_dark
    int accent_material_light -> accent_material_light
    int activity_bg_color -> activity_bg_color
    int alpha_gray -> alpha_gray
    int background_floating_material_dark -> background_floating_material_dark
    int background_floating_material_light -> background_floating_material_light
    int background_material_dark -> background_material_dark
    int background_material_light -> background_material_light
    int black -> black
    int blue -> blue
    int blue_line -> blue_line
    int blue_normal -> blue_normal
    int blue_pressed -> blue_pressed
    int bottom_menu_selected -> bottom_menu_selected
    int bright_foreground_disabled_material_dark -> bright_foreground_disabled_material_dark
    int bright_foreground_disabled_material_light -> bright_foreground_disabled_material_light
    int bright_foreground_inverse_material_dark -> bright_foreground_inverse_material_dark
    int bright_foreground_inverse_material_light -> bright_foreground_inverse_material_light
    int bright_foreground_material_dark -> bright_foreground_material_dark
    int bright_foreground_material_light -> bright_foreground_material_light
    int btn_blue_textselector -> btn_blue_textselector
    int button_material_dark -> button_material_dark
    int button_material_light -> button_material_light
    int circular_progress_color -> circular_progress_color
    int color_alert_icon_bg -> color_alert_icon_bg
    int color_bg -> color_bg
    int color_content_text -> color_content_text
    int color_leftview -> color_leftview
    int color_line -> color_line
    int color_menu_item_news_amount -> color_menu_item_news_amount
    int color_press -> color_press
    int color_search_and_msg_btn -> color_search_and_msg_btn
    int color_small_text -> color_small_text
    int color_title_text -> color_title_text
    int color_username -> color_username
    int combition_gray -> combition_gray
    int compare_select_gray -> compare_select_gray
    int dark_green -> dark_green
    int darker_gray -> darker_gray
    int def_0 -> def_0
    int def_1 -> def_1
    int def_10 -> def_10
    int def_11 -> def_11
    int def_12 -> def_12
    int def_13 -> def_13
    int def_14 -> def_14
    int def_15 -> def_15
    int def_16 -> def_16
    int def_17 -> def_17
    int def_18 -> def_18
    int def_19 -> def_19
    int def_2 -> def_2
    int def_20 -> def_20
    int def_3 -> def_3
    int def_4 -> def_4
    int def_5 -> def_5
    int def_6 -> def_6
    int def_7 -> def_7
    int def_8 -> def_8
    int def_9 -> def_9
    int def_gray -> def_gray
    int def_green -> def_green
    int def_red -> def_red
    int default_screen_bg -> default_screen_bg
    int dim_foreground_disabled_material_dark -> dim_foreground_disabled_material_dark
    int dim_foreground_disabled_material_light -> dim_foreground_disabled_material_light
    int dim_foreground_material_dark -> dim_foreground_material_dark
    int dim_foreground_material_light -> dim_foreground_material_light
    int drivi_line -> drivi_line
    int edit_textcolor -> edit_textcolor
    int fragment_left_list_bg -> fragment_left_list_bg
    int fragment_left_list_line1 -> fragment_left_list_line1
    int fragment_left_list_line2 -> fragment_left_list_line2
    int gray -> gray
    int gray_text_selector -> gray_text_selector
    int gray_textcolor -> gray_textcolor
    int green -> green
    int green_bg -> green_bg
    int highlighted_text_material_dark -> highlighted_text_material_dark
    int highlighted_text_material_light -> highlighted_text_material_light
    int hint_foreground_material_dark -> hint_foreground_material_dark
    int hint_foreground_material_light -> hint_foreground_material_light
    int indicator_selected -> indicator_selected
    int indicator_textselector -> indicator_textselector
    int light_gray -> light_gray
    int light_gray_header_color -> light_gray_header_color
    int link_text_material_dark -> link_text_material_dark
    int link_text_material_light -> link_text_material_light
    int list_market_light_gray -> list_market_light_gray
    int ma10_color -> ma10_color
    int ma20_color -> ma20_color
    int ma5_color -> ma5_color
    int material_blue_grey_800 -> material_blue_grey_800
    int material_blue_grey_900 -> material_blue_grey_900
    int material_blue_grey_950 -> material_blue_grey_950
    int material_deep_teal_200 -> material_deep_teal_200
    int material_deep_teal_500 -> material_deep_teal_500
    int md_grey_400 -> md_grey_400
    int md_grey_800 -> md_grey_800
    int menu_stroke_line -> menu_stroke_line
    int menu_text_color -> menu_text_color
    int menu_title_text_color -> menu_title_text_color
    int night_color_line -> night_color_line
    int optional_green -> optional_green
    int optional_red -> optional_red
    int orange -> orange
    int person_setting_backgroud -> person_setting_backgroud
    int person_setting_line -> person_setting_line
    int person_setting_phonecolor -> person_setting_phonecolor
    int pink -> pink
    int point_lighter_gray -> point_lighter_gray
    int point_white -> point_white
    int popmore_textselector -> popmore_textselector
    int position_text_lgray -> position_text_lgray
    int primary_dark_material_dark -> primary_dark_material_dark
    int primary_dark_material_light -> primary_dark_material_light
    int primary_material_dark -> primary_material_dark
    int primary_material_light -> primary_material_light
    int primary_text_default_material_dark -> primary_text_default_material_dark
    int primary_text_default_material_light -> primary_text_default_material_light
    int primary_text_disabled_material_dark -> primary_text_disabled_material_dark
    int primary_text_disabled_material_light -> primary_text_disabled_material_light
    int rc_conversation_top_bg -> rc_conversation_top_bg
    int rc_draft_color -> rc_draft_color
    int rc_input_bg -> rc_input_bg
    int rc_message_user_name -> rc_message_user_name
    int rc_normal_bg -> rc_normal_bg
    int rc_notice_normal -> rc_notice_normal
    int rc_notice_text -> rc_notice_text
    int rc_notice_warning -> rc_notice_warning
    int rc_notification_bg -> rc_notification_bg
    int rc_plugins_bg -> rc_plugins_bg
    int rc_text_color_primary -> rc_text_color_primary
    int rc_text_color_primary_inverse -> rc_text_color_primary_inverse
    int rc_text_color_secondary -> rc_text_color_secondary
    int rc_text_color_tertiary -> rc_text_color_tertiary
    int rc_text_voice -> rc_text_voice
    int rc_voice_color -> rc_voice_color
    int red -> red
    int red_bg -> red_bg
    int red_delete -> red_delete
    int red_line -> red_line
    int ripple_material_dark -> ripple_material_dark
    int ripple_material_light -> ripple_material_light
    int round -> round
    int rounded_container_bg -> rounded_container_bg
    int rounded_container_border -> rounded_container_border
    int secondary_text_default_material_dark -> secondary_text_default_material_dark
    int secondary_text_default_material_light -> secondary_text_default_material_light
    int secondary_text_disabled_material_dark -> secondary_text_disabled_material_dark
    int secondary_text_disabled_material_light -> secondary_text_disabled_material_light
    int setting_public_explan -> setting_public_explan
    int share_bg -> share_bg
    int sliding_menu_divider_color -> sliding_menu_divider_color
    int stock_gray_bg -> stock_gray_bg
    int subscribe_activity_bg -> subscribe_activity_bg
    int subscribe_bg -> subscribe_bg
    int subscribe_item_disabled_bg -> subscribe_item_disabled_bg
    int subscribe_item_disabled_stroke -> subscribe_item_disabled_stroke
    int subscribe_item_drag_bg -> subscribe_item_drag_bg
    int subscribe_item_drag_stroke -> subscribe_item_drag_stroke
    int subscribe_item_normal_bg -> subscribe_item_normal_bg
    int subscribe_item_normal_stroke -> subscribe_item_normal_stroke
    int subscribe_item_pressed_bg -> subscribe_item_pressed_bg
    int subscribe_item_pressed_stroke -> subscribe_item_pressed_stroke
    int subscribe_item_selected_bg -> subscribe_item_selected_bg
    int subscribe_item_selected_stroke -> subscribe_item_selected_stroke
    int subscribe_item_text_color_normal -> subscribe_item_text_color_normal
    int subscribe_item_text_color_pressed -> subscribe_item_text_color_pressed
    int subscribe_seperate_line -> subscribe_seperate_line
    int subscribe_tip_text -> subscribe_tip_text
    int switch_textcolor -> switch_textcolor
    int switch_thumb_normal_material_dark -> switch_thumb_normal_material_dark
    int switch_thumb_normal_material_light -> switch_thumb_normal_material_light
    int tab_normal_black -> tab_normal_black
    int tabselect -> tabselect
    int tag_gray -> tag_gray
    int tag_green -> tag_green
    int tag_red -> tag_red
    int text_press -> text_press
    int theme_color -> theme_color
    int theme_gray -> theme_gray
    int theme_gray_press -> theme_gray_press
    int title_color -> title_color
    int title_green -> title_green
    int title_tab_textselector -> title_tab_textselector
    int transparent -> transparent
    int transparent_gray -> transparent_gray
    int unable_blue_textcolor -> unable_blue_textcolor
    int unfollowd -> unfollowd
    int user_combination_head_bg -> user_combination_head_bg
    int vpi__background_holo_dark -> vpi__background_holo_dark
    int vpi__background_holo_light -> vpi__background_holo_light
    int vpi__bright_foreground_disabled_holo_dark -> vpi__bright_foreground_disabled_holo_dark
    int vpi__bright_foreground_disabled_holo_light -> vpi__bright_foreground_disabled_holo_light
    int vpi__bright_foreground_holo_dark -> vpi__bright_foreground_holo_dark
    int vpi__bright_foreground_holo_light -> vpi__bright_foreground_holo_light
    int vpi__bright_foreground_inverse_holo_dark -> vpi__bright_foreground_inverse_holo_dark
    int vpi__bright_foreground_inverse_holo_light -> vpi__bright_foreground_inverse_holo_light
    int vpi__dark_theme -> vpi__dark_theme
    int vpi__light_theme -> vpi__light_theme
    int white -> white
    int white_10 -> white_10
    int white_60 -> white_60
    int white_lucenty -> white_lucenty
    int white_textselector -> white_textselector
    int yellow -> yellow
    int zuhe_divline -> zuhe_divline
com.dkhs.portfolio.R$dimen -> com.dkhs.portfolio.R$dimen:
    int abc_action_bar_default_height_material -> abc_action_bar_default_height_material
    int abc_action_bar_default_padding_material -> abc_action_bar_default_padding_material
    int abc_action_bar_icon_vertical_padding_material -> abc_action_bar_icon_vertical_padding_material
    int abc_action_bar_progress_bar_size -> abc_action_bar_progress_bar_size
    int abc_action_bar_stacked_max_height -> abc_action_bar_stacked_max_height
    int abc_action_bar_stacked_tab_max_width -> abc_action_bar_stacked_tab_max_width
    int abc_action_bar_subtitle_bottom_margin_material -> abc_action_bar_subtitle_bottom_margin_material
    int abc_action_bar_subtitle_top_margin_material -> abc_action_bar_subtitle_top_margin_material
    int abc_action_button_min_height_material -> abc_action_button_min_height_material
    int abc_action_button_min_width_material -> abc_action_button_min_width_material
    int abc_action_button_min_width_overflow_material -> abc_action_button_min_width_overflow_material
    int abc_config_prefDialogWidth -> abc_config_prefDialogWidth
    int abc_control_inset_material -> abc_control_inset_material
    int abc_control_padding_material -> abc_control_padding_material
    int abc_dropdownitem_icon_width -> abc_dropdownitem_icon_width
    int abc_dropdownitem_text_padding_left -> abc_dropdownitem_text_padding_left
    int abc_dropdownitem_text_padding_right -> abc_dropdownitem_text_padding_right
    int abc_panel_menu_list_width -> abc_panel_menu_list_width
    int abc_search_view_preferred_width -> abc_search_view_preferred_width
    int abc_search_view_text_min_width -> abc_search_view_text_min_width
    int abc_text_size_body_1_material -> abc_text_size_body_1_material
    int abc_text_size_body_2_material -> abc_text_size_body_2_material
    int abc_text_size_button_material -> abc_text_size_button_material
    int abc_text_size_caption_material -> abc_text_size_caption_material
    int abc_text_size_display_1_material -> abc_text_size_display_1_material
    int abc_text_size_display_2_material -> abc_text_size_display_2_material
    int abc_text_size_display_3_material -> abc_text_size_display_3_material
    int abc_text_size_display_4_material -> abc_text_size_display_4_material
    int abc_text_size_headline_material -> abc_text_size_headline_material
    int abc_text_size_large_material -> abc_text_size_large_material
    int abc_text_size_medium_material -> abc_text_size_medium_material
    int abc_text_size_menu_material -> abc_text_size_menu_material
    int abc_text_size_small_material -> abc_text_size_small_material
    int abc_text_size_subhead_material -> abc_text_size_subhead_material
    int abc_text_size_subtitle_material_toolbar -> abc_text_size_subtitle_material_toolbar
    int abc_text_size_title_material -> abc_text_size_title_material
    int abc_text_size_title_material_toolbar -> abc_text_size_title_material_toolbar
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int adapter_line_height -> adapter_line_height
    int addup_height -> addup_height
    int arc_width -> arc_width
    int billboard_height -> billboard_height
    int btn_margin -> btn_margin
    int btn_radius -> btn_radius
    int chartViewHeight -> chartViewHeight
    int checkbox_text_padding_left -> checkbox_text_padding_left
    int circle_center_text -> circle_center_text
    int circular_progress_border_width -> circular_progress_border_width
    int circular_progress_large_size -> circular_progress_large_size
    int circular_progress_normal_size -> circular_progress_normal_size
    int circular_progress_small_size -> circular_progress_small_size
    int combin_horSpacing -> combin_horSpacing
    int combina_up -> combina_up
    int combination_item_height -> combination_item_height
    int compare_horspacing -> compare_horspacing
    int default_gap -> default_gap
    int dialog_fixed_height_major -> dialog_fixed_height_major
    int dialog_fixed_height_minor -> dialog_fixed_height_minor
    int dialog_fixed_width_major -> dialog_fixed_width_major
    int dialog_fixed_width_minor -> dialog_fixed_width_minor
    int dialog_padding -> dialog_padding
    int disabled_alpha_material_dark -> disabled_alpha_material_dark
    int disabled_alpha_material_light -> disabled_alpha_material_light
    int emoticon_input_height -> emoticon_input_height
    int emoticon_input_padiing -> emoticon_input_padiing
    int emoticon_width -> emoticon_width
    int fab_scroll_threshold -> fab_scroll_threshold
    int float_fs_view_hight -> float_fs_view_hight
    int float_fs_view_width -> float_fs_view_width
    int float_menu_div_padding -> float_menu_div_padding
    int float_mulit_view_lenght -> float_mulit_view_lenght
    int float_text_margin -> float_text_margin
    int float_trend_view_width -> float_trend_view_width
    int float_view_hight -> float_view_hight
    int float_view_lenght -> float_view_lenght
    int float_view_top_margin -> float_view_top_margin
    int floating_action_menu_item_height -> floating_action_menu_item_height
    int foot_height -> foot_height
    int gray_tab_height -> gray_tab_height
    int gridview_height -> gridview_height
    int header_avatar_height -> header_avatar_height
    int header_avatar_margin -> header_avatar_margin
    int header_avatar_margin_top -> header_avatar_margin_top
    int header_can_scroll_distance -> header_can_scroll_distance
    int header_height -> header_height
    int header_userDesc_height -> header_userDesc_height
    int hide_menu_width -> hide_menu_width
    int icon_alert_width -> icon_alert_width
    int land_text_size -> land_text_size
    int layout_height -> layout_height
    int layout_height_all -> layout_height_all
    int line_kline -> line_kline
    int line_stroke_width -> line_stroke_width
    int line_ten_width -> line_ten_width
    int line_weight_stroke_width -> line_weight_stroke_width
    int list_text_size -> list_text_size
    int main_bottom_textsize -> main_bottom_textsize
    int main_page_padding -> main_page_padding
    int main_tab_textsize -> main_tab_textsize
    int mark_symbol_size -> mark_symbol_size
    int min_stock_item_text -> min_stock_item_text
    int mycombina_list_text_wid -> mycombina_list_text_wid
    int news_text_title_size -> news_text_title_size
    int offset_bottom_text -> offset_bottom_text
    int option_eidt_button_wid -> option_eidt_button_wid
    int padding_kline -> padding_kline
    int padding_left -> padding_left
    int popwindow_padding -> popwindow_padding
    int profile_image_width_small -> profile_image_width_small
    int radius_size -> radius_size
    int rc_conversation_item_data_size -> rc_conversation_item_data_size
    int rc_conversation_item_name_size -> rc_conversation_item_name_size
    int rc_message_send_status_image_size -> rc_message_send_status_image_size
    int select_fund_height -> select_fund_height
    int select_image -> select_image
    int select_offset -> select_offset
    int select_text -> select_text
    int setting_text_name -> setting_text_name
    int setting_text_phone -> setting_text_phone
    int shadow_width -> shadow_width
    int single_index_padding -> single_index_padding
    int sliding_menu_divider_height -> sliding_menu_divider_height
    int slidingmenu_offset -> slidingmenu_offset
    int small_stock_item_text -> small_stock_item_text
    int stock_item_def_text -> stock_item_def_text
    int text_date_paddint -> text_date_paddint
    int text_drawable_margin -> text_drawable_margin
    int text_size -> text_size
    int title_2text_length -> title_2text_length
    int title_height -> title_height
    int title_tab_text_size -> title_tab_text_size
    int title_text_font -> title_text_font
    int titlebar_height -> titlebar_height
    int two_index_padding -> two_index_padding
    int upload_img_size -> upload_img_size
    int weight -> weight
com.dkhs.portfolio.R$drawable -> com.dkhs.portfolio.R$drawable:
    int abc_ab_share_pack_holo_dark -> abc_ab_share_pack_holo_dark
    int abc_ab_share_pack_holo_light -> abc_ab_share_pack_holo_light
    int abc_btn_check_material -> abc_btn_check_material
    int abc_btn_check_to_on_mtrl_000 -> abc_btn_check_to_on_mtrl_000
    int abc_btn_check_to_on_mtrl_015 -> abc_btn_check_to_on_mtrl_015
    int abc_btn_radio_material -> abc_btn_radio_material
    int abc_btn_radio_to_on_mtrl_000 -> abc_btn_radio_to_on_mtrl_000
    int abc_btn_radio_to_on_mtrl_015 -> abc_btn_radio_to_on_mtrl_015
    int abc_btn_switch_to_on_mtrl_00001 -> abc_btn_switch_to_on_mtrl_00001
    int abc_btn_switch_to_on_mtrl_00012 -> abc_btn_switch_to_on_mtrl_00012
    int abc_cab_background_internal_bg -> abc_cab_background_internal_bg
    int abc_cab_background_top_material -> abc_cab_background_top_material
    int abc_cab_background_top_mtrl_alpha -> abc_cab_background_top_mtrl_alpha
    int abc_edit_text_material -> abc_edit_text_material
    int abc_ic_ab_back_mtrl_am_alpha -> abc_ic_ab_back_mtrl_am_alpha
    int abc_ic_clear_mtrl_alpha -> abc_ic_clear_mtrl_alpha
    int abc_ic_commit_search_api_mtrl_alpha -> abc_ic_commit_search_api_mtrl_alpha
    int abc_ic_go_search_api_mtrl_alpha -> abc_ic_go_search_api_mtrl_alpha
    int abc_ic_menu_copy_mtrl_am_alpha -> abc_ic_menu_copy_mtrl_am_alpha
    int abc_ic_menu_cut_mtrl_alpha -> abc_ic_menu_cut_mtrl_alpha
    int abc_ic_menu_moreoverflow_mtrl_alpha -> abc_ic_menu_moreoverflow_mtrl_alpha
    int abc_ic_menu_paste_mtrl_am_alpha -> abc_ic_menu_paste_mtrl_am_alpha
    int abc_ic_menu_selectall_mtrl_alpha -> abc_ic_menu_selectall_mtrl_alpha
    int abc_ic_menu_share_mtrl_alpha -> abc_ic_menu_share_mtrl_alpha
    int abc_ic_search_api_mtrl_alpha -> abc_ic_search_api_mtrl_alpha
    int abc_ic_voice_search_api_mtrl_alpha -> abc_ic_voice_search_api_mtrl_alpha
    int abc_item_background_holo_dark -> abc_item_background_holo_dark
    int abc_item_background_holo_light -> abc_item_background_holo_light
    int abc_list_divider_mtrl_alpha -> abc_list_divider_mtrl_alpha
    int abc_list_focused_holo -> abc_list_focused_holo
    int abc_list_longpressed_holo -> abc_list_longpressed_holo
    int abc_list_pressed_holo_dark -> abc_list_pressed_holo_dark
    int abc_list_pressed_holo_light -> abc_list_pressed_holo_light
    int abc_list_selector_background_transition_holo_dark -> abc_list_selector_background_transition_holo_dark
    int abc_list_selector_background_transition_holo_light -> abc_list_selector_background_transition_holo_light
    int abc_list_selector_disabled_holo_dark -> abc_list_selector_disabled_holo_dark
    int abc_list_selector_disabled_holo_light -> abc_list_selector_disabled_holo_light
    int abc_list_selector_holo_dark -> abc_list_selector_holo_dark
    int abc_list_selector_holo_light -> abc_list_selector_holo_light
    int abc_menu_hardkey_panel_mtrl_mult -> abc_menu_hardkey_panel_mtrl_mult
    int abc_popup_background_mtrl_mult -> abc_popup_background_mtrl_mult
    int abc_spinner_mtrl_am_alpha -> abc_spinner_mtrl_am_alpha
    int abc_switch_thumb_material -> abc_switch_thumb_material
    int abc_switch_track_mtrl_alpha -> abc_switch_track_mtrl_alpha
    int abc_tab_indicator_material -> abc_tab_indicator_material
    int abc_tab_indicator_mtrl_alpha -> abc_tab_indicator_mtrl_alpha
    int abc_textfield_activated_mtrl_alpha -> abc_textfield_activated_mtrl_alpha
    int abc_textfield_default_mtrl_alpha -> abc_textfield_default_mtrl_alpha
    int abc_textfield_search_activated_mtrl_alpha -> abc_textfield_search_activated_mtrl_alpha
    int abc_textfield_search_default_mtrl_alpha -> abc_textfield_search_default_mtrl_alpha
    int abc_textfield_search_material -> abc_textfield_search_material
    int action_alias -> action_alias
    int action_sheet_button_cancel_click -> action_sheet_button_cancel_click
    int action_sheet_button_cancel_normal -> action_sheet_button_cancel_normal
    int action_sheet_button_cancel_selector -> action_sheet_button_cancel_selector
    int agree_choice_box -> agree_choice_box
    int agree_choice_box_hl -> agree_choice_box_hl
    int agreement_color_selector -> agreement_color_selector
    int arrow -> arrow
    int arrow_up -> arrow_up
    int bg_bottom_new -> bg_bottom_new
    int bg_button_red -> bg_button_red
    int bg_button_red_hl -> bg_button_red_hl
    int bg_com_desc -> bg_com_desc
    int bg_com_white -> bg_com_white
    int bg_com_white_press -> bg_com_white_press
    int bg_combination_desc -> bg_combination_desc
    int bg_combination_item_selector -> bg_combination_item_selector
    int bg_common_btn -> bg_common_btn
    int bg_common_white_btn -> bg_common_white_btn
    int bg_con_title_header -> bg_con_title_header
    int bg_con_title_header_bk -> bg_con_title_header_bk
    int bg_custom_toast -> bg_custom_toast
    int bg_dialog -> bg_dialog
    int bg_dkimgtextmsg -> bg_dkimgtextmsg
    int bg_dkimgtextmsg_noraml -> bg_dkimgtextmsg_noraml
    int bg_dkimgtextmsg_pressed -> bg_dkimgtextmsg_pressed
    int bg_followed -> bg_followed
    int bg_followed_hl -> bg_followed_hl
    int bg_gray_border_gray -> bg_gray_border_gray
    int bg_gray_cion -> bg_gray_cion
    int bg_gray_normal -> bg_gray_normal
    int bg_gray_select -> bg_gray_select
    int bg_hmore_selector -> bg_hmore_selector
    int bg_main_plus_selector -> bg_main_plus_selector
    int bg_more_pop -> bg_more_pop
    int bg_order_gray -> bg_order_gray
    int bg_order_green -> bg_order_green
    int bg_order_index -> bg_order_index
    int bg_order_red -> bg_order_red
    int bg_translater_icon -> bg_translater_icon
    int bg_un_read_count -> bg_un_read_count
    int bg_unfollowed -> bg_unfollowed
    int bg_white_border_gray -> bg_white_border_gray
    int border_gray -> border_gray
    int bound_button -> bound_button
    int bound_image_email -> bound_image_email
    int bound_image_phone -> bound_image_phone
    int bound_image_qq -> bound_image_qq
    int bound_image_wechat -> bound_image_wechat
    int bound_image_weibo -> bound_image_weibo
    int btn_add -> btn_add
    int btn_add_hl -> btn_add_hl
    int btn_add_select -> btn_add_select
    int btn_addoptional_selector -> btn_addoptional_selector
    int btn_back_nor -> btn_back_nor
    int btn_back_norma -> btn_back_norma
    int btn_back_pre -> btn_back_pre
    int btn_back_press -> btn_back_press
    int btn_back_selector -> btn_back_selector
    int btn_bg_optional -> btn_bg_optional
    int btn_blue_border -> btn_blue_border
    int btn_blue_normal -> btn_blue_normal
    int btn_blue_press -> btn_blue_press
    int btn_blue_selector -> btn_blue_selector
    int btn_border_gray -> btn_border_gray
    int btn_border_gray_selector -> btn_border_gray_selector
    int btn_cancel -> btn_cancel
    int btn_cancel_press -> btn_cancel_press
    int btn_color_line_selector -> btn_color_line_selector
    int btn_del_item_normal -> btn_del_item_normal
    int btn_del_item_pressed -> btn_del_item_pressed
    int btn_del_item_selector -> btn_del_item_selector
    int btn_edit_normal -> btn_edit_normal
    int btn_edit_press -> btn_edit_press
    int btn_edit_selector -> btn_edit_selector
    int btn_gray_bg -> btn_gray_bg
    int btn_more_select -> btn_more_select
    int btn_paihang_selecter -> btn_paihang_selecter
    int btn_pop_text_selector -> btn_pop_text_selector
    int btn_quxiao_normal -> btn_quxiao_normal
    int btn_quxiao_press -> btn_quxiao_press
    int btn_quxiao_selector -> btn_quxiao_selector
    int btn_red_selector -> btn_red_selector
    int btn_reduce -> btn_reduce
    int btn_reduce_hl -> btn_reduce_hl
    int btn_search_select -> btn_search_select
    int btn_setting_selecter -> btn_setting_selecter
    int btn_share_select -> btn_share_select
    int btn_start -> btn_start
    int btn_start_hl -> btn_start_hl
    int btn_tianjia -> btn_tianjia
    int btn_titletab_center_selector -> btn_titletab_center_selector
    int btn_titletab_left_selector -> btn_titletab_left_selector
    int btn_titletab_right_selector -> btn_titletab_right_selector
    int btn_tiyan_selector -> btn_tiyan_selector
    int btn_unable_gray -> btn_unable_gray
    int btn_white_grayborder_selector -> btn_white_grayborder_selector
    int btn_white_selector -> btn_white_selector
    int btn_zoom_in_select -> btn_zoom_in_select
    int btn_zoom_out_select -> btn_zoom_out_select
    int button_blue -> button_blue
    int button_bound -> button_bound
    int button_check_red -> button_check_red
    int button_gray_border -> button_gray_border
    int button_gray_border_press -> button_gray_border_press
    int button_login -> button_login
    int button_normal_blue -> button_normal_blue
    int button_register -> button_register
    int button_unable -> button_unable
    int cb_add_item_selector -> cb_add_item_selector
    int cb_add_normal -> cb_add_normal
    int cb_add_selected -> cb_add_selected
    int cb_agree_seletor -> cb_agree_seletor
    int cb_bar_market -> cb_bar_market
    int cb_bar_news -> cb_bar_news
    int cb_bar_stock -> cb_bar_stock
    int cb_bar_user -> cb_bar_user
    int cb_eye -> cb_eye
    int cb_eye_hl -> cb_eye_hl
    int cb_order_add_follow -> cb_order_add_follow
    int cb_psw_seletor -> cb_psw_seletor
    int cb_title_edit -> cb_title_edit
    int cb_tixing_selector -> cb_tixing_selector
    int change_name_icon -> change_name_icon
    int check_select -> check_select
    int checkbox_off_normal_light -> checkbox_off_normal_light
    int checkbox_on_normal_light -> checkbox_on_normal_light
    int compare_up_down -> compare_up_down
    int conversation_list_msg_sending -> conversation_list_msg_sending
    int corners_bg -> corners_bg
    int dark_dot -> dark_dot
    int dialog_black_selector -> dialog_black_selector
    int dialog_item_log -> dialog_item_log
    int dkhs_flash -> dkhs_flash
    int dksh_flash -> dksh_flash
    int dot -> dot
    int dot_combination -> dot_combination
    int dot_index -> dot_index
    int dot_index3 -> dot_index3
    int dot_normal -> dot_normal
    int edit_text_bg -> edit_text_bg
    int edittext_bg -> edittext_bg
    int edittext_search_bg -> edittext_search_bg
    int edittext_search_white_bg -> edittext_search_white_bg
    int feed_image_photo -> feed_image_photo
    int gif_guide_five -> gif_guide_five
    int gif_guide_four -> gif_guide_four
    int gif_guide_frist -> gif_guide_frist
    int git_guide_three -> git_guide_three
    int git_guide_two -> git_guide_two
    int gonggao -> gonggao
    int gonggao_hl -> gonggao_hl
    int gray -> gray
    int gray_bg_selector -> gray_bg_selector
    int gray_main_plus_selector -> gray_main_plus_selector
    int gray_normal -> gray_normal
    int ic_add -> ic_add
    int ic_agree -> ic_agree
    int ic_delete -> ic_delete
    int ic_delete_item -> ic_delete_item
    int ic_delete_select -> ic_delete_select
    int ic_discuss -> ic_discuss
    int ic_down -> ic_down
    int ic_fm_adjust -> ic_fm_adjust
    int ic_fm_more -> ic_fm_more
    int ic_fm_remind -> ic_fm_remind
    int ic_fm_share -> ic_fm_share
    int ic_fundarrowright -> ic_fundarrowright
    int ic_funds_order -> ic_funds_order
    int ic_funds_order_hl -> ic_funds_order_hl
    int ic_gengduo -> ic_gengduo
    int ic_gengduo_hl -> ic_gengduo_hl
    int ic_gray_main_add -> ic_gray_main_add
    int ic_gray_main_addhl -> ic_gray_main_addhl
    int ic_grow_down -> ic_grow_down
    int ic_grow_up -> ic_grow_up
    int ic_growup -> ic_growup
    int ic_jinpai -> ic_jinpai
    int ic_launcher -> ic_launcher
    int ic_market -> ic_market
    int ic_market_hl -> ic_market_hl
    int ic_mycombinaton_main -> ic_mycombinaton_main
    int ic_networthrigth -> ic_networthrigth
    int ic_plus -> ic_plus
    int ic_plus_hl -> ic_plus_hl
    int ic_qidai -> ic_qidai
    int ic_qiri -> ic_qiri
    int ic_qiri_gray -> ic_qiri_gray
    int ic_qq -> ic_qq
    int ic_right_more_selector -> ic_right_more_selector
    int ic_select_down -> ic_select_down
    int ic_select_up -> ic_select_up
    int ic_share -> ic_share
    int ic_share_back -> ic_share_back
    int ic_thumb_dkhs -> ic_thumb_dkhs
    int ic_title_add -> ic_title_add
    int ic_title_add_back -> ic_title_add_back
    int ic_tixing -> ic_tixing
    int ic_tixingguo -> ic_tixingguo
    int ic_toast_dagou -> ic_toast_dagou
    int ic_toast_gantan -> ic_toast_gantan
    int ic_tongpai -> ic_tongpai
    int ic_up -> ic_up
    int ic_user_head -> ic_user_head
    int ic_wanshou -> ic_wanshou
    int ic_weibo -> ic_weibo
    int ic_weixin -> ic_weixin
    int ic_yanbao -> ic_yanbao
    int ic_yanbao_hl -> ic_yanbao_hl
    int ic_yinpai -> ic_yinpai
    int ic_zixuan -> ic_zixuan
    int ic_zixuan_hl -> ic_zixuan_hl
    int icon_adjust -> icon_adjust
    int icon_bar_market -> icon_bar_market
    int icon_bar_market_select -> icon_bar_market_select
    int icon_bar_news -> icon_bar_news
    int icon_bar_news_select -> icon_bar_news_select
    int icon_bar_stock -> icon_bar_stock
    int icon_bar_stock_select -> icon_bar_stock_select
    int icon_bar_user -> icon_bar_user
    int icon_bar_user_select -> icon_bar_user_select
    int icon_tianjia -> icon_tianjia
    int icon_tianjia_hl -> icon_tianjia_hl
    int indicator_close -> indicator_close
    int indicator_open -> indicator_open
    int ios7_btn -> ios7_btn
    int ios7_switch_off -> ios7_switch_off
    int ios7_switch_on -> ios7_switch_on
    int iv_tiyan_selector -> iv_tiyan_selector
    int kline_text_color_selector -> kline_text_color_selector
    int layout_back -> layout_back
    int left_menu_item_selector -> left_menu_item_selector
    int left_menu_item_selector_pressed -> left_menu_item_selector_pressed
    int list_choice_indicator_multiple -> list_choice_indicator_multiple
    int loading -> loading
    int logo -> logo
    int logo_shuiniu -> logo_shuiniu
    int logo_sinaweibo -> logo_sinaweibo
    int logo_sinaweibo_gray -> logo_sinaweibo_gray
    int logo_wechat -> logo_wechat
    int logo_wechat_gray -> logo_wechat_gray
    int logo_wechatmoments -> logo_wechatmoments
    int logo_wechatmoments_gray -> logo_wechatmoments_gray
    int lucency -> lucency
    int lv_white_selector -> lv_white_selector
    int main_fund_ranking_normal -> main_fund_ranking_normal
    int main_fund_ranking_select -> main_fund_ranking_select
    int main_mycombination_normal -> main_mycombination_normal
    int main_mycombination_select -> main_mycombination_select
    int main_optional_stock_normal -> main_optional_stock_normal
    int main_optional_stock_select -> main_optional_stock_select
    int main_plate_ranking_normal -> main_plate_ranking_normal
    int main_plate_ranking_select -> main_plate_ranking_select
    int main_portfolio_ranking_normal -> main_portfolio_ranking_normal
    int main_portfolio_ranking_select -> main_portfolio_ranking_select
    int main_stock_ranking_normal -> main_stock_ranking_normal
    int main_stock_ranking_select -> main_stock_ranking_select
    int market_icon_down -> market_icon_down
    int market_icon_up -> market_icon_up
    int menu_arrow_down -> menu_arrow_down
    int menu_arrow_right -> menu_arrow_right
    int menu_arrow_up -> menu_arrow_up
    int menu_disable -> menu_disable
    int menu_icon_myteam -> menu_icon_myteam
    int menu_icon_reflush -> menu_icon_reflush
    int menu_icon_setting -> menu_icon_setting
    int menu_message_center -> menu_message_center
    int menu_normal -> menu_normal
    int menu_select -> menu_select
    int menu_selector -> menu_selector
    int more -> more
    int more_hl -> more_hl
    int myportfolio_checkbox -> myportfolio_checkbox
    int myportfolio_checkbox_select -> myportfolio_checkbox_select
    int nav_left_main -> nav_left_main
    int nav_left_main_select -> nav_left_main_select
    int nav_more -> nav_more
    int nav_more_select -> nav_more_select
    int nav_refresh -> nav_refresh
    int nav_refresh_select -> nav_refresh_select
    int nav_refresh_selector -> nav_refresh_selector
    int nav_refreshing -> nav_refreshing
    int nav_right_main -> nav_right_main
    int nav_right_main_select -> nav_right_main_select
    int netvalue_black -> netvalue_black
    int netvalue_blue -> netvalue_blue
    int netvalue_gray -> netvalue_gray
    int netvalue_red -> netvalue_red
    int new_bg -> new_bg
    int news_expand_list_indicator -> news_expand_list_indicator
    int opition_edit_delete -> opition_edit_delete
    int opition_edit_move -> opition_edit_move
    int opition_edit_up -> opition_edit_up
    int optional_seekbar -> optional_seekbar
    int paihang -> paihang
    int paihang_hl -> paihang_hl
    int password_check_select -> password_check_select
    int password_check_unselect -> password_check_unselect
    int password_checkbox_selector -> password_checkbox_selector
    int progressbar -> progressbar
    int radio_button -> radio_button
    int radio_button_off -> radio_button_off
    int radio_button_on -> radio_button_on
    int rc_add_people -> rc_add_people
    int rc_an_voice_receive -> rc_an_voice_receive
    int rc_an_voice_sent -> rc_an_voice_sent
    int rc_bar_back -> rc_bar_back
    int rc_bar_logo -> rc_bar_logo
    int rc_bar_more -> rc_bar_more
    int rc_bg_albums_spinner -> rc_bg_albums_spinner
    int rc_bg_editinput -> rc_bg_editinput
    int rc_bg_item -> rc_bg_item
    int rc_bg_text_hover -> rc_bg_text_hover
    int rc_bg_text_normal -> rc_bg_text_normal
    int rc_bg_voice_popup -> rc_bg_voice_popup
    int rc_btn_answer_selector -> rc_btn_answer_selector
    int rc_btn_finish_selector -> rc_btn_finish_selector
    int rc_btn_hands_free_selector -> rc_btn_hands_free_selector
    int rc_btn_input -> rc_btn_input
    int rc_btn_over_selector -> rc_btn_over_selector
    int rc_btn_pub_service_enter_hover -> rc_btn_pub_service_enter_hover
    int rc_btn_pub_service_enter_normal -> rc_btn_pub_service_enter_normal
    int rc_btn_pub_service_follow_hover -> rc_btn_pub_service_follow_hover
    int rc_btn_pub_service_follow_normal -> rc_btn_pub_service_follow_normal
    int rc_btn_public_service_enter_selector -> rc_btn_public_service_enter_selector
    int rc_btn_public_service_unfollow_selector -> rc_btn_public_service_unfollow_selector
    int rc_btn_refuse_selector -> rc_btn_refuse_selector
    int rc_btn_send -> rc_btn_send
    int rc_btn_send_hover -> rc_btn_send_hover
    int rc_btn_send_normal -> rc_btn_send_normal
    int rc_btn_sound_off_selector -> rc_btn_sound_off_selector
    int rc_btn_voice -> rc_btn_voice
    int rc_btn_voice_hover -> rc_btn_voice_hover
    int rc_btn_voice_normal -> rc_btn_voice_normal
    int rc_call_answer -> rc_call_answer
    int rc_call_answer_down -> rc_call_answer_down
    int rc_call_over -> rc_call_over
    int rc_call_over_down -> rc_call_over_down
    int rc_call_refuse -> rc_call_refuse
    int rc_call_refuse_down -> rc_call_refuse_down
    int rc_checkbox_normal -> rc_checkbox_normal
    int rc_checkbox_pressed -> rc_checkbox_pressed
    int rc_conversation_list_msg_send_failure -> rc_conversation_list_msg_send_failure
    int rc_conversation_list_msg_sending -> rc_conversation_list_msg_sending
    int rc_default_portrait -> rc_default_portrait
    int rc_ed_pub_service_search_hover -> rc_ed_pub_service_search_hover
    int rc_ed_pub_service_search_normal -> rc_ed_pub_service_search_normal
    int rc_ed_public_service_search_selector -> rc_ed_public_service_search_selector
    int rc_group_default_portrait -> rc_group_default_portrait
    int rc_hands_free -> rc_hands_free
    int rc_hands_free_disable -> rc_hands_free_disable
    int rc_hands_free_down -> rc_hands_free_down
    int rc_ic_albums_checked -> rc_ic_albums_checked
    int rc_ic_albums_normal -> rc_ic_albums_normal
    int rc_ic_bubble_left -> rc_ic_bubble_left
    int rc_ic_bubble_no_left -> rc_ic_bubble_no_left
    int rc_ic_bubble_no_right -> rc_ic_bubble_no_right
    int rc_ic_bubble_right -> rc_ic_bubble_right
    int rc_ic_bubble_white -> rc_ic_bubble_white
    int rc_ic_camera -> rc_ic_camera
    int rc_ic_def_coversation_portrait -> rc_ic_def_coversation_portrait
    int rc_ic_def_msg_portrait -> rc_ic_def_msg_portrait
    int rc_ic_def_rich_content -> rc_ic_def_rich_content
    int rc_ic_delete -> rc_ic_delete
    int rc_ic_emoji_block -> rc_ic_emoji_block
    int rc_ic_extend -> rc_ic_extend
    int rc_ic_extend_normal -> rc_ic_extend_normal
    int rc_ic_extend_selected -> rc_ic_extend_selected
    int rc_ic_keyboard -> rc_ic_keyboard
    int rc_ic_keyboard_normal -> rc_ic_keyboard_normal
    int rc_ic_keyboard_selected -> rc_ic_keyboard_selected
    int rc_ic_location -> rc_ic_location
    int rc_ic_location_item_default -> rc_ic_location_item_default
    int rc_ic_message_block -> rc_ic_message_block
    int rc_ic_notice -> rc_ic_notice
    int rc_ic_notice_loading -> rc_ic_notice_loading
    int rc_ic_notice_point -> rc_ic_notice_point
    int rc_ic_notice_wraning -> rc_ic_notice_wraning
    int rc_ic_phone -> rc_ic_phone
    int rc_ic_picture -> rc_ic_picture
    int rc_ic_portrait_voip -> rc_ic_portrait_voip
    int rc_ic_setting_friends_add -> rc_ic_setting_friends_add
    int rc_ic_setting_friends_delete -> rc_ic_setting_friends_delete
    int rc_ic_smiley -> rc_ic_smiley
    int rc_ic_smiley_normal -> rc_ic_smiley_normal
    int rc_ic_smiley_selected -> rc_ic_smiley_selected
    int rc_ic_voice -> rc_ic_voice
    int rc_ic_voice_normal -> rc_ic_voice_normal
    int rc_ic_voice_receive -> rc_ic_voice_receive
    int rc_ic_voice_receive_play1 -> rc_ic_voice_receive_play1
    int rc_ic_voice_receive_play2 -> rc_ic_voice_receive_play2
    int rc_ic_voice_receive_play3 -> rc_ic_voice_receive_play3
    int rc_ic_voice_selected -> rc_ic_voice_selected
    int rc_ic_voice_sent -> rc_ic_voice_sent
    int rc_ic_voice_sent_play1 -> rc_ic_voice_sent_play1
    int rc_ic_voice_sent_play2 -> rc_ic_voice_sent_play2
    int rc_ic_voice_sent_play3 -> rc_ic_voice_sent_play3
    int rc_ic_volume_1 -> rc_ic_volume_1
    int rc_ic_volume_2 -> rc_ic_volume_2
    int rc_ic_volume_3 -> rc_ic_volume_3
    int rc_ic_volume_4 -> rc_ic_volume_4
    int rc_ic_volume_5 -> rc_ic_volume_5
    int rc_ic_volume_6 -> rc_ic_volume_6
    int rc_ic_volume_7 -> rc_ic_volume_7
    int rc_ic_volume_8 -> rc_ic_volume_8
    int rc_ic_volume_cancel -> rc_ic_volume_cancel
    int rc_ic_volume_wraning -> rc_ic_volume_wraning
    int rc_ic_warning -> rc_ic_warning
    int rc_img_camera -> rc_img_camera
    int rc_mebmer_delete -> rc_mebmer_delete
    int rc_photo_checkbox -> rc_photo_checkbox
    int rc_precheckbox_normal -> rc_precheckbox_normal
    int rc_precheckbox_pressed -> rc_precheckbox_pressed
    int rc_preview_checkbox -> rc_preview_checkbox
    int rc_radio_button_off -> rc_radio_button_off
    int rc_radio_button_on -> rc_radio_button_on
    int rc_receive_voice_one -> rc_receive_voice_one
    int rc_receive_voice_three -> rc_receive_voice_three
    int rc_receive_voice_two -> rc_receive_voice_two
    int rc_send_voice_one -> rc_send_voice_one
    int rc_send_voice_three -> rc_send_voice_three
    int rc_send_voice_two -> rc_send_voice_two
    int rc_sound_off -> rc_sound_off
    int rc_sound_off_disable -> rc_sound_off_disable
    int rc_sound_off_down -> rc_sound_off_down
    int rc_switch_btn -> rc_switch_btn
    int rc_unread_count_bg -> rc_unread_count_bg
    int rc_voice_icon_left -> rc_voice_icon_left
    int rc_voice_icon_right -> rc_voice_icon_right
    int rc_voide_message_unread -> rc_voide_message_unread
    int rc_volume_four -> rc_volume_four
    int rc_volume_one -> rc_volume_one
    int rc_volume_three -> rc_volume_three
    int rc_volume_two -> rc_volume_two
    int rc_volume_zero -> rc_volume_zero
    int red -> red
    int red_cornericon -> red_cornericon
    int regist_success -> regist_success
    int roundcorner_bg_single -> roundcorner_bg_single
    int search_bg_selector -> search_bg_selector
    int search_gray -> search_gray
    int search_white -> search_white
    int setting_app -> setting_app
    int setting_checkbox_selector -> setting_checkbox_selector
    int setting_image_right -> setting_image_right
    int setting_img_exit -> setting_img_exit
    int shadow_bottom -> shadow_bottom
    int shadow_left -> shadow_left
    int shadow_right -> shadow_right
    int shezhi -> shezhi
    int shezhi_hl -> shezhi_hl
    int ssdk_auth_title_back -> ssdk_auth_title_back
    int ssdk_back_arr -> ssdk_back_arr
    int ssdk_title_div -> ssdk_title_div
    int switch_back_new -> switch_back_new
    int switch_bg -> switch_bg
    int switch_button -> switch_button
    int switch_image_gray -> switch_image_gray
    int switch_selector -> switch_selector
    int switch_thumb -> switch_thumb
    int tab_backgroud -> tab_backgroud
    int tab_center_orange_border -> tab_center_orange_border
    int tab_center_white -> tab_center_white
    int tab_compare_normal -> tab_compare_normal
    int tab_compare_selected -> tab_compare_selected
    int tab_compare_selector -> tab_compare_selector
    int tab_left_orange_border -> tab_left_orange_border
    int tab_left_white -> tab_left_white
    int tab_news_normal -> tab_news_normal
    int tab_news_selected -> tab_news_selected
    int tab_news_selector -> tab_news_selector
    int tab_normal -> tab_normal
    int tab_position_normal -> tab_position_normal
    int tab_position_selected -> tab_position_selected
    int tab_position_selector -> tab_position_selector
    int tab_right_orange_border -> tab_right_orange_border
    int tab_right_white -> tab_right_white
    int tab_select -> tab_select
    int tab_trend_normal -> tab_trend_normal
    int tab_trend_selected -> tab_trend_selected
    int tab_trend_selector -> tab_trend_selector
    int text_color_selector -> text_color_selector
    int theme_color -> theme_color
    int theme_gray -> theme_gray
    int theme_gray_press -> theme_gray_press
    int title_back -> title_back
    int title_shadow -> title_shadow
    int tiyan -> tiyan
    int tiyan_hl -> tiyan_hl
    int transparent -> transparent
    int tv_combination_currentnet -> tv_combination_currentnet
    int tv_gray_text -> tv_gray_text
    int u1f004 -> u1f004
    int u1f30f -> u1f30f
    int u1f319 -> u1f319
    int u1f332 -> u1f332
    int u1f339 -> u1f339
    int u1f33b -> u1f33b
    int u1f349 -> u1f349
    int u1f356 -> u1f356
    int u1f35a -> u1f35a
    int u1f366 -> u1f366
    int u1f36b -> u1f36b
    int u1f377 -> u1f377
    int u1f37b -> u1f37b
    int u1f381 -> u1f381
    int u1f382 -> u1f382
    int u1f384 -> u1f384
    int u1f389 -> u1f389
    int u1f393 -> u1f393
    int u1f3a4 -> u1f3a4
    int u1f3b2 -> u1f3b2
    int u1f3b5 -> u1f3b5
    int u1f3c0 -> u1f3c0
    int u1f3c2 -> u1f3c2
    int u1f3e1 -> u1f3e1
    int u1f434 -> u1f434
    int u1f436 -> u1f436
    int u1f437 -> u1f437
    int u1f44a -> u1f44a
    int u1f44c -> u1f44c
    int u1f44d -> u1f44d
    int u1f44e -> u1f44e
    int u1f44f -> u1f44f
    int u1f451 -> u1f451
    int u1f46a -> u1f46a
    int u1f46b -> u1f46b
    int u1f47b -> u1f47b
    int u1f47c -> u1f47c
    int u1f47d -> u1f47d
    int u1f47f -> u1f47f
    int u1f484 -> u1f484
    int u1f48a -> u1f48a
    int u1f48b -> u1f48b
    int u1f48d -> u1f48d
    int u1f494 -> u1f494
    int u1f4a1 -> u1f4a1
    int u1f4a2 -> u1f4a2
    int u1f4a3 -> u1f4a3
    int u1f4a4 -> u1f4a4
    int u1f4a9 -> u1f4a9
    int u1f4aa -> u1f4aa
    int u1f4b0 -> u1f4b0
    int u1f4da -> u1f4da
    int u1f4de -> u1f4de
    int u1f4e2 -> u1f4e2
    int u1f525 -> u1f525
    int u1f52b -> u1f52b
    int u1f556 -> u1f556
    int u1f600 -> u1f600
    int u1f601 -> u1f601
    int u1f602 -> u1f602
    int u1f603 -> u1f603
    int u1f605 -> u1f605
    int u1f606 -> u1f606
    int u1f607 -> u1f607
    int u1f608 -> u1f608
    int u1f609 -> u1f609
    int u1f60a -> u1f60a
    int u1f60b -> u1f60b
    int u1f60c -> u1f60c
    int u1f60d -> u1f60d
    int u1f60e -> u1f60e
    int u1f60f -> u1f60f
    int u1f611 -> u1f611
    int u1f612 -> u1f612
    int u1f613 -> u1f613
    int u1f614 -> u1f614
    int u1f615 -> u1f615
    int u1f616 -> u1f616
    int u1f618 -> u1f618
    int u1f61a -> u1f61a
    int u1f61c -> u1f61c
    int u1f61d -> u1f61d
    int u1f61e -> u1f61e
    int u1f61f -> u1f61f
    int u1f621 -> u1f621
    int u1f622 -> u1f622
    int u1f623 -> u1f623
    int u1f624 -> u1f624
    int u1f628 -> u1f628
    int u1f629 -> u1f629
    int u1f62a -> u1f62a
    int u1f62b -> u1f62b
    int u1f62c -> u1f62c
    int u1f62d -> u1f62d
    int u1f62e -> u1f62e
    int u1f62f -> u1f62f
    int u1f630 -> u1f630
    int u1f631 -> u1f631
    int u1f632 -> u1f632
    int u1f633 -> u1f633
    int u1f634 -> u1f634
    int u1f635 -> u1f635
    int u1f636 -> u1f636
    int u1f637 -> u1f637
    int u1f648 -> u1f648
    int u1f649 -> u1f649
    int u1f64a -> u1f64a
    int u1f64f -> u1f64f
    int u1f680 -> u1f680
    int u1f6ab -> u1f6ab
    int u1f6b2 -> u1f6b2
    int u1f6bf -> u1f6bf
    int u23f0 -> u23f0
    int u23f3 -> u23f3
    int u2600 -> u2600
    int u2601 -> u2601
    int u2614 -> u2614
    int u2615 -> u2615
    int u261d -> u261d
    int u263a -> u263a
    int u26a1 -> u26a1
    int u26bd -> u26bd
    int u26c4 -> u26c4
    int u26c5 -> u26c5
    int u270a -> u270a
    int u270b -> u270b
    int u270c -> u270c
    int u270f -> u270f
    int u2744 -> u2744
    int u2b50 -> u2b50
    int vpi__tab_indicator -> vpi__tab_indicator
    int vpi__tab_selected_holo -> vpi__tab_selected_holo
    int vpi__tab_unselected_holo -> vpi__tab_unselected_holo
    int white_black_selector -> white_black_selector
    int white_cardview_bg -> white_cardview_bg
    int white_dot -> white_dot
    int white_gengduo -> white_gengduo
    int zoom_in -> zoom_in
    int zoom_in_hl -> zoom_in_hl
    int zoom_out -> zoom_out
    int zoom_out_hl -> zoom_out_hl
com.dkhs.portfolio.R$id -> com.dkhs.portfolio.R$id:
    int C -> C
    int CE -> CE
    int CS -> CS
    int CSE -> CSE
    int EC -> EC
    int ECS -> ECS
    int ESC -> ESC
    int Large -> Large
    int Normal -> Normal
    int SC -> SC
    int SCE -> SCE
    int Small -> Small
    int abbr_name -> abbr_name
    int about_layout_dus -> about_layout_dus
    int about_version -> about_version
    int account -> account
    int action_bar -> action_bar
    int action_bar_activity_content -> action_bar_activity_content
    int action_bar_container -> action_bar_container
    int action_bar_root -> action_bar_root
    int action_bar_spinner -> action_bar_spinner
    int action_bar_subtitle -> action_bar_subtitle
    int action_bar_title -> action_bar_title
    int action_context_bar -> action_context_bar
    int action_menu_divider -> action_menu_divider
    int action_menu_presenter -> action_menu_presenter
    int action_mode_bar -> action_mode_bar
    int action_mode_bar_stub -> action_mode_bar_stub
    int action_mode_close_button -> action_mode_close_button
    int activity_chooser_view_content -> activity_chooser_view_content
    int adapter_market_from -> adapter_market_from
    int adapter_market_title -> adapter_market_title
    int adapter_market_title_num -> adapter_market_title_num
    int adapter_web -> adapter_web
    int add_data -> add_data
    int adjust_time_divier -> adjust_time_divier
    int agreement_webview_web -> agreement_webview_web
    int alertTitle -> alertTitle
    int alignBounds -> alignBounds
    int alignMargins -> alignMargins
    int all -> all
    int always -> always
    int answer_id -> answer_id
    int at -> at
    int auto_complete_list -> auto_complete_list
    int auto_complete_view -> auto_complete_view
    int auto_search_list -> auto_search_list
    int beginning -> beginning
    int blank_view1 -> blank_view1
    int blank_view2 -> blank_view2
    int boot_arrowImageView -> boot_arrowImageView
    int boot_contentLayout -> boot_contentLayout
    int boot_lastUpdatedTextView -> boot_lastUpdatedTextView
    int boot_progressBar -> boot_progressBar
    int boot_tipsTextView -> boot_tipsTextView
    int bottom -> bottom
    int bottom_layout -> bottom_layout
    int bound_image_email -> bound_image_email
    int bound_image_phone -> bound_image_phone
    int bound_image_qq -> bound_image_qq
    int bound_image_wechat -> bound_image_wechat
    int bound_image_weibo -> bound_image_weibo
    int bound_text_email -> bound_text_email
    int bound_text_phone -> bound_text_phone
    int bound_text_qq -> bound_text_qq
    int bound_text_wechat -> bound_text_wechat
    int bound_text_weibo -> bound_text_weibo
    int btn_add_data -> btn_add_data
    int btn_add_optional_stock -> btn_add_optional_stock
    int btn_add_postional -> btn_add_postional
    int btn_adjust_position -> btn_adjust_position
    int btn_average -> btn_average
    int btn_back -> btn_back
    int btn_cancel -> btn_cancel
    int btn_combination_more -> btn_combination_more
    int btn_compare_fund -> btn_compare_fund
    int btn_comparison -> btn_comparison
    int btn_confirm -> btn_confirm
    int btn_detail -> btn_detail
    int btn_detail_date -> btn_detail_date
    int btn_exit -> btn_exit
    int btn_getCode -> btn_getCode
    int btn_header_back -> btn_header_back
    int btn_header_right -> btn_header_right
    int btn_isOK -> btn_isOK
    int btn_large -> btn_large
    int btn_login -> btn_login
    int btn_more_amplitude -> btn_more_amplitude
    int btn_more_down -> btn_more_down
    int btn_more_handover -> btn_more_handover
    int btn_more_incease -> btn_more_incease
    int btn_more_index -> btn_more_index
    int btn_more_plate -> btn_more_plate
    int btn_news -> btn_news
    int btn_order -> btn_order
    int btn_refresh -> btn_refresh
    int btn_right -> btn_right
    int btn_right_second -> btn_right_second
    int btn_sc_login -> btn_sc_login
    int btn_search -> btn_search
    int btn_select_fund -> btn_select_fund
    int btn_setpassword -> btn_setpassword
    int btn_share -> btn_share
    int btn_small -> btn_small
    int btn_start_login -> btn_start_login
    int btn_start_register -> btn_start_register
    int btn_tab1 -> btn_tab1
    int btn_tab2 -> btn_tab2
    int btn_tab3 -> btn_tab3
    int btn_tab4 -> btn_tab4
    int btn_titletab_center -> btn_titletab_center
    int btn_titletab_left -> btn_titletab_left
    int btn_titletab_right -> btn_titletab_right
    int btn_trend -> btn_trend
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int button_delete -> button_delete
    int call_finish -> call_finish
    int calling_state -> calling_state
    int cancel -> cancel
    int cb_add_follow -> cb_add_follow
    int cb_agree -> cb_agree
    int cb_select -> cb_select
    int cb_select_conbin -> cb_select_conbin
    int cb_select_stock -> cb_select_stock
    int cb_show_psw -> cb_show_psw
    int cb_show_repsw -> cb_show_repsw
    int cb_tixing -> cb_tixing
    int center -> center
    int center_horizontal -> center_horizontal
    int center_vertical -> center_vertical
    int change_edit_name -> change_edit_name
    int chart_volumn -> chart_volumn
    int checkbox -> checkbox
    int choose_retweet -> choose_retweet
    int choose_retweet_view -> choose_retweet_view
    int circle -> circle
    int clip_horizontal -> clip_horizontal
    int clip_vertical -> clip_vertical
    int code_reveive -> code_reveive
    int collapseActionView -> collapseActionView
    int com_layout -> com_layout
    int combination_bottom_view -> combination_bottom_view
    int combination_desc -> combination_desc
    int combination_detail_root_view -> combination_detail_root_view
    int combination_layout -> combination_layout
    int combination_name -> combination_name
    int combination_position -> combination_position
    int combination_ranking -> combination_ranking
    int compare_index -> compare_index
    int container -> container
    int contentFL -> contentFL
    int contentPanel -> contentPanel
    int contentView -> contentView
    int content_layout -> content_layout
    int content_ll -> content_ll
    int cp_rate -> cp_rate
    int create_portfolio_info -> create_portfolio_info
    int customPanel -> customPanel
    int decor_content_parent -> decor_content_parent
    int default_activity_button -> default_activity_button
    int delete -> delete
    int desc -> desc
    int description -> description
    int dialog -> dialog
    int dialog_bg -> dialog_bg
    int dialog_button_after_check -> dialog_button_after_check
    int dialog_button_before_checn -> dialog_button_before_checn
    int dialog_button_cancle -> dialog_button_cancle
    int dialog_button_changecombinationname -> dialog_button_changecombinationname
    int dialog_button_changeposition -> dialog_button_changeposition
    int dialog_button_privacysetting -> dialog_button_privacysetting
    int dialog_button_select -> dialog_button_select
    int dialog_button_takephone -> dialog_button_takephone
    int dialog_button_uncheck -> dialog_button_uncheck
    int disableHome -> disableHome
    int div_line -> div_line
    int div_line1 -> div_line1
    int divider -> divider
    int divider_line -> divider_line
    int dksh_flash -> dksh_flash
    int dollar -> dollar
    int draft_box -> draft_box
    int draft_count -> draft_count
    int drag_cover -> drag_cover
    int drag_item_up -> drag_item_up
    int drag_list_item_image -> drag_list_item_image
    int drag_list_item_text -> drag_list_item_text
    int drag_list_item_text_id -> drag_list_item_text_id
    int drag_text_delet_pad -> drag_text_delet_pad
    int dropdown -> dropdown
    int edit_query -> edit_query
    int emoticon -> emoticon
    int emoticon_gridview -> emoticon_gridview
    int end -> end
    int enter -> enter
    int et_daypercent -> et_daypercent
    int et_mobile -> et_mobile
    int et_myconbina_desc -> et_myconbina_desc
    int et_myconbina_name -> et_myconbina_name
    int et_password -> et_password
    int et_pricedown -> et_pricedown
    int et_priceup -> et_priceup
    int et_repassword -> et_repassword
    int et_search_key -> et_search_key
    int et_username -> et_username
    int et_verifycode -> et_verifycode
    int expand_activities_button -> expand_activities_button
    int expanded_menu -> expanded_menu
    int f10_tab_content -> f10_tab_content
    int feed_back_layout -> feed_back_layout
    int feed_edit_com -> feed_edit_com
    int feed_edit_text -> feed_edit_text
    int feed_image_load -> feed_image_load
    int fill -> fill
    int fill_horizontal -> fill_horizontal
    int fill_vertical -> fill_vertical
    int fl_content -> fl_content
    int floating_action_view -> floating_action_view
    int follow -> follow
    int fragment_market -> fragment_market
    int func -> func
    int fund_manager_view -> fund_manager_view
    int fund_overview -> fund_overview
    int guide_layout -> guide_layout
    int gv_comparison -> gv_comparison
    int gv_mainindex -> gv_mainindex
    int gv_plate -> gv_plate
    int hands_off_id -> hands_off_id
    int head_arrowImageView -> head_arrowImageView
    int head_contentLayout -> head_contentLayout
    int head_lastUpdatedTextView -> head_lastUpdatedTextView
    int head_progressBar -> head_progressBar
    int head_tipsTextView -> head_tipsTextView
    int holder -> holder
    int home -> home
    int homeAsUp -> homeAsUp
    int horizontal -> horizontal
    int hs_title -> hs_title
    int hs_title_bottom -> hs_title_bottom
    int hs_title_sticker -> hs_title_sticker
    int ib_del_conbin -> ib_del_conbin
    int icon -> icon
    int ifRoom -> ifRoom
    int im_avatar -> im_avatar
    int im_bg -> im_bg
    int im_content -> im_content
    int image -> image
    int image_detail -> image_detail
    int includeHead -> includeHead
    int indicator_title -> indicator_title
    int input_char_count -> input_char_count
    int introduction -> introduction
    int isnew -> isnew
    int item_icon -> item_icon
    int item_name -> item_name
    int items_container -> items_container
    int items_scroll_view -> items_scroll_view
    int ivForToast -> ivForToast
    int iv_additem -> iv_additem
    int iv_header -> iv_header
    int iv_item_del -> iv_item_del
    int iv_jiangpai -> iv_jiangpai
    int iv_plus -> iv_plus
    int iv_qiri -> iv_qiri
    int iv_qq -> iv_qq
    int iv_sc -> iv_sc
    int iv_search -> iv_search
    int iv_start -> iv_start
    int iv_uheader -> iv_uheader
    int iv_user_header -> iv_user_header
    int iv_wanshou -> iv_wanshou
    int iv_weibo -> iv_weibo
    int iv_weixin -> iv_weixin
    int klin_after_check -> klin_after_check
    int klin_before_check -> klin_before_check
    int klin_macd -> klin_macd
    int klin_uncheck -> klin_uncheck
    int klin_virtul_check -> klin_virtul_check
    int kline_turnover -> kline_turnover
    int land_klin_text_data -> land_klin_text_data
    int land_klin_text_data_name -> land_klin_text_data_name
    int land_klin_text_price -> land_klin_text_price
    int land_klin_text_title -> land_klin_text_title
    int land_klin_text_valum -> land_klin_text_valum
    int land_klin_text_valumNmae -> land_klin_text_valumNmae
    int land_kline_layout -> land_kline_layout
    int land_kline_layout_all -> land_kline_layout_all
    int land_kline_layouts -> land_kline_layouts
    int land_page -> land_page
    int lank_klind_exit -> lank_klind_exit
    int layout -> layout
    int layoutContent -> layoutContent
    int layout_add_combination -> layout_add_combination
    int layout_change_price -> layout_change_price
    int layout_content -> layout_content
    int layout_delete -> layout_delete
    int layout_first -> layout_first
    int layout_header -> layout_header
    int layout_index_header -> layout_index_header
    int layout_internal -> layout_internal
    int layout_noramlfund_header -> layout_noramlfund_header
    int layout_sepfund_header -> layout_sepfund_header
    int layout_stock_header -> layout_stock_header
    int layout_text -> layout_text
    int layout_value -> layout_value
    int left -> left
    int line -> line
    int line2 -> line2
    int line3 -> line3
    int line4 -> line4
    int line5 -> line5
    int line6 -> line6
    int line7 -> line7
    int line8 -> line8
    int linearLayout -> linearLayout
    int lines -> lines
    int liness -> liness
    int listMode -> listMode
    int listView -> listView
    int list_five_range_buy -> list_five_range_buy
    int list_five_range_sall -> list_five_range_sall
    int list_item -> list_item
    int list_item_footer -> list_item_footer
    int list_news -> list_news
    int ll -> ll
    int ll_adjust_history -> ll_adjust_history
    int ll_btn -> ll_btn
    int ll_chart -> ll_chart
    int ll_chart_switch -> ll_chart_switch
    int ll_combinatio -> ll_combinatio
    int ll_combination_title -> ll_combination_title
    int ll_content -> ll_content
    int ll_et_phone -> ll_et_phone
    int ll_et_vericode -> ll_et_vericode
    int ll_fo_time -> ll_fo_time
    int ll_followers -> ll_followers
    int ll_following -> ll_following
    int ll_item_main -> ll_item_main
    int ll_login_layout -> ll_login_layout
    int ll_menu -> ll_menu
    int ll_name -> ll_name
    int ll_percent_value -> ll_percent_value
    int ll_sc -> ll_sc
    int ll_share_title_bar -> ll_share_title_bar
    int ll_shareview -> ll_shareview
    int ll_symbols -> ll_symbols
    int ll_three_login -> ll_three_login
    int ll_tilte -> ll_tilte
    int ll_timelayout -> ll_timelayout
    int ll_to_time -> ll_to_time
    int ll_tool -> ll_tool
    int ll_userinfo_layout -> ll_userinfo_layout
    int loadView -> loadView
    int load_more -> load_more
    int login -> login
    int login_divider -> login_divider
    int login_or_regist -> login_or_regist
    int login_register_linearlayout_dot -> login_register_linearlayout_dot
    int logo -> logo
    int lv_adjust_history -> lv_adjust_history
    int lv_contribute_layout -> lv_contribute_layout
    int lv_discuss_flow -> lv_discuss_flow
    int lv_manager -> lv_manager
    int lv_market_amplitude -> lv_market_amplitude
    int lv_market_down -> lv_market_down
    int lv_market_handover -> lv_market_handover
    int lv_market_incease -> lv_market_incease
    int lv_more -> lv_more
    int lv_optional_layout -> lv_optional_layout
    int lv_report_form -> lv_report_form
    int mListView -> mListView
    int machart -> machart
    int main -> main
    int makemessage_layout -> makemessage_layout
    int manager_title -> manager_title
    int market_icon_center -> market_icon_center
    int market_icon_up_down -> market_icon_up_down
    int market_layout_item -> market_layout_item
    int market_layout_title -> market_layout_title
    int market_layout_upanddown -> market_layout_upanddown
    int market_list_item_index -> market_list_item_index
    int market_list_item_percent -> market_list_item_percent
    int market_text_change -> market_text_change
    int market_text_edition -> market_text_edition
    int market_text_index -> market_text_index
    int market_text_name -> market_text_name
    int market_text_name_num -> market_text_name_num
    int mask_layout -> mask_layout
    int message -> message
    int message_center_layout -> message_center_layout
    int middle -> middle
    int my_charts_view -> my_charts_view
    int my_progressbar -> my_progressbar
    int myids -> myids
    int name -> name
    int netvalue_button_day -> netvalue_button_day
    int netvalue_button_month -> netvalue_button_month
    int netvalue_button_week -> netvalue_button_week
    int netvalue_day -> netvalue_day
    int netvalue_month -> netvalue_month
    int netvalue_week -> netvalue_week
    int never -> never
    int news_symbol -> news_symbol
    int news_text_text -> news_text_text
    int news_text_title -> news_text_title
    int news_title_date -> news_title_date
    int news_title_icon -> news_title_icon
    int news_title_name -> news_title_name
    int news_title_num -> news_title_num
    int news_title_sym -> news_title_sym
    int next_step -> next_step
    int none -> none
    int normal -> normal
    int open_position -> open_position
    int option_edit_list -> option_edit_list
    int option_news_text_date -> option_news_text_date
    int option_news_text_dates -> option_news_text_dates
    int pager -> pager
    int parentPanel -> parentPanel
    int password -> password
    int password_setting_checkbox -> password_setting_checkbox
    int password_setting_new -> password_setting_new
    int password_setting_old -> password_setting_old
    int pb -> pb
    int pb_loadmore -> pb_loadmore
    int person_setting_parent -> person_setting_parent
    int phoneNumber -> phoneNumber
    int piegrah -> piegrah
    int portfolio_info -> portfolio_info
    int portrait -> portrait
    int position_text_createdate -> position_text_createdate
    int position_text_value -> position_text_value
    int position_text_valuename -> position_text_valuename
    int post_bar -> post_bar
    int profile_image -> profile_image
    int profile_item -> profile_item
    int proflie_content -> proflie_content
    int progress_circular -> progress_circular
    int progress_horizontal -> progress_horizontal
    int pull_to_refresh_progress -> pull_to_refresh_progress
    int radio -> radio
    int rc_actionbar -> rc_actionbar
    int rc_back -> rc_back
    int rc_btn_cancel -> rc_btn_cancel
    int rc_btn_ok -> rc_btn_ok
    int rc_chebox_pictrue -> rc_chebox_pictrue
    int rc_checkbox -> rc_checkbox
    int rc_content -> rc_content
    int rc_conversation_content -> rc_conversation_content
    int rc_conversation_msg_block -> rc_conversation_msg_block
    int rc_conversation_time -> rc_conversation_time
    int rc_conversation_title -> rc_conversation_title
    int rc_currentpage -> rc_currentpage
    int rc_ext -> rc_ext
    int rc_flow -> rc_flow
    int rc_fragment -> rc_fragment
    int rc_frame -> rc_frame
    int rc_icon -> rc_icon
    int rc_img -> rc_img
    int rc_indicator -> rc_indicator
    int rc_input -> rc_input
    int rc_input_extend -> rc_input_extend
    int rc_input_main -> rc_input_main
    int rc_input_switch -> rc_input_switch
    int rc_item0 -> rc_item0
    int rc_item1 -> rc_item1
    int rc_item2 -> rc_item2
    int rc_item3 -> rc_item3
    int rc_item4 -> rc_item4
    int rc_item5 -> rc_item5
    int rc_item6 -> rc_item6
    int rc_item7 -> rc_item7
    int rc_item8 -> rc_item8
    int rc_item9 -> rc_item9
    int rc_item_conversation -> rc_item_conversation
    int rc_layout -> rc_layout
    int rc_left -> rc_left
    int rc_list -> rc_list
    int rc_logo -> rc_logo
    int rc_message_send_failed -> rc_message_send_failed
    int rc_msg -> rc_msg
    int rc_new -> rc_new
    int rc_plugins -> rc_plugins
    int rc_portrait -> rc_portrait
    int rc_portrait_right -> rc_portrait_right
    int rc_progress -> rc_progress
    int rc_right -> rc_right
    int rc_search_btn -> rc_search_btn
    int rc_search_ed -> rc_search_ed
    int rc_search_list -> rc_search_list
    int rc_send -> rc_send
    int rc_setting_item -> rc_setting_item
    int rc_time -> rc_time
    int rc_title -> rc_title
    int rc_title_layout -> rc_title_layout
    int rc_txt -> rc_txt
    int rc_unread_message -> rc_unread_message
    int rc_unread_message_right -> rc_unread_message_right
    int rc_viewpager -> rc_viewpager
    int rc_voip_called_layout -> rc_voip_called_layout
    int rc_warning -> rc_warning
    int rc_webview -> rc_webview
    int recycler_view -> recycler_view
    int recyclerview_vertical -> recyclerview_vertical
    int refuse_id -> refuse_id
    int regist -> regist
    int register -> register
    int rel_group_intro -> rel_group_intro
    int right -> right
    int rl_aboutus -> rl_aboutus
    int rl_account -> rl_account
    int rl_add_stocklist -> rl_add_stocklist
    int rl_addup_history -> rl_addup_history
    int rl_adjust_remind -> rl_adjust_remind
    int rl_base_add_view -> rl_base_add_view
    int rl_center -> rl_center
    int rl_combina -> rl_combina
    int rl_combina_title -> rl_combina_title
    int rl_combination_list -> rl_combination_list
    int rl_combinationvalue -> rl_combinationvalue
    int rl_compare_title -> rl_compare_title
    int rl_content -> rl_content
    int rl_create_user -> rl_create_user
    int rl_desc -> rl_desc
    int rl_fiverange -> rl_fiverange
    int rl_fund_remind -> rl_fund_remind
    int rl_fund_type -> rl_fund_type
    int rl_header_title -> rl_header_title
    int rl_index -> rl_index
    int rl_menu -> rl_menu
    int rl_notice_remind -> rl_notice_remind
    int rl_password -> rl_password
    int rl_phone -> rl_phone
    int rl_repassword -> rl_repassword
    int rl_rigster_forget -> rl_rigster_forget
    int rl_search_stock -> rl_search_stock
    int rl_select -> rl_select
    int rl_start -> rl_start
    int rl_stock_rowview -> rl_stock_rowview
    int rl_stock_searchview -> rl_stock_searchview
    int rl_title -> rl_title
    int rl_trend_bottom -> rl_trend_bottom
    int rl_trend_info -> rl_trend_info
    int rl_trend_layout -> rl_trend_layout
    int rl_trend_view -> rl_trend_view
    int rl_user_info -> rl_user_info
    int rl_userhead -> rl_userhead
    int rl_value -> rl_value
    int rl_yanbao_remind -> rl_yanbao_remind
    int rlbutton -> rlbutton
    int rlt_agreement -> rlt_agreement
    int rootView -> rootView
    int sc_content -> sc_content
    int screen_name -> screen_name
    int search_badge -> search_badge
    int search_bar -> search_bar
    int search_button -> search_button
    int search_close_btn -> search_close_btn
    int search_edit_frame -> search_edit_frame
    int search_go_btn -> search_go_btn
    int search_icon -> search_icon
    int search_input -> search_input
    int search_input_text -> search_input_text
    int search_mag_icon -> search_mag_icon
    int search_plate -> search_plate
    int search_src_text -> search_src_text
    int search_text -> search_text
    int search_voice_btn -> search_voice_btn
    int seekBar -> seekBar
    int selectadapter_pager -> selectadapter_pager
    int selectadapter_parent_child -> selectadapter_parent_child
    int selectadapter_parent_icon -> selectadapter_parent_icon
    int selectadapter_parent_layout -> selectadapter_parent_layout
    int set_price_remind -> set_price_remind
    int setting_account_layout -> setting_account_layout
    int setting_app_cancel -> setting_app_cancel
    int setting_app_main -> setting_app_main
    int setting_app_right -> setting_app_right
    int setting_app_staging -> setting_app_staging
    int setting_app_test -> setting_app_test
    int setting_image_abortus -> setting_image_abortus
    int setting_image_bound -> setting_image_bound
    int setting_image_head -> setting_image_head
    int setting_image_name_right -> setting_image_name_right
    int setting_image_news -> setting_image_news
    int setting_image_opinion -> setting_image_opinion
    int setting_image_password_right -> setting_image_password_right
    int setting_image_right -> setting_image_right
    int setting_image_sign_right -> setting_image_sign_right
    int setting_layout_bound -> setting_layout_bound
    int setting_layout_check_version -> setting_layout_check_version
    int setting_layout_group -> setting_layout_group
    int setting_layout_icon -> setting_layout_icon
    int setting_layout_password -> setting_layout_password
    int setting_layout_sign -> setting_layout_sign
    int setting_layout_username -> setting_layout_username
    int setting_sign_bound -> setting_sign_bound
    int setting_sign_title -> setting_sign_title
    int setting_sing_text -> setting_sing_text
    int setting_text_account_ll -> setting_text_account_ll
    int setting_text_account_text -> setting_text_account_text
    int setting_text_name_text -> setting_text_name_text
    int settingt_text_name -> settingt_text_name
    int sh_rate -> sh_rate
    int shortcut -> shortcut
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int show_pictrue -> show_pictrue
    int shownumber -> shownumber
    int sign_edit_text -> sign_edit_text
    int sign_text_text -> sign_text_text
    int sound_off_container_id -> sound_off_container_id
    int sound_off_id -> sound_off_id
    int split_action_bar -> split_action_bar
    int square -> square
    int start -> start
    int statusBarBackground -> statusBarBackground
    int status_edit -> status_edit
    int status_item_detail -> status_item_detail
    int stock_layout -> stock_layout
    int stroke -> stroke
    int submit_area -> submit_area
    int sv_combinations -> sv_combinations
    int sw_adjust_remind -> sw_adjust_remind
    int sw_day_percent -> sw_day_percent
    int sw_fund_remind -> sw_fund_remind
    int sw_notice_remind -> sw_notice_remind
    int sw_price_down -> sw_price_down
    int sw_price_up -> sw_price_up
    int sw_yanbao_remind -> sw_yanbao_remind
    int swipe -> swipe
    int swipe_container -> swipe_container
    int swipemenu_listView -> swipemenu_listView
    int switch1 -> switch1
    int symbol -> symbol
    int tabMode -> tabMode
    int tab_1 -> tab_1
    int tab_2 -> tab_2
    int tab_3 -> tab_3
    int tab_4 -> tab_4
    int tab_netvalue -> tab_netvalue
    int text1 -> text1
    int textView -> textView
    int text_name -> text_name
    int text_title -> text_title
    int timesharingchart -> timesharingchart
    int title -> title
    int title_main_combination -> title_main_combination
    int title_template -> title_template
    int titletab_view -> titletab_view
    int toast_layout_root -> toast_layout_root
    int top -> top
    int topPanel -> topPanel
    int top_line -> top_line
    int triangle -> triangle
    int tv -> tv
    int tvForToast -> tvForToast
    int tv_accout -> tv_accout
    int tv_add_combina -> tv_add_combina
    int tv_addup_date -> tv_addup_date
    int tv_addup_text -> tv_addup_text
    int tv_addup_value -> tv_addup_value
    int tv_adjust_history -> tv_adjust_history
    int tv_adjust_time -> tv_adjust_time
    int tv_all_netvalue -> tv_all_netvalue
    int tv_amount_value -> tv_amount_value
    int tv_buytext -> tv_buytext
    int tv_center_value -> tv_center_value
    int tv_champion_combination -> tv_champion_combination
    int tv_chart_switch -> tv_chart_switch
    int tv_combin_title -> tv_combin_title
    int tv_combination_desc -> tv_combination_desc
    int tv_combination_index -> tv_combination_index
    int tv_combination_layout -> tv_combination_layout
    int tv_combination_name -> tv_combination_name
    int tv_combination_user -> tv_combination_user
    int tv_compare_ftime -> tv_compare_ftime
    int tv_compare_index -> tv_compare_index
    int tv_compare_ttime -> tv_compare_ttime
    int tv_comparename -> tv_comparename
    int tv_conbination_desc -> tv_conbination_desc
    int tv_conbination_name -> tv_conbination_name
    int tv_content -> tv_content
    int tv_create_time -> tv_create_time
    int tv_create_user -> tv_create_user
    int tv_current -> tv_current
    int tv_current_day -> tv_current_day
    int tv_current_price -> tv_current_price
    int tv_current_value -> tv_current_value
    int tv_dashline_tip -> tv_dashline_tip
    int tv_date -> tv_date
    int tv_date_line -> tv_date_line
    int tv_daypercent_text -> tv_daypercent_text
    int tv_daypercent_tip -> tv_daypercent_tip
    int tv_daypercent_units -> tv_daypercent_units
    int tv_delete_combina -> tv_delete_combina
    int tv_desc -> tv_desc
    int tv_desc_text -> tv_desc_text
    int tv_detail_value -> tv_detail_value
    int tv_discuss_agree -> tv_discuss_agree
    int tv_discuss_message -> tv_discuss_message
    int tv_discuss_name -> tv_discuss_name
    int tv_discuss_source -> tv_discuss_source
    int tv_discuss_time -> tv_discuss_time
    int tv_e -> tv_e
    int tv_e_value -> tv_e_value
    int tv_empty -> tv_empty
    int tv_floatmenu -> tv_floatmenu
    int tv_follow -> tv_follow
    int tv_follow_num -> tv_follow_num
    int tv_followers -> tv_followers
    int tv_following -> tv_following
    int tv_forget -> tv_forget
    int tv_friends -> tv_friends
    int tv_fund_name -> tv_fund_name
    int tv_fund_type -> tv_fund_type
    int tv_fundremind_text -> tv_fundremind_text
    int tv_highest -> tv_highest
    int tv_highest_value -> tv_highest_value
    int tv_his_netvalue -> tv_his_netvalue
    int tv_history -> tv_history
    int tv_history_netvalue -> tv_history_netvalue
    int tv_huan -> tv_huan
    int tv_huan_value -> tv_huan_value
    int tv_hushen -> tv_hushen
    int tv_incease_ratio -> tv_incease_ratio
    int tv_incease_value -> tv_incease_value
    int tv_income -> tv_income
    int tv_income_netvalue -> tv_income_netvalue
    int tv_income_text -> tv_income_text
    int tv_increase -> tv_increase
    int tv_increase_text -> tv_increase_text
    int tv_increase_value -> tv_increase_value
    int tv_isStop -> tv_isStop
    int tv_is_request_test -> tv_is_request_test
    int tv_item_select_fund -> tv_item_select_fund
    int tv_liang -> tv_liang
    int tv_liang_value -> tv_liang_value
    int tv_liuzhi -> tv_liuzhi
    int tv_liuzhi_value -> tv_liuzhi_value
    int tv_lowest -> tv_lowest
    int tv_lowest_value -> tv_lowest_value
    int tv_main_value -> tv_main_value
    int tv_mainindex -> tv_mainindex
    int tv_manamger_day -> tv_manamger_day
    int tv_manamger_name -> tv_manamger_name
    int tv_more_funds -> tv_more_funds
    int tv_mycob_add -> tv_mycob_add
    int tv_mycob_add_value -> tv_mycob_add_value
    int tv_mycob_curren_value -> tv_mycob_curren_value
    int tv_mycob_current -> tv_mycob_current
    int tv_mycombination -> tv_mycombination
    int tv_myconfig_text -> tv_myconfig_text
    int tv_name -> tv_name
    int tv_netvalue_text -> tv_netvalue_text
    int tv_new_count -> tv_new_count
    int tv_new_password -> tv_new_password
    int tv_nianshou_title -> tv_nianshou_title
    int tv_nodate -> tv_nodate
    int tv_now_netvalue -> tv_now_netvalue
    int tv_percent -> tv_percent
    int tv_percent_value -> tv_percent_value
    int tv_percentage -> tv_percentage
    int tv_phone -> tv_phone
    int tv_phonenum -> tv_phonenum
    int tv_portfolio_name -> tv_portfolio_name
    int tv_position_fromto -> tv_position_fromto
    int tv_position_tip -> tv_position_tip
    int tv_pre_netvalue -> tv_pre_netvalue
    int tv_precent -> tv_precent
    int tv_price -> tv_price
    int tv_pricedown_text -> tv_pricedown_text
    int tv_pricedown_tip -> tv_pricedown_tip
    int tv_pricedown_units -> tv_pricedown_units
    int tv_priceup_text -> tv_priceup_text
    int tv_priceup_tip -> tv_priceup_tip
    int tv_priceup_units -> tv_priceup_units
    int tv_psw -> tv_psw
    int tv_qirinihua -> tv_qirinihua
    int tv_range_vol -> tv_range_vol
    int tv_referto -> tv_referto
    int tv_referto_hide -> tv_referto_hide
    int tv_register -> tv_register
    int tv_report_date -> tv_report_date
    int tv_report_dayup -> tv_report_dayup
    int tv_report_netvalue -> tv_report_netvalue
    int tv_right_value -> tv_right_value
    int tv_sc -> tv_sc
    int tv_sc_s -> tv_sc_s
    int tv_shijing -> tv_shijing
    int tv_shiying -> tv_shiying
    int tv_shiying_value -> tv_shiying_value
    int tv_stock_code -> tv_stock_code
    int tv_stock_layout -> tv_stock_layout
    int tv_stock_name -> tv_stock_name
    int tv_stock_num -> tv_stock_num
    int tv_stock_percent -> tv_stock_percent
    int tv_stock_status -> tv_stock_status
    int tv_stockname -> tv_stockname
    int tv_suspend -> tv_suspend
    int tv_symbols -> tv_symbols
    int tv_symbols_prompt -> tv_symbols_prompt
    int tv_tab1 -> tv_tab1
    int tv_tab2 -> tv_tab2
    int tv_tab3 -> tv_tab3
    int tv_tab4 -> tv_tab4
    int tv_three_login_text -> tv_three_login_text
    int tv_time_left -> tv_time_left
    int tv_time_right -> tv_time_right
    int tv_time_text -> tv_time_text
    int tv_title -> tv_title
    int tv_title_info -> tv_title_info
    int tv_title_name -> tv_title_name
    int tv_today_netvalue -> tv_today_netvalue
    int tv_today_open -> tv_today_open
    int tv_today_open_value -> tv_today_open_value
    int tv_top -> tv_top
    int tv_top_value -> tv_top_value
    int tv_totime -> tv_totime
    int tv_trade_day -> tv_trade_day
    int tv_type -> tv_type
    int tv_type_title -> tv_type_title
    int tv_unread_count -> tv_unread_count
    int tv_up_price -> tv_up_price
    int tv_updown_text -> tv_updown_text
    int tv_updown_value -> tv_updown_value
    int tv_user_desc -> tv_user_desc
    int tv_user_name -> tv_user_name
    int tv_username -> tv_username
    int tv_value -> tv_value
    int tv_verifycode -> tv_verifycode
    int tv_wanshou_value -> tv_wanshou_value
    int tv_wanshoutitle -> tv_wanshoutitle
    int tv_yesterday_value -> tv_yesterday_value
    int tv_yesterday_value_prompt -> tv_yesterday_value_prompt
    int tv_zongzhi -> tv_zongzhi
    int tv_zongzhi_value -> tv_zongzhi_value
    int underline -> underline
    int unfollow -> unfollow
    int unlogin -> unlogin
    int unread_count -> unread_count
    int up -> up
    int upload_img -> upload_img
    int upload_img_content -> upload_img_content
    int useLogo -> useLogo
    int user_info -> user_info
    int user_myfunds_layout -> user_myfunds_layout
    int user_name -> user_name
    int user_photo -> user_photo
    int user_photo_container -> user_photo_container
    int user_profile_view -> user_profile_view
    int username -> username
    int v_bg -> v_bg
    int vericode -> vericode
    int vertical -> vertical
    int view_color -> view_color
    int view_content -> view_content
    int view_datalist -> view_datalist
    int view_discuss_bottom -> view_discuss_bottom
    int view_discuss_content -> view_discuss_content
    int view_discuss_title -> view_discuss_title
    int view_divider -> view_divider
    int view_news -> view_news
    int view_stock_title -> view_stock_title
    int view_title -> view_title
    int viewpager -> viewpager
    int vioce_control_container -> vioce_control_container
    int volume_animation -> volume_animation
    int vp -> vp
    int vp_billboard -> vp_billboard
    int webView -> webView
    int web_layout -> web_layout
    int web_text -> web_text
    int webadapter_image -> webadapter_image
    int welcome_layout -> welcome_layout
    int withText -> withText
    int wrap_content -> wrap_content
    int write_status_root -> write_status_root
    int write_view -> write_view
    int yanbao_layout -> yanbao_layout
    int yanbao_view -> yanbao_view
    int zhengquan -> zhengquan
com.dkhs.portfolio.R$integer -> com.dkhs.portfolio.R$integer:
    int abc_max_action_buttons -> abc_max_action_buttons
    int circular_progress_max -> circular_progress_max
    int select_touch_text -> select_touch_text
com.dkhs.portfolio.R$layout -> com.dkhs.portfolio.R$layout:
    int abc_action_bar_title_item -> abc_action_bar_title_item
    int abc_action_bar_up_container -> abc_action_bar_up_container
    int abc_action_bar_view_list_nav_layout -> abc_action_bar_view_list_nav_layout
    int abc_action_menu_item_layout -> abc_action_menu_item_layout
    int abc_action_menu_layout -> abc_action_menu_layout
    int abc_action_mode_bar -> abc_action_mode_bar
    int abc_action_mode_close_item_material -> abc_action_mode_close_item_material
    int abc_activity_chooser_view -> abc_activity_chooser_view
    int abc_activity_chooser_view_include -> abc_activity_chooser_view_include
    int abc_activity_chooser_view_list_item -> abc_activity_chooser_view_list_item
    int abc_expanded_menu_layout -> abc_expanded_menu_layout
    int abc_list_menu_item_checkbox -> abc_list_menu_item_checkbox
    int abc_list_menu_item_icon -> abc_list_menu_item_icon
    int abc_list_menu_item_layout -> abc_list_menu_item_layout
    int abc_list_menu_item_radio -> abc_list_menu_item_radio
    int abc_popup_menu_item_layout -> abc_popup_menu_item_layout
    int abc_screen_content_include -> abc_screen_content_include
    int abc_screen_simple -> abc_screen_simple
    int abc_screen_simple_overlay_action_mode -> abc_screen_simple_overlay_action_mode
    int abc_screen_toolbar -> abc_screen_toolbar
    int abc_search_dropdown_item_icons_2line -> abc_search_dropdown_item_icons_2line
    int abc_search_view -> abc_search_view
    int abc_simple_dropdown_hint -> abc_simple_dropdown_hint
    int activity_about_us -> activity_about_us
    int activity_add_conbina_stock -> activity_add_conbina_stock
    int activity_agreement -> activity_agreement
    int activity_bound_account -> activity_bound_account
    int activity_change_combination_name -> activity_change_combination_name
    int activity_change_username -> activity_change_username
    int activity_chat -> activity_chat
    int activity_chat_list -> activity_chat_list
    int activity_chat_setting -> activity_chat_setting
    int activity_combination_detail -> activity_combination_detail
    int activity_edit_tabfund -> activity_edit_tabfund
    int activity_everyday_record -> activity_everyday_record
    int activity_feed_back -> activity_feed_back
    int activity_flash -> activity_flash
    int activity_forget_psw -> activity_forget_psw
    int activity_friends_or_followers -> activity_friends_or_followers
    int activity_fund_detail -> activity_fund_detail
    int activity_fund_manager -> activity_fund_manager
    int activity_funds_order -> activity_funds_order
    int activity_history_positiondetail -> activity_history_positiondetail
    int activity_landscape_kchart -> activity_landscape_kchart
    int activity_login -> activity_login
    int activity_market -> activity_market
    int activity_marketcenter -> activity_marketcenter
    int activity_mycombination -> activity_mycombination
    int activity_new_combinationdetail -> activity_new_combinationdetail
    int activity_new_main -> activity_new_main
    int activity_news -> activity_news
    int activity_option_edit -> activity_option_edit
    int activity_option_fund_edit -> activity_option_fund_edit
    int activity_option_market_news -> activity_option_market_news
    int activity_optionalstock_list -> activity_optionalstock_list
    int activity_order_funddetail -> activity_order_funddetail
    int activity_positionadjust -> activity_positionadjust
    int activity_privacy_setting -> activity_privacy_setting
    int activity_setting_name -> activity_setting_name
    int activity_settingpassword_onsetting -> activity_settingpassword_onsetting
    int activity_sign_setting -> activity_sign_setting
    int activity_stock_remind -> activity_stock_remind
    int activity_stockquotes -> activity_stockquotes
    int activity_test -> activity_test
    int activity_user_combination -> activity_user_combination
    int activity_verification -> activity_verification
    int activity_web -> activity_web
    int activity_yanbao -> activity_yanbao
    int activity_yanbao_news -> activity_yanbao_news
    int adapter_info_optional -> adapter_info_optional
    int adapter_layout_weblist -> adapter_layout_weblist
    int adapter_opition_list -> adapter_opition_list
    int adapter_opition_news -> adapter_opition_news
    int adapter_report_news -> adapter_report_news
    int add_image -> add_image
    int bg_activity_marketcenter -> bg_activity_marketcenter
    int captcha_login_dialog_layout -> captcha_login_dialog_layout
    int change_check_layout -> change_check_layout
    int combinationdetailmore_dialog -> combinationdetailmore_dialog
    int divider_line -> divider_line
    int dot -> dot
    int drag_fund_list_item -> drag_fund_list_item
    int drag_funds_item -> drag_funds_item
    int drag_list_item -> drag_list_item
    int email_layout -> email_layout
    int empty_listview -> empty_listview
    int feed_back_dialog -> feed_back_dialog
    int fragment_chart -> fragment_chart
    int fragment_combination_news -> fragment_combination_news
    int fragment_compare -> fragment_compare
    int fragment_compare_index -> fragment_compare_index
    int fragment_discuss_flow -> fragment_discuss_flow
    int fragment_empty -> fragment_empty
    int fragment_fund_manager -> fragment_fund_manager
    int fragment_fund_profile -> fragment_fund_profile
    int fragment_fund_trend -> fragment_fund_trend
    int fragment_funds_order -> fragment_funds_order
    int fragment_invalid_state -> fragment_invalid_state
    int fragment_kcharts -> fragment_kcharts
    int fragment_kcharts_land -> fragment_kcharts_land
    int fragment_main_info -> fragment_main_info
    int fragment_main_marke -> fragment_main_marke
    int fragment_main_optionalstock -> fragment_main_optionalstock
    int fragment_market -> fragment_market
    int fragment_market_canter -> fragment_market_canter
    int fragment_market_funds -> fragment_market_funds
    int fragment_netvalue_trend -> fragment_netvalue_trend
    int fragment_news -> fragment_news
    int fragment_news2 -> fragment_news2
    int fragment_news_list -> fragment_news_list
    int fragment_no_refresh -> fragment_no_refresh
    int fragment_page_selectstock -> fragment_page_selectstock
    int fragment_position_bottom -> fragment_position_bottom
    int fragment_position_detail -> fragment_position_detail
    int fragment_report_form -> fragment_report_form
    int fragment_report_news -> fragment_report_news
    int fragment_selectstock -> fragment_selectstock
    int fragment_stock_order_byindex -> fragment_stock_order_byindex
    int fragment_stock_quotes_chart -> fragment_stock_quotes_chart
    int fragment_stock_quotes_chart_land -> fragment_stock_quotes_chart_land
    int fragment_tab_f10 -> fragment_tab_f10
    int fragment_tab_mycombina -> fragment_tab_mycombina
    int fragment_tab_myfunds -> fragment_tab_myfunds
    int fragment_tab_mystock -> fragment_tab_mystock
    int fragment_test -> fragment_test
    int fragment_top_scroll -> fragment_top_scroll
    int fragment_trend_chart -> fragment_trend_chart
    int fragment_user -> fragment_user
    int getvericode_layout -> getvericode_layout
    int guide -> guide
    int guide_first -> guide_first
    int guide_five -> guide_five
    int guide_fourth -> guide_fourth
    int guide_second -> guide_second
    int guide_third -> guide_third
    int item_achivement -> item_achivement
    int item_add_myconbination -> item_add_myconbination
    int item_btn_more -> item_btn_more
    int item_child_history_position -> item_child_history_position
    int item_compare_index -> item_compare_index
    int item_five_range -> item_five_range
    int item_float_menu -> item_float_menu
    int item_fund_manager -> item_fund_manager
    int item_funds_order_list -> item_funds_order_list
    int item_group_history_position -> item_group_history_position
    int item_history_profit -> item_history_profit
    int item_mark_center -> item_mark_center
    int item_market_hotplate -> item_market_hotplate
    int item_menu -> item_menu
    int item_my_combination -> item_my_combination
    int item_new_combination -> item_new_combination
    int item_news_child -> item_news_child
    int item_news_child2 -> item_news_child2
    int item_news_group -> item_news_group
    int item_news_time_flow -> item_news_time_flow
    int item_optional_fund_price -> item_optional_fund_price
    int item_optional_stock_price -> item_optional_stock_price
    int item_position_adjust_history -> item_position_adjust_history
    int item_position_adjust_history_new -> item_position_adjust_history_new
    int item_positiondetail_increase -> item_positiondetail_increase
    int item_report_form -> item_report_form
    int item_search_conbin_stock -> item_search_conbin_stock
    int item_select_compare_fund -> item_select_compare_fund
    int item_select_conbin_stock -> item_select_conbin_stock
    int item_select_refer_fund -> item_select_refer_fund
    int item_stock_position -> item_stock_position
    int item_user_combination -> item_user_combination
    int layout_adjust_conbin_info -> layout_adjust_conbin_info
    int layout_bottom -> layout_bottom
    int layout_btn_more -> layout_btn_more
    int layout_combination -> layout_combination
    int layout_combination_bottom_tab -> layout_combination_bottom_tab
    int layout_compare_index_view -> layout_compare_index_view
    int layout_create_conbina_info -> layout_create_conbina_info
    int layout_custom_toast -> layout_custom_toast
    int layout_detail_contribute_title -> layout_detail_contribute_title
    int layout_detail_pos_increase_title -> layout_detail_pos_increase_title
    int layout_dialog -> layout_dialog
    int layout_friends_or_follower -> layout_friends_or_follower
    int layout_fund -> layout_fund
    int layout_head_fund_manager -> layout_head_fund_manager
    int layout_horizontal_scroll_title -> layout_horizontal_scroll_title
    int layout_index_quotes_header -> layout_index_quotes_header
    int layout_line -> layout_line
    int layout_line_text -> layout_line_text
    int layout_list -> layout_list
    int layout_loading_more_footer -> layout_loading_more_footer
    int layout_main_market_title_bar -> layout_main_market_title_bar
    int layout_marketcenter_header -> layout_marketcenter_header
    int layout_menu_relativelayout -> layout_menu_relativelayout
    int layout_messaage -> layout_messaage
    int layout_mian_add -> layout_mian_add
    int layout_model -> layout_model
    int layout_model_default -> layout_model_default
    int layout_model_head -> layout_model_head
    int layout_more_myconbination -> layout_more_myconbination
    int layout_mycombination_listview -> layout_mycombination_listview
    int layout_noraml_fund_title -> layout_noraml_fund_title
    int layout_optional_percent -> layout_optional_percent
    int layout_pieview -> layout_pieview
    int layout_popview_order -> layout_popview_order
    int layout_roll_billboard -> layout_roll_billboard
    int layout_sep_fund_title -> layout_sep_fund_title
    int layout_setting_url -> layout_setting_url
    int layout_share_cancel -> layout_share_cancel
    int layout_share_title_bar -> layout_share_title_bar
    int layout_slide_delete -> layout_slide_delete
    int layout_statusview -> layout_statusview
    int layout_stock_quotes_header -> layout_stock_quotes_header
    int layout_text_5dp -> layout_text_5dp
    int layout_title_tab -> layout_title_tab
    int main -> main
    int makemessage_dialog -> makemessage_dialog
    int market_layout_market -> market_layout_market
    int progressbar -> progressbar
    int pull_to_refresh_head -> pull_to_refresh_head
    int pull_to_refresh_load_more -> pull_to_refresh_load_more
    int pull_to_refresh_page -> pull_to_refresh_page
    int rc_ac_albums -> rc_ac_albums
    int rc_ac_camera -> rc_ac_camera
    int rc_ac_preview -> rc_ac_preview
    int rc_ac_selected_pictrue -> rc_ac_selected_pictrue
    int rc_ac_webview -> rc_ac_webview
    int rc_activity -> rc_activity
    int rc_calledside_layout -> rc_calledside_layout
    int rc_callside_layout -> rc_callside_layout
    int rc_fr_conversation -> rc_fr_conversation
    int rc_fr_conversation_member_list -> rc_fr_conversation_member_list
    int rc_fr_conversationlist -> rc_fr_conversationlist
    int rc_fr_dialog_alter -> rc_fr_dialog_alter
    int rc_fr_messageinput -> rc_fr_messageinput
    int rc_fr_messagelist -> rc_fr_messagelist
    int rc_fr_photo -> rc_fr_photo
    int rc_fr_photo2 -> rc_fr_photo2
    int rc_fr_public_service_inf -> rc_fr_public_service_inf
    int rc_fr_public_service_search -> rc_fr_public_service_search
    int rc_fr_public_service_sub_list -> rc_fr_public_service_sub_list
    int rc_fr_test -> rc_fr_test
    int rc_fragment_base_setting -> rc_fragment_base_setting
    int rc_item_albums -> rc_item_albums
    int rc_item_appservice_conversation -> rc_item_appservice_conversation
    int rc_item_conversation -> rc_item_conversation
    int rc_item_conversation_member -> rc_item_conversation_member
    int rc_item_discussion_conversation -> rc_item_discussion_conversation
    int rc_item_discussion_notification_message -> rc_item_discussion_notification_message
    int rc_item_group_conversation -> rc_item_group_conversation
    int rc_item_imgmsg -> rc_item_imgmsg
    int rc_item_information_notification_message -> rc_item_information_notification_message
    int rc_item_lbsmsg -> rc_item_lbsmsg
    int rc_item_location_msg -> rc_item_location_msg
    int rc_item_message -> rc_item_message
    int rc_item_preview_fragment -> rc_item_preview_fragment
    int rc_item_private_conversation -> rc_item_private_conversation
    int rc_item_progress -> rc_item_progress
    int rc_item_public_service_list -> rc_item_public_service_list
    int rc_item_public_service_search -> rc_item_public_service_search
    int rc_item_publicservice_conversation -> rc_item_publicservice_conversation
    int rc_item_richcontentmsg -> rc_item_richcontentmsg
    int rc_item_system_conversation -> rc_item_system_conversation
    int rc_item_txtmsg -> rc_item_txtmsg
    int rc_item_voicemsg -> rc_item_voicemsg
    int rc_public_service_msg_item -> rc_public_service_msg_item
    int rc_public_service_multi_rich_content_msg -> rc_public_service_multi_rich_content_msg
    int rc_public_service_rich_content_msg -> rc_public_service_rich_content_msg
    int rc_ui_voice_cover -> rc_ui_voice_cover
    int rc_wi_block -> rc_wi_block
    int rc_wi_block_popup -> rc_wi_block_popup
    int rc_wi_emoji_grid -> rc_wi_emoji_grid
    int rc_wi_emoji_txt -> rc_wi_emoji_txt
    int rc_wi_ext_pager -> rc_wi_ext_pager
    int rc_wi_input -> rc_wi_input
    int rc_wi_notice -> rc_wi_notice
    int rc_wi_notification_loading -> rc_wi_notification_loading
    int rc_wi_plugins -> rc_wi_plugins
    int rc_wi_text_btn -> rc_wi_text_btn
    int rc_wi_txt_provider -> rc_wi_txt_provider
    int rc_wi_vo_popup -> rc_wi_vo_popup
    int rc_wi_vo_provider -> rc_wi_vo_provider
    int refresh_empty_listview -> refresh_empty_listview
    int regist_success -> regist_success
    int rlf_layout -> rlf_layout
    int select_dialog_multichoice -> select_dialog_multichoice
    int select_dialog_singlechoice -> select_dialog_singlechoice
    int selectadapter_layout -> selectadapter_layout
    int setpassword_layout -> setpassword_layout
    int setting_group_item -> setting_group_item
    int setting_layout -> setting_layout
    int sign_layout -> sign_layout
    int splash -> splash
    int support_simple_spinner_dropdown_item -> support_simple_spinner_dropdown_item
    int swipeback_layout -> swipeback_layout
    int tip_slider -> tip_slider
com.dkhs.portfolio.R$raw -> com.dkhs.portfolio.R$raw:
    int dkhs_portfolio -> dkhs_portfolio
com.dkhs.portfolio.R$string -> com.dkhs.portfolio.R$string:
    int abc_action_bar_home_description -> abc_action_bar_home_description
    int abc_action_bar_home_description_format -> abc_action_bar_home_description_format
    int abc_action_bar_home_subtitle_description_format -> abc_action_bar_home_subtitle_description_format
    int abc_action_bar_up_description -> abc_action_bar_up_description
    int abc_action_menu_overflow_description -> abc_action_menu_overflow_description
    int abc_action_mode_done -> abc_action_mode_done
    int abc_activity_chooser_view_see_all -> abc_activity_chooser_view_see_all
    int abc_activitychooserview_choose_application -> abc_activitychooserview_choose_application
    int abc_searchview_description_clear -> abc_searchview_description_clear
    int abc_searchview_description_query -> abc_searchview_description_query
    int abc_searchview_description_search -> abc_searchview_description_search
    int abc_searchview_description_submit -> abc_searchview_description_submit
    int abc_searchview_description_voice -> abc_searchview_description_voice
    int abc_shareactionprovider_share_with -> abc_shareactionprovider_share_with
    int abc_shareactionprovider_share_with_application -> abc_shareactionprovider_share_with_application
    int abc_toolbar_collapse_description -> abc_toolbar_collapse_description
    int about_dus_1 -> about_dus_1
    int about_dus_2 -> about_dus_2
    int about_dus_3 -> about_dus_3
    int about_dus_4 -> about_dus_4
    int about_dus_5 -> about_dus_5
    int about_phone -> about_phone
    int about_url -> about_url
    int about_weibo -> about_weibo
    int about_weixin -> about_weixin
    int account -> account
    int accumulative_comtribute -> accumulative_comtribute
    int add_combination -> add_combination
    int add_disscusion -> add_disscusion
    int add_fllow -> add_fllow
    int add_optional_stock -> add_optional_stock
    int add_postional -> add_postional
    int add_postional_format -> add_postional_format
    int add_text -> add_text
    int add_up -> add_up
    int add_up_value -> add_up_value
    int adjust_back_message -> adjust_back_message
    int adjust_combination -> adjust_combination
    int adjust_history -> adjust_history
    int adjust_position -> adjust_position
    int agreement_url -> agreement_url
    int all -> all
    int all_income_rate -> all_income_rate
    int all_netvalue -> all_netvalue
    int all_top -> all_top
    int all_top_increase -> all_top_increase
    int amount -> amount
    int app_name -> app_name
    int at_search_text -> at_search_text
    int between_date -> between_date
    int bluetooth -> bluetooth
    int bound_account_notice -> bound_account_notice
    int bound_email_succes -> bound_email_succes
    int btn_reinput -> btn_reinput
    int btn_sc -> btn_sc
    int buy -> buy
    int cancel -> cancel
    int captcha_password_null -> captcha_password_null
    int change_combination_name -> change_combination_name
    int change_position -> change_position
    int change_usesr_name_notice -> change_usesr_name_notice
    int change_usesr_name_title -> change_usesr_name_title
    int changing_password -> changing_password
    int click_add_fund -> click_add_fund
    int click_add_stock -> click_add_stock
    int click_creat_combina -> click_creat_combina
    int collapse_benefit_curve -> collapse_benefit_curve
    int combin -> combin
    int combination_desc -> combination_desc
    int combination_name -> combination_name
    int combination_price_down_text -> combination_price_down_text
    int combination_price_up_text -> combination_price_up_text
    int combination_wornning_name -> combination_wornning_name
    int combination_wornning_text -> combination_wornning_text
    int conb_desc_hint -> conb_desc_hint
    int conbination_name -> conbination_name
    int confirm -> confirm
    int confirm_adjust -> confirm_adjust
    int contact -> contact
    int copyright -> copyright
    int count_abort_us -> count_abort_us
    int count_change_password -> count_change_password
    int count_change_username -> count_change_username
    int count_combination_adjust -> count_combination_adjust
    int count_combination_compare -> count_combination_compare
    int count_combination_list -> count_combination_list
    int count_combination_name_change -> count_combination_name_change
    int count_combination_text -> count_combination_text
    int count_dialog_getphoto -> count_dialog_getphoto
    int count_dound_email -> count_dound_email
    int count_dound_third_account -> count_dound_third_account
    int count_feed_back -> count_feed_back
    int count_feed_back_dialog -> count_feed_back_dialog
    int count_forget_psd -> count_forget_psd
    int count_fund_order -> count_fund_order
    int count_fund_order_line -> count_fund_order_line
    int count_funds -> count_funds
    int count_get_psd -> count_get_psd
    int count_guide -> count_guide
    int count_history_positiondetainl -> count_history_positiondetainl
    int count_history_value -> count_history_value
    int count_login -> count_login
    int count_main -> count_main
    int count_main_left -> count_main_left
    int count_market_center_list -> count_market_center_list
    int count_option_adjust -> count_option_adjust
    int count_option_edit -> count_option_edit
    int count_option_list -> count_option_list
    int count_option_market -> count_option_market
    int count_option_market_one -> count_option_market_one
    int count_option_news -> count_option_news
    int count_person_sign -> count_person_sign
    int count_privacy_setting -> count_privacy_setting
    int count_resetting_password -> count_resetting_password
    int count_setting -> count_setting
    int count_setting_password -> count_setting_password
    int count_sign_account -> count_sign_account
    int count_sign_success -> count_sign_success
    int count_splash -> count_splash
    int count_stock -> count_stock
    int count_stock_Kline -> count_stock_Kline
    int count_stock_f10 -> count_stock_f10
    int count_stock_news -> count_stock_news
    int count_stock_news_list -> count_stock_news_list
    int count_stock_select -> count_stock_select
    int count_stock_time -> count_stock_time
    int count_stock_yanbao -> count_stock_yanbao
    int count_trend_history -> count_trend_history
    int count_trend_month -> count_trend_month
    int count_trend_seven -> count_trend_seven
    int count_trend_today -> count_trend_today
    int count_url_choose -> count_url_choose
    int count_user_combination_list -> count_user_combination_list
    int count_verification -> count_verification
    int count_yanbao -> count_yanbao
    int count_yanbao_list -> count_yanbao_list
    int count_yanbao_news -> count_yanbao_news
    int creat_combination -> creat_combination
    int creat_combination_name -> creat_combination_name
    int create_combination -> create_combination
    int create_funds -> create_funds
    int create_time -> create_time
    int create_time_format -> create_time_format
    int current -> current
    int current_fund_manager -> current_fund_manager
    int current_netvalue -> current_netvalue
    int current_value -> current_value
    int data_deficient -> data_deficient
    int day_income -> day_income
    int day_income_rate -> day_income_rate
    int day_percent_text -> day_percent_text
    int day_top -> day_top
    int day_top_increase -> day_top_increase
    int def_not_value -> def_not_value
    int del_combination -> del_combination
    int delete_fllow -> delete_fllow
    int delist -> delist
    int desc_def_text -> desc_def_text
    int desc_format -> desc_format
    int descrition_format -> descrition_format
    int detail -> detail
    int dialog_before_createday_title -> dialog_before_createday_title
    int dialog_end_time_title -> dialog_end_time_title
    int dialog_messag_delfollow -> dialog_messag_delfollow
    int dialog_message_delete_combination -> dialog_message_delete_combination
    int dialog_message_delfollow_combination -> dialog_message_delfollow_combination
    int dialog_message_no_del_stock -> dialog_message_no_del_stock
    int dialog_select_time_title -> dialog_select_time_title
    int dialog_start_time_title -> dialog_start_time_title
    int douban -> douban
    int draft_box -> draft_box
    int drop_range -> drop_range
    int dropbox -> dropbox
    int duty_percent -> duty_percent
    int earnings -> earnings
    int edit -> edit
    int edit_success -> edit_success
    int email -> email
    int end_netvalue -> end_netvalue
    int evernote -> evernote
    int exit_stock -> exit_stock
    int expend_benefit_curve -> expend_benefit_curve
    int face_img_names -> face_img_names
    int face_texts -> face_texts
    int facebook -> facebook
    int facebookmessenger -> facebookmessenger
    int faq_url -> faq_url
    int fast_register -> fast_register
    int feed_back_com_title -> feed_back_com_title
    int feed_back_hint -> feed_back_hint
    int feed_back_notice -> feed_back_notice
    int feed_back_title -> feed_back_title
    int feed_text_notice -> feed_text_notice
    int feed_text_success -> feed_text_success
    int find_passwrod -> find_passwrod
    int finish -> finish
    int flickr -> flickr
    int float_menu_adjust -> float_menu_adjust
    int float_menu_combination -> float_menu_combination
    int float_menu_delfollow -> float_menu_delfollow
    int float_menu_edit -> float_menu_edit
    int float_menu_follow -> float_menu_follow
    int float_menu_history_adjust -> float_menu_history_adjust
    int float_menu_history_value -> float_menu_history_value
    int float_menu_index_remind -> float_menu_index_remind
    int float_menu_more -> float_menu_more
    int float_menu_optional -> float_menu_optional
    int float_menu_privacy -> float_menu_privacy
    int float_menu_remind -> float_menu_remind
    int float_menu_share -> float_menu_share
    int float_menu_stock_remind -> float_menu_stock_remind
    int followers -> followers
    int following -> following
    int fomat_not_supported -> fomat_not_supported
    int for_repost -> for_repost
    int forget_password -> forget_password
    int format_7day_price -> format_7day_price
    int format_com_percent -> format_com_percent
    int format_combination_price -> format_combination_price
    int format_cpricedown_high_more_tip -> format_cpricedown_high_more_tip
    int format_cpricedown_high_tip -> format_cpricedown_high_tip
    int format_cpricedown_more_tip -> format_cpricedown_more_tip
    int format_cpricedown_tip -> format_cpricedown_tip
    int format_cpriceup_low_more_tip -> format_cpriceup_low_more_tip
    int format_cpriceup_low_tip -> format_cpriceup_low_tip
    int format_cpriceup_more_tip -> format_cpriceup_more_tip
    int format_cpriceup_tip -> format_cpriceup_tip
    int format_create_name -> format_create_name
    int format_create_time -> format_create_time
    int format_fund_price -> format_fund_price
    int format_percent -> format_percent
    int format_pricedown_high_more_tip -> format_pricedown_high_more_tip
    int format_pricedown_high_tip -> format_pricedown_high_tip
    int format_pricedown_more_tip -> format_pricedown_more_tip
    int format_pricedown_tip -> format_pricedown_tip
    int format_priceup_low_more_tip -> format_priceup_low_more_tip
    int format_priceup_low_tip -> format_priceup_low_tip
    int format_priceup_more_tip -> format_priceup_more_tip
    int format_priceup_tip -> format_priceup_tip
    int format_stock_price -> format_stock_price
    int foursquare -> foursquare
    int from -> from
    int function_ace -> function_ace
    int function_combination -> function_combination
    int function_f -> function_f
    int function_f10 -> function_f10
    int function_finance -> function_finance
    int function_fund_order -> function_fund_order
    int function_hodler -> function_hodler
    int function_introduction -> function_introduction
    int function_market -> function_market
    int function_meeting -> function_meeting
    int function_news -> function_news
    int function_notice -> function_notice
    int function_optional -> function_optional
    int function_qidai -> function_qidai
    int function_report -> function_report
    int function_yanbao -> function_yanbao
    int fund_asset -> fund_asset
    int fund_comp -> fund_comp
    int fund_create_date -> fund_create_date
    int fund_detail_name -> fund_detail_name
    int fund_manager -> fund_manager
    int fund_month -> fund_month
    int fund_order -> fund_order
    int fund_season -> fund_season
    int fund_stype -> fund_stype
    int fund_tenure -> fund_tenure
    int fund_toyear -> fund_toyear
    int fund_year -> fund_year
    int funds_name -> funds_name
    int gender_female -> gender_female
    int gender_male -> gender_male
    int gender_secret -> gender_secret
    int get_code -> get_code
    int get_code_fail -> get_code_fail
    int get_code_success -> get_code_success
    int getting_code -> getting_code
    int google_plus_client_inavailable -> google_plus_client_inavailable
    int googleplus -> googleplus
    int have_a_look -> have_a_look
    int help -> help
    int high -> high
    int hint_account -> hint_account
    int hint_check_password -> hint_check_password
    int hint_email -> hint_email
    int hint_mobile -> hint_mobile
    int hint_original_password -> hint_original_password
    int hint_password -> hint_password
    int hint_verify_code -> hint_verify_code
    int html_blankspace -> html_blankspace
    int http_error_net -> http_error_net
    int income -> income
    int instagram -> instagram
    int instagram_client_inavailable -> instagram_client_inavailable
    int instapager_email_or_password_incorrect -> instapager_email_or_password_incorrect
    int instapaper -> instapaper
    int instapaper_email -> instapaper_email
    int instapaper_login -> instapaper_login
    int instapaper_logining -> instapaper_logining
    int instapaper_pwd -> instapaper_pwd
    int kaixin -> kaixin
    int kakaostory -> kakaostory
    int kakaostory_client_inavailable -> kakaostory_client_inavailable
    int kakaotalk -> kakaotalk
    int kakaotalk_client_inavailable -> kakaotalk_client_inavailable
    int line -> line
    int line_client_inavailable -> line_client_inavailable
    int linkedin -> linkedin
    int list_friends -> list_friends
    int loading -> loading
    int loading_list_items -> loading_list_items
    int local_image -> local_image
    int login -> login
    int login_by_captcha -> login_by_captcha
    int login_title -> login_title
    int logining -> logining
    int low -> low
    int market_amplit -> market_amplit
    int market_capital -> market_capital
    int market_current_value -> market_current_value
    int market_down_ratio -> market_down_ratio
    int market_fund_per_day -> market_fund_per_day
    int market_fund_per_month -> market_fund_per_month
    int market_fund_per_tyear -> market_fund_per_tyear
    int market_index_name -> market_index_name
    int market_net_value -> market_net_value
    int market_stock_name -> market_stock_name
    int market_title_ampli -> market_title_ampli
    int market_title_down -> market_title_down
    int market_title_hot -> market_title_hot
    int market_title_index -> market_title_index
    int market_title_turnover -> market_title_turnover
    int market_title_up -> market_title_up
    int market_turnover -> market_turnover
    int market_up_ratio -> market_up_ratio
    int market_updown_change -> market_updown_change
    int market_updown_ratio -> market_updown_ratio
    int market_updown_total_capit -> market_updown_total_capit
    int marketcenter_title -> marketcenter_title
    int max_fund_select_tip -> max_fund_select_tip
    int message_center -> message_center
    int message_server_error -> message_server_error
    int message_timeout -> message_timeout
    int mingdao -> mingdao
    int mingdao_share_content -> mingdao_share_content
    int mobile -> mobile
    int month_income -> month_income
    int month_income_rate -> month_income_rate
    int month_top -> month_top
    int month_top_increase -> month_top_increase
    int more -> more
    int more_combination_tip -> more_combination_tip
    int more_fund_compare -> more_fund_compare
    int msg_def_follow_success -> msg_def_follow_success
    int msg_follow_success -> msg_follow_success
    int msg_price_error -> msg_price_error
    int msg_pricedown_toohigh -> msg_pricedown_toohigh
    int msg_priceup_toolow -> msg_priceup_toolow
    int multi_share -> multi_share
    int my_combination -> my_combination
    int my_config -> my_config
    int need_set_password -> need_set_password
    int net_cumulative -> net_cumulative
    int net_value -> net_value
    int neteasemicroblog -> neteasemicroblog
    int netvalue_comtribute -> netvalue_comtribute
    int netvalue_trend -> netvalue_trend
    int netvalue_up -> netvalue_up
    int nickname -> nickname
    int nickname_hint -> nickname_hint
    int nickname_password_null -> nickname_password_null
    int no_net -> no_net
    int no_net_connect -> no_net_connect
    int noaccout -> noaccout
    int nodata_follower -> nodata_follower
    int nodata_friend -> nodata_friend
    int nodata_login_out -> nodata_login_out
    int nodata_user_description -> nodata_user_description
    int nodate_tip -> nodate_tip
    int nodate_tip_funds -> nodate_tip_funds
    int nodate_tip_inland_index -> nodate_tip_inland_index
    int nodate_tip_optional -> nodate_tip_optional
    int none -> none
    int notify_comment_status -> notify_comment_status
    int notify_comment_status_success -> notify_comment_status_success
    int notify_write_status -> notify_write_status
    int notify_write_status_fail -> notify_write_status_fail
    int notify_write_status_success -> notify_write_status_success
    int null_number -> null_number
    int oauth_fail -> oauth_fail
    int office_day -> office_day
    int office_tenure -> office_tenure
    int open -> open
    int optional -> optional
    int optional_stock -> optional_stock
    int optional_stock_format -> optional_stock_format
    int original_password -> original_password
    int original_password_null -> original_password_null
    int p2refresh_doing_end_refresh -> p2refresh_doing_end_refresh
    int p2refresh_doing_head_refresh -> p2refresh_doing_head_refresh
    int p2refresh_end_click_load_more -> p2refresh_end_click_load_more
    int p2refresh_end_load_more -> p2refresh_end_load_more
    int p2refresh_head_load_more -> p2refresh_head_load_more
    int p2refresh_pull_to_refresh -> p2refresh_pull_to_refresh
    int p2refresh_refresh_lasttime -> p2refresh_refresh_lasttime
    int p2refresh_release_refresh -> p2refresh_release_refresh
    int page_pull_to_next_refresh -> page_pull_to_next_refresh
    int page_pull_to_pre_refresh -> page_pull_to_pre_refresh
    int page_pull_to_refresh_tip -> page_pull_to_refresh_tip
    int page_refresh_doing_end_refresh -> page_refresh_doing_end_refresh
    int password -> password
    int password_digts -> password_digts
    int password_null -> password_null
    int password_setting_more -> password_setting_more
    int password_setting_name_null -> password_setting_name_null
    int password_setting_name_success -> password_setting_name_success
    int password_setting_new -> password_setting_new
    int password_setting_old -> password_setting_old
    int password_setting_title -> password_setting_title
    int password_unsame -> password_unsame
    int pb -> pb
    int pe_amount -> pe_amount
    int pe_ttm -> pe_ttm
    int percent_day -> percent_day
    int percent_month -> percent_month
    int percent_season -> percent_season
    int percent_six_month -> percent_six_month
    int percent_tyear -> percent_tyear
    int percent_year -> percent_year
    int performance_comparison -> performance_comparison
    int personal_setting -> personal_setting
    int phone -> phone
    int pinterest -> pinterest
    int pinterest_client_inavailable -> pinterest_client_inavailable
    int plate_leader_stock -> plate_leader_stock
    int plate_name -> plate_name
    int pocket -> pocket
    int portfolio_position -> portfolio_position
    int portfolio_text -> portfolio_text
    int position_detail -> position_detail
    int position_from_to -> position_from_to
    int positions -> positions
    int pre_netvalue -> pre_netvalue
    int price_change_ratio -> price_change_ratio
    int price_units -> price_units
    int privacy_everyday_record -> privacy_everyday_record
    int privacy_history_record -> privacy_history_record
    int privacy_setting -> privacy_setting
    int proportion -> proportion
    int pull_to_refresh -> pull_to_refresh
    int qirinianhua -> qirinianhua
    int qq -> qq
    int qq_client_inavailable -> qq_client_inavailable
    int qq_login -> qq_login
    int query_before_month -> query_before_month
    int query_from_create -> query_from_create
    int quotes_format -> quotes_format
    int qzone -> qzone
    int rate -> rate
    int rc_dialog_cancel -> rc_dialog_cancel
    int rc_dialog_item_message_copy -> rc_dialog_item_message_copy
    int rc_dialog_item_message_delete -> rc_dialog_item_message_delete
    int rc_dialog_ok -> rc_dialog_ok
    int rc_discussion_nt_msg_for_add -> rc_discussion_nt_msg_for_add
    int rc_discussion_nt_msg_for_added -> rc_discussion_nt_msg_for_added
    int rc_discussion_nt_msg_for_exit -> rc_discussion_nt_msg_for_exit
    int rc_discussion_nt_msg_for_is_open_invite_close -> rc_discussion_nt_msg_for_is_open_invite_close
    int rc_discussion_nt_msg_for_is_open_invite_open -> rc_discussion_nt_msg_for_is_open_invite_open
    int rc_discussion_nt_msg_for_removed -> rc_discussion_nt_msg_for_removed
    int rc_discussion_nt_msg_for_rename -> rc_discussion_nt_msg_for_rename
    int rc_discussion_nt_msg_for_who_removed -> rc_discussion_nt_msg_for_who_removed
    int rc_discussion_nt_msg_for_you -> rc_discussion_nt_msg_for_you
    int rc_group_List_operation_failure -> rc_group_List_operation_failure
    int rc_group_list_default_discussion_name -> rc_group_list_default_discussion_name
    int rc_group_list_dialog_cancel_top -> rc_group_list_dialog_cancel_top
    int rc_group_list_dialog_remove -> rc_group_list_dialog_remove
    int rc_group_list_dialog_set_top -> rc_group_list_dialog_set_top
    int rc_group_list_empty_prompt -> rc_group_list_empty_prompt
    int rc_group_list_my_chatroom -> rc_group_list_my_chatroom
    int rc_group_list_my_customer_service -> rc_group_list_my_customer_service
    int rc_group_list_my_discussion -> rc_group_list_my_discussion
    int rc_group_list_my_group -> rc_group_list_my_group
    int rc_group_list_my_private_conversation -> rc_group_list_my_private_conversation
    int rc_group_list_popup_cancel_top -> rc_group_list_popup_cancel_top
    int rc_group_list_popup_set_top -> rc_group_list_popup_set_top
    int rc_group_list_system_conversation -> rc_group_list_system_conversation
    int rc_input_send -> rc_input_send
    int rc_input_voice -> rc_input_voice
    int rc_message_content_draft -> rc_message_content_draft
    int rc_message_content_image -> rc_message_content_image
    int rc_message_content_location -> rc_message_content_location
    int rc_message_content_rich_text -> rc_message_content_rich_text
    int rc_message_content_video -> rc_message_content_video
    int rc_message_content_voice -> rc_message_content_voice
    int rc_message_unknow -> rc_message_unknow
    int rc_message_unread_count -> rc_message_unread_count
    int rc_name -> rc_name
    int rc_notice_connecting -> rc_notice_connecting
    int rc_notice_create_discussion -> rc_notice_create_discussion
    int rc_notice_disconnect -> rc_notice_disconnect
    int rc_notice_enter_chatroom -> rc_notice_enter_chatroom
    int rc_notice_input_conversation_error -> rc_notice_input_conversation_error
    int rc_notice_tick -> rc_notice_tick
    int rc_notification_contact -> rc_notification_contact
    int rc_notification_msg -> rc_notification_msg
    int rc_notification_send -> rc_notification_send
    int rc_notification_ticker_text -> rc_notification_ticker_text
    int rc_plugins_camera -> rc_plugins_camera
    int rc_plugins_image -> rc_plugins_image
    int rc_plugins_location -> rc_plugins_location
    int rc_plugins_voip -> rc_plugins_voip
    int rc_pub_service_info_account -> rc_pub_service_info_account
    int rc_pub_service_info_enter -> rc_pub_service_info_enter
    int rc_pub_service_info_follow -> rc_pub_service_info_follow
    int rc_pub_service_info_func -> rc_pub_service_info_func
    int rc_pub_service_info_unfollow -> rc_pub_service_info_unfollow
    int rc_setting_clear_msg_fail -> rc_setting_clear_msg_fail
    int rc_setting_clear_msg_name -> rc_setting_clear_msg_name
    int rc_setting_clear_msg_prompt -> rc_setting_clear_msg_prompt
    int rc_setting_clear_msg_success -> rc_setting_clear_msg_success
    int rc_setting_conversation_notify -> rc_setting_conversation_notify
    int rc_setting_conversation_notify_fail -> rc_setting_conversation_notify_fail
    int rc_setting_get_conversation_notify_fail -> rc_setting_get_conversation_notify_fail
    int rc_setting_name -> rc_setting_name
    int rc_setting_set_top -> rc_setting_set_top
    int rc_setting_set_top_fail -> rc_setting_set_top_fail
    int rc_voice_cancel -> rc_voice_cancel
    int rc_voice_dialog_cancel_send -> rc_voice_dialog_cancel_send
    int rc_voice_dialog_collect -> rc_voice_dialog_collect
    int rc_voice_dialog_time_short -> rc_voice_dialog_time_short
    int rc_voice_rec -> rc_voice_rec
    int rc_voice_short -> rc_voice_short
    int referto -> referto
    int refreshing -> refreshing
    int regist -> regist
    int register -> register
    int register_success -> register_success
    int related_comments -> related_comments
    int related_news -> related_news
    int release_to_refresh -> release_to_refresh
    int remind_7day_text -> remind_7day_text
    int remind_adjust_text -> remind_adjust_text
    int remind_fund_text -> remind_fund_text
    int remind_notice_text -> remind_notice_text
    int remind_yanbao_text -> remind_yanbao_text
    int renren -> renren
    int report -> report
    int retweet_comments_count -> retweet_comments_count
    int rise_range -> rise_range
    int rise_value -> rise_value
    int search -> search
    int search_fund_hint -> search_fund_hint
    int search_stock -> search_stock
    int search_stockandfunds -> search_stockandfunds
    int season_income_rate -> season_income_rate
    int season_top -> season_top
    int season_top_increase -> season_top_increase
    int select_a_friend -> select_a_friend
    int select_fund -> select_fund
    int select_one_plat_at_least -> select_one_plat_at_least
    int select_stock -> select_stock
    int sell -> sell
    int set_newpassword_desc -> set_newpassword_desc
    int set_password -> set_password
    int set_password_desc -> set_password_desc
    int set_password_failed -> set_password_failed
    int set_password_success -> set_password_success
    int setting -> setting
    int setting_password_hint -> setting_password_hint
    int setting_string_abortus -> setting_string_abortus
    int setting_string_exit -> setting_string_exit
    int setting_string_news -> setting_string_news
    int setting_string_opinion -> setting_string_opinion
    int setting_string_public -> setting_string_public
    int setting_string_public_title -> setting_string_public_title
    int setting_string_publicexplan -> setting_string_publicexplan
    int sh300 -> sh300
    int share -> share
    int share_canceled -> share_canceled
    int share_completed -> share_completed
    int share_failed -> share_failed
    int share_to -> share_to
    int share_to_mingdao -> share_to_mingdao
    int share_to_qq -> share_to_qq
    int share_to_qzone -> share_to_qzone
    int share_to_qzone_default -> share_to_qzone_default
    int sharing -> sharing
    int shiyinglv -> shiyinglv
    int shortmessage -> shortmessage
    int sign_text_notice -> sign_text_notice
    int sign_text_title -> sign_text_title
    int sinaweibo -> sinaweibo
    int sohumicroblog -> sohumicroblog
    int sohusuishenkan -> sohusuishenkan
    int source -> source
    int start -> start
    int start_netvalue -> start_netvalue
    int status_detail_label -> status_detail_label
    int stock -> stock
    int stock_name -> stock_name
    int stock_price_down_text -> stock_price_down_text
    int stock_price_up_text -> stock_price_up_text
    int stock_search_text -> stock_search_text
    int stop_stock -> stop_stock
    int subscribe_manager_category_info -> subscribe_manager_category_info
    int subscribe_more_category -> subscribe_more_category
    int subscribe_my_category -> subscribe_my_category
    int success_desc_f -> success_desc_f
    int success_desc_s -> success_desc_s
    int success_desc_t -> success_desc_t
    int surplus_capital_ratio -> surplus_capital_ratio
    int symbols -> symbols
    int tab_1 -> tab_1
    int tab_2 -> tab_2
    int tab_3 -> tab_3
    int tab_4 -> tab_4
    int tab_fund -> tab_fund
    int tab_funds -> tab_funds
    int tab_stock -> tab_stock
    int take_picture -> take_picture
    int telephone_desc -> telephone_desc
    int tencentweibo -> tencentweibo
    int tenthou_unit_incm -> tenthou_unit_incm
    int text_combin_open -> text_combin_open
    int text_isnull -> text_isnull
    int text_my_manager_combin -> text_my_manager_combin
    int text_no_open -> text_no_open
    int text_other_manager_combin -> text_other_manager_combin
    int three_login -> three_login
    int time_end -> time_end
    int time_min_before -> time_min_before
    int time_sec_before -> time_sec_before
    int time_start -> time_start
    int tip_day_percent -> tip_day_percent
    int tip_message_dashline -> tip_message_dashline
    int tips -> tips
    int tips_combination_name_null -> tips_combination_name_null
    int title_activity_fund_manager -> title_activity_fund_manager
    int title_binds -> title_binds
    int title_edit_optional_combina -> title_edit_optional_combina
    int title_edit_optional_fund -> title_edit_optional_fund
    int title_edit_optional_stock -> title_edit_optional_stock
    int title_info -> title_info
    int title_remind -> title_remind
    int title_user -> title_user
    int to -> to
    int to_now -> to_now
    int toast_click_once_more -> toast_click_once_more
    int toast_remind_success -> toast_remind_success
    int today_in_rote -> today_in_rote
    int today_increase -> today_increase
    int today_netvalue -> today_netvalue
    int today_up_ratio -> today_up_ratio
    int total_capital -> total_capital
    int total_status -> total_status
    int tumblr -> tumblr
    int turnover -> turnover
    int turnover_rate -> turnover_rate
    int turnovev_range -> turnovev_range
    int tv_check_password -> tv_check_password
    int tv_forget_password -> tv_forget_password
    int tv_password -> tv_password
    int tv_register_now -> tv_register_now
    int twitter -> twitter
    int type_retweet_comment -> type_retweet_comment
    int type_write_comment -> type_write_comment
    int type_write_status -> type_write_status
    int unfollow_alert_content -> unfollow_alert_content
    int unfollowing -> unfollowing
    int up_to_now -> up_to_now
    int updating -> updating
    int upload_image -> upload_image
    int use_login_button -> use_login_button
    int verify_code -> verify_code
    int vkontakte -> vkontakte
    int volume -> volume
    int wanshou -> wanshou
    int website -> website
    int wechat -> wechat
    int wechat_client_inavailable -> wechat_client_inavailable
    int wechatfavorite -> wechatfavorite
    int wechatmoments -> wechatmoments
    int week_income -> week_income
    int week_income_rate -> week_income_rate
    int week_top -> week_top
    int week_top_increase -> week_top_increase
    int weibo_login -> weibo_login
    int weibo_oauth_regiseter -> weibo_oauth_regiseter
    int weibo_upload_content -> weibo_upload_content
    int whatsapp -> whatsapp
    int whatsapp_client_inavailable -> whatsapp_client_inavailable
    int year_income -> year_income
    int year_yld -> year_yld
    int yixin -> yixin
    int yixin_client_inavailable -> yixin_client_inavailable
    int yixinmoments -> yixinmoments
    int youdao -> youdao
com.dkhs.portfolio.R$style -> com.dkhs.portfolio.R$style:
    int AnimBottom -> AnimBottom
    int AnimationFade -> AnimationFade
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int AppThemeLight -> AppThemeLight
    int AppThemeNoBackgroud -> AppThemeNoBackgroud
    int AppTranslucentTheme -> AppTranslucentTheme
    int Base_TextAppearance_AppCompat -> Base_TextAppearance_AppCompat
    int Base_TextAppearance_AppCompat_Body1 -> Base_TextAppearance_AppCompat_Body1
    int Base_TextAppearance_AppCompat_Body2 -> Base_TextAppearance_AppCompat_Body2
    int Base_TextAppearance_AppCompat_Button -> Base_TextAppearance_AppCompat_Button
    int Base_TextAppearance_AppCompat_Caption -> Base_TextAppearance_AppCompat_Caption
    int Base_TextAppearance_AppCompat_Display1 -> Base_TextAppearance_AppCompat_Display1
    int Base_TextAppearance_AppCompat_Display2 -> Base_TextAppearance_AppCompat_Display2
    int Base_TextAppearance_AppCompat_Display3 -> Base_TextAppearance_AppCompat_Display3
    int Base_TextAppearance_AppCompat_Display4 -> Base_TextAppearance_AppCompat_Display4
    int Base_TextAppearance_AppCompat_Headline -> Base_TextAppearance_AppCompat_Headline
    int Base_TextAppearance_AppCompat_Inverse -> Base_TextAppearance_AppCompat_Inverse
    int Base_TextAppearance_AppCompat_Large -> Base_TextAppearance_AppCompat_Large
    int Base_TextAppearance_AppCompat_Large_Inverse -> Base_TextAppearance_AppCompat_Large_Inverse
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Medium -> Base_TextAppearance_AppCompat_Medium
    int Base_TextAppearance_AppCompat_Medium_Inverse -> Base_TextAppearance_AppCompat_Medium_Inverse
    int Base_TextAppearance_AppCompat_Menu -> Base_TextAppearance_AppCompat_Menu
    int Base_TextAppearance_AppCompat_SearchResult -> Base_TextAppearance_AppCompat_SearchResult
    int Base_TextAppearance_AppCompat_SearchResult_Subtitle -> Base_TextAppearance_AppCompat_SearchResult_Subtitle
    int Base_TextAppearance_AppCompat_SearchResult_Title -> Base_TextAppearance_AppCompat_SearchResult_Title
    int Base_TextAppearance_AppCompat_Small -> Base_TextAppearance_AppCompat_Small
    int Base_TextAppearance_AppCompat_Small_Inverse -> Base_TextAppearance_AppCompat_Small_Inverse
    int Base_TextAppearance_AppCompat_Subhead -> Base_TextAppearance_AppCompat_Subhead
    int Base_TextAppearance_AppCompat_Subhead_Inverse -> Base_TextAppearance_AppCompat_Subhead_Inverse
    int Base_TextAppearance_AppCompat_Title -> Base_TextAppearance_AppCompat_Title
    int Base_TextAppearance_AppCompat_Title_Inverse -> Base_TextAppearance_AppCompat_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu -> Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title
    int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int Base_TextAppearance_AppCompat_Widget_ActionMode_Title -> Base_TextAppearance_AppCompat_Widget_ActionMode_Title
    int Base_TextAppearance_AppCompat_Widget_DropDownItem -> Base_TextAppearance_AppCompat_Widget_DropDownItem
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
    int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small -> Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
    int Base_TextAppearance_AppCompat_Widget_Switch -> Base_TextAppearance_AppCompat_Widget_Switch
    int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int Base_TextAppearance_Widget_AppCompat_Toolbar_Title -> Base_TextAppearance_Widget_AppCompat_Toolbar_Title
    int Base_Theme_AppCompat -> Base_Theme_AppCompat
    int Base_Theme_AppCompat_CompactMenu -> Base_Theme_AppCompat_CompactMenu
    int Base_Theme_AppCompat_Dialog -> Base_Theme_AppCompat_Dialog
    int Base_Theme_AppCompat_Dialog_FixedSize -> Base_Theme_AppCompat_Dialog_FixedSize
    int Base_Theme_AppCompat_DialogWhenLarge -> Base_Theme_AppCompat_DialogWhenLarge
    int Base_Theme_AppCompat_Light -> Base_Theme_AppCompat_Light
    int Base_Theme_AppCompat_Light_DarkActionBar -> Base_Theme_AppCompat_Light_DarkActionBar
    int Base_Theme_AppCompat_Light_Dialog -> Base_Theme_AppCompat_Light_Dialog
    int Base_Theme_AppCompat_Light_Dialog_FixedSize -> Base_Theme_AppCompat_Light_Dialog_FixedSize
    int Base_Theme_AppCompat_Light_DialogWhenLarge -> Base_Theme_AppCompat_Light_DialogWhenLarge
    int Base_ThemeOverlay_AppCompat -> Base_ThemeOverlay_AppCompat
    int Base_ThemeOverlay_AppCompat_ActionBar -> Base_ThemeOverlay_AppCompat_ActionBar
    int Base_ThemeOverlay_AppCompat_Dark -> Base_ThemeOverlay_AppCompat_Dark
    int Base_ThemeOverlay_AppCompat_Dark_ActionBar -> Base_ThemeOverlay_AppCompat_Dark_ActionBar
    int Base_ThemeOverlay_AppCompat_Light -> Base_ThemeOverlay_AppCompat_Light
    int Base_V11_Theme_AppCompat -> Base_V11_Theme_AppCompat
    int Base_V11_Theme_AppCompat_Dialog -> Base_V11_Theme_AppCompat_Dialog
    int Base_V11_Theme_AppCompat_Light -> Base_V11_Theme_AppCompat_Light
    int Base_V11_Theme_AppCompat_Light_Dialog -> Base_V11_Theme_AppCompat_Light_Dialog
    int Base_V14_Theme_AppCompat -> Base_V14_Theme_AppCompat
    int Base_V14_Theme_AppCompat_Dialog -> Base_V14_Theme_AppCompat_Dialog
    int Base_V14_Theme_AppCompat_Light -> Base_V14_Theme_AppCompat_Light
    int Base_V14_Theme_AppCompat_Light_Dialog -> Base_V14_Theme_AppCompat_Light_Dialog
    int Base_V21_Theme_AppCompat -> Base_V21_Theme_AppCompat
    int Base_V21_Theme_AppCompat_Dialog -> Base_V21_Theme_AppCompat_Dialog
    int Base_V21_Theme_AppCompat_Light -> Base_V21_Theme_AppCompat_Light
    int Base_V21_Theme_AppCompat_Light_Dialog -> Base_V21_Theme_AppCompat_Light_Dialog
    int Base_V7_Theme_AppCompat -> Base_V7_Theme_AppCompat
    int Base_V7_Theme_AppCompat_Dialog -> Base_V7_Theme_AppCompat_Dialog
    int Base_V7_Theme_AppCompat_Light -> Base_V7_Theme_AppCompat_Light
    int Base_Widget_AppCompat_ActionBar -> Base_Widget_AppCompat_ActionBar
    int Base_Widget_AppCompat_ActionBar_Solid -> Base_Widget_AppCompat_ActionBar_Solid
    int Base_Widget_AppCompat_ActionBar_TabBar -> Base_Widget_AppCompat_ActionBar_TabBar
    int Base_Widget_AppCompat_ActionBar_TabText -> Base_Widget_AppCompat_ActionBar_TabText
    int Base_Widget_AppCompat_ActionBar_TabView -> Base_Widget_AppCompat_ActionBar_TabView
    int Base_Widget_AppCompat_ActionButton -> Base_Widget_AppCompat_ActionButton
    int Base_Widget_AppCompat_ActionButton_CloseMode -> Base_Widget_AppCompat_ActionButton_CloseMode
    int Base_Widget_AppCompat_ActionButton_Overflow -> Base_Widget_AppCompat_ActionButton_Overflow
    int Base_Widget_AppCompat_ActionMode -> Base_Widget_AppCompat_ActionMode
    int Base_Widget_AppCompat_ActivityChooserView -> Base_Widget_AppCompat_ActivityChooserView
    int Base_Widget_AppCompat_AutoCompleteTextView -> Base_Widget_AppCompat_AutoCompleteTextView
    int Base_Widget_AppCompat_CompoundButton_Switch -> Base_Widget_AppCompat_CompoundButton_Switch
    int Base_Widget_AppCompat_DrawerArrowToggle -> Base_Widget_AppCompat_DrawerArrowToggle
    int Base_Widget_AppCompat_DropDownItem_Spinner -> Base_Widget_AppCompat_DropDownItem_Spinner
    int Base_Widget_AppCompat_EditText -> Base_Widget_AppCompat_EditText
    int Base_Widget_AppCompat_Light_ActionBar -> Base_Widget_AppCompat_Light_ActionBar
    int Base_Widget_AppCompat_Light_ActionBar_Solid -> Base_Widget_AppCompat_Light_ActionBar_Solid
    int Base_Widget_AppCompat_Light_ActionBar_TabBar -> Base_Widget_AppCompat_Light_ActionBar_TabBar
    int Base_Widget_AppCompat_Light_ActionBar_TabText -> Base_Widget_AppCompat_Light_ActionBar_TabText
    int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Base_Widget_AppCompat_Light_ActionBar_TabView -> Base_Widget_AppCompat_Light_ActionBar_TabView
    int Base_Widget_AppCompat_Light_ActivityChooserView -> Base_Widget_AppCompat_Light_ActivityChooserView
    int Base_Widget_AppCompat_Light_AutoCompleteTextView -> Base_Widget_AppCompat_Light_AutoCompleteTextView
    int Base_Widget_AppCompat_Light_PopupMenu -> Base_Widget_AppCompat_Light_PopupMenu
    int Base_Widget_AppCompat_Light_PopupMenu_Overflow -> Base_Widget_AppCompat_Light_PopupMenu_Overflow
    int Base_Widget_AppCompat_ListPopupWindow -> Base_Widget_AppCompat_ListPopupWindow
    int Base_Widget_AppCompat_ListView_DropDown -> Base_Widget_AppCompat_ListView_DropDown
    int Base_Widget_AppCompat_ListView_Menu -> Base_Widget_AppCompat_ListView_Menu
    int Base_Widget_AppCompat_PopupMenu -> Base_Widget_AppCompat_PopupMenu
    int Base_Widget_AppCompat_PopupMenu_Overflow -> Base_Widget_AppCompat_PopupMenu_Overflow
    int Base_Widget_AppCompat_PopupWindow -> Base_Widget_AppCompat_PopupWindow
    int Base_Widget_AppCompat_ProgressBar -> Base_Widget_AppCompat_ProgressBar
    int Base_Widget_AppCompat_ProgressBar_Horizontal -> Base_Widget_AppCompat_ProgressBar_Horizontal
    int Base_Widget_AppCompat_SearchView -> Base_Widget_AppCompat_SearchView
    int Base_Widget_AppCompat_Spinner -> Base_Widget_AppCompat_Spinner
    int Base_Widget_AppCompat_Spinner_DropDown_ActionBar -> Base_Widget_AppCompat_Spinner_DropDown_ActionBar
    int Base_Widget_AppCompat_Toolbar -> Base_Widget_AppCompat_Toolbar
    int Base_Widget_AppCompat_Toolbar_Button_Navigation -> Base_Widget_AppCompat_Toolbar_Button_Navigation
    int CommonTextAppearance_Big_Black -> CommonTextAppearance_Big_Black
    int CommonTextAppearance_Big_Gray -> CommonTextAppearance_Big_Gray
    int CommonTextAppearance_Big_White -> CommonTextAppearance_Big_White
    int CommonTextAppearance_Middle_Black -> CommonTextAppearance_Middle_Black
    int CommonTextAppearance_Middle_Gray -> CommonTextAppearance_Middle_Gray
    int CommonTextAppearance_Middle_White -> CommonTextAppearance_Middle_White
    int CommonTextAppearance_Mini_Black -> CommonTextAppearance_Mini_Black
    int CommonTextAppearance_Mini_Gray -> CommonTextAppearance_Mini_Gray
    int CommonTextAppearance_Mini_White -> CommonTextAppearance_Mini_White
    int CommonTextAppearance_Small_Black -> CommonTextAppearance_Small_Black
    int CommonTextAppearance_Small_Gray -> CommonTextAppearance_Small_Gray
    int CommonTextAppearance_Small_White -> CommonTextAppearance_Small_White
    int CommonTextAppearance_super_Mini_Black -> CommonTextAppearance_super_Mini_Black
    int CommonTextAppearance_super_Mini_Gray -> CommonTextAppearance_super_Mini_Gray
    int CommonTextAppearance_super_Mini_White -> CommonTextAppearance_super_Mini_White
    int MyDialogStyleBottom -> MyDialogStyleBottom
    int Platform_AppCompat -> Platform_AppCompat
    int Platform_AppCompat_Dialog -> Platform_AppCompat_Dialog
    int Platform_AppCompat_Light -> Platform_AppCompat_Light
    int Platform_AppCompat_Light_Dialog -> Platform_AppCompat_Light_Dialog
    int RCTheme -> RCTheme
    int RCTheme_Message_RichContent_TextView -> RCTheme_Message_RichContent_TextView
    int RCTheme_Message_TextView -> RCTheme_Message_TextView
    int RCTheme_Message_Username_TextView -> RCTheme_Message_Username_TextView
    int RCTheme_Notification -> RCTheme_Notification
    int RCTheme_TextView -> RCTheme_TextView
    int RCTheme_TextView_Large -> RCTheme_TextView_Large
    int RCTheme_TextView_Large_Inverse -> RCTheme_TextView_Large_Inverse
    int RCTheme_TextView_Medium -> RCTheme_TextView_Medium
    int RCTheme_TextView_New -> RCTheme_TextView_New
    int RCTheme_TextView_Small -> RCTheme_TextView_Small
    int RcDialog -> RcDialog
    int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem -> RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
    int RtlOverlay_Widget_AppCompat_ActionButton_CloseMode -> RtlOverlay_Widget_AppCompat_ActionButton_CloseMode
    int RtlOverlay_Widget_AppCompat_ActionButton_Overflow -> RtlOverlay_Widget_AppCompat_ActionButton_Overflow
    int RtlOverlay_Widget_AppCompat_PopupMenuItem -> RtlOverlay_Widget_AppCompat_PopupMenuItem
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup -> RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
    int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text -> RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
    int RtlOverlay_Widget_AppCompat_Search_DropDown -> RtlOverlay_Widget_AppCompat_Search_DropDown
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 -> RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Query -> RtlOverlay_Widget_AppCompat_Search_DropDown_Query
    int RtlOverlay_Widget_AppCompat_Search_DropDown_Text -> RtlOverlay_Widget_AppCompat_Search_DropDown_Text
    int RtlOverlay_Widget_AppCompat_SearchView_MagIcon -> RtlOverlay_Widget_AppCompat_SearchView_MagIcon
    int SwipeBackLayout -> SwipeBackLayout
    int TextAppearance_AppCompat -> TextAppearance_AppCompat
    int TextAppearance_AppCompat_Body1 -> TextAppearance_AppCompat_Body1
    int TextAppearance_AppCompat_Body2 -> TextAppearance_AppCompat_Body2
    int TextAppearance_AppCompat_Button -> TextAppearance_AppCompat_Button
    int TextAppearance_AppCompat_Caption -> TextAppearance_AppCompat_Caption
    int TextAppearance_AppCompat_Display1 -> TextAppearance_AppCompat_Display1
    int TextAppearance_AppCompat_Display2 -> TextAppearance_AppCompat_Display2
    int TextAppearance_AppCompat_Display3 -> TextAppearance_AppCompat_Display3
    int TextAppearance_AppCompat_Display4 -> TextAppearance_AppCompat_Display4
    int TextAppearance_AppCompat_Headline -> TextAppearance_AppCompat_Headline
    int TextAppearance_AppCompat_Inverse -> TextAppearance_AppCompat_Inverse
    int TextAppearance_AppCompat_Large -> TextAppearance_AppCompat_Large
    int TextAppearance_AppCompat_Large_Inverse -> TextAppearance_AppCompat_Large_Inverse
    int TextAppearance_AppCompat_Light_SearchResult_Subtitle -> TextAppearance_AppCompat_Light_SearchResult_Subtitle
    int TextAppearance_AppCompat_Light_SearchResult_Title -> TextAppearance_AppCompat_Light_SearchResult_Title
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Medium -> TextAppearance_AppCompat_Medium
    int TextAppearance_AppCompat_Medium_Inverse -> TextAppearance_AppCompat_Medium_Inverse
    int TextAppearance_AppCompat_Menu -> TextAppearance_AppCompat_Menu
    int TextAppearance_AppCompat_SearchResult_Subtitle -> TextAppearance_AppCompat_SearchResult_Subtitle
    int TextAppearance_AppCompat_SearchResult_Title -> TextAppearance_AppCompat_SearchResult_Title
    int TextAppearance_AppCompat_Small -> TextAppearance_AppCompat_Small
    int TextAppearance_AppCompat_Small_Inverse -> TextAppearance_AppCompat_Small_Inverse
    int TextAppearance_AppCompat_Subhead -> TextAppearance_AppCompat_Subhead
    int TextAppearance_AppCompat_Subhead_Inverse -> TextAppearance_AppCompat_Subhead_Inverse
    int TextAppearance_AppCompat_Title -> TextAppearance_AppCompat_Title
    int TextAppearance_AppCompat_Title_Inverse -> TextAppearance_AppCompat_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Menu -> TextAppearance_AppCompat_Widget_ActionBar_Menu
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle
    int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionBar_Title -> TextAppearance_AppCompat_Widget_ActionBar_Title
    int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle
    int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_AppCompat_Widget_ActionMode_Title -> TextAppearance_AppCompat_Widget_ActionMode_Title
    int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse -> TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
    int TextAppearance_AppCompat_Widget_DropDownItem -> TextAppearance_AppCompat_Widget_DropDownItem
    int TextAppearance_AppCompat_Widget_PopupMenu_Large -> TextAppearance_AppCompat_Widget_PopupMenu_Large
    int TextAppearance_AppCompat_Widget_PopupMenu_Small -> TextAppearance_AppCompat_Widget_PopupMenu_Small
    int TextAppearance_AppCompat_Widget_Switch -> TextAppearance_AppCompat_Widget_Switch
    int TextAppearance_TabPageIndicator -> TextAppearance_TabPageIndicator
    int TextAppearance_Widget_AppCompat_ExpandedMenu_Item -> TextAppearance_Widget_AppCompat_ExpandedMenu_Item
    int TextAppearance_Widget_AppCompat_Toolbar_Subtitle -> TextAppearance_Widget_AppCompat_Toolbar_Subtitle
    int TextAppearance_Widget_AppCompat_Toolbar_Title -> TextAppearance_Widget_AppCompat_Toolbar_Title
    int Theme_AppCompat -> Theme_AppCompat
    int Theme_AppCompat_CompactMenu -> Theme_AppCompat_CompactMenu
    int Theme_AppCompat_Dialog -> Theme_AppCompat_Dialog
    int Theme_AppCompat_DialogWhenLarge -> Theme_AppCompat_DialogWhenLarge
    int Theme_AppCompat_Light -> Theme_AppCompat_Light
    int Theme_AppCompat_Light_DarkActionBar -> Theme_AppCompat_Light_DarkActionBar
    int Theme_AppCompat_Light_Dialog -> Theme_AppCompat_Light_Dialog
    int Theme_AppCompat_Light_DialogWhenLarge -> Theme_AppCompat_Light_DialogWhenLarge
    int Theme_AppCompat_Light_NoActionBar -> Theme_AppCompat_Light_NoActionBar
    int Theme_AppCompat_NoActionBar -> Theme_AppCompat_NoActionBar
    int Theme_AppCompatRed -> Theme_AppCompatRed
    int Theme_PageIndicatorDefaults -> Theme_PageIndicatorDefaults
    int ThemeOverlay_AppCompat -> ThemeOverlay_AppCompat
    int ThemeOverlay_AppCompat_ActionBar -> ThemeOverlay_AppCompat_ActionBar
    int ThemeOverlay_AppCompat_Dark -> ThemeOverlay_AppCompat_Dark
    int ThemeOverlay_AppCompat_Dark_ActionBar -> ThemeOverlay_AppCompat_Dark_ActionBar
    int ThemeOverlay_AppCompat_Light -> ThemeOverlay_AppCompat_Light
    int TranslucenTheme -> TranslucenTheme
    int Widget -> Widget
    int Widget_AppCompat_ActionBar -> Widget_AppCompat_ActionBar
    int Widget_AppCompat_ActionBar_Solid -> Widget_AppCompat_ActionBar_Solid
    int Widget_AppCompat_ActionBar_TabBar -> Widget_AppCompat_ActionBar_TabBar
    int Widget_AppCompat_ActionBar_TabText -> Widget_AppCompat_ActionBar_TabText
    int Widget_AppCompat_ActionBar_TabView -> Widget_AppCompat_ActionBar_TabView
    int Widget_AppCompat_ActionButton -> Widget_AppCompat_ActionButton
    int Widget_AppCompat_ActionButton_CloseMode -> Widget_AppCompat_ActionButton_CloseMode
    int Widget_AppCompat_ActionButton_Overflow -> Widget_AppCompat_ActionButton_Overflow
    int Widget_AppCompat_ActionMode -> Widget_AppCompat_ActionMode
    int Widget_AppCompat_ActivityChooserView -> Widget_AppCompat_ActivityChooserView
    int Widget_AppCompat_AutoCompleteTextView -> Widget_AppCompat_AutoCompleteTextView
    int Widget_AppCompat_CompoundButton_Switch -> Widget_AppCompat_CompoundButton_Switch
    int Widget_AppCompat_DrawerArrowToggle -> Widget_AppCompat_DrawerArrowToggle
    int Widget_AppCompat_DropDownItem_Spinner -> Widget_AppCompat_DropDownItem_Spinner
    int Widget_AppCompat_EditText -> Widget_AppCompat_EditText
    int Widget_AppCompat_Light_ActionBar -> Widget_AppCompat_Light_ActionBar
    int Widget_AppCompat_Light_ActionBar_Solid -> Widget_AppCompat_Light_ActionBar_Solid
    int Widget_AppCompat_Light_ActionBar_Solid_Inverse -> Widget_AppCompat_Light_ActionBar_Solid_Inverse
    int Widget_AppCompat_Light_ActionBar_TabBar -> Widget_AppCompat_Light_ActionBar_TabBar
    int Widget_AppCompat_Light_ActionBar_TabBar_Inverse -> Widget_AppCompat_Light_ActionBar_TabBar_Inverse
    int Widget_AppCompat_Light_ActionBar_TabText -> Widget_AppCompat_Light_ActionBar_TabText
    int Widget_AppCompat_Light_ActionBar_TabText_Inverse -> Widget_AppCompat_Light_ActionBar_TabText_Inverse
    int Widget_AppCompat_Light_ActionBar_TabView -> Widget_AppCompat_Light_ActionBar_TabView
    int Widget_AppCompat_Light_ActionBar_TabView_Inverse -> Widget_AppCompat_Light_ActionBar_TabView_Inverse
    int Widget_AppCompat_Light_ActionButton -> Widget_AppCompat_Light_ActionButton
    int Widget_AppCompat_Light_ActionButton_CloseMode -> Widget_AppCompat_Light_ActionButton_CloseMode
    int Widget_AppCompat_Light_ActionButton_Overflow -> Widget_AppCompat_Light_ActionButton_Overflow
    int Widget_AppCompat_Light_ActionMode_Inverse -> Widget_AppCompat_Light_ActionMode_Inverse
    int Widget_AppCompat_Light_ActivityChooserView -> Widget_AppCompat_Light_ActivityChooserView
    int Widget_AppCompat_Light_AutoCompleteTextView -> Widget_AppCompat_Light_AutoCompleteTextView
    int Widget_AppCompat_Light_DropDownItem_Spinner -> Widget_AppCompat_Light_DropDownItem_Spinner
    int Widget_AppCompat_Light_ListPopupWindow -> Widget_AppCompat_Light_ListPopupWindow
    int Widget_AppCompat_Light_ListView_DropDown -> Widget_AppCompat_Light_ListView_DropDown
    int Widget_AppCompat_Light_PopupMenu -> Widget_AppCompat_Light_PopupMenu
    int Widget_AppCompat_Light_PopupMenu_Overflow -> Widget_AppCompat_Light_PopupMenu_Overflow
    int Widget_AppCompat_Light_SearchView -> Widget_AppCompat_Light_SearchView
    int Widget_AppCompat_Light_Spinner_DropDown_ActionBar -> Widget_AppCompat_Light_Spinner_DropDown_ActionBar
    int Widget_AppCompat_ListPopupWindow -> Widget_AppCompat_ListPopupWindow
    int Widget_AppCompat_ListView_DropDown -> Widget_AppCompat_ListView_DropDown
    int Widget_AppCompat_ListView_Menu -> Widget_AppCompat_ListView_Menu
    int Widget_AppCompat_PopupMenu -> Widget_AppCompat_PopupMenu
    int Widget_AppCompat_PopupMenu_Overflow -> Widget_AppCompat_PopupMenu_Overflow
    int Widget_AppCompat_PopupWindow -> Widget_AppCompat_PopupWindow
    int Widget_AppCompat_ProgressBar -> Widget_AppCompat_ProgressBar
    int Widget_AppCompat_ProgressBar_Horizontal -> Widget_AppCompat_ProgressBar_Horizontal
    int Widget_AppCompat_SearchView -> Widget_AppCompat_SearchView
    int Widget_AppCompat_Spinner -> Widget_AppCompat_Spinner
    int Widget_AppCompat_Spinner_DropDown -> Widget_AppCompat_Spinner_DropDown
    int Widget_AppCompat_Spinner_DropDown_ActionBar -> Widget_AppCompat_Spinner_DropDown_ActionBar
    int Widget_AppCompat_Toolbar -> Widget_AppCompat_Toolbar
    int Widget_AppCompat_Toolbar_Button_Navigation -> Widget_AppCompat_Toolbar_Button_Navigation
    int Widget_IconPageIndicator -> Widget_IconPageIndicator
    int Widget_TabPageIndicator -> Widget_TabPageIndicator
    int bottom_tab_button -> bottom_tab_button
    int bottom_tab_layout -> bottom_tab_layout
    int bottom_tab_text -> bottom_tab_text
    int btn_login_blue -> btn_login_blue
    int button_blue -> button_blue
    int checkbox_password -> checkbox_password
    int checkbox_setting -> checkbox_setting
    int combination_detail_bottom -> combination_detail_bottom
    int custom_checkbox -> custom_checkbox
    int custom_dialog -> custom_dialog
    int dialog -> dialog
    int dialog_btn -> dialog_btn
    int dialog_btn_cancel -> dialog_btn_cancel
    int divider_line -> divider_line
    int dot_style -> dot_style
    int edit_style_land_kilne -> edit_style_land_kilne
    int gray_text_tabline -> gray_text_tabline
    int gray_title_text -> gray_title_text
    int hfill_wwrap -> hfill_wwrap
    int hw_fill -> hw_fill
    int hw_wrap -> hw_wrap
    int hwrap_wfill -> hwrap_wfill
    int listViewStyle -> listViewStyle
    int popwindow_item -> popwindow_item
    int preview_checkbox -> preview_checkbox
    int text_16_style -> text_16_style
    int text_18_style -> text_18_style
    int text_stock_name -> text_stock_name
    int text_stock_value -> text_stock_value
    int user_tab_content -> user_tab_content
    int user_tab_title -> user_tab_title
    int vertical_divider_line -> vertical_divider_line
    int white_grayborder_layout -> white_grayborder_layout
    int widget_gender_switch -> widget_gender_switch
com.dkhs.portfolio.R$styleable -> com.dkhs.portfolio.R$styleable:
    int[] ActionBar -> ActionBar
    int ActionBar_background -> ActionBar_background
    int ActionBar_backgroundSplit -> ActionBar_backgroundSplit
    int ActionBar_backgroundStacked -> ActionBar_backgroundStacked
    int ActionBar_contentInsetEnd -> ActionBar_contentInsetEnd
    int ActionBar_contentInsetLeft -> ActionBar_contentInsetLeft
    int ActionBar_contentInsetRight -> ActionBar_contentInsetRight
    int ActionBar_contentInsetStart -> ActionBar_contentInsetStart
    int ActionBar_customNavigationLayout -> ActionBar_customNavigationLayout
    int ActionBar_displayOptions -> ActionBar_displayOptions
    int ActionBar_divider -> ActionBar_divider
    int ActionBar_elevation -> ActionBar_elevation
    int ActionBar_height -> ActionBar_height
    int ActionBar_hideOnContentScroll -> ActionBar_hideOnContentScroll
    int ActionBar_homeAsUpIndicator -> ActionBar_homeAsUpIndicator
    int ActionBar_homeLayout -> ActionBar_homeLayout
    int ActionBar_icon -> ActionBar_icon
    int ActionBar_indeterminateProgressStyle -> ActionBar_indeterminateProgressStyle
    int ActionBar_itemPadding -> ActionBar_itemPadding
    int ActionBar_logo -> ActionBar_logo
    int ActionBar_navigationMode -> ActionBar_navigationMode
    int ActionBar_popupTheme -> ActionBar_popupTheme
    int ActionBar_progressBarPadding -> ActionBar_progressBarPadding
    int ActionBar_progressBarStyle -> ActionBar_progressBarStyle
    int ActionBar_subtitle -> ActionBar_subtitle
    int ActionBar_subtitleTextStyle -> ActionBar_subtitleTextStyle
    int ActionBar_title -> ActionBar_title
    int ActionBar_titleTextStyle -> ActionBar_titleTextStyle
    int[] ActionBarLayout -> ActionBarLayout
    int ActionBarLayout_android_layout_gravity -> ActionBarLayout_android_layout_gravity
    int[] ActionMenuItemView -> ActionMenuItemView
    int ActionMenuItemView_android_minWidth -> ActionMenuItemView_android_minWidth
    int[] ActionMenuView -> ActionMenuView
    int[] ActionMode -> ActionMode
    int ActionMode_background -> ActionMode_background
    int ActionMode_backgroundSplit -> ActionMode_backgroundSplit
    int ActionMode_closeItemLayout -> ActionMode_closeItemLayout
    int ActionMode_height -> ActionMode_height
    int ActionMode_subtitleTextStyle -> ActionMode_subtitleTextStyle
    int ActionMode_titleTextStyle -> ActionMode_titleTextStyle
    int[] ActivityChooserView -> ActivityChooserView
    int ActivityChooserView_expandActivityOverflowButtonDrawable -> ActivityChooserView_expandActivityOverflowButtonDrawable
    int ActivityChooserView_initialActivityCount -> ActivityChooserView_initialActivityCount
    int[] AsyncImageView -> AsyncImageView
    int AsyncImageView_defDrawable -> AsyncImageView_defDrawable
    int AsyncImageView_shape -> AsyncImageView_shape
    int[] AutoLoadListView -> AutoLoadListView
    int AutoLoadListView_perLoadCount -> AutoLoadListView_perLoadCount
    int AutoLoadListView_rcheaderLayout -> AutoLoadListView_rcheaderLayout
    int[] AutofitTextView -> AutofitTextView
    int AutofitTextView_minTextSize -> AutofitTextView_minTextSize
    int AutofitTextView_precision -> AutofitTextView_precision
    int AutofitTextView_sizeToFit -> AutofitTextView_sizeToFit
    int[] CircleFlowIndicator -> CircleFlowIndicator
    int CircleFlowIndicator_activeColor -> CircleFlowIndicator_activeColor
    int CircleFlowIndicator_activeType -> CircleFlowIndicator_activeType
    int CircleFlowIndicator_centered -> CircleFlowIndicator_centered
    int CircleFlowIndicator_fadeOut -> CircleFlowIndicator_fadeOut
    int CircleFlowIndicator_inactiveColor -> CircleFlowIndicator_inactiveColor
    int CircleFlowIndicator_inactiveType -> CircleFlowIndicator_inactiveType
    int CircleFlowIndicator_radius -> CircleFlowIndicator_radius
    int CircleFlowIndicator_snap -> CircleFlowIndicator_snap
    int CircleFlowIndicator_spacing -> CircleFlowIndicator_spacing
    int[] CirclePageIndicator -> CirclePageIndicator
    int CirclePageIndicator_android_background -> CirclePageIndicator_android_background
    int CirclePageIndicator_android_orientation -> CirclePageIndicator_android_orientation
    int CirclePageIndicator_centered_ -> CirclePageIndicator_centered_
    int CirclePageIndicator_fillColor -> CirclePageIndicator_fillColor
    int CirclePageIndicator_pageColor -> CirclePageIndicator_pageColor
    int CirclePageIndicator_radius_ -> CirclePageIndicator_radius_
    int CirclePageIndicator_strokeColor -> CirclePageIndicator_strokeColor
    int CirclePageIndicator_strokeWidth_ -> CirclePageIndicator_strokeWidth_
    int[] CircularProgress -> CircularProgress
    int CircularProgress_circular_progress_border_width -> CircularProgress_circular_progress_border_width
    int CircularProgress_circular_progress_color -> CircularProgress_circular_progress_color
    int CircularProgress_circular_progress_duration -> CircularProgress_circular_progress_duration
    int CircularProgress_circular_progress_indeterminate -> CircularProgress_circular_progress_indeterminate
    int CircularProgress_circular_progress_max -> CircularProgress_circular_progress_max
    int CircularProgress_circular_progress_size -> CircularProgress_circular_progress_size
    int[] CompatTextView -> CompatTextView
    int CompatTextView_textAllCaps -> CompatTextView_textAllCaps
    int[] DrawerArrowToggle -> DrawerArrowToggle
    int DrawerArrowToggle_barSize -> DrawerArrowToggle_barSize
    int DrawerArrowToggle_color -> DrawerArrowToggle_color
    int DrawerArrowToggle_drawableSize -> DrawerArrowToggle_drawableSize
    int DrawerArrowToggle_gapBetweenBars -> DrawerArrowToggle_gapBetweenBars
    int DrawerArrowToggle_middleBarArrowSize -> DrawerArrowToggle_middleBarArrowSize
    int DrawerArrowToggle_spinBars -> DrawerArrowToggle_spinBars
    int DrawerArrowToggle_thickness -> DrawerArrowToggle_thickness
    int DrawerArrowToggle_topBottomBarArrowSize -> DrawerArrowToggle_topBottomBarArrowSize
    int[] GridLayout -> GridLayout
    int GridLayout_alignmentMode -> GridLayout_alignmentMode
    int GridLayout_columnCount -> GridLayout_columnCount
    int GridLayout_columnOrderPreserved -> GridLayout_columnOrderPreserved
    int GridLayout_orientation -> GridLayout_orientation
    int GridLayout_rowCount -> GridLayout_rowCount
    int GridLayout_rowOrderPreserved -> GridLayout_rowOrderPreserved
    int GridLayout_useDefaultMargins -> GridLayout_useDefaultMargins
    int[] GridLayout_Layout -> GridLayout_Layout
    int GridLayout_Layout_android_layout_height -> GridLayout_Layout_android_layout_height
    int GridLayout_Layout_android_layout_margin -> GridLayout_Layout_android_layout_margin
    int GridLayout_Layout_android_layout_marginBottom -> GridLayout_Layout_android_layout_marginBottom
    int GridLayout_Layout_android_layout_marginLeft -> GridLayout_Layout_android_layout_marginLeft
    int GridLayout_Layout_android_layout_marginRight -> GridLayout_Layout_android_layout_marginRight
    int GridLayout_Layout_android_layout_marginTop -> GridLayout_Layout_android_layout_marginTop
    int GridLayout_Layout_android_layout_width -> GridLayout_Layout_android_layout_width
    int GridLayout_Layout_layout_column -> GridLayout_Layout_layout_column
    int GridLayout_Layout_layout_columnSpan -> GridLayout_Layout_layout_columnSpan
    int GridLayout_Layout_layout_columnWeight -> GridLayout_Layout_layout_columnWeight
    int GridLayout_Layout_layout_gravity -> GridLayout_Layout_layout_gravity
    int GridLayout_Layout_layout_row -> GridLayout_Layout_layout_row
    int GridLayout_Layout_layout_rowSpan -> GridLayout_Layout_layout_rowSpan
    int GridLayout_Layout_layout_rowWeight -> GridLayout_Layout_layout_rowWeight
    int[] InputView -> InputView
    int InputView_style -> InputView_style
    int[] LinePageIndicator -> LinePageIndicator
    int LinePageIndicator_android_background -> LinePageIndicator_android_background
    int LinePageIndicator_centered_ -> LinePageIndicator_centered_
    int LinePageIndicator_gapWidth -> LinePageIndicator_gapWidth
    int LinePageIndicator_lineWidth -> LinePageIndicator_lineWidth
    int LinePageIndicator_selectedColor_ -> LinePageIndicator_selectedColor_
    int LinePageIndicator_strokeWidth_ -> LinePageIndicator_strokeWidth_
    int LinePageIndicator_unselectedColor_ -> LinePageIndicator_unselectedColor_
    int[] LinearLayoutCompat -> LinearLayoutCompat
    int LinearLayoutCompat_android_baselineAligned -> LinearLayoutCompat_android_baselineAligned
    int LinearLayoutCompat_android_baselineAlignedChildIndex -> LinearLayoutCompat_android_baselineAlignedChildIndex
    int LinearLayoutCompat_android_gravity -> LinearLayoutCompat_android_gravity
    int LinearLayoutCompat_android_orientation -> LinearLayoutCompat_android_orientation
    int LinearLayoutCompat_android_weightSum -> LinearLayoutCompat_android_weightSum
    int LinearLayoutCompat_divider -> LinearLayoutCompat_divider
    int LinearLayoutCompat_dividerPadding -> LinearLayoutCompat_dividerPadding
    int LinearLayoutCompat_measureWithLargestChild -> LinearLayoutCompat_measureWithLargestChild
    int LinearLayoutCompat_showDividers -> LinearLayoutCompat_showDividers
    int[] LinearLayoutCompat_Layout -> LinearLayoutCompat_Layout
    int LinearLayoutCompat_Layout_android_layout_gravity -> LinearLayoutCompat_Layout_android_layout_gravity
    int LinearLayoutCompat_Layout_android_layout_height -> LinearLayoutCompat_Layout_android_layout_height
    int LinearLayoutCompat_Layout_android_layout_weight -> LinearLayoutCompat_Layout_android_layout_weight
    int LinearLayoutCompat_Layout_android_layout_width -> LinearLayoutCompat_Layout_android_layout_width
    int[] ListPopupWindow -> ListPopupWindow
    int ListPopupWindow_android_dropDownHorizontalOffset -> ListPopupWindow_android_dropDownHorizontalOffset
    int ListPopupWindow_android_dropDownVerticalOffset -> ListPopupWindow_android_dropDownVerticalOffset
    int[] MenuGroup -> MenuGroup
    int MenuGroup_android_checkableBehavior -> MenuGroup_android_checkableBehavior
    int MenuGroup_android_enabled -> MenuGroup_android_enabled
    int MenuGroup_android_id -> MenuGroup_android_id
    int MenuGroup_android_menuCategory -> MenuGroup_android_menuCategory
    int MenuGroup_android_orderInCategory -> MenuGroup_android_orderInCategory
    int MenuGroup_android_visible -> MenuGroup_android_visible
    int[] MenuItem -> MenuItem
    int MenuItem_actionLayout -> MenuItem_actionLayout
    int MenuItem_actionProviderClass -> MenuItem_actionProviderClass
    int MenuItem_actionViewClass -> MenuItem_actionViewClass
    int MenuItem_android_alphabeticShortcut -> MenuItem_android_alphabeticShortcut
    int MenuItem_android_checkable -> MenuItem_android_checkable
    int MenuItem_android_checked -> MenuItem_android_checked
    int MenuItem_android_enabled -> MenuItem_android_enabled
    int MenuItem_android_icon -> MenuItem_android_icon
    int MenuItem_android_id -> MenuItem_android_id
    int MenuItem_android_menuCategory -> MenuItem_android_menuCategory
    int MenuItem_android_numericShortcut -> MenuItem_android_numericShortcut
    int MenuItem_android_onClick -> MenuItem_android_onClick
    int MenuItem_android_orderInCategory -> MenuItem_android_orderInCategory
    int MenuItem_android_title -> MenuItem_android_title
    int MenuItem_android_titleCondensed -> MenuItem_android_titleCondensed
    int MenuItem_android_visible -> MenuItem_android_visible
    int MenuItem_showAsAction -> MenuItem_showAsAction
    int[] MenuView -> MenuView
    int MenuView_android_headerBackground -> MenuView_android_headerBackground
    int MenuView_android_horizontalDivider -> MenuView_android_horizontalDivider
    int MenuView_android_itemBackground -> MenuView_android_itemBackground
    int MenuView_android_itemIconDisabledAlpha -> MenuView_android_itemIconDisabledAlpha
    int MenuView_android_itemTextAppearance -> MenuView_android_itemTextAppearance
    int MenuView_android_verticalDivider -> MenuView_android_verticalDivider
    int MenuView_android_windowAnimationStyle -> MenuView_android_windowAnimationStyle
    int MenuView_preserveIconSpacing -> MenuView_preserveIconSpacing
    int[] MessageProviderContainerView -> MessageProviderContainerView
    int MessageProviderContainerView_maxContainSize -> MessageProviderContainerView_maxContainSize
    int[] PopupWindow -> PopupWindow
    int PopupWindow_android_popupBackground -> PopupWindow_android_popupBackground
    int PopupWindow_overlapAnchor -> PopupWindow_overlapAnchor
    int[] PopupWindowBackgroundState -> PopupWindowBackgroundState
    int PopupWindowBackgroundState_state_above_anchor -> PopupWindowBackgroundState_state_above_anchor
    int[] PowerImageView -> PowerImageView
    int PowerImageView_auto_play -> PowerImageView_auto_play
    int[] RatioLayout -> RatioLayout
    int RatioLayout_height_ratio -> RatioLayout_height_ratio
    int RatioLayout_width_ratio -> RatioLayout_width_ratio
    int[] SearchView -> SearchView
    int SearchView_android_focusable -> SearchView_android_focusable
    int SearchView_android_imeOptions -> SearchView_android_imeOptions
    int SearchView_android_inputType -> SearchView_android_inputType
    int SearchView_android_maxWidth -> SearchView_android_maxWidth
    int SearchView_closeIcon -> SearchView_closeIcon
    int SearchView_commitIcon -> SearchView_commitIcon
    int SearchView_goIcon -> SearchView_goIcon
    int SearchView_iconifiedByDefault -> SearchView_iconifiedByDefault
    int SearchView_layout -> SearchView_layout
    int SearchView_queryBackground -> SearchView_queryBackground
    int SearchView_queryHint -> SearchView_queryHint
    int SearchView_searchIcon -> SearchView_searchIcon
    int SearchView_submitBackground -> SearchView_submitBackground
    int SearchView_suggestionRowLayout -> SearchView_suggestionRowLayout
    int SearchView_voiceIcon -> SearchView_voiceIcon
    int[] Spinner -> Spinner
    int Spinner_android_background -> Spinner_android_background
    int Spinner_android_dropDownHorizontalOffset -> Spinner_android_dropDownHorizontalOffset
    int Spinner_android_dropDownSelector -> Spinner_android_dropDownSelector
    int Spinner_android_dropDownVerticalOffset -> Spinner_android_dropDownVerticalOffset
    int Spinner_android_dropDownWidth -> Spinner_android_dropDownWidth
    int Spinner_android_gravity -> Spinner_android_gravity
    int Spinner_android_popupBackground -> Spinner_android_popupBackground
    int Spinner_disableChildrenWhenDisabled -> Spinner_disableChildrenWhenDisabled
    int Spinner_popupPromptView -> Spinner_popupPromptView
    int Spinner_prompt -> Spinner_prompt
    int Spinner_spinnerMode -> Spinner_spinnerMode
    int[] SwipeBackLayout -> SwipeBackLayout
    int SwipeBackLayout_edge_flag -> SwipeBackLayout_edge_flag
    int SwipeBackLayout_edge_size -> SwipeBackLayout_edge_size
    int SwipeBackLayout_shadow_bottom -> SwipeBackLayout_shadow_bottom
    int SwipeBackLayout_shadow_left -> SwipeBackLayout_shadow_left
    int SwipeBackLayout_shadow_right -> SwipeBackLayout_shadow_right
    int[] SwitchCompat -> SwitchCompat
    int SwitchCompat_android_textOff -> SwitchCompat_android_textOff
    int SwitchCompat_android_textOn -> SwitchCompat_android_textOn
    int SwitchCompat_android_thumb -> SwitchCompat_android_thumb
    int SwitchCompat_showText -> SwitchCompat_showText
    int SwitchCompat_splitTrack -> SwitchCompat_splitTrack
    int SwitchCompat_switchMinWidth -> SwitchCompat_switchMinWidth
    int SwitchCompat_switchPadding -> SwitchCompat_switchPadding
    int SwitchCompat_switchTextAppearance -> SwitchCompat_switchTextAppearance
    int SwitchCompat_thumbTextPadding -> SwitchCompat_thumbTextPadding
    int SwitchCompat_track -> SwitchCompat_track
    int[] Theme -> Theme
    int Theme_actionBarDivider -> Theme_actionBarDivider
    int Theme_actionBarItemBackground -> Theme_actionBarItemBackground
    int Theme_actionBarPopupTheme -> Theme_actionBarPopupTheme
    int Theme_actionBarSize -> Theme_actionBarSize
    int Theme_actionBarSplitStyle -> Theme_actionBarSplitStyle
    int Theme_actionBarStyle -> Theme_actionBarStyle
    int Theme_actionBarTabBarStyle -> Theme_actionBarTabBarStyle
    int Theme_actionBarTabStyle -> Theme_actionBarTabStyle
    int Theme_actionBarTabTextStyle -> Theme_actionBarTabTextStyle
    int Theme_actionBarTheme -> Theme_actionBarTheme
    int Theme_actionBarWidgetTheme -> Theme_actionBarWidgetTheme
    int Theme_actionButtonStyle -> Theme_actionButtonStyle
    int Theme_actionDropDownStyle -> Theme_actionDropDownStyle
    int Theme_actionMenuTextAppearance -> Theme_actionMenuTextAppearance
    int Theme_actionMenuTextColor -> Theme_actionMenuTextColor
    int Theme_actionModeBackground -> Theme_actionModeBackground
    int Theme_actionModeCloseButtonStyle -> Theme_actionModeCloseButtonStyle
    int Theme_actionModeCloseDrawable -> Theme_actionModeCloseDrawable
    int Theme_actionModeCopyDrawable -> Theme_actionModeCopyDrawable
    int Theme_actionModeCutDrawable -> Theme_actionModeCutDrawable
    int Theme_actionModeFindDrawable -> Theme_actionModeFindDrawable
    int Theme_actionModePasteDrawable -> Theme_actionModePasteDrawable
    int Theme_actionModePopupWindowStyle -> Theme_actionModePopupWindowStyle
    int Theme_actionModeSelectAllDrawable -> Theme_actionModeSelectAllDrawable
    int Theme_actionModeShareDrawable -> Theme_actionModeShareDrawable
    int Theme_actionModeSplitBackground -> Theme_actionModeSplitBackground
    int Theme_actionModeStyle -> Theme_actionModeStyle
    int Theme_actionModeWebSearchDrawable -> Theme_actionModeWebSearchDrawable
    int Theme_actionOverflowButtonStyle -> Theme_actionOverflowButtonStyle
    int Theme_actionOverflowMenuStyle -> Theme_actionOverflowMenuStyle
    int Theme_activityChooserViewStyle -> Theme_activityChooserViewStyle
    int Theme_android_windowIsFloating -> Theme_android_windowIsFloating
    int Theme_buttonBarButtonStyle -> Theme_buttonBarButtonStyle
    int Theme_buttonBarStyle -> Theme_buttonBarStyle
    int Theme_colorAccent -> Theme_colorAccent
    int Theme_colorButtonNormal -> Theme_colorButtonNormal
    int Theme_colorControlActivated -> Theme_colorControlActivated
    int Theme_colorControlHighlight -> Theme_colorControlHighlight
    int Theme_colorControlNormal -> Theme_colorControlNormal
    int Theme_colorPrimary -> Theme_colorPrimary
    int Theme_colorPrimaryDark -> Theme_colorPrimaryDark
    int Theme_colorSwitchThumbNormal -> Theme_colorSwitchThumbNormal
    int Theme_dividerHorizontal -> Theme_dividerHorizontal
    int Theme_dividerVertical -> Theme_dividerVertical
    int Theme_dropDownListViewStyle -> Theme_dropDownListViewStyle
    int Theme_dropdownListPreferredItemHeight -> Theme_dropdownListPreferredItemHeight
    int Theme_editTextBackground -> Theme_editTextBackground
    int Theme_editTextColor -> Theme_editTextColor
    int Theme_homeAsUpIndicator -> Theme_homeAsUpIndicator
    int Theme_listChoiceBackgroundIndicator -> Theme_listChoiceBackgroundIndicator
    int Theme_listPopupWindowStyle -> Theme_listPopupWindowStyle
    int Theme_listPreferredItemHeight -> Theme_listPreferredItemHeight
    int Theme_listPreferredItemHeightLarge -> Theme_listPreferredItemHeightLarge
    int Theme_listPreferredItemHeightSmall -> Theme_listPreferredItemHeightSmall
    int Theme_listPreferredItemPaddingLeft -> Theme_listPreferredItemPaddingLeft
    int Theme_listPreferredItemPaddingRight -> Theme_listPreferredItemPaddingRight
    int Theme_panelBackground -> Theme_panelBackground
    int Theme_panelMenuListTheme -> Theme_panelMenuListTheme
    int Theme_panelMenuListWidth -> Theme_panelMenuListWidth
    int Theme_popupMenuStyle -> Theme_popupMenuStyle
    int Theme_popupWindowStyle -> Theme_popupWindowStyle
    int Theme_searchViewStyle -> Theme_searchViewStyle
    int Theme_selectableItemBackground -> Theme_selectableItemBackground
    int Theme_selectableItemBackgroundBorderless -> Theme_selectableItemBackgroundBorderless
    int Theme_spinnerDropDownItemStyle -> Theme_spinnerDropDownItemStyle
    int Theme_spinnerStyle -> Theme_spinnerStyle
    int Theme_switchStyle -> Theme_switchStyle
    int Theme_textAppearanceLargePopupMenu -> Theme_textAppearanceLargePopupMenu
    int Theme_textAppearanceListItem -> Theme_textAppearanceListItem
    int Theme_textAppearanceListItemSmall -> Theme_textAppearanceListItemSmall
    int Theme_textAppearanceSearchResultSubtitle -> Theme_textAppearanceSearchResultSubtitle
    int Theme_textAppearanceSearchResultTitle -> Theme_textAppearanceSearchResultTitle
    int Theme_textAppearanceSmallPopupMenu -> Theme_textAppearanceSmallPopupMenu
    int Theme_textColorSearchUrl -> Theme_textColorSearchUrl
    int Theme_toolbarNavigationButtonStyle -> Theme_toolbarNavigationButtonStyle
    int Theme_toolbarStyle -> Theme_toolbarStyle
    int Theme_windowActionBar -> Theme_windowActionBar
    int Theme_windowActionBarOverlay -> Theme_windowActionBarOverlay
    int Theme_windowActionModeOverlay -> Theme_windowActionModeOverlay
    int Theme_windowFixedHeightMajor -> Theme_windowFixedHeightMajor
    int Theme_windowFixedHeightMinor -> Theme_windowFixedHeightMinor
    int Theme_windowFixedWidthMajor -> Theme_windowFixedWidthMajor
    int Theme_windowFixedWidthMinor -> Theme_windowFixedWidthMinor
    int[] TitlePageIndicator -> TitlePageIndicator
    int TitlePageIndicator_android_background -> TitlePageIndicator_android_background
    int TitlePageIndicator_android_textColor -> TitlePageIndicator_android_textColor
    int TitlePageIndicator_android_textSize -> TitlePageIndicator_android_textSize
    int TitlePageIndicator_clipPadding -> TitlePageIndicator_clipPadding
    int TitlePageIndicator_footerColor -> TitlePageIndicator_footerColor
    int TitlePageIndicator_footerIndicatorHeight -> TitlePageIndicator_footerIndicatorHeight
    int TitlePageIndicator_footerIndicatorStyle -> TitlePageIndicator_footerIndicatorStyle
    int TitlePageIndicator_footerIndicatorUnderlinePadding -> TitlePageIndicator_footerIndicatorUnderlinePadding
    int TitlePageIndicator_footerLineHeight -> TitlePageIndicator_footerLineHeight
    int TitlePageIndicator_footerPadding -> TitlePageIndicator_footerPadding
    int TitlePageIndicator_linePosition -> TitlePageIndicator_linePosition
    int TitlePageIndicator_selectedBold -> TitlePageIndicator_selectedBold
    int TitlePageIndicator_selectedColor_ -> TitlePageIndicator_selectedColor_
    int TitlePageIndicator_titlePadding -> TitlePageIndicator_titlePadding
    int TitlePageIndicator_topPadding -> TitlePageIndicator_topPadding
    int[] Toolbar -> Toolbar
    int Toolbar_android_gravity -> Toolbar_android_gravity
    int Toolbar_android_minHeight -> Toolbar_android_minHeight
    int Toolbar_collapseContentDescription -> Toolbar_collapseContentDescription
    int Toolbar_collapseIcon -> Toolbar_collapseIcon
    int Toolbar_contentInsetEnd -> Toolbar_contentInsetEnd
    int Toolbar_contentInsetLeft -> Toolbar_contentInsetLeft
    int Toolbar_contentInsetRight -> Toolbar_contentInsetRight
    int Toolbar_contentInsetStart -> Toolbar_contentInsetStart
    int Toolbar_maxButtonHeight -> Toolbar_maxButtonHeight
    int Toolbar_navigationContentDescription -> Toolbar_navigationContentDescription
    int Toolbar_navigationIcon -> Toolbar_navigationIcon
    int Toolbar_popupTheme -> Toolbar_popupTheme
    int Toolbar_subtitle -> Toolbar_subtitle
    int Toolbar_subtitleTextAppearance -> Toolbar_subtitleTextAppearance
    int Toolbar_theme -> Toolbar_theme
    int Toolbar_title -> Toolbar_title
    int Toolbar_titleMarginBottom -> Toolbar_titleMarginBottom
    int Toolbar_titleMarginEnd -> Toolbar_titleMarginEnd
    int Toolbar_titleMarginStart -> Toolbar_titleMarginStart
    int Toolbar_titleMarginTop -> Toolbar_titleMarginTop
    int Toolbar_titleMargins -> Toolbar_titleMargins
    int Toolbar_titleTextAppearance -> Toolbar_titleTextAppearance
    int[] TrendChart -> TrendChart
    int TrendChart_gridHeightWeight -> TrendChart_gridHeightWeight
    int TrendChart_gridWidthWeight -> TrendChart_gridWidthWeight
    int[] UnderlinePageIndicator -> UnderlinePageIndicator
    int UnderlinePageIndicator_android_background -> UnderlinePageIndicator_android_background
    int UnderlinePageIndicator_fadeDelay -> UnderlinePageIndicator_fadeDelay
    int UnderlinePageIndicator_fadeLength -> UnderlinePageIndicator_fadeLength
    int UnderlinePageIndicator_fades -> UnderlinePageIndicator_fades
    int UnderlinePageIndicator_selectedColor_ -> UnderlinePageIndicator_selectedColor_
    int[] View -> View
    int View_android_focusable -> View_android_focusable
    int View_paddingEnd -> View_paddingEnd
    int View_paddingStart -> View_paddingStart
    int[] ViewFlow -> ViewFlow
    int ViewFlow_sidebuffer -> ViewFlow_sidebuffer
    int[] ViewPagerIndicator -> ViewPagerIndicator
    int ViewPagerIndicator_vpiCirclePageIndicatorStyle -> ViewPagerIndicator_vpiCirclePageIndicatorStyle
    int ViewPagerIndicator_vpiIconPageIndicatorStyle -> ViewPagerIndicator_vpiIconPageIndicatorStyle
    int ViewPagerIndicator_vpiLinePageIndicatorStyle -> ViewPagerIndicator_vpiLinePageIndicatorStyle
    int ViewPagerIndicator_vpiTabPageIndicatorStyle -> ViewPagerIndicator_vpiTabPageIndicatorStyle
    int ViewPagerIndicator_vpiTitlePageIndicatorStyle -> ViewPagerIndicator_vpiTitlePageIndicatorStyle
    int ViewPagerIndicator_vpiUnderlinePageIndicatorStyle -> ViewPagerIndicator_vpiUnderlinePageIndicatorStyle
    int[] ViewStubCompat -> ViewStubCompat
    int ViewStubCompat_android_id -> ViewStubCompat_android_id
    int ViewStubCompat_android_inflatedId -> ViewStubCompat_android_inflatedId
    int ViewStubCompat_android_layout -> ViewStubCompat_android_layout
    int[] roundedimageview -> roundedimageview
    int roundedimageview_border_inside_color -> roundedimageview_border_inside_color
    int roundedimageview_border_outside_color -> roundedimageview_border_outside_color
    int roundedimageview_border_thickness -> roundedimageview_border_thickness
com.dkhs.portfolio.animator.BaseEffects -> com.dkhs.portfolio.a.a:
    long mDuration -> a
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    void setupAnimation(android.view.View) -> a
    void start(android.view.View) -> b
    void reset(android.view.View) -> c
    com.nineoldandroids.animation.AnimatorSet getAnimatorSet() -> a
    void setDuration(long) -> a
com.dkhs.portfolio.animator.Effectstype -> com.dkhs.portfolio.a.b:
    com.dkhs.portfolio.animator.Effectstype Fadein -> a
    com.dkhs.portfolio.animator.Effectstype Slideleft -> b
    com.dkhs.portfolio.animator.Effectstype Slidetop -> c
    com.dkhs.portfolio.animator.Effectstype SlideBottom -> d
    com.dkhs.portfolio.animator.Effectstype Slideright -> e
    com.dkhs.portfolio.animator.Effectstype Fall -> f
    com.dkhs.portfolio.animator.Effectstype Newspager -> g
    com.dkhs.portfolio.animator.Effectstype Fliph -> h
    com.dkhs.portfolio.animator.Effectstype Flipv -> i
    com.dkhs.portfolio.animator.Effectstype RotateBottom -> j
    com.dkhs.portfolio.animator.Effectstype RotateLeft -> k
    com.dkhs.portfolio.animator.Effectstype Slit -> l
    com.dkhs.portfolio.animator.Effectstype Shake -> m
    com.dkhs.portfolio.animator.Effectstype Sidefill -> n
    java.lang.Class effectsClazz -> o
    com.dkhs.portfolio.animator.Effectstype[] $VALUES -> p
    com.dkhs.portfolio.animator.Effectstype[] values() -> values
    com.dkhs.portfolio.animator.Effectstype valueOf(java.lang.String) -> valueOf
    com.dkhs.portfolio.animator.BaseEffects getAnimator() -> a
com.dkhs.portfolio.animator.FadeIn -> com.dkhs.portfolio.a.c:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.Fall -> com.dkhs.portfolio.a.d:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.FlipH -> com.dkhs.portfolio.a.e:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.FlipV -> com.dkhs.portfolio.a.f:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.NewsPaper -> com.dkhs.portfolio.a.g:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.RotateBottom -> com.dkhs.portfolio.a.h:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.RotateLeft -> com.dkhs.portfolio.a.i:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.Shake -> com.dkhs.portfolio.a.j:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.SideFall -> com.dkhs.portfolio.a.k:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.SlideBottom -> com.dkhs.portfolio.a.l:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.SlideLeft -> com.dkhs.portfolio.a.m:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.SlideRight -> com.dkhs.portfolio.a.n:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.SlideTop -> com.dkhs.portfolio.a.o:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.animator.Slit -> com.dkhs.portfolio.a.p:
    void setupAnimation(android.view.View) -> a
com.dkhs.portfolio.app.AppConfig -> com.dkhs.portfolio.app.a:
    android.content.Context mContext -> a
    void config(android.content.Context) -> a
    void init(android.content.Context) -> b
    void copyDataBaseToPhone() -> a
com.dkhs.portfolio.app.AppConfig$1 -> com.dkhs.portfolio.app.b:
    com.dkhs.portfolio.utils.DataBaseUtil val$util -> a
    com.dkhs.portfolio.app.AppConfig this$0 -> b
    void run() -> run
com.dkhs.portfolio.app.CrashHandler -> com.dkhs.portfolio.app.c:
    android.content.Context mContext -> a
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> b
    java.lang.String ErrorReportName -> c
    java.lang.String VERSION_NAME -> d
    java.lang.String VERSION_CODE -> e
    java.lang.String STACK_TRACE -> f
    java.lang.String PACKAGENAME -> g
    java.lang.String BASEBAND -> h
    java.lang.String MODEL -> i
    java.lang.String BRAND -> j
    java.lang.String SDKVERSION -> k
    java.lang.StringBuffer crashinfo -> l
    com.dkhs.portfolio.app.CrashHandler crashhandler -> m
    java.lang.String errorLogFile -> n
    com.dkhs.portfolio.app.CrashHandler getInstance(android.content.Context) -> a
    void init(android.content.Context) -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void sendCrashReportsToServer(android.content.Context) -> c
    void postReport(java.io.File) -> a
    void saveCrashInfoToFile(java.lang.Throwable) -> b
    void writeToFile(java.lang.StringBuffer) -> a
    java.io.File getFilePath(java.lang.String,java.lang.String) -> a
    void makeRootDirectory(java.lang.String) -> a
    void collectCrashDeviceInfo(android.content.Context) -> d
    java.lang.String getBaseBand() -> a
    android.content.Context access$000(com.dkhs.portfolio.app.CrashHandler) -> a
    void access$100(com.dkhs.portfolio.app.CrashHandler,java.io.File) -> a
com.dkhs.portfolio.app.CrashHandler$1 -> com.dkhs.portfolio.app.d:
    java.lang.String val$msg -> a
    com.dkhs.portfolio.app.CrashHandler this$0 -> b
    void run() -> run
com.dkhs.portfolio.app.CrashHandler$2 -> com.dkhs.portfolio.app.e:
    java.io.File val$cr -> a
    com.dkhs.portfolio.app.CrashHandler this$0 -> b
    void run() -> run
com.dkhs.portfolio.app.PortfolioApplication -> com.dkhs.portfolio.app.PortfolioApplication:
    com.dkhs.portfolio.app.PortfolioApplication mInstance -> a
    boolean isLogin -> b
    java.util.List lists -> c
    com.dkhs.portfolio.app.PortfolioApplication getInstance() -> a
    void onCreate() -> onCreate
    void addActivity(android.app.Activity) -> a
    void exitApp() -> b
    boolean hasUserLogin() -> c
    boolean isRunningForeground() -> d
    void setLogin(boolean) -> a
com.dkhs.portfolio.bean.AccessTokenEntity -> com.dkhs.portfolio.bean.AccessTokenEntity:
    int id -> id
    java.lang.String access_token -> access_token
    long expires_in -> expires_in
    java.lang.String getAccess_token() -> getAccess_token
    void setAccess_token(java.lang.String) -> setAccess_token
    long getExpires_in() -> getExpires_in
    void setExpires_in(long) -> setExpires_in
com.dkhs.portfolio.bean.AlertSetBean -> com.dkhs.portfolio.bean.AlertSetBean:
    float stock_price_up -> stock_price_up
    float stock_price_down -> stock_price_down
    float stock_percentage -> stock_percentage
    int stock_company_report -> stock_company_report
    int stock_company_research -> stock_company_research
    int fund_year_yld -> fund_year_yld
    int fund_net_value -> fund_net_value
    int getFund_net_value() -> getFund_net_value
    void setFund_net_value(int) -> setFund_net_value
    int getFund_year_yld() -> getFund_year_yld
    void setFund_year_yld(int) -> setFund_year_yld
    float getStock_price_up() -> getStock_price_up
    void setStock_price_up(float) -> setStock_price_up
    float getStock_price_down() -> getStock_price_down
    void setStock_price_down(float) -> setStock_price_down
    float getStock_percentage() -> getStock_percentage
    void setStock_percentage(float) -> setStock_percentage
    int getStock_company_report() -> getStock_company_report
    void setStock_company_report(int) -> setStock_company_report
    int getStock_company_research() -> getStock_company_research
    void setStock_company_research(int) -> setStock_company_research
    void setNotice(boolean) -> setNotice
    void setYanbao(boolean) -> setYanbao
    boolean isNoticeRemind() -> isNoticeRemind
    boolean isYanbaoRemind() -> isYanbaoRemind
    boolean isFund7dayRemind() -> isFund7dayRemind
    boolean isFundNetvalueRemind() -> isFundNetvalueRemind
com.dkhs.portfolio.bean.AlertSetBean$$Parcelable -> com.dkhs.portfolio.bean.AlertSetBean$$Parcelable:
    com.dkhs.portfolio.bean.AlertSetBean alertSetBean$$0 -> alertSetBean$$0
    com.dkhs.portfolio.bean.AlertSetBean$$Parcelable$Creator$$0 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.AlertSetBean readcom_dkhs_portfolio_bean_AlertSetBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_AlertSetBean
    void writecom_dkhs_portfolio_bean_AlertSetBean(com.dkhs.portfolio.bean.AlertSetBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_AlertSetBean
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.AlertSetBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.AlertSetBean$$Parcelable$1 -> com.dkhs.portfolio.bean.AlertSetBean$$Parcelable$1:
com.dkhs.portfolio.bean.AlertSetBean$$Parcelable$Creator$$0 -> com.dkhs.portfolio.bean.AlertSetBean$$Parcelable$Creator$$0:
    com.dkhs.portfolio.bean.AlertSetBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.AlertSetBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.AppBean -> com.dkhs.portfolio.bean.AppBean:
    java.lang.String id -> id
    java.lang.String appCode -> appCode
    java.lang.String appName -> appName
    java.lang.String type -> type
    java.lang.String url -> url
    java.lang.String version -> version
    boolean upgrade -> upgrade
    java.lang.String desc -> desc
    java.lang.String createDate -> createDate
    java.lang.String modified -> modified
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getAppCode() -> getAppCode
    void setAppCode(java.lang.String) -> setAppCode
    java.lang.String getAppName() -> getAppName
    void setAppName(java.lang.String) -> setAppName
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    boolean isUpgrade() -> isUpgrade
    void setUpgrade(boolean) -> setUpgrade
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    java.lang.String getCreateDate() -> getCreateDate
    void setCreateDate(java.lang.String) -> setCreateDate
    java.lang.String getModified() -> getModified
    void setModified(java.lang.String) -> setModified
com.dkhs.portfolio.bean.BindThreePlat -> com.dkhs.portfolio.bean.BindThreePlat:
    boolean status -> status
    java.lang.String username -> username
    java.lang.String provider -> provider
    boolean isStatus() -> isStatus
    void setStatus(boolean) -> setStatus
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
com.dkhs.portfolio.bean.CombinationBean -> com.dkhs.portfolio.bean.CombinationBean:
    java.lang.String id -> id
    java.lang.String name -> name
    com.dkhs.portfolio.bean.UserEntity user -> user
    java.lang.String description -> description
    float netvalue -> netvalue
    java.lang.String createTime -> createTime
    java.lang.String ispublic -> ispublic
    java.lang.String is_rank -> is_rank
    boolean ispublics -> ispublics
    float chng_pct_day -> chng_pct_day
    float chng_pct_month -> chng_pct_month
    float chng_pct_week -> chng_pct_week
    float chng_pct_three_month -> chng_pct_three_month
    float cumulative -> cumulative
    boolean followed -> followed
    int sortId -> sortId
    int followerCount -> followerCount
    com.dkhs.portfolio.bean.PortfolioAlertBean alertBean -> alertBean
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getDefDescription() -> getDefDescription
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getCreateTime() -> getCreateTime
    void setCreateTime(java.lang.String) -> setCreateTime
    float getNetvalue() -> getNetvalue
    void setNetvalue(float) -> setNetvalue
    java.lang.String getIspublic() -> getIspublic
    void setIspublic(java.lang.String) -> setIspublic
    boolean isIspublics() -> isIspublics
    void setIspublics(boolean) -> setIspublics
    float getChng_pct_day() -> getChng_pct_day
    void setChng_pct_day(float) -> setChng_pct_day
    float getChng_pct_month() -> getChng_pct_month
    void setChng_pct_month(float) -> setChng_pct_month
    float getChng_pct_week() -> getChng_pct_week
    void setChng_pct_week(float) -> setChng_pct_week
    float getChng_pct_three_month() -> getChng_pct_three_month
    void setChng_pct_three_month(float) -> setChng_pct_three_month
    boolean isPubilc() -> isPubilc
    boolean isRank() -> isRank
    com.dkhs.portfolio.bean.UserEntity getUser() -> getUser
    void setUser(com.dkhs.portfolio.bean.UserEntity) -> setUser
    boolean isFollowed() -> isFollowed
    void setFollowed(boolean) -> setFollowed
    int getSortId() -> getSortId
    void setSortId(int) -> setSortId
    int getFollowerCount() -> getFollowerCount
    void setFollowerCount(int) -> setFollowerCount
    float getCumulative() -> getCumulative
    void setCumulative(float) -> setCumulative
    java.lang.String getItemName() -> getItemName
    java.lang.String getItemDesc() -> getItemDesc
    java.lang.String getItemId() -> getItemId
    long getItemSortId() -> getItemSortId
    boolean isItemTixing() -> isItemTixing
    com.dkhs.portfolio.bean.PortfolioAlertBean getAlertBean() -> getAlertBean
    void setAlertBean(com.dkhs.portfolio.bean.PortfolioAlertBean) -> setAlertBean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.dkhs.portfolio.bean.CombinationBean$$Parcelable -> com.dkhs.portfolio.bean.CombinationBean$$Parcelable:
    com.dkhs.portfolio.bean.CombinationBean combinationBean$$0 -> combinationBean$$0
    com.dkhs.portfolio.bean.CombinationBean$$Parcelable$Creator$$1 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.CombinationBean readcom_dkhs_portfolio_bean_CombinationBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_CombinationBean
    com.dkhs.portfolio.bean.PortfolioAlertBean readcom_dkhs_portfolio_bean_PortfolioAlertBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_PortfolioAlertBean
    com.dkhs.portfolio.bean.UserEntity readcom_dkhs_portfolio_bean_UserEntity(android.os.Parcel) -> readcom_dkhs_portfolio_bean_UserEntity
    void writecom_dkhs_portfolio_bean_CombinationBean(com.dkhs.portfolio.bean.CombinationBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_CombinationBean
    void writecom_dkhs_portfolio_bean_PortfolioAlertBean(com.dkhs.portfolio.bean.PortfolioAlertBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_PortfolioAlertBean
    void writecom_dkhs_portfolio_bean_UserEntity(com.dkhs.portfolio.bean.UserEntity,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_UserEntity
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.CombinationBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.CombinationBean$$Parcelable$1 -> com.dkhs.portfolio.bean.CombinationBean$$Parcelable$1:
com.dkhs.portfolio.bean.CombinationBean$$Parcelable$Creator$$1 -> com.dkhs.portfolio.bean.CombinationBean$$Parcelable$Creator$$1:
    com.dkhs.portfolio.bean.CombinationBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.CombinationBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.CompareFundsBean -> com.dkhs.portfolio.bean.CompareFundsBean:
    java.lang.String fundsId -> fundsId
    java.lang.String symbol -> symbol
    float end -> end
    float begin -> begin
    java.util.List chartlist -> chartlist
    java.lang.String getFundsId() -> getFundsId
    void setFundsId(java.lang.String) -> setFundsId
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    float getEnd() -> getEnd
    void setEnd(float) -> setEnd
    java.util.List getChartlist() -> getChartlist
    void setChartlist(java.util.List) -> setChartlist
    float getBegin() -> getBegin
    void setBegin(float) -> setBegin
com.dkhs.portfolio.bean.CompareFundsBean$ComparePoint -> com.dkhs.portfolio.bean.CompareFundsBean$ComparePoint:
    float netvalue -> netvalue
    java.lang.String date -> date
    float percentage -> percentage
    com.dkhs.portfolio.bean.CompareFundsBean this$0 -> this$0
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    float getNetvalue() -> getNetvalue
    void setNetvalue(float) -> setNetvalue
com.dkhs.portfolio.bean.ConStockBean -> com.dkhs.portfolio.bean.ConStockBean:
    float percent -> percent
    int dutyValue -> dutyValue
    int dutyColor -> dutyColor
    float currentValue -> currentValue
    float increaseValue -> increaseValue
    int isStop -> isStop
    float increasePercent -> increasePercent
    java.lang.String list_status -> list_status
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getDutyColor() -> getDutyColor
    void setDutyColor(int) -> setDutyColor
    float getCurrentValue() -> getCurrentValue
    void setCurrentValue(float) -> setCurrentValue
    float getIncreaseValue() -> getIncreaseValue
    void setIncreaseValue(float) -> setIncreaseValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.dkhs.portfolio.bean.ConStockBean clone() -> clone
    float getIncreasePercent() -> getIncreasePercent
    void setIncreasePercent(float) -> setIncreasePercent
    int getIsStop() -> getIsStop
    boolean isStop() -> isStop
    void setIsStop(int) -> setIsStop
    float getPercent() -> getPercent
    void setPercent(float) -> setPercent
    java.lang.String getList_status() -> getList_status
    void setList_status(java.lang.String) -> setList_status
    java.lang.Object clone() -> clone
com.dkhs.portfolio.bean.ConStockBean$$Parcelable -> com.dkhs.portfolio.bean.ConStockBean$$Parcelable:
    com.dkhs.portfolio.bean.ConStockBean conStockBean$$0 -> conStockBean$$0
    com.dkhs.portfolio.bean.ConStockBean$$Parcelable$Creator$$2 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.ConStockBean readcom_dkhs_portfolio_bean_ConStockBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_ConStockBean
    void writecom_dkhs_portfolio_bean_ConStockBean(com.dkhs.portfolio.bean.ConStockBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_ConStockBean
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.ConStockBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.ConStockBean$$Parcelable$1 -> com.dkhs.portfolio.bean.ConStockBean$$Parcelable$1:
com.dkhs.portfolio.bean.ConStockBean$$Parcelable$Creator$$2 -> com.dkhs.portfolio.bean.ConStockBean$$Parcelable$Creator$$2:
    com.dkhs.portfolio.bean.ConStockBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.ConStockBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.DBEntityBase -> com.dkhs.portfolio.bean.DBEntityBase:
    int id -> id
    int getId() -> getId
    void setId(int) -> setId
com.dkhs.portfolio.bean.DataEntry -> com.dkhs.portfolio.bean.DataEntry:
    java.lang.Object elment -> elment
com.dkhs.portfolio.bean.DragListItem -> com.dkhs.portfolio.bean.DragListItem:
    java.lang.String itemId -> itemId
    java.lang.String itemName -> itemName
    java.lang.String itemDesc -> itemDesc
    boolean itemTixing -> itemTixing
    long itemSortId -> itemSortId
    java.lang.String getItemId() -> getItemId
    void setItemId(java.lang.String) -> setItemId
    java.lang.String getItemName() -> getItemName
    void setItemName(java.lang.String) -> setItemName
    java.lang.String getItemDesc() -> getItemDesc
    void setItemDesc(java.lang.String) -> setItemDesc
    boolean isItemTixing() -> isItemTixing
    void setItemTixing(boolean) -> setItemTixing
    long getItemSortId() -> getItemSortId
    void setItemSortId(int) -> setItemSortId
com.dkhs.portfolio.bean.DragListItem$$Parcelable -> com.dkhs.portfolio.bean.DragListItem$$Parcelable:
    com.dkhs.portfolio.bean.DragListItem dragListItem$$0 -> dragListItem$$0
    com.dkhs.portfolio.bean.DragListItem$$Parcelable$Creator$$3 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.DragListItem readcom_dkhs_portfolio_bean_DragListItem(android.os.Parcel) -> readcom_dkhs_portfolio_bean_DragListItem
    void writecom_dkhs_portfolio_bean_DragListItem(com.dkhs.portfolio.bean.DragListItem,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_DragListItem
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.DragListItem getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.DragListItem$$Parcelable$1 -> com.dkhs.portfolio.bean.DragListItem$$Parcelable$1:
com.dkhs.portfolio.bean.DragListItem$$Parcelable$Creator$$3 -> com.dkhs.portfolio.bean.DragListItem$$Parcelable$Creator$$3:
    com.dkhs.portfolio.bean.DragListItem$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.DragListItem$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.F10DataBean -> com.dkhs.portfolio.bean.F10DataBean:
    java.lang.String title -> title
    java.util.List values -> values
    java.util.List header -> header
    java.lang.String sub_title -> sub_title
    void setTitle(java.lang.String) -> setTitle
    void setValues(java.util.List) -> setValues
    void setHeader(java.util.List) -> setHeader
    void setSub_title(java.lang.String) -> setSub_title
    java.lang.String getTitle() -> getTitle
    java.util.List getValues() -> getValues
    java.util.List getHeader() -> getHeader
    java.lang.String getSub_title() -> getSub_title
com.dkhs.portfolio.bean.F10DataBean$ALIGN -> com.dkhs.portfolio.bean.F10DataBean$ALIGN:
    com.dkhs.portfolio.bean.F10DataBean$ALIGN CENTER -> CENTER
    com.dkhs.portfolio.bean.F10DataBean$ALIGN LEFT -> LEFT
    com.dkhs.portfolio.bean.F10DataBean$ALIGN RIGHT -> RIGHT
    java.lang.String type -> type
    com.dkhs.portfolio.bean.F10DataBean$ALIGN[] $VALUES -> $VALUES
    com.dkhs.portfolio.bean.F10DataBean$ALIGN[] values() -> values
    com.dkhs.portfolio.bean.F10DataBean$ALIGN valueOf(java.lang.String) -> valueOf
    java.lang.String getType() -> getType
com.dkhs.portfolio.bean.F10DataBean$HeaderEntity -> com.dkhs.portfolio.bean.F10DataBean$HeaderEntity:
    java.lang.String title -> title
    float width -> width
    java.lang.String align -> align
    com.dkhs.portfolio.bean.F10DataBean this$0 -> this$0
    void setTitle(java.lang.String) -> setTitle
    void setWidth(float) -> setWidth
    void setAlign(java.lang.String) -> setAlign
    java.lang.String getTitle() -> getTitle
    float getWidth() -> getWidth
    java.lang.String getAlign() -> getAlign
com.dkhs.portfolio.bean.FSDataBean -> com.dkhs.portfolio.bean.FSDataBean:
    long amend -> amend
    long amstart -> amstart
    long pmstart -> pmstart
    long pmend -> pmend
    java.lang.String curtime -> curtime
    float last_close -> last_close
    java.util.List mainstr -> mainstr
    long getAmend() -> getAmend
    void setAmend(long) -> setAmend
    long getAmstart() -> getAmstart
    void setAmstart(long) -> setAmstart
    long getPmstart() -> getPmstart
    void setPmstart(long) -> setPmstart
    long getPmend() -> getPmend
    void setPmend(long) -> setPmend
    java.util.List getMainstr() -> getMainstr
    void setMainstr(java.util.List) -> setMainstr
    java.lang.String getCurtime() -> getCurtime
    void setCurtime(java.lang.String) -> setCurtime
    float getLast_close() -> getLast_close
    void setLast_close(float) -> setLast_close
com.dkhs.portfolio.bean.FSDataBean$TimeStock -> com.dkhs.portfolio.bean.FSDataBean$TimeStock:
    int volume -> volume
    float avgcurrent -> avgcurrent
    float avgline -> avgline
    float current -> current
    float minchange -> minchange
    float percentage -> percentage
    java.lang.String time -> time
    com.dkhs.portfolio.bean.FSDataBean this$0 -> this$0
    int getVolume() -> getVolume
    void setVolume(int) -> setVolume
    float getAvgcurrent() -> getAvgcurrent
    void setAvgcurrent(float) -> setAvgcurrent
    float getAvgline() -> getAvgline
    void setAvgline(float) -> setAvgline
    float getCurrent() -> getCurrent
    void setCurrent(float) -> setCurrent
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    float getMinchange() -> getMinchange
    void setMinchange(float) -> setMinchange
com.dkhs.portfolio.bean.FeedBackBean -> com.dkhs.portfolio.bean.FeedBackBean:
    long id -> id
    long user -> user
    long app -> app
    java.lang.String content -> content
    java.lang.String contact -> contact
    java.lang.String image -> image
    java.lang.String created -> created
    java.lang.String modified -> modified
    long getId() -> getId
    void setId(long) -> setId
    long getUser() -> getUser
    void setUser(long) -> setUser
    long getApp() -> getApp
    void setApp(long) -> setApp
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getContact() -> getContact
    void setContact(java.lang.String) -> setContact
    java.lang.String getImage() -> getImage
    void setImage(java.lang.String) -> setImage
    java.lang.String getCreated() -> getCreated
    void setCreated(java.lang.String) -> setCreated
    java.lang.String getModified() -> getModified
    void setModified(java.lang.String) -> setModified
com.dkhs.portfolio.bean.FiveRangeItem -> com.dkhs.portfolio.bean.FiveRangeItem:
    java.lang.String tag -> tag
    int vol -> vol
    float price -> price
    java.lang.String toString() -> toString
com.dkhs.portfolio.bean.FundManagerInfoBean -> com.dkhs.portfolio.bean.FundManagerInfoBean:
    int id -> id
    java.lang.String resume -> resume
    java.lang.String name -> name
    java.util.List achivements -> achivements
    void setId(int) -> setId
    void setResume(java.lang.String) -> setResume
    void setName(java.lang.String) -> setName
    void setAchivements(java.util.List) -> setAchivements
    int getId() -> getId
    java.lang.String getResume() -> getResume
    java.lang.String getName() -> getName
    java.util.List getAchivements() -> getAchivements
com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity -> com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity:
    java.lang.String end_date -> end_date
    double cp_rate -> cp_rate
    com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity$FundEntity fund -> fund
    java.lang.String start_date -> start_date
    double sh300_rate -> sh300_rate
    boolean expend -> expend
    com.dkhs.portfolio.bean.FundManagerInfoBean this$0 -> this$0
    boolean isExpend() -> isExpend
    void setExpend(boolean) -> setExpend
    void setEnd_date(java.lang.String) -> setEnd_date
    void setCp_rate(double) -> setCp_rate
    void setFund(com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity$FundEntity) -> setFund
    void setStart_date(java.lang.String) -> setStart_date
    void setSh300_rate(double) -> setSh300_rate
    java.lang.String getEnd_date() -> getEnd_date
    double getCp_rate() -> getCp_rate
    com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity$FundEntity getFund() -> getFund
    java.lang.String getStart_date() -> getStart_date
    double getSh300_rate() -> getSh300_rate
com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity$FundEntity -> com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity$FundEntity:
    int id -> id
    java.lang.String symbol -> symbol
    int list_status -> list_status
    int symbol_stype -> symbol_stype
    java.lang.String abbr_name -> abbr_name
    com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity this$1 -> this$1
    void setId(int) -> setId
    void setSymbol(java.lang.String) -> setSymbol
    void setList_status(int) -> setList_status
    void setSymbol_stype(int) -> setSymbol_stype
    void setAbbr_name(java.lang.String) -> setAbbr_name
    int getId() -> getId
    java.lang.String getSymbol() -> getSymbol
    int getList_status() -> getList_status
    int getSymbol_stype() -> getSymbol_stype
    java.lang.String getAbbr_name() -> getAbbr_name
com.dkhs.portfolio.bean.FundPriceBean -> com.dkhs.portfolio.bean.FundPriceBean:
    float percent_month -> percent_month
    float net_cumulative -> net_cumulative
    float percent_day -> percent_day
    float percent_six_month -> percent_six_month
    float percent_season -> percent_season
    float percent_week -> percent_week
    float tenthou_unit_incm -> tenthou_unit_incm
    float year_yld -> year_yld
    java.lang.String tradedate -> tradedate
    float percent_tyear -> percent_tyear
    float net_value -> net_value
    int symbol_stype -> symbol_stype
    float percent_year -> percent_year
    java.lang.String chi_spell -> chi_spell
    int getSymbol_stype() -> getSymbol_stype
    void setSymbol_stype(int) -> setSymbol_stype
    void setPercent_month(float) -> setPercent_month
    void setNet_cumulative(float) -> setNet_cumulative
    void setPercent_day(float) -> setPercent_day
    void setPercent_six_month(float) -> setPercent_six_month
    void setPercent_season(float) -> setPercent_season
    void setPercent_week(float) -> setPercent_week
    void setTenthou_unit_incm(float) -> setTenthou_unit_incm
    void setYear_yld(float) -> setYear_yld
    void setTradedate(java.lang.String) -> setTradedate
    void setPercent_tyear(float) -> setPercent_tyear
    void setNet_value(float) -> setNet_value
    void setPercent_year(float) -> setPercent_year
    float getPercent_month() -> getPercent_month
    float getNet_cumulative() -> getNet_cumulative
    float getPercent_day() -> getPercent_day
    float getPercent_six_month() -> getPercent_six_month
    float getPercent_season() -> getPercent_season
    float getPercent_week() -> getPercent_week
    float getTenthou_unit_incm() -> getTenthou_unit_incm
    float getYear_yld() -> getYear_yld
    java.lang.String getTradedate() -> getTradedate
    float getPercent_tyear() -> getPercent_tyear
    float getNet_value() -> getNet_value
    float getPercent_year() -> getPercent_year
    float getValue(java.lang.String) -> getValue
com.dkhs.portfolio.bean.FundQuoteBean -> com.dkhs.portfolio.bean.FundQuoteBean:
    java.util.List managers -> managers
    float percent_season -> percent_season
    float percent_six_month -> percent_six_month
    float percent_week -> percent_week
    float tenthou_unit_incm -> tenthou_unit_incm
    java.lang.String tradedate -> tradedate
    float percent_year -> percent_year
    float net_cumulative -> net_cumulative
    float percent_day -> percent_day
    float net_value -> net_value
    java.lang.String estab_date -> estab_date
    float percent_month -> percent_month
    float year_yld -> year_yld
    float percent_tyear -> percent_tyear
    float last_net_value -> last_net_value
    float change -> change
    java.lang.String mana_name -> mana_name
    java.lang.String end_shares -> end_shares
    java.lang.String getMana_name() -> getMana_name
    void setMana_name(java.lang.String) -> setMana_name
    void setManagers(java.util.List) -> setManagers
    void setPercent_season(float) -> setPercent_season
    void setPercent_six_month(float) -> setPercent_six_month
    void setPercent_week(float) -> setPercent_week
    void setTenthou_unit_incm(float) -> setTenthou_unit_incm
    void setTradedate(java.lang.String) -> setTradedate
    void setPercent_year(float) -> setPercent_year
    void setNet_cumulative(float) -> setNet_cumulative
    void setPercent_day(float) -> setPercent_day
    void setNet_value(float) -> setNet_value
    void setEstab_date(java.lang.String) -> setEstab_date
    void setPercent_month(float) -> setPercent_month
    void setYear_yld(float) -> setYear_yld
    void setPercent_tyear(float) -> setPercent_tyear
    java.util.List getManagers() -> getManagers
    float getPercent_season() -> getPercent_season
    float getPercent_six_month() -> getPercent_six_month
    float getPercent_week() -> getPercent_week
    float getTenthou_unit_incm() -> getTenthou_unit_incm
    java.lang.String getTradedate() -> getTradedate
    float getPercent_year() -> getPercent_year
    float getNet_cumulative() -> getNet_cumulative
    float getPercent_day() -> getPercent_day
    float getNet_value() -> getNet_value
    java.lang.String getEstab_date() -> getEstab_date
    float getPercent_month() -> getPercent_month
    float getYear_yld() -> getYear_yld
    float getPercent_tyear() -> getPercent_tyear
    float getLast_net_value() -> getLast_net_value
    void setLast_net_value(float) -> setLast_net_value
    float getChange() -> getChange
    void setChange(float) -> setChange
    java.lang.String getEnd_shares() -> getEnd_shares
    void setEnd_shares(java.lang.String) -> setEnd_shares
com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable -> com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable:
    com.dkhs.portfolio.bean.FundQuoteBean fundQuoteBean$$0 -> fundQuoteBean$$0
    com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable$Creator$$4 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.FundQuoteBean readcom_dkhs_portfolio_bean_FundQuoteBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_FundQuoteBean
    com.dkhs.portfolio.bean.ManagersEntity readcom_dkhs_portfolio_bean_ManagersEntity(android.os.Parcel) -> readcom_dkhs_portfolio_bean_ManagersEntity
    com.dkhs.portfolio.bean.AlertSetBean readcom_dkhs_portfolio_bean_AlertSetBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_AlertSetBean
    void writecom_dkhs_portfolio_bean_FundQuoteBean(com.dkhs.portfolio.bean.FundQuoteBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_FundQuoteBean
    void writecom_dkhs_portfolio_bean_ManagersEntity(com.dkhs.portfolio.bean.ManagersEntity,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_ManagersEntity
    void writecom_dkhs_portfolio_bean_AlertSetBean(com.dkhs.portfolio.bean.AlertSetBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_AlertSetBean
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.FundQuoteBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable$1 -> com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable$1:
com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable$Creator$$4 -> com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable$Creator$$4:
    com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.FundTypeMenuBean -> com.dkhs.portfolio.bean.FundTypeMenuBean:
    int code -> code
    int getCode() -> getCode
    void setCode(int) -> setCode
com.dkhs.portfolio.bean.HistoryNetValue -> com.dkhs.portfolio.bean.HistoryNetValue:
    float begin -> begin
    float end -> end
    java.util.List chartlist -> chartlist
    float maxOffetValue -> maxOffetValue
    int trade_status -> trade_status
    int getTrade_status() -> getTrade_status
    void setTrade_status(int) -> setTrade_status
    float getBegin() -> getBegin
    void setBegin(float) -> setBegin
    float getEnd() -> getEnd
    void setEnd(float) -> setEnd
    java.util.List getChartlist() -> getChartlist
    void setChartlist(java.util.List) -> setChartlist
    float getMaxOffetValue() -> getMaxOffetValue
    void setMaxOffetValue(float) -> setMaxOffetValue
com.dkhs.portfolio.bean.HistoryNetValue$HistoryNetBean -> com.dkhs.portfolio.bean.HistoryNetValue$HistoryNetBean:
    int id -> id
    java.lang.String date -> date
    float netvalue -> netvalue
    float percentage -> percentage
    float percentageBegin -> percentageBegin
    com.dkhs.portfolio.bean.HistoryNetValue this$0 -> this$0
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    float getNetvalue() -> getNetvalue
    void setNetvalue(float) -> setNetvalue
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    float getPercentageBegin() -> getPercentageBegin
    void setPercentageBegin(float) -> setPercentageBegin
com.dkhs.portfolio.bean.HistoryPositionDetail -> com.dkhs.portfolio.bean.HistoryPositionDetail:
    int total_count -> total_count
    int total_page -> total_page
    int current_page -> current_page
    java.util.List results -> results
    int getTotal_count() -> getTotal_count
    void setTotal_count(int) -> setTotal_count
    int getTotal_page() -> getTotal_page
    void setTotal_page(int) -> setTotal_page
    int getCurrent_page() -> getCurrent_page
    void setCurrent_page(int) -> setCurrent_page
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
com.dkhs.portfolio.bean.HistoryPositionDetail$HistoryPositionBean -> com.dkhs.portfolio.bean.HistoryPositionDetail$HistoryPositionBean:
    java.lang.String created_at -> created_at
    java.util.List detailed_change -> detailed_change
    java.lang.String dateString -> dateString
    com.dkhs.portfolio.bean.HistoryPositionDetail this$0 -> this$0
    java.lang.String getDateString() -> getDateString
    void setDateString(java.lang.String) -> setDateString
    java.lang.String getCreated_at() -> getCreated_at
    void setCreated_at(java.lang.String) -> setCreated_at
    java.util.List getDetailed_change() -> getDetailed_change
    void setDetailed_change(java.util.List) -> setDetailed_change
com.dkhs.portfolio.bean.HistoryPositionDetail$HistoryPositionItem -> com.dkhs.portfolio.bean.HistoryPositionDetail$HistoryPositionItem:
    java.lang.String symbol -> symbol
    java.lang.String symbol_code -> symbol_code
    java.lang.String symbol_name -> symbol_name
    float from_percent -> from_percent
    float to_percent -> to_percent
    java.lang.String created_at -> created_at
    java.lang.String hourTime -> hourTime
    java.lang.String changeStr -> changeStr
    com.dkhs.portfolio.bean.HistoryPositionDetail this$0 -> this$0
    java.lang.String getHourTime() -> getHourTime
    void setHourTime(java.lang.String) -> setHourTime
    java.lang.String getChangeStr() -> getChangeStr
    void setChangeStr(java.lang.String) -> setChangeStr
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    java.lang.String getSymbol_code() -> getSymbol_code
    void setSymbol_code(java.lang.String) -> setSymbol_code
    java.lang.String getSymbol_name() -> getSymbol_name
    void setSymbol_name(java.lang.String) -> setSymbol_name
    float getFrom_percent() -> getFrom_percent
    void setFrom_percent(float) -> setFrom_percent
    float getTo_percent() -> getTo_percent
    void setTo_percent(float) -> setTo_percent
    java.lang.String getCreated_at() -> getCreated_at
    void setCreated_at(java.lang.String) -> setCreated_at
com.dkhs.portfolio.bean.HistoryProfitNetValue -> com.dkhs.portfolio.bean.HistoryProfitNetValue:
    int total_count -> total_count
    int total_page -> total_page
    int current_page -> current_page
    java.util.List results -> results
    int getTotal_count() -> getTotal_count
    void setTotal_count(int) -> setTotal_count
    int getTotal_page() -> getTotal_page
    void setTotal_page(int) -> setTotal_page
    int getCurrent_page() -> getCurrent_page
    void setCurrent_page(int) -> setCurrent_page
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
com.dkhs.portfolio.bean.HistoryProfitNetValue$HistoryNetBean -> com.dkhs.portfolio.bean.HistoryProfitNetValue$HistoryNetBean:
    int id -> id
    java.lang.String date -> date
    float netvalue -> netvalue
    float percentage -> percentage
    float percentageBegin -> percentageBegin
    com.dkhs.portfolio.bean.HistoryProfitNetValue this$0 -> this$0
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    float getNetvalue() -> getNetvalue
    void setNetvalue(float) -> setNetvalue
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    float getPercentageBegin() -> getPercentageBegin
    void setPercentageBegin(float) -> setPercentageBegin
com.dkhs.portfolio.bean.LRSuccessEntity -> com.dkhs.portfolio.bean.LRSuccessEntity:
    com.dkhs.portfolio.bean.AccessTokenEntity token -> token
    com.dkhs.portfolio.bean.UserEntity user -> user
    com.dkhs.portfolio.bean.AccessTokenEntity getToken() -> getToken
    void setToken(com.dkhs.portfolio.bean.AccessTokenEntity) -> setToken
    com.dkhs.portfolio.bean.UserEntity getUser() -> getUser
    void setUser(com.dkhs.portfolio.bean.UserEntity) -> setUser
com.dkhs.portfolio.bean.ManagersEntity -> com.dkhs.portfolio.bean.ManagersEntity:
    int id -> id
    float cp_rate -> cp_rate
    java.lang.String name -> name
    java.lang.String start_date -> start_date
    void setId(int) -> setId
    void setCp_rate(float) -> setCp_rate
    void setName(java.lang.String) -> setName
    void setStart_date(java.lang.String) -> setStart_date
    int getId() -> getId
    float getCp_rate() -> getCp_rate
    java.lang.String getName() -> getName
    java.lang.String getStart_date() -> getStart_date
com.dkhs.portfolio.bean.ManagersEntity$$Parcelable -> com.dkhs.portfolio.bean.ManagersEntity$$Parcelable:
    com.dkhs.portfolio.bean.ManagersEntity managersEntity$$4 -> managersEntity$$4
    com.dkhs.portfolio.bean.ManagersEntity$$Parcelable$Creator$$5 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.ManagersEntity readcom_dkhs_portfolio_bean_ManagersEntity(android.os.Parcel) -> readcom_dkhs_portfolio_bean_ManagersEntity
    void writecom_dkhs_portfolio_bean_ManagersEntity(com.dkhs.portfolio.bean.ManagersEntity,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_ManagersEntity
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.ManagersEntity getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.ManagersEntity$$Parcelable$1 -> com.dkhs.portfolio.bean.ManagersEntity$$Parcelable$1:
com.dkhs.portfolio.bean.ManagersEntity$$Parcelable$Creator$$5 -> com.dkhs.portfolio.bean.ManagersEntity$$Parcelable$Creator$$5:
    com.dkhs.portfolio.bean.ManagersEntity$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.ManagersEntity$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.MarketCenterEntity -> com.dkhs.portfolio.bean.MarketCenterEntity:
    java.lang.String total_count -> total_count
    java.lang.String total_page -> total_page
    java.lang.String current_page -> current_page
    java.util.List results -> results
    java.lang.String getTotal_count() -> getTotal_count
    void setTotal_count(java.lang.String) -> setTotal_count
    java.lang.String getTotal_page() -> getTotal_page
    void setTotal_page(java.lang.String) -> setTotal_page
    java.lang.String getCurrent_page() -> getCurrent_page
    void setCurrent_page(java.lang.String) -> setCurrent_page
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
com.dkhs.portfolio.bean.MarketCenterGridItem -> com.dkhs.portfolio.bean.MarketCenterGridItem:
    java.lang.String path -> path
    java.lang.String time -> time
    int headerId -> headerId
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    int getHeaderId() -> getHeaderId
    void setHeaderId(int) -> setHeaderId
com.dkhs.portfolio.bean.MenuBean -> com.dkhs.portfolio.bean.MenuBean:
    boolean enable -> enable
    java.lang.String key -> key
    java.lang.String value -> value
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    boolean isEnable() -> isEnable
    void setEnable(boolean) -> setEnable
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.util.LinkedList fundTypeFromXml(android.content.Context) -> fundTypeFromXml
    java.util.LinkedList fundSortFromXml(android.content.Context) -> fundSortFromXml
com.dkhs.portfolio.bean.MoreDataBean -> com.dkhs.portfolio.bean.MoreDataBean:
    int totalCount -> totalCount
    int totalPage -> totalPage
    int currentPage -> currentPage
    int statu -> statu
    java.util.List results -> results
    int portfoliosCount -> portfoliosCount
    int getTotalCount() -> getTotalCount
    void setTotalCount(int) -> setTotalCount
    int getTotalPage() -> getTotalPage
    void setTotalPage(int) -> setTotalPage
    int getCurrentPage() -> getCurrentPage
    void setCurrentPage(int) -> setCurrentPage
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
    int getStatu() -> getStatu
    void setStatu(int) -> setStatu
    int getPortfoliosCount() -> getPortfoliosCount
    void setPortfoliosCount(int) -> setPortfoliosCount
    void copyMoreDataBean(com.dkhs.portfolio.bean.MoreDataBean) -> copyMoreDataBean
com.dkhs.portfolio.bean.MoreDataBean$EmptyMoreBean -> com.dkhs.portfolio.bean.MoreDataBean$EmptyMoreBean:
com.dkhs.portfolio.bean.NetValueReportBean -> com.dkhs.portfolio.bean.NetValueReportBean:
    int id -> id
    java.lang.String date -> date
    float netValue -> netValue
    float percentage -> percentage
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    float getNetValue() -> getNetValue
    void setNetValue(float) -> setNetValue
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
com.dkhs.portfolio.bean.OptionNewsBean -> com.dkhs.portfolio.bean.OptionNewsBean:
    java.lang.String id -> id
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.String text -> text
    java.lang.String commentRoot -> commentRoot
    java.lang.String retweetStatus -> retweetStatus
    java.lang.String parentComment -> parentComment
    java.lang.String firstPic -> firstPic
    java.lang.String retweetCount -> retweetCount
    java.lang.String replyCount -> replyCount
    java.lang.String favCount -> favCount
    java.lang.String createdTime -> createdTime
    java.lang.String publish -> publish
    java.lang.String modifiedTime -> modifiedTime
    java.lang.String statuType -> statuType
    java.lang.String contentType -> contentType
    java.util.List atUser -> atUser
    java.util.List symbols -> symbols
    com.dkhs.portfolio.bean.OptionNewsBean$User user -> user
    com.dkhs.portfolio.bean.OptionNewsBean$Source source -> source
    com.dkhs.portfolio.bean.OptionNewsBean$Source getSource() -> getSource
    void setSource(com.dkhs.portfolio.bean.OptionNewsBean$Source) -> setSource
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getCommentRoot() -> getCommentRoot
    void setCommentRoot(java.lang.String) -> setCommentRoot
    java.lang.String getRetweetStatus() -> getRetweetStatus
    void setRetweetStatus(java.lang.String) -> setRetweetStatus
    java.lang.String getParentComment() -> getParentComment
    void setParentComment(java.lang.String) -> setParentComment
    java.lang.String getFirstPic() -> getFirstPic
    void setFirstPic(java.lang.String) -> setFirstPic
    java.lang.String getRetweetCount() -> getRetweetCount
    void setRetweetCount(java.lang.String) -> setRetweetCount
    java.lang.String getReplyCount() -> getReplyCount
    void setReplyCount(java.lang.String) -> setReplyCount
    java.lang.String getFavCount() -> getFavCount
    void setFavCount(java.lang.String) -> setFavCount
    java.lang.String getCreatedTime() -> getCreatedTime
    void setCreatedTime(java.lang.String) -> setCreatedTime
    java.lang.String getModifiedTime() -> getModifiedTime
    void setModifiedTime(java.lang.String) -> setModifiedTime
    java.lang.String getStatuType() -> getStatuType
    void setStatuType(java.lang.String) -> setStatuType
    java.lang.String getContentType() -> getContentType
    void setContentType(java.lang.String) -> setContentType
    java.util.List getAtUser() -> getAtUser
    void setAtUser(java.util.List) -> setAtUser
    java.util.List getSymbols() -> getSymbols
    void setSymbols(java.util.List) -> setSymbols
    com.dkhs.portfolio.bean.OptionNewsBean$User getUser() -> getUser
    void setUser(com.dkhs.portfolio.bean.OptionNewsBean$User) -> setUser
    java.lang.String getPublish() -> getPublish
    void setPublish(java.lang.String) -> setPublish
com.dkhs.portfolio.bean.OptionNewsBean$Source -> com.dkhs.portfolio.bean.OptionNewsBean$Source:
    java.lang.String id -> id
    java.lang.String title -> title
    java.lang.String url -> url
    com.dkhs.portfolio.bean.OptionNewsBean this$0 -> this$0
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
com.dkhs.portfolio.bean.OptionNewsBean$Symbols -> com.dkhs.portfolio.bean.OptionNewsBean$Symbols:
    java.lang.String id -> id
    java.lang.String symbol -> symbol
    java.lang.String abbrName -> abbrName
    com.dkhs.portfolio.bean.OptionNewsBean this$0 -> this$0
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    java.lang.String getAbbrName() -> getAbbrName
    void setAbbrName(java.lang.String) -> setAbbrName
com.dkhs.portfolio.bean.OptionNewsBean$User -> com.dkhs.portfolio.bean.OptionNewsBean$User:
    java.lang.String id -> id
    java.lang.String username -> username
    boolean active -> active
    java.lang.String headPitureSX -> headPitureSX
    java.lang.String headPitureSM -> headPitureSM
    java.lang.String headPitureMD -> headPitureMD
    java.lang.String headPitureLG -> headPitureLG
    java.lang.String description -> description
    java.lang.String city -> city
    java.lang.String province -> province
    java.lang.String gender -> gender
    int[] category -> category
    java.lang.String followedCount -> followedCount
    java.lang.String friendCount -> friendCount
    java.lang.String statuCount -> statuCount
    java.lang.String symbolCount -> symbolCount
    com.dkhs.portfolio.bean.OptionNewsBean this$0 -> this$0
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    java.lang.String getHeadPitureSX() -> getHeadPitureSX
    void setHeadPitureSX(java.lang.String) -> setHeadPitureSX
    java.lang.String getHeadPitureSM() -> getHeadPitureSM
    void setHeadPitureSM(java.lang.String) -> setHeadPitureSM
    java.lang.String getHeadPitureMD() -> getHeadPitureMD
    void setHeadPitureMD(java.lang.String) -> setHeadPitureMD
    java.lang.String getHeadPitureLG() -> getHeadPitureLG
    void setHeadPitureLG(java.lang.String) -> setHeadPitureLG
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getGender() -> getGender
    void setGender(java.lang.String) -> setGender
    int[] getCategory() -> getCategory
    void setCategory(int[]) -> setCategory
    java.lang.String getFollowedCount() -> getFollowedCount
    void setFollowedCount(java.lang.String) -> setFollowedCount
    java.lang.String getFriendCount() -> getFriendCount
    void setFriendCount(java.lang.String) -> setFriendCount
    java.lang.String getStatuCount() -> getStatuCount
    void setStatuCount(java.lang.String) -> setStatuCount
    java.lang.String getSymbolCount() -> getSymbolCount
    void setSymbolCount(java.lang.String) -> setSymbolCount
com.dkhs.portfolio.bean.PeopleBean -> com.dkhs.portfolio.bean.PeopleBean:
    int symbols_count -> symbols_count
    int friends_count -> friends_count
    boolean is_active -> is_active
    java.lang.String gender -> gender
    java.lang.String city -> city
    java.lang.String description -> description
    java.lang.String avatar_md -> avatar_md
    java.lang.String avatar_xs -> avatar_xs
    java.lang.String avatar_lg -> avatar_lg
    java.lang.String avatar_sm -> avatar_sm
    java.lang.String province -> province
    int followed_by_count -> followed_by_count
    int id -> id
    java.util.List category -> category
    int status_count -> status_count
    java.lang.String username -> username
    boolean me_follow -> me_follow
    int total_count -> total_count
    int total_page -> total_page
    void setSymbols_count(int) -> setSymbols_count
    void setFriends_count(int) -> setFriends_count
    void setIs_active(boolean) -> setIs_active
    void setGender(java.lang.String) -> setGender
    void setCity(java.lang.String) -> setCity
    void setDescription(java.lang.String) -> setDescription
    void setAvatar_md(java.lang.String) -> setAvatar_md
    void setAvatar_xs(java.lang.String) -> setAvatar_xs
    void setAvatar_lg(java.lang.String) -> setAvatar_lg
    void setAvatar_sm(java.lang.String) -> setAvatar_sm
    void setProvince(java.lang.String) -> setProvince
    void setFollowed_by_count(int) -> setFollowed_by_count
    void setId(int) -> setId
    void setCategory(java.util.List) -> setCategory
    void setStatus_count(int) -> setStatus_count
    void setUsername(java.lang.String) -> setUsername
    void setMe_follow(boolean) -> setMe_follow
    int getSymbols_count() -> getSymbols_count
    int getFriends_count() -> getFriends_count
    boolean isIs_active() -> isIs_active
    java.lang.String getGender() -> getGender
    java.lang.String getCity() -> getCity
    java.lang.String getDescription() -> getDescription
    java.lang.String getAvatar_md() -> getAvatar_md
    java.lang.String getAvatar_xs() -> getAvatar_xs
    java.lang.String getAvatar_lg() -> getAvatar_lg
    java.lang.String getAvatar_sm() -> getAvatar_sm
    java.lang.String getProvince() -> getProvince
    int getFollowed_by_count() -> getFollowed_by_count
    int getId() -> getId
    java.util.List getCategory() -> getCategory
    int getStatus_count() -> getStatus_count
    java.lang.String getUsername() -> getUsername
    boolean isMe_follow() -> isMe_follow
com.dkhs.portfolio.bean.PortfolioAlertBean -> com.dkhs.portfolio.bean.PortfolioAlertBean:
    float portfolio_price_up -> portfolio_price_up
    float portfolio_price_down -> portfolio_price_down
    float portfolio_percentage -> portfolio_percentage
    int portfolio_adjust_alert -> portfolio_adjust_alert
    float getPortfolio_price_up() -> getPortfolio_price_up
    void setPortfolio_price_up(float) -> setPortfolio_price_up
    float getPortfolio_price_down() -> getPortfolio_price_down
    void setPortfolio_price_down(float) -> setPortfolio_price_down
    float getPortfolio_percentage() -> getPortfolio_percentage
    void setPortfolio_percentage(float) -> setPortfolio_percentage
    int getPortfolio_adjust_alert() -> getPortfolio_adjust_alert
    void setPortfolio_adjust_alert(int) -> setPortfolio_adjust_alert
    void setAdjustAlert(boolean) -> setAdjustAlert
    boolean isAdjustAlert() -> isAdjustAlert
com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable -> com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable:
    com.dkhs.portfolio.bean.PortfolioAlertBean portfolioAlertBean$$3 -> portfolioAlertBean$$3
    com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable$Creator$$6 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.PortfolioAlertBean readcom_dkhs_portfolio_bean_PortfolioAlertBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_PortfolioAlertBean
    void writecom_dkhs_portfolio_bean_PortfolioAlertBean(com.dkhs.portfolio.bean.PortfolioAlertBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_PortfolioAlertBean
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.PortfolioAlertBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable$1 -> com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable$1:
com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable$Creator$$6 -> com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable$Creator$$6:
    com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.PositionAdjustBean -> com.dkhs.portfolio.bean.PositionAdjustBean:
    float fromPercent -> fromPercent
    float toPercent -> toPercent
    java.lang.String modifyTime -> modifyTime
    float getFromPercent() -> getFromPercent
    void setFromPercent(float) -> setFromPercent
    float getToPercent() -> getToPercent
    void setToPercent(float) -> setToPercent
    java.lang.String getModifyTime() -> getModifyTime
    void setModifyTime(java.lang.String) -> setModifyTime
com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable -> com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable:
    com.dkhs.portfolio.bean.PositionAdjustBean positionAdjustBean$$0 -> positionAdjustBean$$0
    com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable$Creator$$7 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.PositionAdjustBean readcom_dkhs_portfolio_bean_PositionAdjustBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_PositionAdjustBean
    void writecom_dkhs_portfolio_bean_PositionAdjustBean(com.dkhs.portfolio.bean.PositionAdjustBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_PositionAdjustBean
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.PositionAdjustBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable$1 -> com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable$1:
com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable$Creator$$7 -> com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable$Creator$$7:
    com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.PositionDetail -> com.dkhs.portfolio.bean.PositionDetail:
    long serialVersionUID -> serialVersionUID
    com.dkhs.portfolio.bean.CombinationBean portfolio -> portfolio
    java.lang.String currentDate -> currentDate
    java.util.List adjustList -> adjustList
    java.util.List positionList -> positionList
    float fund_percent -> fund_percent
    com.dkhs.portfolio.bean.CombinationBean getPortfolio() -> getPortfolio
    void setPortfolio(com.dkhs.portfolio.bean.CombinationBean) -> setPortfolio
    java.lang.String getCurrentDate() -> getCurrentDate
    void setCurrentDate(java.lang.String) -> setCurrentDate
    java.util.List getAdjustList() -> getAdjustList
    void setAdjustList(java.util.List) -> setAdjustList
    java.util.List getPositionList() -> getPositionList
    void setPositionList(java.util.List) -> setPositionList
    float getFund_percent() -> getFund_percent
    void setFund_percent(float) -> setFund_percent
com.dkhs.portfolio.bean.PositionDetail$$Parcelable -> com.dkhs.portfolio.bean.PositionDetail$$Parcelable:
    com.dkhs.portfolio.bean.PositionDetail positionDetail$$0 -> positionDetail$$0
    com.dkhs.portfolio.bean.PositionDetail$$Parcelable$Creator$$8 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.PositionDetail readcom_dkhs_portfolio_bean_PositionDetail(android.os.Parcel) -> readcom_dkhs_portfolio_bean_PositionDetail
    com.dkhs.portfolio.bean.PositionAdjustBean readcom_dkhs_portfolio_bean_PositionAdjustBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_PositionAdjustBean
    com.dkhs.portfolio.bean.ConStockBean readcom_dkhs_portfolio_bean_ConStockBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_ConStockBean
    com.dkhs.portfolio.bean.CombinationBean readcom_dkhs_portfolio_bean_CombinationBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_CombinationBean
    com.dkhs.portfolio.bean.PortfolioAlertBean readcom_dkhs_portfolio_bean_PortfolioAlertBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_PortfolioAlertBean
    com.dkhs.portfolio.bean.UserEntity readcom_dkhs_portfolio_bean_UserEntity(android.os.Parcel) -> readcom_dkhs_portfolio_bean_UserEntity
    void writecom_dkhs_portfolio_bean_PositionDetail(com.dkhs.portfolio.bean.PositionDetail,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_PositionDetail
    void writecom_dkhs_portfolio_bean_PositionAdjustBean(com.dkhs.portfolio.bean.PositionAdjustBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_PositionAdjustBean
    void writecom_dkhs_portfolio_bean_ConStockBean(com.dkhs.portfolio.bean.ConStockBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_ConStockBean
    void writecom_dkhs_portfolio_bean_CombinationBean(com.dkhs.portfolio.bean.CombinationBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_CombinationBean
    void writecom_dkhs_portfolio_bean_PortfolioAlertBean(com.dkhs.portfolio.bean.PortfolioAlertBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_PortfolioAlertBean
    void writecom_dkhs_portfolio_bean_UserEntity(com.dkhs.portfolio.bean.UserEntity,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_UserEntity
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.PositionDetail getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.PositionDetail$$Parcelable$1 -> com.dkhs.portfolio.bean.PositionDetail$$Parcelable$1:
com.dkhs.portfolio.bean.PositionDetail$$Parcelable$Creator$$8 -> com.dkhs.portfolio.bean.PositionDetail$$Parcelable$Creator$$8:
    com.dkhs.portfolio.bean.PositionDetail$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.PositionDetail$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.QuotesBean -> com.dkhs.portfolio.bean.QuotesBean:
    long id -> id
    java.lang.String abbrName -> abbrName
    java.lang.String name -> name
    java.lang.String symbol -> symbol
    java.lang.String code -> code
    java.lang.String symbol_type -> symbol_type
    int symbol_stype -> symbol_stype
    int list_status -> list_status
    java.lang.String chi_spell -> chi_spell
    float high -> high
    float open -> open
    float low -> low
    float percentage -> percentage
    float current -> current
    float volume -> volume
    float amount -> amount
    boolean followed -> followed
    java.lang.String server_time -> server_time
    com.dkhs.portfolio.bean.AlertSetBean alertSetBean -> alertSetBean
    boolean isFollowed() -> isFollowed
    void setFollowed(boolean) -> setFollowed
    java.lang.String getAbbrName() -> getAbbrName
    void setAbbrName(java.lang.String) -> setAbbrName
    com.dkhs.portfolio.bean.AlertSetBean getAlertSetBean() -> getAlertSetBean
    void setAlertSetBean(com.dkhs.portfolio.bean.AlertSetBean) -> setAlertSetBean
    float getAmount() -> getAmount
    void setAmount(float) -> setAmount
    java.lang.String getChi_spell() -> getChi_spell
    void setChi_spell(java.lang.String) -> setChi_spell
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    float getCurrent() -> getCurrent
    void setCurrent(float) -> setCurrent
    float getHigh() -> getHigh
    void setHigh(float) -> setHigh
    long getId() -> getId
    void setId(long) -> setId
    int getList_status() -> getList_status
    void setList_status(int) -> setList_status
    float getLow() -> getLow
    void setLow(float) -> setLow
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getOpen() -> getOpen
    void setOpen(float) -> setOpen
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    java.lang.String getServer_time() -> getServer_time
    void setServer_time(java.lang.String) -> setServer_time
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    int getSymbol_stype() -> getSymbol_stype
    void setSymbol_stype(int) -> setSymbol_stype
    java.lang.String getSymbol_type() -> getSymbol_type
    void setSymbol_type(java.lang.String) -> setSymbol_type
    float getVolume() -> getVolume
    void setVolume(float) -> setVolume
    java.lang.String getStypeText() -> getStypeText
com.dkhs.portfolio.bean.RongTokenBean -> com.dkhs.portfolio.bean.RongTokenBean:
    java.lang.String token -> token
    void setToken(java.lang.String) -> setToken
    java.lang.String getToken() -> getToken
com.dkhs.portfolio.bean.SearchFundsBean -> com.dkhs.portfolio.bean.SearchFundsBean:
    java.lang.String stockName -> stockName
    java.lang.String stockCode -> stockCode
    java.lang.String chiSpell -> chiSpell
    java.lang.String getStockName() -> getStockName
    void setStockName(java.lang.String) -> setStockName
    java.lang.String getStockCode() -> getStockCode
    void setStockCode(java.lang.String) -> setStockCode
    java.lang.String getChiSpell() -> getChiSpell
    void setChiSpell(java.lang.String) -> setChiSpell
com.dkhs.portfolio.bean.SearchStockBean -> com.dkhs.portfolio.bean.SearchStockBean:
    java.lang.String stockName -> stockName
    java.lang.String stockCode -> stockCode
    java.lang.String symbol -> symbol
    java.lang.String chiSpell -> chiSpell
    java.lang.String symbol_type -> symbol_type
    java.lang.String symbol_stype -> symbol_stype
    java.lang.String list_status -> list_status
    java.lang.String is_stop -> is_stop
    java.lang.String getStockName() -> getStockName
    void setStockName(java.lang.String) -> setStockName
    java.lang.String getStockCode() -> getStockCode
    void setStockCode(java.lang.String) -> setStockCode
    java.lang.String getChiSpell() -> getChiSpell
    void setChiSpell(java.lang.String) -> setChiSpell
    java.lang.String getSymbol_type() -> getSymbol_type
    void setSymbol_type(java.lang.String) -> setSymbol_type
    java.lang.String getList_status() -> getList_status
    void setList_status(java.lang.String) -> setList_status
    java.lang.String getIs_stop() -> getIs_stop
    void setIs_stop(java.lang.String) -> setIs_stop
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    boolean isStop() -> isStop
com.dkhs.portfolio.bean.SectorBean -> com.dkhs.portfolio.bean.SectorBean:
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String abbr_name -> abbr_name
    float percentage -> percentage
    float top_symbol_current -> top_symbol_current
    float top_symbol_percentage -> top_symbol_percentage
    java.lang.String top_symbol_id -> top_symbol_id
    java.lang.String top_symbol -> top_symbol
    java.lang.String top_symbol_name -> top_symbol_name
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    float getTop_symbol_current() -> getTop_symbol_current
    void setTop_symbol_current(float) -> setTop_symbol_current
    float getTop_symbol_percentage() -> getTop_symbol_percentage
    void setTop_symbol_percentage(float) -> setTop_symbol_percentage
    java.lang.String getTop_symbol_id() -> getTop_symbol_id
    void setTop_symbol_id(java.lang.String) -> setTop_symbol_id
    java.lang.String getTop_symbol() -> getTop_symbol
    void setTop_symbol(java.lang.String) -> setTop_symbol
    java.lang.String getTop_symbol_name() -> getTop_symbol_name
    void setTop_symbol_name(java.lang.String) -> setTop_symbol_name
    java.lang.String getAbbr_name() -> getAbbr_name
    void setAbbr_name(java.lang.String) -> setAbbr_name
com.dkhs.portfolio.bean.SelectStockBean -> com.dkhs.portfolio.bean.SelectStockBean:
    java.lang.String name -> name
    float currentValue -> currentValue
    float percentage -> percentage
    long id -> id
    java.lang.String code -> code
    java.lang.String symbol -> symbol
    float change -> change
    boolean isFollowed -> isFollowed
    boolean isStop -> isStop
    com.dkhs.portfolio.bean.AlertSetBean alertSetBean -> alertSetBean
    long sortId -> sortId
    int status -> status
    float total_capital -> total_capital
    java.lang.String symbol_type -> symbol_type
    int symbol_stype -> symbol_stype
    java.lang.String list_status -> list_status
    float tenthou_unit_incm -> tenthou_unit_incm
    float year_yld -> year_yld
    java.lang.String tradeDay -> tradeDay
    com.dkhs.portfolio.bean.SelectStockBean copy(com.dkhs.portfolio.bean.ConStockBean) -> copy
    com.dkhs.portfolio.bean.SelectStockBean copy(com.dkhs.portfolio.bean.SearchStockBean) -> copy
    com.dkhs.portfolio.bean.SelectStockBean copy(com.dkhs.portfolio.bean.StockPriceBean) -> copy
    com.dkhs.portfolio.bean.SelectStockBean copy(com.dkhs.portfolio.bean.FundPriceBean) -> copy
    com.dkhs.portfolio.bean.SelectStockBean copy(com.dkhs.portfolio.bean.QuotesBean) -> copy
    com.dkhs.portfolio.bean.ConStockBean parseStock() -> parseStock
    boolean equals(java.lang.Object) -> equals
    long getSortId() -> getSortId
    void setSortId(int) -> setSortId
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    float getTotal_capital() -> getTotal_capital
    void setTotal_capital(float) -> setTotal_capital
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getCurrentValue() -> getCurrentValue
    void setCurrentValue(float) -> setCurrentValue
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    long getId() -> getId
    void setId(long) -> setId
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    float getChange() -> getChange
    void setChange(float) -> setChange
    boolean isFollowed() -> isFollowed
    void setFollowed(boolean) -> setFollowed
    boolean isStop() -> isStop
    void setStop(boolean) -> setStop
    java.lang.String getSymbol_type() -> getSymbol_type
    void setSymbol_type(java.lang.String) -> setSymbol_type
    java.lang.String getList_status() -> getList_status
    void setList_status(java.lang.String) -> setList_status
    java.lang.String getItemDesc() -> getItemDesc
    java.lang.String getItemId() -> getItemId
    java.lang.String getItemName() -> getItemName
    long getItemSortId() -> getItemSortId
    boolean isItemTixing() -> isItemTixing
com.dkhs.portfolio.bean.SelectStockBean$$Parcelable -> com.dkhs.portfolio.bean.SelectStockBean$$Parcelable:
    com.dkhs.portfolio.bean.SelectStockBean selectStockBean$$0 -> selectStockBean$$0
    com.dkhs.portfolio.bean.SelectStockBean$$Parcelable$Creator$$9 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.SelectStockBean readcom_dkhs_portfolio_bean_SelectStockBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_SelectStockBean
    com.dkhs.portfolio.bean.AlertSetBean readcom_dkhs_portfolio_bean_AlertSetBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_AlertSetBean
    void writecom_dkhs_portfolio_bean_SelectStockBean(com.dkhs.portfolio.bean.SelectStockBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_SelectStockBean
    void writecom_dkhs_portfolio_bean_AlertSetBean(com.dkhs.portfolio.bean.AlertSetBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_AlertSetBean
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.SelectStockBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.SelectStockBean$$Parcelable$1 -> com.dkhs.portfolio.bean.SelectStockBean$$Parcelable$1:
com.dkhs.portfolio.bean.SelectStockBean$$Parcelable$Creator$$9 -> com.dkhs.portfolio.bean.SelectStockBean$$Parcelable$Creator$$9:
    com.dkhs.portfolio.bean.SelectStockBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.SelectStockBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.SelectStockListBean -> com.dkhs.portfolio.bean.SelectStockListBean:
    void toParcel(java.util.List,android.os.Parcel) -> toParcel
    java.util.List fromParcel(android.os.Parcel) -> fromParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
com.dkhs.portfolio.bean.SepFundChartBean -> com.dkhs.portfolio.bean.SepFundChartBean:
    float year_yld -> year_yld
    float tenthou_unit_incm -> tenthou_unit_incm
    java.lang.String date -> date
    float getYear_yld() -> getYear_yld
    void setYear_yld(float) -> setYear_yld
    float getTenthou_unit_incm() -> getTenthou_unit_incm
    void setTenthou_unit_incm(float) -> setTenthou_unit_incm
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
com.dkhs.portfolio.bean.SetCombinPublicEntity -> com.dkhs.portfolio.bean.SetCombinPublicEntity:
    java.lang.String createDate -> createDate
    java.lang.String description -> description
    java.lang.String id -> id
    java.lang.String value -> value
    java.lang.String name -> name
    java.lang.String ispublic -> ispublic
    java.lang.String getCreateDate() -> getCreateDate
    void setCreateDate(java.lang.String) -> setCreateDate
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getIspublic() -> getIspublic
    void setIspublic(java.lang.String) -> setIspublic
com.dkhs.portfolio.bean.SignupBean -> com.dkhs.portfolio.bean.SignupBean:
    boolean isNewUser -> isNewUser
    com.dkhs.portfolio.bean.UserEntity user -> user
    java.lang.String tokenString -> tokenString
    boolean isNewUser() -> isNewUser
    void setNewUser(boolean) -> setNewUser
    com.dkhs.portfolio.bean.UserEntity getUser() -> getUser
    void setUser(com.dkhs.portfolio.bean.UserEntity) -> setUser
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
com.dkhs.portfolio.bean.SortTypeMenuBean -> com.dkhs.portfolio.bean.SortTypeMenuBean:
com.dkhs.portfolio.bean.StockBean -> com.dkhs.portfolio.bean.StockBean:
    long serialVersionUID -> serialVersionUID
    java.lang.String stockName -> stockName
    java.lang.String stockSymbol -> stockSymbol
    java.lang.String stockCode -> stockCode
    long stockId -> stockId
    java.lang.String getStockCode() -> getStockCode
    void setStockCode(java.lang.String) -> setStockCode
    long getStockId() -> getStockId
    void setStockId(long) -> setStockId
    java.lang.String getStockName() -> getStockName
    void setStockName(java.lang.String) -> setStockName
    java.lang.String getStockSymbol() -> getStockSymbol
    void setStockSymbol(java.lang.String) -> setStockSymbol
com.dkhs.portfolio.bean.StockBean$$Parcelable -> com.dkhs.portfolio.bean.StockBean$$Parcelable:
    com.dkhs.portfolio.bean.StockBean stockBean$$0 -> stockBean$$0
    com.dkhs.portfolio.bean.StockBean$$Parcelable$Creator$$10 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.StockBean readcom_dkhs_portfolio_bean_StockBean(android.os.Parcel) -> readcom_dkhs_portfolio_bean_StockBean
    void writecom_dkhs_portfolio_bean_StockBean(com.dkhs.portfolio.bean.StockBean,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_StockBean
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.StockBean getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.StockBean$$Parcelable$1 -> com.dkhs.portfolio.bean.StockBean$$Parcelable$1:
com.dkhs.portfolio.bean.StockBean$$Parcelable$Creator$$10 -> com.dkhs.portfolio.bean.StockBean$$Parcelable$Creator$$10:
    com.dkhs.portfolio.bean.StockBean$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.StockBean$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.StockPriceBean -> com.dkhs.portfolio.bean.StockPriceBean:
    long id -> id
    java.lang.String abbrname -> abbrname
    java.lang.String symbol -> symbol
    java.lang.String code -> code
    float current -> current
    float change -> change
    float turnover_rate -> turnover_rate
    float amplitude -> amplitude
    long index -> index
    float percentage -> percentage
    boolean isFollowed -> isFollowed
    float dayPercentage -> dayPercentage
    float monthPercentage -> monthPercentage
    float seasonPercentage -> seasonPercentage
    float yearPercentage -> yearPercentage
    float tyearPercentage -> tyearPercentage
    com.dkhs.portfolio.bean.AlertSetBean alertBean -> alertBean
    float total_capital -> total_capital
    java.lang.String symbol_type -> symbol_type
    java.lang.String list_status -> list_status
    int isStop -> isStop
    long getId() -> getId
    void setId(long) -> setId
    long getIndex() -> getIndex
    void setIndex(long) -> setIndex
    java.lang.String getAbbrname() -> getAbbrname
    void setAbbrname(java.lang.String) -> setAbbrname
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    float getCurrent() -> getCurrent
    void setCurrent(float) -> setCurrent
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    boolean isFollowed() -> isFollowed
    void setFollowed(boolean) -> setFollowed
    float getDayPercentage() -> getDayPercentage
    void setDayPercentage(float) -> setDayPercentage
    float getMonthPercentage() -> getMonthPercentage
    void setMonthPercentage(float) -> setMonthPercentage
    float getSeasonPercentage() -> getSeasonPercentage
    void setSeasonPercentage(float) -> setSeasonPercentage
    float getChange() -> getChange
    void setChange(float) -> setChange
    int getIsStop() -> getIsStop
    boolean isStop() -> isStop
    void setIsStop(int) -> setIsStop
    java.lang.String getSymbol_type() -> getSymbol_type
    void setSymbol_type(java.lang.String) -> setSymbol_type
    float getYearPercentage() -> getYearPercentage
    void setYearPercentage(float) -> setYearPercentage
    float getTyearPercentage() -> getTyearPercentage
    void setTyearPercentage(float) -> setTyearPercentage
    java.lang.String getList_status() -> getList_status
    void setList_status(java.lang.String) -> setList_status
    float getTurnover_rate() -> getTurnover_rate
    void setTurnover_rate(float) -> setTurnover_rate
    float getAmplitude() -> getAmplitude
    void setAmplitude(float) -> setAmplitude
    float getTotal_capital() -> getTotal_capital
    void setTotal_capital(float) -> setTotal_capital
    com.dkhs.portfolio.bean.AlertSetBean getAlertBean() -> getAlertBean
    void setAlertBean(com.dkhs.portfolio.bean.AlertSetBean) -> setAlertBean
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
com.dkhs.portfolio.bean.StockProfileDataBean -> com.dkhs.portfolio.bean.StockProfileDataBean:
    java.util.List results -> results
    java.lang.String last_datetime -> last_datetime
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
    java.lang.String getLast_datetime() -> getLast_datetime
    void setLast_datetime(java.lang.String) -> setLast_datetime
com.dkhs.portfolio.bean.StockQuotesBean -> com.dkhs.portfolio.bean.StockQuotesBean:
    float change -> change
    float lastClose -> lastClose
    com.dkhs.portfolio.bean.StockQuotesBean$BuyPrice buyPrice -> buyPrice
    java.lang.String moment -> moment
    java.lang.String trade_status -> trade_status
    java.lang.String tradetile -> tradetile
    int is_stop -> is_stop
    float turnover_rate -> turnover_rate
    float market_capital -> market_capital
    float total_capital -> total_capital
    float pe_ttm -> pe_ttm
    float pe_lyr -> pe_lyr
    float pb -> pb
    com.dkhs.portfolio.bean.StockQuotesBean$SellPrice sellPrice -> sellPrice
    java.util.List buyList -> buyList
    java.util.List sellList -> sellList
    float getTotal_capital() -> getTotal_capital
    void setTotal_capital(float) -> setTotal_capital
    float getChange() -> getChange
    void setChange(float) -> setChange
    float getLastClose() -> getLastClose
    void setLastClose(float) -> setLastClose
    com.dkhs.portfolio.bean.StockQuotesBean$BuyPrice getBuyPrice() -> getBuyPrice
    void setBuyPrice(com.dkhs.portfolio.bean.StockQuotesBean$BuyPrice) -> setBuyPrice
    java.lang.String getMoment() -> getMoment
    void setMoment(java.lang.String) -> setMoment
    java.lang.String getTrade_status() -> getTrade_status
    void setTrade_status(java.lang.String) -> setTrade_status
    void setTradetile(java.lang.String) -> setTradetile
    int getIs_stop() -> getIs_stop
    void setIs_stop(int) -> setIs_stop
    float getTurnover_rate() -> getTurnover_rate
    void setTurnover_rate(float) -> setTurnover_rate
    float getMarket_capital() -> getMarket_capital
    void setMarket_capital(float) -> setMarket_capital
    float getPe_ttm() -> getPe_ttm
    void setPe_ttm(float) -> setPe_ttm
    float getPe_lyr() -> getPe_lyr
    void setPe_lyr(float) -> setPe_lyr
    float getPb() -> getPb
    void setPb(float) -> setPb
    com.dkhs.portfolio.bean.StockQuotesBean$SellPrice getSellPrice() -> getSellPrice
    void setSellPrice(com.dkhs.portfolio.bean.StockQuotesBean$SellPrice) -> setSellPrice
    java.util.List getBuyList() -> getBuyList
    void setBuyList(java.util.List) -> setBuyList
    java.util.List getSellList() -> getSellList
    void setSellList(java.util.List) -> setSellList
    java.lang.String getTradetile() -> getTradetile
com.dkhs.portfolio.bean.StockQuotesBean$BuyPrice -> com.dkhs.portfolio.bean.StockQuotesBean$BuyPrice:
    java.util.List buyVol -> buyVol
    java.util.List buyPrice -> buyPrice
    com.dkhs.portfolio.bean.StockQuotesBean this$0 -> this$0
    java.util.List getBuyVol() -> getBuyVol
    void setBuyVol(java.util.List) -> setBuyVol
    java.util.List getBuyPrice() -> getBuyPrice
    void setBuyPrice(java.util.List) -> setBuyPrice
com.dkhs.portfolio.bean.StockQuotesBean$SellPrice -> com.dkhs.portfolio.bean.StockQuotesBean$SellPrice:
    java.util.List sellVol -> sellVol
    java.util.List sellPrice -> sellPrice
    com.dkhs.portfolio.bean.StockQuotesBean this$0 -> this$0
    java.util.List getSellVol() -> getSellVol
    void setSellVol(java.util.List) -> setSellVol
    java.util.List getSellPrice() -> getSellPrice
    void setSellPrice(java.util.List) -> setSellPrice
com.dkhs.portfolio.bean.SubmitSymbol -> com.dkhs.portfolio.bean.SubmitSymbol:
    long symbol -> symbol
    int percent -> percent
    long getSymbol() -> getSymbol
    void setSymbol(long) -> setSymbol
    int getPercent() -> getPercent
    void setPercent(int) -> setPercent
com.dkhs.portfolio.bean.SurpusStock -> com.dkhs.portfolio.bean.SurpusStock:
    boolean iSurplus -> iSurplus
    boolean isiSurplus() -> isiSurplus
    void setiSurplus(boolean) -> setiSurplus
com.dkhs.portfolio.bean.ThreePlatform -> com.dkhs.portfolio.bean.ThreePlatform:
    java.lang.String access_token -> access_token
    java.lang.String openid -> openid
    java.lang.String refresh_token -> refresh_token
    java.lang.String avatar -> avatar
    java.lang.String username -> username
    java.lang.String getAccess_token() -> getAccess_token
    void setAccess_token(java.lang.String) -> setAccess_token
    java.lang.String getOpenid() -> getOpenid
    void setOpenid(java.lang.String) -> setOpenid
    java.lang.String getRefresh_token() -> getRefresh_token
    void setRefresh_token(java.lang.String) -> setRefresh_token
    java.lang.String getAvatar() -> getAvatar
    void setAvatar(java.lang.String) -> setAvatar
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
com.dkhs.portfolio.bean.TodayNetBean -> com.dkhs.portfolio.bean.TodayNetBean:
    java.lang.String timestamp -> timestamp
    float netvalue -> netvalue
    float percentage -> percentage
    float change -> change
    java.lang.String getTimestamp() -> getTimestamp
    void setTimestamp(java.lang.String) -> setTimestamp
    float getNetvalue() -> getNetvalue
    void setNetvalue(float) -> setNetvalue
    float getPercentage() -> getPercentage
    void setPercentage(float) -> setPercentage
    float getChange() -> getChange
    void setChange(float) -> setChange
com.dkhs.portfolio.bean.TodayNetValue -> com.dkhs.portfolio.bean.TodayNetValue:
    float begin -> begin
    float last_netvalue -> last_netvalue
    float end -> end
    java.util.List chartlist -> chartlist
    float maxOffetValue -> maxOffetValue
    int trade_status -> trade_status
    int getTrade_status() -> getTrade_status
    void setTrade_status(int) -> setTrade_status
    float getBegin() -> getBegin
    void setBegin(float) -> setBegin
    float getEnd() -> getEnd
    void setEnd(float) -> setEnd
    java.util.List getChartlist() -> getChartlist
    void setChartlist(java.util.List) -> setChartlist
    float getMaxOffetValue() -> getMaxOffetValue
    void setMaxOffetValue(float) -> setMaxOffetValue
    float getLast_netvalue() -> getLast_netvalue
    void setLast_netvalue(float) -> setLast_netvalue
com.dkhs.portfolio.bean.UrlStoreBean -> com.dkhs.portfolio.bean.UrlStoreBean:
    java.lang.String authorization -> authorization
    java.lang.String url -> url
    java.lang.String responseJson -> responseJson
    java.lang.String getAuthorization() -> getAuthorization
    void setAuthorization(java.lang.String) -> setAuthorization
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getResponseJson() -> getResponseJson
    void setResponseJson(java.lang.String) -> setResponseJson
com.dkhs.portfolio.bean.User -> com.dkhs.portfolio.bean.User:
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String id -> id
    java.lang.String avatar -> avatar
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getAvatar() -> getAvatar
    void setAvatar(java.lang.String) -> setAvatar
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.dkhs.portfolio.bean.User$1 -> com.dkhs.portfolio.bean.User$1:
    com.dkhs.portfolio.bean.User createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.User[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.UserEntity -> com.dkhs.portfolio.bean.UserEntity:
    long id -> id
    java.lang.String username -> username
    java.lang.String mobile -> mobile
    boolean isFirstRegister -> isFirstRegister
    java.lang.String gender -> gender
    java.lang.String description -> description
    java.lang.String province -> province
    java.lang.String city -> city
    int followed_by_count -> followed_by_count
    int friends_count -> friends_count
    int status_count -> status_count
    int symbols_count -> symbols_count
    java.lang.String avatar_xs -> avatar_xs
    java.lang.String access_token -> access_token
    java.lang.String avatar_md -> avatar_md
    java.lang.String avatar_sm -> avatar_sm
    java.lang.String avatar_lg -> avatar_lg
    java.lang.String date_joined -> date_joined
    boolean me_follow -> me_follow
    int portfolios_following_count -> portfolios_following_count
    int getPortfolios_following_count() -> getPortfolios_following_count
    void setPortfolios_following_count(int) -> setPortfolios_following_count
    boolean isMe_follow() -> isMe_follow
    void setMe_follow(boolean) -> setMe_follow
    int getSymbols_count() -> getSymbols_count
    void setSymbols_count(int) -> setSymbols_count
    long getId() -> getId
    void setId(long) -> setId
    java.lang.String getAccess_token() -> getAccess_token
    void setAccess_token(java.lang.String) -> setAccess_token
    java.lang.String getAvatar_xs() -> getAvatar_xs
    void setAvatar_xs(java.lang.String) -> setAvatar_xs
    java.lang.String getGender() -> getGender
    void setGender(java.lang.String) -> setGender
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    int getFollowed_by_count() -> getFollowed_by_count
    void setFollowed_by_count(int) -> setFollowed_by_count
    int getFriends_count() -> getFriends_count
    void setFriends_count(int) -> setFriends_count
    int getStatus_count() -> getStatus_count
    void setStatus_count(int) -> setStatus_count
    boolean isFirstRegister() -> isFirstRegister
    void setFirstRegister(boolean) -> setFirstRegister
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getMobile() -> getMobile
    void setMobile(java.lang.String) -> setMobile
    java.lang.String getAvatar_md() -> getAvatar_md
    void setAvatar_md(java.lang.String) -> setAvatar_md
    java.lang.String getAvatar_lg() -> getAvatar_lg
    void setAvatar_lg(java.lang.String) -> setAvatar_lg
    java.lang.String getAvatar_sm() -> getAvatar_sm
    void setAvatar_sm(java.lang.String) -> setAvatar_sm
    java.lang.String getDate_joined() -> getDate_joined
    void setDate_joined(java.lang.String) -> setDate_joined
com.dkhs.portfolio.bean.UserEntity$$Parcelable -> com.dkhs.portfolio.bean.UserEntity$$Parcelable:
    com.dkhs.portfolio.bean.UserEntity userEntity$$6 -> userEntity$$6
    com.dkhs.portfolio.bean.UserEntity$$Parcelable$Creator$$11 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.bean.UserEntity readcom_dkhs_portfolio_bean_UserEntity(android.os.Parcel) -> readcom_dkhs_portfolio_bean_UserEntity
    void writecom_dkhs_portfolio_bean_UserEntity(com.dkhs.portfolio.bean.UserEntity,android.os.Parcel,int) -> writecom_dkhs_portfolio_bean_UserEntity
    int describeContents() -> describeContents
    com.dkhs.portfolio.bean.UserEntity getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.bean.UserEntity$$Parcelable$1 -> com.dkhs.portfolio.bean.UserEntity$$Parcelable$1:
com.dkhs.portfolio.bean.UserEntity$$Parcelable$Creator$$11 -> com.dkhs.portfolio.bean.UserEntity$$Parcelable$Creator$$11:
    com.dkhs.portfolio.bean.UserEntity$$Parcelable createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.bean.UserEntity$$Parcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.bean.errorbundle.BaseError -> com.dkhs.portfolio.bean.errorbundle.BaseError:
    java.lang.Object errors -> errors
    java.lang.Object getErrors() -> getErrors
    void setErrors(java.lang.Object) -> setErrors
com.dkhs.portfolio.bean.errorbundle.RaiseUpDown -> com.dkhs.portfolio.bean.errorbundle.RaiseUpDown:
    java.util.List raise_up -> raise_up
    java.util.List raise_down -> raise_down
    java.util.List getRaise_up() -> getRaise_up
    void setRaise_up(java.util.List) -> setRaise_up
    java.util.List getRaise_down() -> getRaise_down
    void setRaise_down(java.util.List) -> setRaise_down
com.dkhs.portfolio.common.GlobalParams -> com.dkhs.portfolio.b.a:
    java.lang.String PROXY_IP -> a
    int PROXY_PORT -> b
    int WIN_WIDTH -> c
    boolean isLogin -> d
    java.lang.String USERNAME -> e
    java.lang.String MOBILE -> f
    java.lang.String CALLID -> g
    java.lang.String ACCESS_TOCKEN -> h
    com.dkhs.portfolio.bean.UserEntity LOGIN_USER -> i
    boolean IS_VOICE_CONNECTED -> j
    boolean IS_CONFERENCE_CONNECTED -> k
    boolean IS_APP_SHOWING -> l
    void clearUserInfo() -> a
com.dkhs.portfolio.engine.BaseInfoEngine -> com.dkhs.portfolio.engine.a:
    void getCombinationBean(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void getOptionNewsBean(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
com.dkhs.portfolio.engine.CombinationRankEngineImpl -> com.dkhs.portfolio.engine.b:
    java.lang.String mOrderType -> a
    int pageIndex -> b
    int pageSize -> c
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.CombinationRankEngineImpl$1 -> com.dkhs.portfolio.engine.c:
    com.dkhs.portfolio.engine.CombinationRankEngineImpl this$0 -> a
com.dkhs.portfolio.engine.CompareEngine -> com.dkhs.portfolio.engine.d:
    void compare(com.dkhs.portfolio.net.IHttpListener,java.lang.String,java.lang.String,java.lang.String) -> a
    void compareByPeriod(com.dkhs.portfolio.net.IHttpListener,java.lang.String,java.lang.String) -> a
com.dkhs.portfolio.engine.F10DataEngineImpl -> com.dkhs.portfolio.engine.e:
    void getStockHoder(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void getIntroduction(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
    void getFinance(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> c
com.dkhs.portfolio.engine.FollowComEngineImpl -> com.dkhs.portfolio.engine.f:
    void followCombinations(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void defFollowCombinations(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
    void sortCombinations(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> c
com.dkhs.portfolio.engine.FollowComListEngineImpl -> com.dkhs.portfolio.engine.g:
    java.lang.String userId -> a
    java.lang.String orderType -> b
    void setOrderType(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadAllData() -> c
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> c
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.FollowComListEngineImpl$1 -> com.dkhs.portfolio.engine.h:
    com.dkhs.portfolio.engine.FollowComListEngineImpl this$0 -> a
com.dkhs.portfolio.engine.FundDataEngine -> com.dkhs.portfolio.engine.i:
    com.dkhs.portfolio.engine.FundDataEngine$OrderType mOrderType -> a
    java.lang.String mFundsType -> b
    void setOrderType(com.dkhs.portfolio.engine.FundDataEngine$OrderType) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.FundDataEngine$1 -> com.dkhs.portfolio.engine.j:
    com.dkhs.portfolio.engine.FundDataEngine this$0 -> a
com.dkhs.portfolio.engine.FundDataEngine$OrderType -> com.dkhs.portfolio.engine.i$a:
    com.dkhs.portfolio.engine.FundDataEngine$OrderType MONTH -> a
    com.dkhs.portfolio.engine.FundDataEngine$OrderType YEAR -> b
    com.dkhs.portfolio.engine.FundDataEngine$OrderType TYEAR -> c
    java.lang.String type -> d
    com.dkhs.portfolio.engine.FundDataEngine$OrderType[] $VALUES -> e
    com.dkhs.portfolio.engine.FundDataEngine$OrderType[] values() -> values
    com.dkhs.portfolio.engine.FundDataEngine$OrderType valueOf(java.lang.String) -> valueOf
    java.lang.String getType() -> a
com.dkhs.portfolio.engine.FundOrderEngineImpl -> com.dkhs.portfolio.engine.k:
    int page -> a
    java.lang.String type -> b
    java.lang.String sort -> c
    com.lidroid.xutils.http.HttpHandler loadDate(java.lang.String,java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.FundOrderEngineImpl$1 -> com.dkhs.portfolio.engine.l:
    com.dkhs.portfolio.engine.FundOrderEngineImpl this$0 -> a
com.dkhs.portfolio.engine.LoadMoreDataEngine -> com.dkhs.portfolio.engine.m:
    int totalcount -> a
    int totalpage -> b
    int currentpage -> c
    int statu -> d
    com.dkhs.portfolio.bean.MoreDataBean moreDataBean -> e
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener iLoadListener -> f
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    void afterParseData(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void setTotalcount(int) -> b
    int getTotalpage() -> d
    void setTotalpage(int) -> c
    int getCurrentpage() -> e
    void setCurrentpage(int) -> d
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener getLoadListener() -> f
    int getStatu() -> g
    void setStatu(int) -> e
    com.dkhs.portfolio.bean.MoreDataBean getMoreDataBean() -> h
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener -> com.dkhs.portfolio.engine.m$a:
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.engine.LoadNewsDataEngine -> com.dkhs.portfolio.engine.n:
    int totalcount -> a
    int totalpage -> b
    int currentpage -> c
    com.dkhs.portfolio.engine.LoadNewsDataEngine$ILoadDataBackListener iLoadListener -> d
    void loadMore() -> a
    void loadData() -> b
    void afterParseData(java.util.List) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void requestCallBack() -> requestCallBack
    void setTotalcount(int) -> a
    int getTotalpage() -> c
    void setTotalpage(int) -> b
    int getCurrentpage() -> d
    void setCurrentpage(int) -> c
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.engine.LoadNewsDataEngine$ILoadDataBackListener -> com.dkhs.portfolio.engine.n$a:
    void loadFinish(java.util.List) -> a
    void loadingFail() -> a
com.dkhs.portfolio.engine.LoadNewsTextEngine -> com.dkhs.portfolio.engine.o:
    com.dkhs.portfolio.engine.LoadNewsTextEngine$ILoadDataBackListener iLoadListener -> a
    void loadData() -> a
    void afterParseData(com.dkhs.portfolio.bean.OptionNewsBean) -> a
    com.dkhs.portfolio.net.ParseHttpListener setLoadingDialog(android.content.Context) -> a
    void requestCallBack() -> requestCallBack
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.engine.LoadNewsTextEngine$ILoadDataBackListener -> com.dkhs.portfolio.engine.o$a:
    void loadFinish(com.dkhs.portfolio.bean.OptionNewsBean) -> a
com.dkhs.portfolio.engine.MainIndexEngineImple -> com.dkhs.portfolio.engine.p:
    java.lang.String orderType -> a
    void setOrderType(com.dkhs.portfolio.engine.FundDataEngine$OrderType) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.MainIndexEngineImple$1 -> com.dkhs.portfolio.engine.q:
    com.dkhs.portfolio.engine.MainIndexEngineImple this$0 -> a
com.dkhs.portfolio.engine.MainIndexEngineImple$2 -> com.dkhs.portfolio.engine.p$1:
    int[] $SwitchMap$com$dkhs$portfolio$engine$FundDataEngine$OrderType -> a
com.dkhs.portfolio.engine.MarketCenterStockEngineImple -> com.dkhs.portfolio.engine.r:
    java.lang.String orderType -> b
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener loadListener -> a
    int mPagesize -> c
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.MarketCenterStockEngineImple$1 -> com.dkhs.portfolio.engine.s:
    com.dkhs.portfolio.engine.MarketCenterStockEngineImple this$0 -> a
com.dkhs.portfolio.engine.MyCombinationEngineImpl -> com.dkhs.portfolio.engine.t:
    void createCombination(java.lang.String,java.lang.String,java.util.List,com.dkhs.portfolio.net.IHttpListener) -> a
    void deleteCombination(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void updateCombination(java.lang.String,java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void adjustCombination(java.lang.String,java.util.List,com.dkhs.portfolio.net.IHttpListener) -> a
    void queryCombinationDetail(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
    void queryCombinationDetailByDay(java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void changeCombinationIsPublic(java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
    void setCombinationRank(java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> c
    void getCombinationPortfolio(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> c
    void portfolioRemind(java.lang.String,float,float,float,boolean,com.dkhs.portfolio.net.IHttpListener) -> a
com.dkhs.portfolio.engine.NetValueEngine -> com.dkhs.portfolio.engine.u:
    java.lang.String mConbinationId -> a
    void requerySevenDay(com.dkhs.portfolio.net.IHttpListener) -> a
    void requeryOneMonth(com.dkhs.portfolio.net.IHttpListener) -> b
    void requeryHistory(com.dkhs.portfolio.net.IHttpListener) -> c
    com.lidroid.xutils.http.HttpHandler requeryHistory(int,int,com.dkhs.portfolio.net.IHttpListener) -> a
    com.lidroid.xutils.http.HttpHandler requeryHistoryDetailPosition(int,int,com.dkhs.portfolio.net.IHttpListener) -> b
    com.lidroid.xutils.http.HttpHandler requeryDay(java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void requeryNetValue(java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
    void requeryToday(com.dkhs.portfolio.net.IHttpListener) -> d
com.dkhs.portfolio.engine.NetValueReportEngine -> com.dkhs.portfolio.engine.v:
    java.lang.String mConbinationId -> a
    void requerySevenDayReport() -> c
    void requeryMonthReport() -> i
    void requeryHistoryReport(int) -> f
    void requeryReport(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> c
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.NetValueReportEngine$1 -> com.dkhs.portfolio.engine.w:
    com.dkhs.portfolio.engine.NetValueReportEngine this$0 -> a
com.dkhs.portfolio.engine.NewsTextEngineImple -> com.dkhs.portfolio.engine.x:
    java.lang.String id -> a
    void loadData() -> a
    com.dkhs.portfolio.bean.OptionNewsBean parseDateTask(java.lang.String) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.NewsforModel -> com.dkhs.portfolio.engine.NewsforModel:
    java.lang.String symbolId -> symbolId
    java.lang.String symbol -> symbol
    java.lang.String userid -> userid
    java.lang.String portfolioId -> portfolioId
    java.lang.String contentType -> contentType
    java.lang.String contentSubType -> contentSubType
    java.lang.String page -> page
    java.lang.String pageSize -> pageSize
    java.lang.String pageTitle -> pageTitle
    java.lang.String getPageTitle() -> getPageTitle
    void setPageTitle(java.lang.String) -> setPageTitle
    java.lang.String getSymbolId() -> getSymbolId
    void setSymbolId(java.lang.String) -> setSymbolId
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    java.lang.String getUserid() -> getUserid
    void setUserid(java.lang.String) -> setUserid
    java.lang.String getPortfolioId() -> getPortfolioId
    void setPortfolioId(java.lang.String) -> setPortfolioId
    java.lang.String getContentType() -> getContentType
    void setContentType(java.lang.String) -> setContentType
    java.lang.String getContentSubType() -> getContentSubType
    void setContentSubType(java.lang.String) -> setContentSubType
    java.lang.String getPage() -> getPage
    void setPage(java.lang.String) -> setPage
    java.lang.String getPageSize() -> getPageSize
    void setPageSize(java.lang.String) -> setPageSize
com.dkhs.portfolio.engine.NewsforModel$$Parcelable -> com.dkhs.portfolio.engine.NewsforModel$$Parcelable:
    com.dkhs.portfolio.engine.NewsforModel newsforModel$$0 -> newsforModel$$0
    com.dkhs.portfolio.engine.NewsforModel$$Parcelable$Creator$$12 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.engine.NewsforModel readcom_dkhs_portfolio_engine_NewsforModel(android.os.Parcel) -> readcom_dkhs_portfolio_engine_NewsforModel
    void writecom_dkhs_portfolio_engine_NewsforModel(com.dkhs.portfolio.engine.NewsforModel,android.os.Parcel,int) -> writecom_dkhs_portfolio_engine_NewsforModel
    int describeContents() -> describeContents
    com.dkhs.portfolio.engine.NewsforModel getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.engine.NewsforModel$$Parcelable$1 -> com.dkhs.portfolio.engine.NewsforModel$$Parcelable$1:
com.dkhs.portfolio.engine.NewsforModel$$Parcelable$Creator$$12 -> com.dkhs.portfolio.engine.NewsforModel$$Parcelable$a:
    com.dkhs.portfolio.engine.NewsforModel$$Parcelable createFromParcel(android.os.Parcel) -> a
    com.dkhs.portfolio.engine.NewsforModel$$Parcelable[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.engine.OpitionCenterStockEngineImple -> com.dkhs.portfolio.engine.y:
    java.lang.String orderType -> a
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType mStockType -> b
    java.lang.String mSectorId -> c
    int mPageSize -> d
    int mPageIndex -> e
    java.lang.String symboltype -> f
    java.lang.String exchange -> g
    java.lang.String symbol_stype -> h
    java.lang.String list_sector -> i
    void getOrderType(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.lidroid.xutils.http.HttpHandler loadByPage(int) -> f
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.OpitionCenterStockEngineImple$1 -> com.dkhs.portfolio.engine.z:
    com.dkhs.portfolio.engine.OpitionCenterStockEngineImple this$0 -> a
com.dkhs.portfolio.engine.OpitionCenterStockEngineImple$2 -> com.dkhs.portfolio.engine.y$1:
    int[] $SwitchMap$com$dkhs$portfolio$ui$fragment$FragmentSelectStockFund$StockViewType -> a
com.dkhs.portfolio.engine.OpitionNewsEngineImple -> com.dkhs.portfolio.engine.aa:
    int orderType -> a
    com.dkhs.portfolio.engine.NewsforModel vo -> b
    void loadMore() -> a
    void loadData() -> b
    void loadDatas() -> e
    java.util.List parseDateTask(java.lang.String) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.OptionalFundsEngineImpl -> com.dkhs.portfolio.engine.ab:
    java.lang.String mUserId -> a
    java.lang.String orderType -> b
    boolean isLoading -> c
    void setLoadType(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> c
    void onFailure(int,java.lang.String) -> onFailure
    com.lidroid.xutils.http.HttpHandler setIndex(com.dkhs.portfolio.net.ParseHttpListener,java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.OptionalFundsEngineImpl$1 -> com.dkhs.portfolio.engine.ac:
    com.dkhs.portfolio.engine.OptionalFundsEngineImpl this$0 -> a
com.dkhs.portfolio.engine.OptionalStockEngineImpl -> com.dkhs.portfolio.engine.ad:
    java.lang.String mUserId -> a
    boolean isShowIndex -> b
    java.lang.String orderType -> c
    boolean isLoading -> d
    void setLoadType(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> c
    void onFailure(int,java.lang.String) -> onFailure
    com.lidroid.xutils.http.HttpHandler setIndex(com.dkhs.portfolio.net.ParseHttpListener,java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler loadAllData(com.dkhs.portfolio.net.IHttpListener) -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.OptionalStockEngineImpl$1 -> com.dkhs.portfolio.engine.ae:
    com.dkhs.portfolio.engine.OptionalStockEngineImpl this$0 -> a
com.dkhs.portfolio.engine.PeopleEngineImpl -> com.dkhs.portfolio.engine.af:
    int page -> a
    com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE type -> b
    java.lang.String userId -> c
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.PeopleEngineImpl$1 -> com.dkhs.portfolio.engine.ag:
    com.dkhs.portfolio.engine.PeopleEngineImpl this$0 -> a
com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE -> com.dkhs.portfolio.engine.af$a:
    com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE FRIENDS -> a
    com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE FOLLOWERS -> b
    java.lang.String url -> c
    com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE[] $VALUES -> d
    com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE[] values() -> values
    com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE valueOf(java.lang.String) -> valueOf
    java.lang.String getUrl() -> a
com.dkhs.portfolio.engine.PlateLoadMoreEngineImpl -> com.dkhs.portfolio.engine.ah:
    java.lang.String mOrderType -> a
    int mpageSize -> b
    int pageSize -> c
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.PlateLoadMoreEngineImpl$1 -> com.dkhs.portfolio.engine.ai:
    com.dkhs.portfolio.engine.PlateLoadMoreEngineImpl this$0 -> a
com.dkhs.portfolio.engine.QuetosStockEngineImple -> com.dkhs.portfolio.engine.aj:
    java.lang.String orderType -> a
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.QuetosStockEngineImple$1 -> com.dkhs.portfolio.engine.ak:
    com.dkhs.portfolio.engine.QuetosStockEngineImple this$0 -> a
com.dkhs.portfolio.engine.QuotesEngineImpl -> com.dkhs.portfolio.engine.al:
    void quotes(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void quotesNotTip(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
    void symbolfollow(long,com.dkhs.portfolio.net.IHttpListener) -> a
    void symbolFollows(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> c
    void delfollow(long,com.dkhs.portfolio.net.IHttpListener) -> b
    void queryTimeShare(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> d
    void queryMoreTimeShare(java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void stockRemind(java.lang.String,float,float,float,boolean,boolean,com.dkhs.portfolio.net.IHttpListener) -> a
    void fundRemind7Day(java.lang.String,boolean,com.dkhs.portfolio.net.IHttpListener) -> a
    void fundRemindNetvalue(java.lang.String,boolean,com.dkhs.portfolio.net.IHttpListener) -> b
    void queryKLine(java.lang.String,java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener,java.lang.String) -> a
    void queryKLine(java.lang.String,java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener,java.lang.String,int) -> a
com.dkhs.portfolio.engine.SearchStockEngineImpl -> com.dkhs.portfolio.engine.am:
    com.dkhs.portfolio.net.ParseHttpListener stockProfiListener -> a
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener iLoadListener -> b
    void loadStockList() -> a
    void searchStock(java.lang.String) -> a
    void searchFunds(java.lang.String) -> b
    void searchStockIndexFunds(java.lang.String) -> c
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener access$000(com.dkhs.portfolio.engine.SearchStockEngineImpl) -> a
com.dkhs.portfolio.engine.SearchStockEngineImpl$1 -> com.dkhs.portfolio.engine.an:
    java.lang.String parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.String) -> c
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.SearchStockEngineImpl$2 -> com.dkhs.portfolio.engine.ao:
    java.lang.String val$key -> a
    com.dkhs.portfolio.engine.SearchStockEngineImpl this$0 -> b
    void run() -> run
com.dkhs.portfolio.engine.SearchStockEngineImpl$3 -> com.dkhs.portfolio.engine.ap:
    java.lang.String val$key -> a
    com.dkhs.portfolio.engine.SearchStockEngineImpl this$0 -> b
    void run() -> run
com.dkhs.portfolio.engine.SearchStockEngineImpl$4 -> com.dkhs.portfolio.engine.aq:
    java.lang.String val$key -> a
    com.dkhs.portfolio.engine.SearchStockEngineImpl this$0 -> b
    void run() -> run
com.dkhs.portfolio.engine.SymbolsEngine -> com.dkhs.portfolio.engine.ar:
    void getFundManagerInfo(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
com.dkhs.portfolio.engine.UserCombinationEngineImpl -> com.dkhs.portfolio.engine.as:
    java.lang.String userId -> a
    java.lang.String orderType -> b
    com.lidroid.xutils.http.HttpHandler loadMore() -> a
    com.lidroid.xutils.http.HttpHandler loadAllData() -> c
    com.lidroid.xutils.http.HttpHandler loadData() -> b
    com.dkhs.portfolio.bean.MoreDataBean parseDateTask(java.lang.String) -> a
    com.lidroid.xutils.http.HttpHandler refreshDatabySize(int) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.engine.UserCombinationEngineImpl$1 -> com.dkhs.portfolio.engine.at:
    com.dkhs.portfolio.engine.UserCombinationEngineImpl this$0 -> a
com.dkhs.portfolio.engine.UserEngineImpl -> com.dkhs.portfolio.engine.au:
    void login(java.lang.String,java.lang.String,int,com.dkhs.portfolio.net.ParseHttpListener) -> a
    void setPassword(java.lang.String,java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void changePassword(java.lang.String,java.lang.String,com.dkhs.portfolio.net.ParseHttpListener) -> a
    void isSetPassword(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void getVericode(java.lang.String,com.dkhs.portfolio.net.ParseHttpListener) -> a
    void register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dkhs.portfolio.net.ParseHttpListener) -> a
    void registerThreePlatform(java.lang.String,java.lang.String,java.lang.String,com.dkhs.portfolio.bean.ThreePlatform,com.dkhs.portfolio.net.ParseHttpListener) -> a
    void bindThreePlatform(java.lang.String,java.lang.String,com.dkhs.portfolio.bean.ThreePlatform,com.dkhs.portfolio.net.BasicHttpListener) -> a
    void queryThreePlatBind(com.dkhs.portfolio.net.BasicHttpListener) -> a
    void checkMobile(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> b
    void checkVericode(java.lang.String,java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    void boundEmail(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> c
    void setUserName(java.lang.String,com.dkhs.portfolio.net.ParseHttpListener) -> b
    void saveLoginUserInfo(com.dkhs.portfolio.bean.UserEntity) -> a
    void saveUser(com.dkhs.portfolio.bean.UserEntity) -> b
    void setUserHead(java.io.File,com.dkhs.portfolio.net.ParseHttpListener) -> a
    void getSettingMessage(com.dkhs.portfolio.net.ParseHttpListener) -> a
    void setSettingMessage(java.lang.String,com.dkhs.portfolio.net.ParseHttpListener) -> c
    void getBaseUserInfo(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> d
    void getAppVersion(java.lang.String,com.dkhs.portfolio.net.ParseHttpListener) -> d
    void setFeedBack(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.File,com.dkhs.portfolio.net.ParseHttpListener) -> a
    void bindMobile(java.lang.String,java.lang.String,com.dkhs.portfolio.net.BasicHttpListener) -> a
    void getToken(java.lang.String,java.lang.String,java.lang.String,com.dkhs.portfolio.net.BasicHttpListener) -> a
    com.dkhs.portfolio.bean.UserEntity getUserEntity() -> a
    void follow(java.lang.String,com.dkhs.portfolio.net.BasicHttpListener) -> a
    void unfollow(java.lang.String,com.dkhs.portfolio.net.BasicHttpListener) -> b
    void getUserInfo(java.lang.String,com.dkhs.portfolio.net.BasicHttpListener) -> c
com.dkhs.portfolio.engine.UserEngineImpl$1 -> com.dkhs.portfolio.engine.av:
    com.dkhs.portfolio.bean.UserEntity val$user -> a
    com.dkhs.portfolio.engine.UserEngineImpl this$0 -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dkhs.portfolio.engine.VisitorDataEngine -> com.dkhs.portfolio.engine.aw:
    void saveOptionalStock(com.dkhs.portfolio.bean.SelectStockBean) -> a
    void saveCombination(com.dkhs.portfolio.bean.CombinationBean) -> a
    void replaceOptionStock(java.util.List) -> a
    void replaceCombination(java.util.List) -> b
    java.util.List getOptionalStockList() -> a
    java.util.List getOptionalFundList() -> b
    java.util.List getOptionalStockListBySort() -> c
    java.util.List getOptionalFundsSort() -> d
    void delCombinationBean(com.dkhs.portfolio.bean.CombinationBean) -> b
    void delOptionalStock(com.dkhs.portfolio.bean.SelectStockBean) -> b
    void delAllOptionalStock() -> e
    void delAllCombinationBean() -> f
    com.dkhs.portfolio.bean.CombinationBean queryCombination(java.lang.String) -> a
    java.util.List getCombinationBySort() -> g
    java.lang.String getStockSymbols() -> h
    boolean uploadUserFollowStock(com.dkhs.portfolio.net.IHttpListener) -> a
    boolean uploadUserFollowCombination(com.dkhs.portfolio.net.IHttpListener) -> b
com.dkhs.portfolio.engine.VisitorDataEngine$1 -> com.dkhs.portfolio.engine.ax:
    com.dkhs.portfolio.bean.SelectStockBean val$stockbean -> a
    com.dkhs.portfolio.engine.VisitorDataEngine this$0 -> b
    void run() -> run
com.dkhs.portfolio.engine.VisitorDataEngine$2 -> com.dkhs.portfolio.engine.ay:
    com.dkhs.portfolio.bean.CombinationBean val$combean -> a
    com.dkhs.portfolio.engine.VisitorDataEngine this$0 -> b
    void run() -> run
com.dkhs.portfolio.net.BasicHttpListener -> com.dkhs.portfolio.c.a:
    boolean isStop -> isStop
    boolean fromYanbao -> fromYanbao
    java.lang.String KEY_ERROR -> KEY_ERROR
    void beforeRequest() -> beforeRequest
    void requestCallBack() -> requestCallBack
    boolean isStopRequest() -> isStopRequest
    void stopRequest(boolean) -> stopRequest
    void onHttpSuccess(java.lang.String) -> onHttpSuccess
    void onHttpFailure(int,java.lang.String) -> onHttpFailure
    void onHttpFailure(int,java.lang.Throwable) -> onHttpFailure
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.net.ErrorBundle parseToErrorBundle(java.lang.String) -> parseToErrorBundle
    boolean showDialogIfIsTokenCode(int) -> showDialogIfIsTokenCode
    boolean isFromYanbao() -> isFromYanbao
    void setFromYanbao(boolean) -> setFromYanbao
com.dkhs.portfolio.net.CacheHelper -> com.dkhs.portfolio.c.b:
    java.lang.String mQueryUrl -> a
    boolean isCacheUrl -> b
    void isCacheUrl(java.lang.String) -> a
    void queryURLStore(java.lang.String,com.dkhs.portfolio.net.IHttpListener) -> a
    java.lang.String getQueryUrl(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams) -> a
    void storeURLResponse(java.lang.String,java.lang.String) -> a
    boolean isCacheUrl() -> a
    java.lang.String access$000(com.dkhs.portfolio.net.CacheHelper) -> a
com.dkhs.portfolio.net.CacheHelper$1 -> com.dkhs.portfolio.c.c:
    java.lang.String val$autho -> a
    com.dkhs.portfolio.net.IHttpListener val$listener -> b
    com.dkhs.portfolio.net.CacheHelper this$0 -> c
    void run() -> run
com.dkhs.portfolio.net.CacheHelper$2 -> com.dkhs.portfolio.c.d:
    java.lang.String val$autho -> a
    java.lang.String val$repsonJson -> b
    com.dkhs.portfolio.net.CacheHelper this$0 -> c
    void run() -> run
com.dkhs.portfolio.net.DKHSClient -> com.dkhs.portfolio.c.e:
    com.lidroid.xutils.http.HttpHandler request(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener) -> a
    void requestSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener) -> b
    com.lidroid.xutils.http.HttpHandler request(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener,boolean) -> a
    com.lidroid.xutils.http.HttpHandler requestNotTip(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener) -> c
    com.lidroid.xutils.http.HttpHandler requestLong(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener) -> d
    com.lidroid.xutils.http.HttpHandler requestServer(com.lidroid.xutils.HttpUtils,com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener,boolean) -> a
    void requestSyncServer(com.lidroid.xutils.HttpUtils,com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener,boolean) -> b
    com.lidroid.xutils.http.HttpHandler requestByPost(java.lang.String,com.lidroid.xutils.http.RequestParams,com.dkhs.portfolio.net.IHttpListener) -> a
    com.lidroid.xutils.http.HttpHandler requestByGet(java.lang.String,java.lang.String[],com.dkhs.portfolio.net.IHttpListener) -> a
    com.lidroid.xutils.http.HttpHandler requestByGet(java.lang.String,java.lang.String[],com.dkhs.portfolio.net.IHttpListener,boolean) -> a
    com.lidroid.xutils.http.HttpHandler requestByGet(com.dkhs.portfolio.net.IHttpListener,java.lang.String,java.lang.Object[]) -> a
    com.lidroid.xutils.http.HttpHandler requestByGet(java.lang.String,java.lang.String[],java.util.List,com.dkhs.portfolio.net.IHttpListener) -> a
    com.lidroid.xutils.http.HttpHandler requestByGet(java.lang.String,java.lang.String[],java.util.List,com.dkhs.portfolio.net.IHttpListener,boolean) -> a
    java.lang.String getAbsoluteUrl(java.lang.String) -> a
com.dkhs.portfolio.net.DKHSClient$1 -> com.dkhs.portfolio.c.f:
    com.dkhs.portfolio.net.IHttpListener val$listener -> a
    com.dkhs.portfolio.net.CacheHelper val$cacheHelper -> b
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.dkhs.portfolio.net.DKHSUrl -> com.dkhs.portfolio.c.g:
    java.lang.String[] storeURLList -> a
com.dkhs.portfolio.net.DataParse -> com.dkhs.portfolio.c.h:
    java.lang.String objectToJson(java.lang.Object) -> a
    java.util.List parseArrayJson(java.lang.Class,org.json.JSONObject,java.lang.String) -> a
    java.util.List parseArrayJson(java.lang.Class,org.json.JSONArray) -> a
    java.util.List parseArrayJson(java.lang.Class,java.lang.String) -> a
    java.lang.Object parseObjectJson(java.lang.Class,org.json.JSONObject) -> a
    java.lang.Object parseObjectJson(java.lang.Class,java.lang.String) -> b
com.dkhs.portfolio.net.ErrorBundle -> com.dkhs.portfolio.c.i:
    java.lang.String errorMessage -> a
    void setErrorMessage(java.lang.String) -> a
com.dkhs.portfolio.net.IHttpListener -> com.dkhs.portfolio.c.j:
    void beforeRequest() -> beforeRequest
    void requestCallBack() -> requestCallBack
    boolean isStopRequest() -> isStopRequest
    void onHttpSuccess(java.lang.String) -> onHttpSuccess
    void onHttpFailure(int,java.lang.String) -> onHttpFailure
    void onHttpFailure(int,java.lang.Throwable) -> onHttpFailure
com.dkhs.portfolio.net.ParseHttpListener -> com.dkhs.portfolio.c.k:
    android.content.Context mContext -> a
    java.lang.String msg -> b
    boolean isHideDialog -> c
    android.os.Looper mServiceLooper -> d
    com.dkhs.portfolio.net.ParseHttpListener$ServiceHandler mServiceHandler -> e
    com.dkhs.portfolio.net.ParseHttpListener$ServiceHandler mMainHandler -> f
    com.dkhs.portfolio.net.ParseHttpListener setLoadingDialog(android.content.Context,java.lang.String) -> a
    com.dkhs.portfolio.net.ParseHttpListener setLoadingDialog(android.content.Context,java.lang.String,boolean) -> a
    com.dkhs.portfolio.net.ParseHttpListener setLoadingDialog(android.content.Context) -> a
    com.dkhs.portfolio.net.ParseHttpListener setLoadingDialog(android.content.Context,boolean) -> a
    com.dkhs.portfolio.net.ParseHttpListener cancelLoadingDialog() -> j
    void beforeRequest() -> beforeRequest
    void requestCallBack() -> requestCallBack
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void beginParseDate(java.lang.String) -> d
    void notifyDateParse(java.lang.Object) -> b
    void stopSelf() -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
    void access$000(com.dkhs.portfolio.net.ParseHttpListener,java.lang.Object) -> a
    void access$100(com.dkhs.portfolio.net.ParseHttpListener) -> a
com.dkhs.portfolio.net.ParseHttpListener$ServiceHandler -> com.dkhs.portfolio.c.k$a:
    com.dkhs.portfolio.net.ParseHttpListener this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.net.StringDecodeUtil -> com.dkhs.portfolio.c.l:
    java.lang.String fromUnicode(java.lang.String) -> a
com.dkhs.portfolio.receiver.CompleteReceiver -> com.dkhs.portfolio.receiver.CompleteReceiver:
    android.app.DownloadManager downloadManager -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dkhs.portfolio.receiver.MessageNotificationClickReceiver -> com.dkhs.portfolio.receiver.MessageNotificationClickReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dkhs.portfolio.receiver.NetChangeReceiver -> com.dkhs.portfolio.receiver.NetChangeReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.dkhs.portfolio.receiver.SMSBroadcastReceiver -> com.dkhs.portfolio.receiver.SMSBroadcastReceiver:
    com.dkhs.portfolio.receiver.SMSBroadcastReceiver$MessageListener mMessageListener -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void setOnReceivedMessageListener(com.dkhs.portfolio.receiver.SMSBroadcastReceiver$MessageListener) -> a
com.dkhs.portfolio.receiver.SMSBroadcastReceiver$MessageListener -> com.dkhs.portfolio.receiver.SMSBroadcastReceiver$a:
    void onReceived(java.lang.String) -> a
com.dkhs.portfolio.service.LoadStockToDBService -> com.dkhs.portfolio.service.LoadStockToDBService:
    void downLoadStockPofile() -> a
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.dkhs.portfolio.service.ReLoadDataService -> com.dkhs.portfolio.service.ReLoadDataService:
    int repeatTime -> a
    boolean isLoadData -> b
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onHandleIntent(android.content.Intent) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean access$002(com.dkhs.portfolio.service.ReLoadDataService,boolean) -> a
com.dkhs.portfolio.service.ReLoadDataService$1 -> com.dkhs.portfolio.service.a:
    com.dkhs.portfolio.service.ReLoadDataService this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.AboutUsActivity -> com.dkhs.portfolio.ui.AboutUsActivity:
    android.widget.TextView aboutVersion -> a
    android.content.Context context -> b
    java.lang.String mPageName -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.AbstractKChartView -> com.dkhs.portfolio.ui.AbstractKChartView:
    java.lang.Integer mViewType -> a
    java.lang.String mStockCode -> b
    java.lang.String symbolType -> c
    com.dkhs.portfolio.engine.QuotesEngineImpl mQuotesDataEngine -> d
    com.dkhs.portfolio.ui.widget.KChartDataListener mKChartDataListener -> e
    android.os.Bundle getBundle(java.lang.Integer,java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleArguments(android.os.Bundle) -> a
    java.lang.String getKLineType() -> a
    java.util.List getViewTypeData() -> b
    void setViewTypeData(java.util.List) -> a
    com.dkhs.portfolio.ui.widget.KChartDataListener getKChartDataListener() -> c
    void setKChartDataListener(com.dkhs.portfolio.ui.widget.KChartDataListener) -> a
    java.lang.Integer getViewType() -> d
    java.lang.String getStockCode() -> e
    java.lang.String getSymbolType() -> f
    com.dkhs.portfolio.engine.QuotesEngineImpl getQuotesDataEngine() -> g
    void setQuotesDataEngine(com.dkhs.portfolio.engine.QuotesEngineImpl) -> a
    void setViewVisible(boolean) -> a
com.dkhs.portfolio.ui.AgreementTextActivity -> com.dkhs.portfolio.ui.AgreementTextActivity:
    android.webkit.WebView agreement_webview_web -> a
    android.content.Context context -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    android.webkit.WebView access$000(com.dkhs.portfolio.ui.AgreementTextActivity) -> a
    android.content.Context access$100(com.dkhs.portfolio.ui.AgreementTextActivity) -> b
com.dkhs.portfolio.ui.AgreementTextActivity$1 -> com.dkhs.portfolio.ui.a:
    com.dkhs.portfolio.ui.AgreementTextActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.dkhs.portfolio.ui.BaseActivity -> com.dkhs.portfolio.ui.BaseActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean isShouldHideInput(android.view.View,android.view.MotionEvent) -> a
    void hideSoftInput(android.os.IBinder) -> a
com.dkhs.portfolio.ui.BaseSelectActivity -> com.dkhs.portfolio.ui.BaseSelectActivity:
    android.widget.GridView mSelctStockView -> k
    com.dkhs.portfolio.ui.adapter.SelectFundAdapter mSelectStockAdapter -> l
    android.widget.Button btnAdd -> m
    java.util.ArrayList fragmentList -> a
    android.widget.EditText etSearchKey -> n
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund mSearchFragment -> o
    android.view.View mStockPageView -> p
    android.view.View mSearchListView -> q
    android.widget.Button btnOrder -> r
    boolean isAdjustCombination -> s
    com.dkhs.portfolio.ui.widget.TextImageButton btnBack -> t
    java.util.List mSelectList -> b
    java.lang.String fromCreate -> c
    boolean isFrist -> u
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitle -> v
    android.support.v4.view.ViewPager pager -> w
    android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener -> d
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener titleSelectPostion -> e
    android.text.TextWatcher mTextWatcher -> f
    android.view.View mSearchStock -> x
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void setupViewData() -> k
    void initView() -> l
    android.widget.Button getOrderButton() -> a
    void replaceSearchView() -> m
    void initTabPage() -> n
    void showPageView() -> o
    void showSearchListView(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void notifySelectDataChange(boolean) -> a
    void setSelectBack(int) -> a
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType getLoadByType() -> b
    int getTitleRes() -> c
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund getSearchFragment() -> d
    void setTabViewPage(java.util.List) -> a
    com.dkhs.portfolio.ui.widget.HScrollTitleView access$000(com.dkhs.portfolio.ui.BaseSelectActivity) -> a
    android.support.v4.view.ViewPager access$100(com.dkhs.portfolio.ui.BaseSelectActivity) -> b
    void access$200(com.dkhs.portfolio.ui.BaseSelectActivity) -> c
    void access$300(com.dkhs.portfolio.ui.BaseSelectActivity,java.lang.String) -> a
    android.widget.EditText access$400(com.dkhs.portfolio.ui.BaseSelectActivity) -> d
com.dkhs.portfolio.ui.BaseSelectActivity$1 -> com.dkhs.portfolio.ui.b:
    com.dkhs.portfolio.ui.BaseSelectActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.dkhs.portfolio.ui.BaseSelectActivity$2 -> com.dkhs.portfolio.ui.c:
    com.dkhs.portfolio.ui.BaseSelectActivity this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.BaseSelectActivity$3 -> com.dkhs.portfolio.ui.d:
    com.dkhs.portfolio.ui.BaseSelectActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType -> com.dkhs.portfolio.ui.BaseSelectActivity$a:
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType FUND -> a
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType STOCK -> b
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType ADD_OPTIONAL -> c
    int typeId -> d
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType[] $VALUES -> e
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType[] values() -> values
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType valueOf(java.lang.String) -> valueOf
com.dkhs.portfolio.ui.BaseSelectActivity$OnBackListener -> com.dkhs.portfolio.ui.BaseSelectActivity$b:
    com.dkhs.portfolio.ui.BaseSelectActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.BaseSelectActivity$SelectPagerFragmentAdapter -> com.dkhs.portfolio.ui.BaseSelectActivity$c:
    java.util.List fragmentList -> b
    com.dkhs.portfolio.ui.BaseSelectActivity this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    int getCount() -> getCount
com.dkhs.portfolio.ui.BoundAccountActivity -> com.dkhs.portfolio.ui.BoundAccountActivity:
    android.widget.TextView boundTextEmail -> d
    android.widget.TextView boundTextQq -> e
    android.widget.TextView boundTextWeibo -> f
    android.widget.TextView boundTextPhone -> k
    android.widget.TextView boundTextWechat -> l
    cn.sharesdk.framework.PlatformActionListener platFormActionListener -> a
    android.os.Handler platFormAction -> b
    com.dkhs.portfolio.net.ParseHttpListener bindsListener -> m
    android.os.Handler updateHandler -> c
    java.lang.String mPageName -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initListener() -> b
    void onClick(android.view.View) -> onClick
    void authPlatform(java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPause() -> onPause
    void onResume() -> onResume
    com.dkhs.portfolio.net.ParseHttpListener access$000(com.dkhs.portfolio.ui.BoundAccountActivity) -> a
    android.widget.TextView access$100(com.dkhs.portfolio.ui.BoundAccountActivity) -> b
    android.widget.TextView access$200(com.dkhs.portfolio.ui.BoundAccountActivity) -> c
    android.widget.TextView access$300(com.dkhs.portfolio.ui.BoundAccountActivity) -> d
    android.widget.TextView access$400(com.dkhs.portfolio.ui.BoundAccountActivity) -> e
    android.widget.TextView access$500(com.dkhs.portfolio.ui.BoundAccountActivity) -> f
com.dkhs.portfolio.ui.BoundAccountActivity$1 -> com.dkhs.portfolio.ui.e:
    com.dkhs.portfolio.ui.BoundAccountActivity this$0 -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
com.dkhs.portfolio.ui.BoundAccountActivity$2 -> com.dkhs.portfolio.ui.f:
    com.dkhs.portfolio.ui.BoundAccountActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.BoundAccountActivity$3 -> com.dkhs.portfolio.ui.g:
    com.dkhs.portfolio.ui.BoundAccountActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.BoundAccountActivity$4 -> com.dkhs.portfolio.ui.h:
    com.dkhs.portfolio.ui.BoundAccountActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.BoundEmailActivity -> com.dkhs.portfolio.ui.BoundEmailActivity:
    android.widget.Button rlfbutton -> c
    android.widget.EditText etPhoneNum -> d
    android.widget.CheckBox cbAgree -> e
    boolean isLoginByCaptcha -> f
    java.util.Timer mTimer -> a
    boolean mobileAble -> k
    boolean codeAble -> l
    android.widget.TextView rltAgreement -> m
    java.lang.String phoneNumber -> n
    com.dkhs.portfolio.net.ParseHttpListener checkListener -> b
    com.dkhs.portfolio.net.ParseHttpListener listener -> o
    int count -> p
    java.lang.String telephone -> q
    int current_type -> r
    com.dkhs.portfolio.engine.UserEngineImpl engine -> s
    java.lang.String mPageName -> t
    void onCreate(android.os.Bundle) -> onCreate
    void showCaptchaLoginDailog() -> d
    void initData() -> a
    void setListener() -> b
    void setRegistAble() -> k
    void initViews() -> c
    void initLink() -> l
    void onClick(android.view.View) -> onClick
    boolean isValidPhoneNum() -> m
    void saveUser(com.dkhs.portfolio.bean.UserEntity) -> a
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.EditText access$000(com.dkhs.portfolio.ui.BoundEmailActivity) -> a
    boolean access$102(com.dkhs.portfolio.ui.BoundEmailActivity,boolean) -> a
    java.lang.String access$202(com.dkhs.portfolio.ui.BoundEmailActivity,java.lang.String) -> a
    boolean access$302(com.dkhs.portfolio.ui.BoundEmailActivity,boolean) -> b
    void access$400(com.dkhs.portfolio.ui.BoundEmailActivity) -> b
    void access$500(com.dkhs.portfolio.ui.BoundEmailActivity) -> c
    java.lang.String access$600(com.dkhs.portfolio.ui.BoundEmailActivity) -> d
    void access$700(com.dkhs.portfolio.ui.BoundEmailActivity,com.dkhs.portfolio.bean.UserEntity) -> a
    int access$800(com.dkhs.portfolio.ui.BoundEmailActivity) -> e
    boolean access$100(com.dkhs.portfolio.ui.BoundEmailActivity) -> f
com.dkhs.portfolio.ui.BoundEmailActivity$1 -> com.dkhs.portfolio.ui.i:
    android.app.AlertDialog val$dlg -> a
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.BoundEmailActivity$2 -> com.dkhs.portfolio.ui.j:
    android.app.AlertDialog val$dlg -> a
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.BoundEmailActivity$3 -> com.dkhs.portfolio.ui.k:
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.BoundEmailActivity$4 -> com.dkhs.portfolio.ui.l:
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.BoundEmailActivity$5 -> com.dkhs.portfolio.ui.m:
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.BoundEmailActivity$6 -> com.dkhs.portfolio.ui.n:
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> a
    void requestCallBack() -> requestCallBack
    java.lang.Boolean parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.Boolean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.BoundEmailActivity$7 -> com.dkhs.portfolio.ui.o:
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    void onHttpSuccess(java.lang.String) -> onHttpSuccess
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.BoundEmailActivity$8 -> com.dkhs.portfolio.ui.p:
    com.dkhs.portfolio.bean.UserEntity val$user -> a
    com.dkhs.portfolio.ui.BoundEmailActivity this$0 -> b
    void run() -> run
com.dkhs.portfolio.ui.ChangeCheckType -> com.dkhs.portfolio.ui.ChangeCheckType:
    android.content.Context context -> b
    java.lang.String CHECK_TYPE -> a
    java.lang.String checkValue -> c
    android.widget.TextView tvUnCheck -> d
    android.widget.TextView tvBeforeCheck -> e
    android.widget.TextView tvAfterCheck -> f
    java.lang.String mPageName -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setSelect() -> b
    void setListener() -> c
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.ChangeCheckType$1 -> com.dkhs.portfolio.ui.q:
    com.dkhs.portfolio.ui.ChangeCheckType this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.ChangeFollowCombView -> com.dkhs.portfolio.ui.r:
    android.content.Context mContext -> b
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> c
    com.dkhs.portfolio.net.ParseHttpListener followComListener -> a
    void changeFollow(com.dkhs.portfolio.bean.CombinationBean) -> a
    void followCombination() -> b
    void delFollowSuccess() -> c
    void addFollowSuccess() -> d
    void showDelDialog() -> a
    void access$000(com.dkhs.portfolio.ui.ChangeFollowCombView) -> a
    com.dkhs.portfolio.bean.CombinationBean access$100(com.dkhs.portfolio.ui.ChangeFollowCombView) -> b
    void access$200(com.dkhs.portfolio.ui.ChangeFollowCombView) -> c
    void access$300(com.dkhs.portfolio.ui.ChangeFollowCombView) -> d
com.dkhs.portfolio.ui.ChangeFollowCombView$1 -> com.dkhs.portfolio.ui.s:
    com.dkhs.portfolio.ui.ChangeFollowCombView this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.ChangeFollowCombView$2 -> com.dkhs.portfolio.ui.t:
    com.dkhs.portfolio.ui.ChangeFollowCombView this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.ChangeFollowCombView$3 -> com.dkhs.portfolio.ui.u:
    com.dkhs.portfolio.ui.ChangeFollowCombView this$0 -> a
    void requestCallBack() -> requestCallBack
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.CombinationDetailActivity -> com.dkhs.portfolio.ui.CombinationDetailActivity:
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> c
    boolean isMyCombination -> d
    int MENU_FOLLOW -> e
    int MENU_DELFOLLOW -> f
    int MENU_REMIND -> k
    int MENU_MORE -> l
    int MENU_ADJUST -> m
    int MENU_SHARE -> n
    int MENU_EDIT -> o
    int MENU_PRIVACY -> p
    int MENU_HISTORY_VALUE -> q
    int MENU_ABOUT -> r
    int REQUESTCODE_MODIFY_COMBINATION -> s
    com.dkhs.portfolio.ui.ChangeFollowCombView mChangeFollowCombView -> t
    com.dkhs.portfolio.ui.FloatingActionMenu localFloatingActionMenu -> a
    com.melnykov.fab.ObservableScrollView mScrollView -> u
    android.widget.TextView tvBottomTip -> v
    android.view.View yanbaoView -> w
    com.dkhs.portfolio.ui.FloatingActionMenu$OnMenuItemSelectedListener mFloatMenuSelectListner -> b
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend mFragmentTrend -> x
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.CombinationBean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void updataTitle() -> a
    void handleExtras(android.os.Bundle) -> b
    void initView() -> b
    void updateCombination(com.dkhs.portfolio.ui.eventbus.UpdateCombinationEvent) -> updateCombination
    void initFloatingActionMenu() -> c
    void replaceTrendView() -> d
    void replacePostionView() -> k
    void replaceCompareView() -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void updateComName(com.dkhs.portfolio.ui.eventbus.UpdateComDescEvent) -> updateComName
    void onDestroy() -> onDestroy
    com.dkhs.portfolio.bean.CombinationBean access$000(com.dkhs.portfolio.ui.CombinationDetailActivity) -> a
    com.dkhs.portfolio.ui.ChangeFollowCombView access$100(com.dkhs.portfolio.ui.CombinationDetailActivity) -> b
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend access$200(com.dkhs.portfolio.ui.CombinationDetailActivity) -> c
com.dkhs.portfolio.ui.CombinationDetailActivity$1 -> com.dkhs.portfolio.ui.v:
    com.dkhs.portfolio.ui.CombinationDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.CombinationDetailActivity$2 -> com.dkhs.portfolio.ui.w:
    com.dkhs.portfolio.ui.CombinationDetailActivity this$0 -> a
    boolean onMenuItemSelected(int) -> a
com.dkhs.portfolio.ui.CombinationNewsActivity -> com.dkhs.portfolio.ui.CombinationNewsActivity:
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.CombinationBean) -> a
    void onCreate(android.os.Bundle) -> onCreate
com.dkhs.portfolio.ui.CombinationUserActivity -> com.dkhs.portfolio.ui.CombinationUserActivity:
    int MENU_FOLLOW_OR_UNFOLLOWE -> e
    java.lang.String mUserId -> f
    java.lang.String mUserName -> k
    boolean isMyInfo -> l
    android.widget.ImageView ivHeader -> m
    android.widget.TextView tvUName -> n
    android.widget.TextView tvUserDesc -> o
    android.widget.TextView tvFollowers -> p
    android.widget.TextView tvFollowing -> q
    android.widget.TextView tvSymbols -> r
    android.content.Context context -> s
    com.dkhs.portfolio.bean.UserEntity userEntity -> t
    android.view.View llTool -> u
    android.view.View bgV -> v
    android.view.View combinationTitleLL -> w
    int headerTop -> x
    int headerLeft -> y
    int userNameTop -> z
    int userDescTop -> A
    int userNameLeft -> B
    int userDescLeft -> C
    android.widget.TextView symbolsPromptTV -> D
    com.dkhs.portfolio.ui.fragment.UserCombinationListFragment userCombinationListFragment -> E
    com.dkhs.portfolio.ui.FloatingActionMenu localFloatingActionMenu -> a
    float prePercent -> F
    com.dkhs.portfolio.engine.UserEngineImpl userEngine -> G
    com.dkhs.portfolio.net.ParseHttpListener userInfoListener -> b
    com.dkhs.portfolio.net.ParseHttpListener unfollowListener -> c
    com.dkhs.portfolio.net.ParseHttpListener followListener -> d
    android.content.Intent getIntent(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void startSettingActivity() -> a
    void handleExtras(android.os.Bundle) -> b
    void initViews() -> b
    void onResume() -> onResume
    void replaceCombinationListView() -> c
    void initData() -> d
    void updateUserView(com.dkhs.portfolio.bean.UserEntity) -> a
    void updateUserFolllowInfo(com.dkhs.portfolio.bean.UserEntity) -> b
    void handleNumber(android.widget.TextView,int) -> a
    void onClick(android.view.View) -> onClick
    void unFollowAction() -> k
    void followAction() -> l
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onScrollChanged(float) -> a
    void finish() -> finish
    void animHeader(float) -> b
    void access$000(com.dkhs.portfolio.ui.CombinationUserActivity) -> a
    com.dkhs.portfolio.bean.UserEntity access$100(com.dkhs.portfolio.ui.CombinationUserActivity) -> b
    void access$200(com.dkhs.portfolio.ui.CombinationUserActivity) -> c
    void access$300(com.dkhs.portfolio.ui.CombinationUserActivity) -> d
    void access$400(com.dkhs.portfolio.ui.CombinationUserActivity,com.dkhs.portfolio.bean.UserEntity) -> a
    android.widget.TextView access$500(com.dkhs.portfolio.ui.CombinationUserActivity) -> e
    int access$602(com.dkhs.portfolio.ui.CombinationUserActivity,int) -> a
    android.widget.TextView access$700(com.dkhs.portfolio.ui.CombinationUserActivity) -> f
    int access$802(com.dkhs.portfolio.ui.CombinationUserActivity,int) -> b
    android.content.Context access$900(com.dkhs.portfolio.ui.CombinationUserActivity) -> g
com.dkhs.portfolio.ui.CombinationUserActivity$1 -> com.dkhs.portfolio.ui.x:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.CombinationUserActivity$2 -> com.dkhs.portfolio.ui.y:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    boolean onMenuItemSelected(int) -> a
com.dkhs.portfolio.ui.CombinationUserActivity$3 -> com.dkhs.portfolio.ui.z:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.CombinationUserActivity$4 -> com.dkhs.portfolio.ui.aa:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.CombinationUserActivity$5 -> com.dkhs.portfolio.ui.ab:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.CombinationUserActivity$6 -> com.dkhs.portfolio.ui.ac:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.dkhs.portfolio.ui.CombinationUserActivity$7 -> com.dkhs.portfolio.ui.ad:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.dkhs.portfolio.ui.CombinationUserActivity$8 -> com.dkhs.portfolio.ui.ae:
    com.dkhs.portfolio.ui.CombinationUserActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.CompareFundsActivity -> com.dkhs.portfolio.ui.CompareFundsActivity:
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.CombinationBean) -> a
    void onCreate(android.os.Bundle) -> onCreate
com.dkhs.portfolio.ui.EditTabCombinationActivity -> com.dkhs.portfolio.ui.EditTabCombinationActivity:
    com.dkhs.portfolio.ui.draglist.DragListView optionEditList -> b
    com.dkhs.portfolio.ui.draglist.DragCombinationAdapter adapter -> c
    android.widget.Button btnRight -> d
    android.widget.LinearLayout layout -> e
    java.util.List mdateList -> f
    com.dkhs.portfolio.engine.FollowComListEngineImpl dataEngine -> k
    com.dkhs.portfolio.net.ParseHttpListener userInfoListener -> a
    android.content.Intent getIntent(android.content.Context) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void updateRemindValue(java.util.List) -> a
    void onResume() -> onResume
    void handleExtras(android.os.Bundle) -> b
    void initView() -> a
    void onClick(android.view.View) -> onClick
    void sortIndexToserver() -> b
    void access$000(com.dkhs.portfolio.ui.EditTabCombinationActivity,java.util.List) -> a
    com.dkhs.portfolio.ui.draglist.DragCombinationAdapter access$100(com.dkhs.portfolio.ui.EditTabCombinationActivity) -> a
com.dkhs.portfolio.ui.EditTabCombinationActivity$1 -> com.dkhs.portfolio.ui.af:
    com.dkhs.portfolio.ui.EditTabCombinationActivity this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.EditTabCombinationActivity$2 -> com.dkhs.portfolio.ui.ag:
    com.dkhs.portfolio.ui.EditTabCombinationActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.EditTabFundActivity -> com.dkhs.portfolio.ui.EditTabFundActivity:
    com.dkhs.portfolio.ui.draglist.DragListView optionEditList -> d
    com.dkhs.portfolio.engine.LoadMoreDataEngine mLoadDataEngine -> a
    com.dkhs.portfolio.ui.draglist.DragStockAdapter adapter -> e
    android.content.Context context -> f
    android.widget.Button btnRight -> k
    android.widget.LinearLayout layout -> l
    java.util.List mStockList -> m
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener mSelectStockBackListener -> b
    com.dkhs.portfolio.net.ParseHttpListener updateSortIndexListener -> c
    java.lang.String mPageName -> n
    boolean isFirstLoad -> o
    android.content.Intent newIntent(android.content.Context,java.util.List) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void initView() -> a
    void updateRemindValue(java.util.List) -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void access$000(com.dkhs.portfolio.ui.EditTabFundActivity,java.util.List) -> a
    com.dkhs.portfolio.ui.draglist.DragStockAdapter access$100(com.dkhs.portfolio.ui.EditTabFundActivity) -> a
    com.dkhs.portfolio.ui.draglist.DragListView access$200(com.dkhs.portfolio.ui.EditTabFundActivity) -> b
com.dkhs.portfolio.ui.EditTabFundActivity$1 -> com.dkhs.portfolio.ui.ah:
    com.dkhs.portfolio.ui.EditTabFundActivity this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.EditTabFundActivity$2 -> com.dkhs.portfolio.ui.ai:
    com.dkhs.portfolio.ui.EditTabFundActivity this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.EditTabFundActivity$OnListener -> com.dkhs.portfolio.ui.EditTabFundActivity$a:
    com.dkhs.portfolio.ui.EditTabFundActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.EditTabStockActivity -> com.dkhs.portfolio.ui.EditTabStockActivity:
    com.dkhs.portfolio.ui.draglist.DragListView optionEditList -> d
    com.dkhs.portfolio.engine.LoadMoreDataEngine mLoadDataEngine -> a
    com.dkhs.portfolio.ui.draglist.DragStockAdapter adapter -> e
    android.content.Context context -> f
    android.widget.Button btnRight -> k
    android.widget.LinearLayout layout -> l
    java.util.List mStockList -> m
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener mSelectStockBackListener -> b
    com.dkhs.portfolio.net.ParseHttpListener userInfoListener -> c
    java.lang.String mPageName -> n
    boolean isFirstLoad -> o
    android.content.Intent newIntent(android.content.Context,java.util.List) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void initView() -> a
    void updateRemindValue(java.util.List) -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void access$000(com.dkhs.portfolio.ui.EditTabStockActivity,java.util.List) -> a
    com.dkhs.portfolio.ui.draglist.DragStockAdapter access$100(com.dkhs.portfolio.ui.EditTabStockActivity) -> a
    com.dkhs.portfolio.ui.draglist.DragListView access$200(com.dkhs.portfolio.ui.EditTabStockActivity) -> b
com.dkhs.portfolio.ui.EditTabStockActivity$1 -> com.dkhs.portfolio.ui.aj:
    com.dkhs.portfolio.ui.EditTabStockActivity this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.EditTabStockActivity$2 -> com.dkhs.portfolio.ui.ak:
    com.dkhs.portfolio.ui.EditTabStockActivity this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.EditTabStockActivity$OnListener -> com.dkhs.portfolio.ui.EditTabStockActivity$a:
    com.dkhs.portfolio.ui.EditTabStockActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.EveryDayValueActivity -> com.dkhs.portfolio.ui.EveryDayValueActivity:
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> a
    com.dkhs.portfolio.ui.widget.PullToRefreshListView mListView -> b
    com.dkhs.portfolio.engine.NetValueEngine netValueEngine -> c
    int count -> d
    int page -> e
    int total_count -> f
    int total_page -> k
    java.util.List lists -> l
    com.dkhs.portfolio.ui.EveryDayValueActivity$MyAdapter adapter -> m
    com.dkhs.portfolio.ui.EveryDayValueActivity$MyIhttpListener listener -> n
    com.lidroid.xutils.http.HttpHandler mHttphandler -> o
    java.lang.String mPageName -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> b
    void initView() -> c
    void handleExtras(android.os.Bundle) -> b
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.CombinationBean) -> a
    void onLoadMore() -> a_
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    int access$202(com.dkhs.portfolio.ui.EveryDayValueActivity,int) -> a
    int access$302(com.dkhs.portfolio.ui.EveryDayValueActivity,int) -> b
    com.dkhs.portfolio.ui.widget.PullToRefreshListView access$400(com.dkhs.portfolio.ui.EveryDayValueActivity) -> a
    int access$500(com.dkhs.portfolio.ui.EveryDayValueActivity) -> b
    int access$300(com.dkhs.portfolio.ui.EveryDayValueActivity) -> c
    java.util.List access$600(com.dkhs.portfolio.ui.EveryDayValueActivity) -> d
    com.dkhs.portfolio.ui.EveryDayValueActivity$MyAdapter access$700(com.dkhs.portfolio.ui.EveryDayValueActivity) -> e
    int access$508(com.dkhs.portfolio.ui.EveryDayValueActivity) -> f
com.dkhs.portfolio.ui.EveryDayValueActivity$1 -> com.dkhs.portfolio.ui.EveryDayValueActivity$1:
com.dkhs.portfolio.ui.EveryDayValueActivity$MyAdapter -> com.dkhs.portfolio.ui.EveryDayValueActivity$a:
    com.dkhs.portfolio.ui.EveryDayValueActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.EveryDayValueActivity$MyAdapter$ViewHolder -> com.dkhs.portfolio.ui.EveryDayValueActivity$a$a:
    android.widget.TextView tv_date -> a
    android.widget.TextView tv_value -> b
    android.widget.TextView tv_percent -> c
    com.dkhs.portfolio.ui.EveryDayValueActivity$MyAdapter this$1 -> d
com.dkhs.portfolio.ui.EveryDayValueActivity$MyIhttpListener -> com.dkhs.portfolio.ui.EveryDayValueActivity$b:
    com.dkhs.portfolio.ui.EveryDayValueActivity this$0 -> a
    com.dkhs.portfolio.bean.HistoryProfitNetValue parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.HistoryProfitNetValue) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.FAQTextActivity -> com.dkhs.portfolio.ui.FAQTextActivity:
    android.webkit.WebView agreement_webview_web -> a
    android.content.Context context -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    android.webkit.WebView access$000(com.dkhs.portfolio.ui.FAQTextActivity) -> a
    android.content.Context access$100(com.dkhs.portfolio.ui.FAQTextActivity) -> b
com.dkhs.portfolio.ui.FAQTextActivity$1 -> com.dkhs.portfolio.ui.al:
    com.dkhs.portfolio.ui.FAQTextActivity this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.dkhs.portfolio.ui.FeedBackActivity -> com.dkhs.portfolio.ui.FeedBackActivity:
    com.dkhs.portfolio.ui.widget.TextImageButton btnCancle -> a
    android.widget.Button btnSave -> b
    android.widget.EditText feedEditText -> c
    android.widget.ImageView feedImageLoad -> d
    android.widget.EditText feedEditCom -> e
    java.io.File imageFile -> f
    android.content.Context context -> k
    boolean having -> l
    com.dkhs.portfolio.net.ParseHttpListener listener -> m
    java.lang.String mPageName -> n
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void initListener() -> c
    void setSign() -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.FeedBackActivity$1 -> com.dkhs.portfolio.ui.am:
    com.dkhs.portfolio.ui.FeedBackActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.FeedBackBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.FeedBackBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.FeedBackDialog -> com.dkhs.portfolio.ui.FeedBackDialog:
    boolean having -> a
    com.dkhs.portfolio.net.ParseHttpListener listener -> b
    java.lang.String mPageName -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setListener() -> b
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.FeedBackDialog$1 -> com.dkhs.portfolio.ui.an:
    com.dkhs.portfolio.ui.FeedBackDialog this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.FindPasswrodActivity -> com.dkhs.portfolio.ui.FindPasswrodActivity:
    android.widget.EditText phoneNumber -> a
    android.widget.EditText vericode -> b
    android.widget.Button code_receive -> c
    android.widget.Button next_step -> d
    android.widget.TextView textView -> e
    java.lang.String mPageName -> f
    void onCreate(android.os.Bundle) -> onCreate
    void setListener() -> a
    void initViews() -> b
    void onClick(android.view.View) -> onClick
    void nextStep() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.FloatingActionMenu -> com.dkhs.portfolio.ui.FloatingActionMenu:
    android.widget.LinearLayout containerView -> a
    com.dkhs.portfolio.ui.FloatingActionMenu$OnMenuItemSelectedListener menuItemSelectedListener -> b
    void addBorderInTop() -> d
    void addDivider() -> e
    android.view.View addItemView(int,java.lang.String,int,boolean) -> b
    void init() -> f
    void addItem(int,int,int) -> a
    void addItem(int,java.lang.String,int) -> a
    void removeAllItems() -> a
    void setOnMenuItemSelectedListener(com.dkhs.portfolio.ui.FloatingActionMenu$OnMenuItemSelectedListener) -> setOnMenuItemSelectedListener
    com.dkhs.portfolio.ui.FloatingActionMenu$MoreMenuItemBuilder addMoreItem(int,java.lang.String,int) -> b
    com.dkhs.portfolio.ui.FloatingActionMenu$MoreMenuItemBuilder addMoreItem(int,java.lang.String,int,boolean) -> a
    com.dkhs.portfolio.ui.FloatingActionMenu$OnMenuItemSelectedListener access$000(com.dkhs.portfolio.ui.FloatingActionMenu) -> a
com.dkhs.portfolio.ui.FloatingActionMenu$1 -> com.dkhs.portfolio.ui.ao:
    com.dkhs.portfolio.ui.FloatingActionMenu this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.FloatingActionMenu$2 -> com.dkhs.portfolio.ui.ap:
    android.widget.PopupWindow val$pw -> a
    com.dkhs.portfolio.ui.FloatingActionMenu$MoreMenuItemBuilder val$moreMenuItemBuilder -> b
    com.dkhs.portfolio.ui.FloatingActionMenu this$0 -> c
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.FloatingActionMenu$3 -> com.dkhs.portfolio.ui.aq:
    android.widget.PopupWindow val$pw -> a
    android.view.View val$moreView -> b
    com.dkhs.portfolio.ui.FloatingActionMenu this$0 -> c
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.FloatingActionMenu$MoreMenuItemBuilder -> com.dkhs.portfolio.ui.FloatingActionMenu$a:
    android.widget.ArrayAdapter adapter -> a
    android.util.SparseArray positionItemIdMap -> b
    com.dkhs.portfolio.ui.FloatingActionMenu$MoreMenuItemBuilder addItem(int,java.lang.String) -> a
    android.util.SparseArray access$100(com.dkhs.portfolio.ui.FloatingActionMenu$MoreMenuItemBuilder) -> a
com.dkhs.portfolio.ui.FloatingActionMenu$OnMenuItemSelectedListener -> com.dkhs.portfolio.ui.FloatingActionMenu$b:
    boolean onMenuItemSelected(int) -> a
com.dkhs.portfolio.ui.ForgetPswActivity -> com.dkhs.portfolio.ui.ForgetPswActivity:
    android.widget.Button btn_get_code -> b
    android.widget.Button rlfbutton -> c
    android.widget.EditText etVerifucode -> d
    android.widget.EditText etPhoneNum -> e
    java.util.Timer mTimer -> a
    com.dkhs.portfolio.engine.UserEngineImpl engine -> f
    com.dkhs.portfolio.receiver.SMSBroadcastReceiver mSMSBroadcastReceiver -> k
    int count -> l
    android.os.Handler handler -> m
    java.lang.String telephone -> n
    java.lang.String verifyCode -> o
    java.lang.String mPageName -> p
    void onCreate(android.os.Bundle) -> onCreate
    void checkPhoneRegister() -> a
    void getVerifyCode() -> b
    void timerTask() -> c
    void onClick(android.view.View) -> onClick
    boolean isValidPhoneNum() -> d
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.EditText access$000(com.dkhs.portfolio.ui.ForgetPswActivity) -> a
    android.widget.Button access$100(com.dkhs.portfolio.ui.ForgetPswActivity) -> b
    android.widget.Button access$200(com.dkhs.portfolio.ui.ForgetPswActivity) -> c
    android.widget.EditText access$300(com.dkhs.portfolio.ui.ForgetPswActivity) -> d
    void access$400(com.dkhs.portfolio.ui.ForgetPswActivity) -> e
    int access$500(com.dkhs.portfolio.ui.ForgetPswActivity) -> f
    android.os.Handler access$600(com.dkhs.portfolio.ui.ForgetPswActivity) -> g
    int access$508(com.dkhs.portfolio.ui.ForgetPswActivity) -> h
    int access$502(com.dkhs.portfolio.ui.ForgetPswActivity,int) -> a
    java.lang.String access$700(com.dkhs.portfolio.ui.ForgetPswActivity) -> i
    java.lang.String access$800(com.dkhs.portfolio.ui.ForgetPswActivity) -> j
com.dkhs.portfolio.ui.ForgetPswActivity$1 -> com.dkhs.portfolio.ui.ar:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    void onReceived(java.lang.String) -> a
com.dkhs.portfolio.ui.ForgetPswActivity$2 -> com.dkhs.portfolio.ui.as:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.ForgetPswActivity$3 -> com.dkhs.portfolio.ui.at:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.ForgetPswActivity$4 -> com.dkhs.portfolio.ui.au:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    java.lang.Boolean parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.Boolean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.ForgetPswActivity$5 -> com.dkhs.portfolio.ui.av:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.ForgetPswActivity$6 -> com.dkhs.portfolio.ui.aw:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.ForgetPswActivity$7 -> com.dkhs.portfolio.ui.ax:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.ForgetPswActivity$8 -> com.dkhs.portfolio.ui.ay:
    com.dkhs.portfolio.ui.ForgetPswActivity this$0 -> a
    java.lang.Boolean parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.Boolean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.FriendsOrFollowersActivity -> com.dkhs.portfolio.ui.FriendsOrFollowersActivity:
    android.widget.Button btnRefresh -> a
    com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment listFragment -> b
    void onCreate(android.os.Bundle) -> onCreate
    void rotateRefreshButton() -> a
    void stopRefreshAnimation() -> b
com.dkhs.portfolio.ui.FundDetailActivity -> com.dkhs.portfolio.ui.FundDetailActivity:
    com.dkhs.portfolio.bean.SelectStockBean mFundBean -> e
    com.dkhs.portfolio.bean.FundQuoteBean mFundQuoteBean -> a
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitleTab -> f
    android.view.ViewStub vsSepFundHeader -> k
    android.view.ViewStub vsNormalFundHeader -> l
    com.dkhs.portfolio.ui.FloatingActionMenu mFloatMenu -> m
    com.dkhs.portfolio.ui.widget.ScrollViewPager pager -> n
    android.widget.TextView tvWanshou -> o
    android.widget.TextView tvQirinianhua -> p
    android.widget.TextView tvNetvalue -> q
    android.widget.TextView tvUpPrice -> r
    android.widget.TextView tvUpPrecent -> s
    android.widget.TextView tvPreNetvalue -> t
    android.widget.TextView tvAllNetvalue -> u
    android.widget.Button btnRefresh -> v
    com.dkhs.portfolio.engine.QuotesEngineImpl mQuotesEngine -> w
    com.dkhs.portfolio.engine.VisitorDataEngine mVisitorDataEngine -> x
    java.util.List localList -> y
    java.util.ArrayList fragmentList -> z
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener titleSelectPostion -> b
    com.dkhs.portfolio.ui.fragment.FundManagerFragment mFragmentManager -> A
    com.dkhs.portfolio.ui.fragment.FundProfileFragment mFragmentProfile -> B
    int MENU_FOLLOW -> C
    int MENU_DELFOLLOW -> D
    int MENU_REMIND -> E
    int MENU_SHARE -> F
    com.dkhs.portfolio.ui.FloatingActionMenu$OnMenuItemSelectedListener mFloatMenuSelectListner -> c
    com.dkhs.portfolio.ui.widget.ChangeFollowView changeFollowView -> G
    com.dkhs.portfolio.ui.widget.ChangeFollowView$IChangeSuccessListener changeFollowListener -> H
    com.dkhs.portfolio.net.ParseHttpListener quoteListener -> d
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.SelectStockBean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void getLocalOptionList() -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void initTitle() -> b
    void updataTitle() -> c
    void initView() -> d
    void replaceTrendView() -> k
    void replaceManagerView() -> l
    void replaceFundProfile() -> m
    void onClick(android.view.View) -> onClick
    void handFollowOrUnfollowAction() -> n
    void initFloatingActionMenu(com.dkhs.portfolio.bean.QuotesBean) -> a
    void rotateRefreshButton() -> o
    void stopRefreshAnimation() -> p
    void requestData() -> q
    void setAddOptionalButton() -> r
    void updateFundView() -> s
    void updateNetValue() -> t
    java.util.List access$002(com.dkhs.portfolio.ui.FundDetailActivity,java.util.List) -> a
    com.dkhs.portfolio.engine.VisitorDataEngine access$100(com.dkhs.portfolio.ui.FundDetailActivity) -> a
    com.dkhs.portfolio.ui.widget.ScrollViewPager access$200(com.dkhs.portfolio.ui.FundDetailActivity) -> b
    void access$300(com.dkhs.portfolio.ui.FundDetailActivity) -> c
    com.dkhs.portfolio.bean.SelectStockBean access$400(com.dkhs.portfolio.ui.FundDetailActivity) -> d
    java.util.List access$000(com.dkhs.portfolio.ui.FundDetailActivity) -> e
    void access$500(com.dkhs.portfolio.ui.FundDetailActivity) -> f
    void access$600(com.dkhs.portfolio.ui.FundDetailActivity) -> g
    void access$700(com.dkhs.portfolio.ui.FundDetailActivity) -> h
    void access$800(com.dkhs.portfolio.ui.FundDetailActivity) -> i
com.dkhs.portfolio.ui.FundDetailActivity$1 -> com.dkhs.portfolio.ui.az:
    com.dkhs.portfolio.ui.FundDetailActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.FundDetailActivity$2 -> com.dkhs.portfolio.ui.ba:
    com.dkhs.portfolio.ui.FundDetailActivity this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.FundDetailActivity$3 -> com.dkhs.portfolio.ui.bb:
    com.dkhs.portfolio.ui.FundDetailActivity this$0 -> a
    boolean onMenuItemSelected(int) -> a
com.dkhs.portfolio.ui.FundDetailActivity$4 -> com.dkhs.portfolio.ui.bc:
    com.dkhs.portfolio.ui.FundDetailActivity this$0 -> a
    void onChange(com.dkhs.portfolio.bean.SelectStockBean) -> a
com.dkhs.portfolio.ui.FundDetailActivity$5 -> com.dkhs.portfolio.ui.bd:
    com.dkhs.portfolio.ui.FundDetailActivity this$0 -> a
    com.dkhs.portfolio.bean.FundQuoteBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.FundQuoteBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.FundManagerActivity -> com.dkhs.portfolio.ui.FundManagerActivity:
    java.lang.String id -> a
    android.widget.TextView mName -> b
    android.widget.TextView mDesc -> c
    java.util.List dataL -> d
    com.dkhs.portfolio.ui.adapter.AchivementAdapter achivementsAdapter -> e
    android.content.Intent getIntent(android.content.Context,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void updateUI(com.dkhs.portfolio.bean.FundManagerInfoBean) -> a
    void access$000(com.dkhs.portfolio.ui.FundManagerActivity,com.dkhs.portfolio.bean.FundManagerInfoBean) -> a
com.dkhs.portfolio.ui.FundManagerActivity$1 -> com.dkhs.portfolio.ui.be:
    com.dkhs.portfolio.ui.FundManagerActivity this$0 -> a
    com.dkhs.portfolio.bean.FundManagerInfoBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.FundManagerInfoBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.GettingUrlForAPPActivity -> com.dkhs.portfolio.ui.GettingUrlForAPPActivity:
    java.lang.String mPageName -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.GuideActivity -> com.dkhs.portfolio.ui.GuideActivity:
    android.support.v4.view.ViewPager vp -> a
    com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter vpAdapter -> b
    java.util.List views -> c
    java.lang.String mPageName -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.HistoryPositionDetailActivity -> com.dkhs.portfolio.ui.HistoryPositionDetailActivity:
    java.lang.String mCombinationId -> a
    com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView mListView -> b
    com.dkhs.portfolio.engine.NetValueEngine netValueEngine -> c
    int count -> d
    int page -> e
    int total_page -> f
    java.util.List lists -> k
    java.util.List keys -> l
    java.util.Map map -> m
    com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyAdapter adapter -> n
    com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyIhttpListener listener -> o
    com.lidroid.xutils.http.HttpHandler mHttphandler -> p
    java.lang.String mPageName -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> b
    void initView() -> c
    void handleExtras(android.os.Bundle) -> b
    android.content.Intent newIntent(android.content.Context,java.lang.String) -> a
    void onLoadMore() -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    int access$202(com.dkhs.portfolio.ui.HistoryPositionDetailActivity,int) -> a
    int access$300(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> a
    int access$200(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> b
    java.util.List access$400(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> c
    java.util.Map access$500(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> d
    java.util.List access$600(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> e
    com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyAdapter access$700(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> f
    com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView access$800(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> g
    int access$308(com.dkhs.portfolio.ui.HistoryPositionDetailActivity) -> h
com.dkhs.portfolio.ui.HistoryPositionDetailActivity$1 -> com.dkhs.portfolio.ui.HistoryPositionDetailActivity$1:
com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyAdapter -> com.dkhs.portfolio.ui.HistoryPositionDetailActivity$a:
    com.dkhs.portfolio.ui.HistoryPositionDetailActivity this$0 -> a
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    java.lang.Object getChild(int,int) -> getChild
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyAdapter$ChildViewHolder -> com.dkhs.portfolio.ui.HistoryPositionDetailActivity$a$a:
    android.widget.TextView tv_adjust_time -> a
    android.widget.TextView tv_adjust_history -> b
    android.view.View blank_view1 -> c
    android.view.View blank_view2 -> d
    com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyAdapter this$1 -> e
com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyAdapter$GroupViewHolder -> com.dkhs.portfolio.ui.HistoryPositionDetailActivity$a$b:
    android.widget.TextView tv_date -> a
    com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyAdapter this$1 -> b
com.dkhs.portfolio.ui.HistoryPositionDetailActivity$MyIhttpListener -> com.dkhs.portfolio.ui.HistoryPositionDetailActivity$b:
    com.dkhs.portfolio.ui.HistoryPositionDetailActivity this$0 -> a
    com.dkhs.portfolio.bean.HistoryPositionDetail parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.HistoryPositionDetail) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.LoginActivity -> com.dkhs.portfolio.ui.LoginActivity:
    android.widget.EditText etUserName -> e
    android.widget.EditText etPassword -> f
    android.widget.TextView tvRegister -> k
    android.widget.TextView tvUsername -> l
    android.widget.Button rlfbutton -> m
    android.widget.ImageView ivHeader -> n
    java.lang.String phoneNum -> o
    android.widget.TextView tvAnnoyLogin -> p
    android.view.View ivWeibo -> q
    android.view.View ivQQ -> r
    android.view.View ivWeixin -> s
    java.lang.String mUserAccout -> t
    com.dkhs.portfolio.engine.UserEngineImpl engine -> u
    boolean isLoginByAnnoy -> v
    com.dkhs.portfolio.net.ParseHttpListener listener -> w
    java.lang.String userName -> x
    cn.sharesdk.framework.PlatformActionListener platFormActionListener -> a
    android.os.Handler platFormAction -> b
    com.dkhs.portfolio.net.ParseHttpListener registerListener -> y
    com.dkhs.portfolio.net.ParseHttpListener uploadStockListner -> c
    com.dkhs.portfolio.engine.VisitorDataEngine visitorEngine -> z
    com.dkhs.portfolio.net.ParseHttpListener uploadCombinationListener -> d
    java.lang.String mPageName -> A
    android.content.Intent getLoginActivity(android.content.Context,java.lang.String) -> a
    android.content.Intent loginActivityByAnnoy(android.content.Context) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initDatas() -> k
    void setupLastUserInfo() -> l
    void setupDefalutUserInfo() -> m
    void handleExtras(android.os.Bundle) -> b
    void setListener() -> a
    void initViews() -> b
    void isLastUserAccount(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void authPlatform(java.lang.String) -> d
    void login() -> n
    void checkAndLogin(java.lang.String,java.lang.String) -> a
    boolean checkEmail(java.lang.String) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void uploadUserFollowStock() -> c
    void uploadUserFollowCombination() -> d
    void goMainPage() -> o
    void onPause() -> onPause
    void onResume() -> onResume
    void access$000(com.dkhs.portfolio.ui.LoginActivity) -> a
    android.widget.EditText access$100(com.dkhs.portfolio.ui.LoginActivity) -> b
    android.widget.Button access$200(com.dkhs.portfolio.ui.LoginActivity) -> c
    android.widget.EditText access$300(com.dkhs.portfolio.ui.LoginActivity) -> d
    java.lang.String access$400(com.dkhs.portfolio.ui.LoginActivity) -> e
    com.dkhs.portfolio.engine.UserEngineImpl access$500(com.dkhs.portfolio.ui.LoginActivity) -> f
    java.lang.String access$602(com.dkhs.portfolio.ui.LoginActivity,java.lang.String) -> a
    com.dkhs.portfolio.net.ParseHttpListener access$700(com.dkhs.portfolio.ui.LoginActivity) -> g
    java.lang.String access$600(com.dkhs.portfolio.ui.LoginActivity) -> h
com.dkhs.portfolio.ui.LoginActivity$1 -> com.dkhs.portfolio.ui.bf:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.LoginActivity$2 -> com.dkhs.portfolio.ui.bg:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.LoginActivity$3 -> com.dkhs.portfolio.ui.bh:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.LoginActivity$4 -> com.dkhs.portfolio.ui.bi:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.LoginActivity$5 -> com.dkhs.portfolio.ui.bj:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
com.dkhs.portfolio.ui.LoginActivity$6 -> com.dkhs.portfolio.ui.bk:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.LoginActivity$7 -> com.dkhs.portfolio.ui.bl:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.SignupBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.SignupBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.LoginActivity$8 -> com.dkhs.portfolio.ui.bm:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.LoginActivity$9 -> com.dkhs.portfolio.ui.bn:
    com.dkhs.portfolio.ui.LoginActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.LoginRegisterAcitvity -> com.dkhs.portfolio.ui.LoginRegisterAcitvity:
    android.view.View$OnClickListener registerClickListener -> a
    android.view.View$OnClickListener startClickListener -> b
    void onCreate(android.os.Bundle) -> onCreate
    void goLogin() -> a
    void goMainPage() -> b
    void access$000(com.dkhs.portfolio.ui.LoginRegisterAcitvity) -> a
    void access$100(com.dkhs.portfolio.ui.LoginRegisterAcitvity) -> b
com.dkhs.portfolio.ui.LoginRegisterAcitvity$1 -> com.dkhs.portfolio.ui.bo:
    com.dkhs.portfolio.ui.LoginRegisterAcitvity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.LoginRegisterAcitvity$2 -> com.dkhs.portfolio.ui.bp:
    com.dkhs.portfolio.ui.LoginRegisterAcitvity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.MainActivity -> com.dkhs.portfolio.ui.MainActivity:
    com.dkhs.portfolio.ui.fragment.MenuItemFragment mMenuFragment -> a
    android.support.v4.app.Fragment mContentFragment -> b
    com.dkhs.portfolio.ui.messagecenter.MessageHandler handler -> c
    android.support.v4.app.Fragment fragmentA -> d
    android.support.v4.app.Fragment fragmentB -> e
    android.support.v4.app.Fragment fragmentC -> f
    android.support.v4.app.Fragment fragmentD -> k
    long exitTime -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handIntent(android.content.Intent) -> a
    void showContentIndex(int) -> a
    void displayFragmentA() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void displayFragmentB() -> b
    void displayFragmentC() -> c
    void displayFragmentD() -> d
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
com.dkhs.portfolio.ui.MarketListActivity -> com.dkhs.portfolio.ui.MarketListActivity:
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType mLoadType -> b
    java.lang.String mPlateName -> c
    java.lang.String mPlateId -> d
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.ui.MarketListActivity$LoadViewType) -> a
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.ui.MarketListActivity$LoadViewType,java.lang.String,java.lang.String) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void processExtraData() -> c
    void handleExtras(android.os.Bundle) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> d
    void setTitleByType(com.dkhs.portfolio.ui.MarketListActivity$LoadViewType) -> a
com.dkhs.portfolio.ui.MarketListActivity$1 -> com.dkhs.portfolio.ui.bq:
    com.dkhs.portfolio.ui.MarketListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.MarketListActivity$2 -> com.dkhs.portfolio.ui.MarketListActivity$1:
    int[] $SwitchMap$com$dkhs$portfolio$ui$MarketListActivity$LoadViewType -> a
com.dkhs.portfolio.ui.MarketListActivity$ILoadingFinishListener -> com.dkhs.portfolio.ui.MarketListActivity$a:
    void loadingFinish() -> a
    void startLoadingData() -> b
com.dkhs.portfolio.ui.MarketListActivity$LoadViewType -> com.dkhs.portfolio.ui.MarketListActivity$b:
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType StockIncease -> a
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType StockDown -> b
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType IndexUp -> c
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType IndexDown -> d
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType StockTurnOver -> e
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType StockAmplit -> f
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType PlateHot -> g
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType PlateList -> h
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType[] $VALUES -> i
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType[] values() -> values
    com.dkhs.portfolio.ui.MarketListActivity$LoadViewType valueOf(java.lang.String) -> valueOf
com.dkhs.portfolio.ui.ModelAcitivity -> com.dkhs.portfolio.ui.ModelAcitivity:
    int RIGHTBUTTON_ID -> g
    int BACKBUTTON_ID -> h
    int SECONDRIGHTBUTTON_ID -> i
    com.dkhs.portfolio.ui.widget.TextImageButton btnBack -> a
    android.view.View mTitleView -> b
    com.dkhs.portfolio.engine.UserEngineImpl engine -> j
    android.widget.RelativeLayout layoutContent -> c
    me.imid.swipebacklayout.lib.SwipeBackLayout mSwipeBackLayout -> d
    android.view.View$OnClickListener clickListener -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onCreate(android.os.Bundle,int) -> a
    void handleBundleExtras(android.os.Bundle) -> a
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void replaceContentFragment(android.support.v4.app.Fragment) -> a
    void stepTitleView() -> a
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setBackTitle(int) -> b
    void setTitleTipString(java.lang.String) -> c
    android.widget.Button getRightButton() -> e
    android.widget.Button getSecondRightButton() -> f
    void hideHead() -> g
    void showHead() -> h
    void onResume() -> onResume
    void onPause() -> onPause
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    com.dkhs.portfolio.ui.widget.TextImageButton getBtnBack() -> i
    android.view.View getTitleView() -> j
    void startActivity(android.content.Intent) -> startActivity
    void updateTitleBackgroud(int) -> c
    void updateTitleBackgroudByValue(float) -> c
com.dkhs.portfolio.ui.ModelAcitivity$1 -> com.dkhs.portfolio.ui.br:
    com.dkhs.portfolio.ui.ModelAcitivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.ModifyComNameActivity -> com.dkhs.portfolio.ui.ModifyComNameActivity:
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> a
    android.widget.EditText combination_desc -> b
    android.widget.EditText combination_name -> c
    java.lang.String mPageName -> d
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void initView() -> a
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.CombinationBean) -> a
    void onClick(android.view.View) -> onClick
    void setSelectBack(com.dkhs.portfolio.bean.CombinationBean) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void access$000(com.dkhs.portfolio.ui.ModifyComNameActivity,com.dkhs.portfolio.bean.CombinationBean) -> a
com.dkhs.portfolio.ui.ModifyComNameActivity$1 -> com.dkhs.portfolio.ui.bs:
    java.lang.String val$combinationName -> a
    java.lang.String val$combinationDesc -> b
    com.dkhs.portfolio.ui.ModifyComNameActivity this$0 -> c
    com.dkhs.portfolio.bean.CombinationBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.CombinationBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.ModifyPrivacyActivity -> com.dkhs.portfolio.ui.ModifyPrivacyActivity:
    boolean is_passive -> a
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> b
    com.dkhs.portfolio.engine.MyCombinationEngineImpl mMyCombinationEngineImpl -> c
    android.widget.Switch combination_ranking -> d
    android.widget.Switch open_position -> e
    java.lang.String mPageName -> f
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void initView() -> a
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.CombinationBean) -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.Switch access$000(com.dkhs.portfolio.ui.ModifyPrivacyActivity) -> a
    android.widget.Switch access$100(com.dkhs.portfolio.ui.ModifyPrivacyActivity) -> b
    com.dkhs.portfolio.bean.CombinationBean access$200(com.dkhs.portfolio.ui.ModifyPrivacyActivity) -> c
    com.dkhs.portfolio.engine.MyCombinationEngineImpl access$300(com.dkhs.portfolio.ui.ModifyPrivacyActivity) -> d
    boolean access$402(com.dkhs.portfolio.ui.ModifyPrivacyActivity,boolean) -> a
    com.dkhs.portfolio.bean.CombinationBean access$202(com.dkhs.portfolio.ui.ModifyPrivacyActivity,com.dkhs.portfolio.bean.CombinationBean) -> a
com.dkhs.portfolio.ui.ModifyPrivacyActivity$ModifCombinationDetailListener -> com.dkhs.portfolio.ui.ModifyPrivacyActivity$a:
    com.dkhs.portfolio.ui.ModifyPrivacyActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.ModifyPrivacyActivity$QueryCombinationDetailListener -> com.dkhs.portfolio.ui.ModifyPrivacyActivity$b:
    com.dkhs.portfolio.ui.ModifyPrivacyActivity this$0 -> a
    com.dkhs.portfolio.bean.CombinationBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.CombinationBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.ModifyPrivacyActivity$QueryCombinationDetailListener$1 -> com.dkhs.portfolio.ui.bt:
    com.dkhs.portfolio.ui.ModifyPrivacyActivity$QueryCombinationDetailListener this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.ModifyPrivacyActivity$QueryCombinationDetailListener$2 -> com.dkhs.portfolio.ui.bu:
    com.dkhs.portfolio.ui.ModifyPrivacyActivity$QueryCombinationDetailListener this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.ModifyPswActivity -> com.dkhs.portfolio.ui.ModifyPswActivity:
    android.widget.EditText passwordSettingOld -> b
    android.widget.EditText passwordSettingNew -> c
    android.widget.CheckBox passwordSettingCheck -> d
    android.widget.Button btnSave -> e
    com.dkhs.portfolio.engine.UserEngineImpl mUserEngineImpl -> f
    android.content.Context context -> k
    android.widget.CompoundButton$OnCheckedChangeListener checkBox_Listener -> a
    com.dkhs.portfolio.net.ParseHttpListener listener -> l
    java.lang.String mPageName -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setListener() -> b
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.CheckBox access$000(com.dkhs.portfolio.ui.ModifyPswActivity) -> a
    android.widget.EditText access$100(com.dkhs.portfolio.ui.ModifyPswActivity) -> b
    android.widget.EditText access$200(com.dkhs.portfolio.ui.ModifyPswActivity) -> c
com.dkhs.portfolio.ui.ModifyPswActivity$1 -> com.dkhs.portfolio.ui.bv:
    com.dkhs.portfolio.ui.ModifyPswActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.ModifyPswActivity$2 -> com.dkhs.portfolio.ui.bw:
    com.dkhs.portfolio.ui.ModifyPswActivity this$0 -> a
    void onHttpFailure(int,java.lang.String) -> onHttpFailure
    void onFailure(int,java.lang.String) -> onFailure
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.ModifyUNameActivity -> com.dkhs.portfolio.ui.ModifyUNameActivity:
    android.widget.Button btnSave -> a
    android.widget.EditText changeEditName -> b
    com.dkhs.portfolio.engine.UserEngineImpl mUserEngineImpl -> c
    android.content.Context context -> d
    com.dkhs.portfolio.net.ParseHttpListener listener -> e
    java.lang.String mPageName -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void setListener() -> b
    void onClick(android.view.View) -> onClick
    boolean checkUserName() -> c
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.EditText access$000(com.dkhs.portfolio.ui.ModifyUNameActivity) -> a
com.dkhs.portfolio.ui.ModifyUNameActivity$1 -> com.dkhs.portfolio.ui.bx:
    com.dkhs.portfolio.ui.ModifyUNameActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    java.lang.String parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.String) -> c
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.ModifyUserSignActivity -> com.dkhs.portfolio.ui.ModifyUserSignActivity:
    android.widget.Button btnSave -> a
    android.widget.EditText signText -> b
    android.widget.TextView signVlaue -> c
    android.content.Context context -> d
    com.dkhs.portfolio.net.ParseHttpListener listener -> e
    java.lang.String mPageName -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void initListener() -> c
    void onClick(android.view.View) -> onClick
    void setSign() -> a
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.EditText access$000(com.dkhs.portfolio.ui.ModifyUserSignActivity) -> a
    android.widget.TextView access$100(com.dkhs.portfolio.ui.ModifyUserSignActivity) -> b
com.dkhs.portfolio.ui.ModifyUserSignActivity$1 -> com.dkhs.portfolio.ui.by:
    com.dkhs.portfolio.ui.ModifyUserSignActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.ModifyUserSignActivity$EditListener -> com.dkhs.portfolio.ui.ModifyUserSignActivity$a:
    com.dkhs.portfolio.ui.ModifyUserSignActivity this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.MyCombinationActivity -> com.dkhs.portfolio.ui.MyCombinationActivity:
    android.widget.Button btnMore -> a
    android.widget.Button btnRefresh -> b
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet listFragment -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void initTitleView() -> c
    void rotateRefreshButton() -> a
    void stopRefreshAnimation() -> b
    void replaceCombinationListView() -> d
    void onClick(android.view.View) -> onClick
    void addNewCombination() -> k
    void clickSecondButton() -> l
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.NewsActivity -> com.dkhs.portfolio.ui.NewsActivity:
    android.widget.ImageView newsTitleIcon -> b
    android.widget.TextView newsTitleName -> c
    android.widget.TextView newsTitleDate -> d
    android.widget.TextView newsTitleNum -> e
    android.widget.TextView newsTextTitle -> f
    android.widget.TextView newsTextText -> k
    java.lang.String textId -> l
    com.dkhs.portfolio.engine.LoadNewsTextEngine mLoadDataEngine -> m
    com.dkhs.portfolio.bean.OptionNewsBean mOptionNewsBean -> n
    java.lang.String optionName -> o
    java.lang.String symbolName -> p
    java.lang.String symbolId -> q
    android.widget.TextView newsSymbol -> r
    com.dkhs.portfolio.engine.LoadNewsTextEngine$ILoadDataBackListener mSelectStockBackListener -> a
    java.lang.String mPageName -> s
    void onCreate(android.os.Bundle) -> onCreate
    android.content.Intent newIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void getId(android.os.Bundle) -> b
    void initView() -> a
    void setValue() -> b
    void onPause() -> onPause
    void onResume() -> onResume
    com.dkhs.portfolio.bean.OptionNewsBean access$002(com.dkhs.portfolio.ui.NewsActivity,com.dkhs.portfolio.bean.OptionNewsBean) -> a
com.dkhs.portfolio.ui.NewsActivity$1 -> com.dkhs.portfolio.ui.bz:
    com.dkhs.portfolio.ui.NewsActivity this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.OptionNewsBean) -> a
com.dkhs.portfolio.ui.NoticesActivity -> com.dkhs.portfolio.ui.NoticesActivity:
    boolean first -> a
    com.dkhs.portfolio.ui.fragment.ReportListForAllFragment loadDataListFragment -> b
    java.lang.String mPageName -> c
    void onCreate(android.os.Bundle) -> onCreate
    void replaceDataList() -> a
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.OptionListAcitivity -> com.dkhs.portfolio.ui.OptionListAcitivity:
    boolean first -> a
    java.lang.String symbol -> b
    java.lang.String type -> c
    java.lang.String name -> d
    com.dkhs.portfolio.ui.fragment.ReportListForAllFragment loadDataListFragment -> e
    java.lang.String mPageName -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.content.Intent newIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void replaceDataList() -> a
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.OptionalStockListActivity -> com.dkhs.portfolio.ui.OptionalStockListActivity:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund loadDataListFragment -> b
    android.widget.TextView tvCurrent -> c
    android.widget.TextView tvChange -> d
    android.widget.TextView tvPercentgae -> e
    java.lang.String typeCurrentUp -> f
    java.lang.String typePercentageUp -> k
    java.lang.String typeChangeUP -> l
    java.lang.String typeCurrentDown -> m
    java.lang.String typePercentageDown -> n
    java.lang.String typeChangeDown -> o
    java.util.Timer mMarketTimer -> p
    android.content.Context context -> q
    boolean isLoading -> r
    android.view.View$OnClickListener mAddButtonClickListener -> a
    android.widget.TextView viewLastClick -> s
    java.lang.String orderType -> t
    java.lang.String mPageName -> u
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStop() -> onStop
    void initView() -> a
    void replaceDataList() -> b
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onClick(android.view.View) -> onClick
    void setDrawableUp(android.widget.TextView) -> a
    void setDrawableDown(android.widget.TextView) -> b
    void setTextDrawableHide(android.widget.TextView) -> c
    void setViewOrderIndicator(android.widget.TextView) -> d
    void setDownType(android.widget.TextView) -> e
    void setUpType(android.widget.TextView) -> f
    void onPause() -> onPause
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund access$000(com.dkhs.portfolio.ui.OptionalStockListActivity) -> a
    android.content.Context access$100(com.dkhs.portfolio.ui.OptionalStockListActivity) -> b
com.dkhs.portfolio.ui.OptionalStockListActivity$1 -> com.dkhs.portfolio.ui.ca:
    com.dkhs.portfolio.ui.OptionalStockListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.OptionalStockListActivity$2 -> com.dkhs.portfolio.ui.cb:
    com.dkhs.portfolio.ui.OptionalStockListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.OptionalStockListActivity$RequestMarketTask -> com.dkhs.portfolio.ui.OptionalStockListActivity$a:
    com.dkhs.portfolio.ui.OptionalStockListActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.OptionalTabActivity -> com.dkhs.portfolio.ui.OptionalTabActivity:
    java.lang.String mUserId -> a
    android.content.Intent newIntent(android.content.Context,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleBundleExtras(android.os.Bundle) -> a
com.dkhs.portfolio.ui.PickupPhotoActivity -> com.dkhs.portfolio.ui.PickupPhotoActivity:
    java.io.File file_go -> a
    com.dkhs.portfolio.engine.UserEngineImpl mUserEngineImpl -> b
    android.content.Context context -> c
    android.net.Uri photoUri -> d
    com.dkhs.portfolio.net.ParseHttpListener listener -> e
    java.lang.String mPageName -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    void setListener() -> c
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void takePicture() -> a
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.PickupPhotoActivity$1 -> com.dkhs.portfolio.ui.cc:
    com.dkhs.portfolio.ui.PickupPhotoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.PickupPhotoActivity$2 -> com.dkhs.portfolio.ui.cd:
    com.dkhs.portfolio.ui.PickupPhotoActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.PositionAdjustActivity -> com.dkhs.portfolio.ui.PositionAdjustActivity:
    int REQUESTCODE_SELECT_STOCK -> d
    com.dkhs.portfolio.ui.widget.PieGraph pgView -> e
    java.util.List stockList -> f
    com.dkhs.portfolio.ui.widget.ListViewEx lvStock -> k
    com.dkhs.portfolio.ui.adapter.OptionalStockAdapter stockAdapter -> l
    float surValue -> a
    android.widget.TextView tvSurpusValue -> m
    android.widget.SeekBar surSeekbar -> n
    java.util.ArrayList pieList -> o
    android.widget.EditText etConbinationName -> p
    android.widget.EditText etConbinationDesc -> q
    android.widget.Button btnConfirm -> r
    android.widget.Button btnAverage -> s
    android.view.View viewCombinationInfo -> t
    com.dkhs.portfolio.bean.PositionDetail mPositionDetailBean -> u
    java.lang.String mCombinationId -> v
    boolean isAdjustCombination -> w
    android.widget.TextView positionTextValue -> x
    android.widget.TextView positionTextCreatedate -> y
    boolean firse -> z
    android.view.View mFooterView -> A
    boolean isModiyName -> B
    boolean isModifyPosition -> C
    com.dkhs.portfolio.net.ParseHttpListener adjustNameListener -> b
    com.dkhs.portfolio.net.ParseHttpListener adjustPositionListener -> c
    java.lang.String mPageName -> D
    android.content.Intent newIntent(android.content.Context,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void copyDefalutList(java.util.List) -> a
    void initView() -> a
    void initConbinationInfoView() -> b
    void updateViewData() -> c
    void initData() -> d
    void initStockPercentView() -> k
    void initFooterView() -> l
    void setPieList(float) -> a
    void notifyRefresh(int,int) -> a
    float surpulsValue() -> m
    void setFootData(float) -> b
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void startSelectStockActivity(boolean) -> a
    void averageValue() -> n
    void adjustPositionDetailToServer() -> o
    java.util.List generateSymbols() -> p
    void createCombinationByServer() -> q
    void requestCombinationDetail(com.dkhs.portfolio.bean.CombinationBean) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void updatePieView() -> r
    void isShowAverageButton() -> s
    void setAddStockBack(java.util.List) -> b
    void onBackPressed() -> onBackPressed
    void showAlertDialog() -> t
    void onPause() -> onPause
    void onResume() -> onResume
    void access$000(com.dkhs.portfolio.ui.PositionAdjustActivity,java.util.List) -> a
    com.dkhs.portfolio.bean.PositionDetail access$102(com.dkhs.portfolio.ui.PositionAdjustActivity,com.dkhs.portfolio.bean.PositionDetail) -> a
    void access$200(com.dkhs.portfolio.ui.PositionAdjustActivity) -> a
    android.widget.EditText access$300(com.dkhs.portfolio.ui.PositionAdjustActivity) -> b
    com.dkhs.portfolio.bean.PositionDetail access$100(com.dkhs.portfolio.ui.PositionAdjustActivity) -> c
    android.widget.EditText access$400(com.dkhs.portfolio.ui.PositionAdjustActivity) -> d
    void access$500(com.dkhs.portfolio.ui.PositionAdjustActivity) -> e
    android.widget.Button access$600(com.dkhs.portfolio.ui.PositionAdjustActivity) -> f
    boolean access$700(com.dkhs.portfolio.ui.PositionAdjustActivity) -> g
    void access$800(com.dkhs.portfolio.ui.PositionAdjustActivity,com.dkhs.portfolio.bean.CombinationBean) -> a
    java.util.List access$900(com.dkhs.portfolio.ui.PositionAdjustActivity) -> h
com.dkhs.portfolio.ui.PositionAdjustActivity$1 -> com.dkhs.portfolio.ui.ce:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.dkhs.portfolio.ui.PositionAdjustActivity$2 -> com.dkhs.portfolio.ui.cf:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.PositionAdjustActivity$3 -> com.dkhs.portfolio.ui.cg:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.PositionAdjustActivity$4 -> com.dkhs.portfolio.ui.ch:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.PositionAdjustActivity$4$1 -> com.dkhs.portfolio.ui.ci:
    com.dkhs.portfolio.ui.PositionAdjustActivity$4 this$1 -> a
com.dkhs.portfolio.ui.PositionAdjustActivity$5 -> com.dkhs.portfolio.ui.cj:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    void beforeRequest() -> beforeRequest
    void requestCallBack() -> requestCallBack
    void afterParseData(com.dkhs.portfolio.bean.CombinationBean) -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.CombinationBean parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.PositionAdjustActivity$5$1 -> com.dkhs.portfolio.ui.ck:
    com.dkhs.portfolio.ui.PositionAdjustActivity$5 this$1 -> a
com.dkhs.portfolio.ui.PositionAdjustActivity$6 -> com.dkhs.portfolio.ui.cl:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    com.dkhs.portfolio.bean.PositionDetail parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.PositionDetail) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.PositionAdjustActivity$7 -> com.dkhs.portfolio.ui.cm:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.PositionAdjustActivity$8 -> com.dkhs.portfolio.ui.cn:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.PositionAdjustActivity$QueryCombinationDetailListener -> com.dkhs.portfolio.ui.PositionAdjustActivity$a:
    com.dkhs.portfolio.ui.PositionAdjustActivity this$0 -> a
    com.dkhs.portfolio.bean.PositionDetail parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.PositionDetail) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.RCChatActivity -> com.dkhs.portfolio.ui.RCChatActivity:
    io.rong.imlib.model.Conversation$ConversationType conversationType -> a
    io.rong.imkit.fragment.ConversationFragment fragment -> b
    com.dkhs.portfolio.ui.messagecenter.MessageHandler messageHandler -> c
    boolean isDestroy -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    io.rong.imlib.model.Conversation$ConversationType access$000(com.dkhs.portfolio.ui.RCChatActivity) -> a
    boolean access$100(com.dkhs.portfolio.ui.RCChatActivity) -> b
    io.rong.imkit.fragment.ConversationFragment access$200(com.dkhs.portfolio.ui.RCChatActivity) -> c
    com.dkhs.portfolio.ui.messagecenter.MessageHandler access$300(com.dkhs.portfolio.ui.RCChatActivity) -> d
com.dkhs.portfolio.ui.RCChatActivity$1 -> com.dkhs.portfolio.ui.co:
    java.lang.String val$targetId -> a
    com.dkhs.portfolio.ui.RCChatActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.RCChatActivity$2 -> com.dkhs.portfolio.ui.cp:
    com.dkhs.portfolio.ui.RCChatActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.RCChatActivity$ConversationBehaviorListener -> com.dkhs.portfolio.ui.RCChatActivity$a:
    com.dkhs.portfolio.ui.RCChatActivity this$0 -> a
    boolean onUserPortraitClick(android.content.Context,io.rong.imlib.model.Conversation$ConversationType,io.rong.imlib.model.UserInfo) -> onUserPortraitClick
    boolean onMessageClick(android.content.Context,io.rong.imlib.model.Message) -> onMessageClick
    boolean onMessageLongClick(android.content.Context,io.rong.imlib.model.Message) -> onMessageLongClick
    boolean onConversationLongClick(android.content.Context,io.rong.imkit.UiConversation) -> onConversationLongClick
    boolean onConversationItemClick(android.content.Context,io.rong.imkit.UiConversation) -> onConversationItemClick
com.dkhs.portfolio.ui.RCChatActivity$GetConversationTitleTask -> com.dkhs.portfolio.ui.RCChatActivity$b:
    com.dkhs.portfolio.ui.RCChatActivity this$0 -> a
    io.rong.imlib.model.UserInfo doInBackground(java.lang.String[]) -> a
    void onPostExecute(io.rong.imlib.model.UserInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dkhs.portfolio.ui.RCChatListActivity -> com.dkhs.portfolio.ui.RCChatListActivity:
    io.rong.imkit.fragment.ConversationListFragment conversationListFragment -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void updateChatList(io.rong.imlib.model.Message) -> updateChatList
    void onResume() -> onResume
com.dkhs.portfolio.ui.RCChatSettingActivity -> com.dkhs.portfolio.ui.RCChatSettingActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.dkhs.portfolio.ui.RLFActivity -> com.dkhs.portfolio.ui.RLFActivity:
    android.widget.Button rlfbutton -> c
    android.widget.EditText etPhoneNum -> d
    android.widget.CheckBox cbAgree -> e
    boolean isLoginByCaptcha -> f
    java.util.Timer mTimer -> a
    boolean mobileAble -> k
    boolean codeAble -> l
    android.widget.TextView rltAgreement -> m
    boolean isSettingPsw -> n
    java.lang.String phoneNumber -> o
    com.dkhs.portfolio.net.ParseHttpListener checkListener -> b
    com.dkhs.portfolio.net.ParseHttpListener listener -> p
    int count -> q
    java.lang.String telephone -> r
    int current_type -> s
    com.dkhs.portfolio.engine.UserEngineImpl engine -> t
    java.lang.String mPageName -> u
    android.content.Intent settingPasswordIntent(android.content.Context) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void showCaptchaLoginDailog() -> d
    void initData() -> a
    void setListener() -> b
    void setRegistAble() -> k
    void initViews() -> c
    void initLink() -> l
    void onClick(android.view.View) -> onClick
    boolean isValidPhoneNum() -> m
    void saveUser(com.dkhs.portfolio.bean.UserEntity) -> a
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean access$002(com.dkhs.portfolio.ui.RLFActivity,boolean) -> a
    java.lang.String access$102(com.dkhs.portfolio.ui.RLFActivity,java.lang.String) -> a
    boolean access$202(com.dkhs.portfolio.ui.RLFActivity,boolean) -> b
    void access$300(com.dkhs.portfolio.ui.RLFActivity) -> a
    boolean access$400(com.dkhs.portfolio.ui.RLFActivity) -> b
    android.widget.EditText access$500(com.dkhs.portfolio.ui.RLFActivity) -> c
    void access$600(com.dkhs.portfolio.ui.RLFActivity) -> d
    java.lang.String access$700(com.dkhs.portfolio.ui.RLFActivity) -> e
    void access$800(com.dkhs.portfolio.ui.RLFActivity,com.dkhs.portfolio.bean.UserEntity) -> a
    int access$900(com.dkhs.portfolio.ui.RLFActivity) -> f
    boolean access$000(com.dkhs.portfolio.ui.RLFActivity) -> g
com.dkhs.portfolio.ui.RLFActivity$1 -> com.dkhs.portfolio.ui.cq:
    com.dkhs.portfolio.ui.widget.MAlertDialog val$dpg -> a
    com.dkhs.portfolio.ui.RLFActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.RLFActivity$2 -> com.dkhs.portfolio.ui.cr:
    com.dkhs.portfolio.ui.widget.MAlertDialog val$dpg -> a
    com.dkhs.portfolio.ui.RLFActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.RLFActivity$3 -> com.dkhs.portfolio.ui.cs:
    com.dkhs.portfolio.ui.RLFActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.RLFActivity$4 -> com.dkhs.portfolio.ui.ct:
    com.dkhs.portfolio.ui.RLFActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.RLFActivity$5 -> com.dkhs.portfolio.ui.cu:
    com.dkhs.portfolio.ui.RLFActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.RLFActivity$6 -> com.dkhs.portfolio.ui.cv:
    com.dkhs.portfolio.ui.RLFActivity this$0 -> a
    void requestCallBack() -> requestCallBack
    java.lang.Boolean parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.Boolean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.RLFActivity$7 -> com.dkhs.portfolio.ui.cw:
    com.dkhs.portfolio.ui.RLFActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    void onHttpSuccess(java.lang.String) -> onHttpSuccess
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.RLFActivity$8 -> com.dkhs.portfolio.ui.cx:
    com.dkhs.portfolio.bean.UserEntity val$user -> a
    com.dkhs.portfolio.ui.RLFActivity this$0 -> b
    void run() -> run
com.dkhs.portfolio.ui.RefreshModelActivity -> com.dkhs.portfolio.ui.RefreshModelActivity:
    android.widget.Button btnRefresh -> b
    android.os.Handler requestUiHandler -> a
    void onCreate(android.os.Bundle) -> onCreate
    void rotateRefreshButton() -> c
    void stopRefreshAnimation() -> d
    void setRefreshButtonListener(android.view.View$OnClickListener) -> a
    void startAnimaRefresh() -> a
    void endAnimaRefresh() -> b
    void access$000(com.dkhs.portfolio.ui.RefreshModelActivity) -> a
    void access$100(com.dkhs.portfolio.ui.RefreshModelActivity) -> b
com.dkhs.portfolio.ui.RefreshModelActivity$1 -> com.dkhs.portfolio.ui.cy:
    com.dkhs.portfolio.ui.RefreshModelActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.RegisterSuccessActivity -> com.dkhs.portfolio.ui.RegisterSuccessActivity:
    java.util.Timer mTimer -> a
    android.os.Handler handler -> b
    int count -> c
    android.widget.Button btn_sc_login -> d
    boolean isAutoLoginAble -> e
    java.lang.String mPageName -> f
    void onCreate(android.os.Bundle) -> onCreate
    void setListener() -> a
    void initViews() -> b
    void onClick(android.view.View) -> onClick
    void goMain() -> d
    void timerTask() -> k
    void onBackPressed() -> onBackPressed
    void finish() -> finish
    void initData() -> c
    void onPause() -> onPause
    void onResume() -> onResume
    boolean access$000(com.dkhs.portfolio.ui.RegisterSuccessActivity) -> a
    void access$100(com.dkhs.portfolio.ui.RegisterSuccessActivity) -> b
    int access$200(com.dkhs.portfolio.ui.RegisterSuccessActivity) -> c
    android.widget.Button access$300(com.dkhs.portfolio.ui.RegisterSuccessActivity) -> d
    int access$208(com.dkhs.portfolio.ui.RegisterSuccessActivity) -> e
    android.os.Handler access$400(com.dkhs.portfolio.ui.RegisterSuccessActivity) -> f
com.dkhs.portfolio.ui.RegisterSuccessActivity$1 -> com.dkhs.portfolio.ui.cz:
    com.dkhs.portfolio.ui.RegisterSuccessActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.RegisterSuccessActivity$2 -> com.dkhs.portfolio.ui.da:
    com.dkhs.portfolio.ui.RegisterSuccessActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.ReportForOneListActivity -> com.dkhs.portfolio.ui.ReportForOneListActivity:
    boolean isLoadingMore -> b
    android.content.Context context -> c
    java.util.List mDataList -> d
    com.dkhs.portfolio.engine.LoadNewsDataEngine mLoadDataEngine -> e
    boolean first -> a
    java.lang.String mContentType -> f
    java.lang.String symbol -> k
    java.lang.String name -> l
    java.lang.String subType -> m
    android.support.v4.app.Fragment loadDataListFragment -> n
    java.lang.String mPageName -> o
    android.content.Intent newIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void replaceDataList() -> b
    void onPause() -> onPause
    void onResume() -> onResume
    void onLoadMore() -> a_
com.dkhs.portfolio.ui.SelectAddOptionalActivity -> com.dkhs.portfolio.ui.SelectAddOptionalActivity:
    java.util.List mFollowList -> k
    com.dkhs.portfolio.net.ParseHttpListener loadAllListener -> l
    void onCreate(android.os.Bundle) -> onCreate
    void loadVisitorData() -> k
    void setTabViewPage(java.util.List) -> a
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund getSearchFragment() -> d
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType getLoadByType() -> b
    int getTitleRes() -> c
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.SelectAddOptionalActivity$1 -> com.dkhs.portfolio.ui.db:
    com.dkhs.portfolio.ui.SelectAddOptionalActivity this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.SelectFundActivity -> com.dkhs.portfolio.ui.SelectFundActivity:
    android.widget.Button btnOrder -> m
    android.widget.PopupWindow mPopMoreWindow -> n
    java.lang.String[] orderTitle -> o
    android.view.View$OnClickListener orderClickLisenter -> k
    android.view.View$OnClickListener popMoreClickLisenter -> l
    android.graphics.drawable.Drawable drawable_up -> p
    android.graphics.drawable.Drawable drawable_down -> q
    void setTabViewPage(java.util.List) -> a
    void onCreate(android.os.Bundle) -> onCreate
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund getSearchFragment() -> d
    void showPopWindow() -> k
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType getLoadByType() -> b
    int getTitleRes() -> c
    void onPause() -> onPause
    void onResume() -> onResume
    android.graphics.drawable.Drawable access$000(com.dkhs.portfolio.ui.SelectFundActivity) -> a
    android.widget.Button access$100(com.dkhs.portfolio.ui.SelectFundActivity) -> b
    void access$200(com.dkhs.portfolio.ui.SelectFundActivity) -> c
    android.widget.PopupWindow access$300(com.dkhs.portfolio.ui.SelectFundActivity) -> d
    android.graphics.drawable.Drawable access$400(com.dkhs.portfolio.ui.SelectFundActivity) -> e
    java.lang.String[] access$500(com.dkhs.portfolio.ui.SelectFundActivity) -> f
com.dkhs.portfolio.ui.SelectFundActivity$1 -> com.dkhs.portfolio.ui.dc:
    com.dkhs.portfolio.ui.SelectFundActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.SelectFundActivity$2 -> com.dkhs.portfolio.ui.dd:
    com.dkhs.portfolio.ui.SelectFundActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.SelectFundActivity$3 -> com.dkhs.portfolio.ui.de:
    com.dkhs.portfolio.ui.SelectFundActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.SelectFundActivity$4 -> com.dkhs.portfolio.ui.df:
    com.dkhs.portfolio.ui.SelectFundActivity this$0 -> a
    void onDismiss() -> onDismiss
com.dkhs.portfolio.ui.SelectStockActivity -> com.dkhs.portfolio.ui.SelectStockActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void setTabViewPage(java.util.List) -> a
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund getSearchFragment() -> d
    com.dkhs.portfolio.ui.BaseSelectActivity$ListViewType getLoadByType() -> b
    int getTitleRes() -> c
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.SetPasswordActivity -> com.dkhs.portfolio.ui.SetPasswordActivity:
    android.widget.EditText etPassword -> a
    android.widget.Button rlfbutton -> b
    android.widget.CheckBox cbShowPassword -> c
    com.dkhs.portfolio.engine.UserEngineImpl engine -> d
    java.lang.String phoneNum -> e
    java.lang.String code -> f
    java.lang.String strBefore -> k
    com.dkhs.portfolio.net.ParseHttpListener setPasswordListener -> l
    java.lang.String mPageName -> m
    android.content.Intent newIntent(android.content.Context,java.lang.String,java.lang.String) -> a
    void handleExtras(android.os.Bundle) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.EditText access$000(com.dkhs.portfolio.ui.SetPasswordActivity) -> a
    java.lang.String access$102(com.dkhs.portfolio.ui.SetPasswordActivity,java.lang.String) -> a
    android.widget.Button access$200(com.dkhs.portfolio.ui.SetPasswordActivity) -> b
    java.lang.String access$100(com.dkhs.portfolio.ui.SetPasswordActivity) -> c
    java.lang.String access$300(com.dkhs.portfolio.ui.SetPasswordActivity) -> d
com.dkhs.portfolio.ui.SetPasswordActivity$1 -> com.dkhs.portfolio.ui.dg:
    com.dkhs.portfolio.ui.SetPasswordActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.SetPasswordActivity$2 -> com.dkhs.portfolio.ui.dh:
    com.dkhs.portfolio.ui.SetPasswordActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.SetPasswordActivity$3 -> com.dkhs.portfolio.ui.di:
    com.dkhs.portfolio.ui.SetPasswordActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.SettingActivity -> com.dkhs.portfolio.ui.SettingActivity:
    boolean isSetPassword -> a
    android.widget.LinearLayout settingLayoutGroup -> d
    android.content.Context context -> e
    android.widget.ImageView settingImageHead -> f
    android.widget.TextView settingTextAccountText -> k
    android.widget.TextView settingTextNameText -> l
    android.view.View viewUserInfo -> m
    android.view.View viewPassword -> n
    com.dkhs.portfolio.bean.UserEntity ue -> o
    android.widget.TextView settingSingText -> p
    boolean login -> q
    android.widget.LinearLayout settingAccountLayout -> r
    android.os.Handler handler -> s
    com.dkhs.portfolio.net.ParseHttpListener userInfoListener -> b
    com.dkhs.portfolio.net.ParseHttpListener listener -> t
    com.dkhs.portfolio.net.ParseHttpListener bindsListener -> u
    android.os.Handler updateHandler -> c
    java.lang.String mPageName -> v
    android.content.Intent getEditUserInfoIntent(android.content.Context) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void setListener() -> b
    void initViews() -> c
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onPause() -> onPause
    boolean getEditModeEnable() -> d
    android.content.Context access$000(com.dkhs.portfolio.ui.SettingActivity) -> a
    com.dkhs.portfolio.bean.UserEntity access$102(com.dkhs.portfolio.ui.SettingActivity,com.dkhs.portfolio.bean.UserEntity) -> a
    android.widget.TextView access$200(com.dkhs.portfolio.ui.SettingActivity) -> b
    com.dkhs.portfolio.bean.UserEntity access$100(com.dkhs.portfolio.ui.SettingActivity) -> c
    android.widget.TextView access$300(com.dkhs.portfolio.ui.SettingActivity) -> d
    android.view.View access$400(com.dkhs.portfolio.ui.SettingActivity) -> e
    boolean access$502(com.dkhs.portfolio.ui.SettingActivity,boolean) -> a
    boolean access$500(com.dkhs.portfolio.ui.SettingActivity) -> f
    android.widget.LinearLayout access$600(com.dkhs.portfolio.ui.SettingActivity) -> g
com.dkhs.portfolio.ui.SettingActivity$1 -> com.dkhs.portfolio.ui.dj:
    com.dkhs.portfolio.ui.SettingActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.SettingActivity$2 -> com.dkhs.portfolio.ui.dk:
    com.dkhs.portfolio.ui.SettingActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.SettingActivity$3 -> com.dkhs.portfolio.ui.dl:
    com.dkhs.portfolio.ui.SettingActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.SettingActivity$4 -> com.dkhs.portfolio.ui.dm:
    com.dkhs.portfolio.ui.SettingActivity this$0 -> a
    com.dkhs.portfolio.bean.AppBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.AppBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.SettingActivity$4$1 -> com.dkhs.portfolio.ui.dn:
    com.dkhs.portfolio.ui.SettingActivity$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.SettingActivity$4$2 -> com.dkhs.portfolio.ui.do:
    com.dkhs.portfolio.bean.AppBean val$bean -> a
    com.dkhs.portfolio.ui.SettingActivity$4 this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.SettingActivity$5 -> com.dkhs.portfolio.ui.dp:
    com.dkhs.portfolio.ui.SettingActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.SettingActivity$6 -> com.dkhs.portfolio.ui.dq:
    com.dkhs.portfolio.ui.SettingActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.SettingActivity$7 -> com.dkhs.portfolio.ui.dr:
    com.dkhs.portfolio.ui.SettingActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.SettingNameActivity -> com.dkhs.portfolio.ui.SettingNameActivity:
    android.widget.CheckBox cbShowPassword -> d
    android.widget.CheckBox cbShowRePassword -> e
    android.widget.EditText etPassword -> f
    android.widget.EditText etRePassword -> k
    android.widget.EditText etUserName -> l
    java.lang.String phoneNum -> m
    java.lang.String code -> n
    android.widget.Button rlfbutton -> o
    com.dkhs.portfolio.engine.UserEngineImpl engine -> p
    boolean isResetPsw -> q
    boolean isSetPsw -> r
    java.lang.String strBefore -> a
    com.dkhs.portfolio.net.ParseHttpListener setPasswordListener -> s
    com.dkhs.portfolio.net.ParseHttpListener registerListener -> t
    java.lang.String mPageName -> u
    com.dkhs.portfolio.net.ParseHttpListener uploadStockListner -> b
    com.dkhs.portfolio.engine.VisitorDataEngine visitorEngine -> v
    com.dkhs.portfolio.net.ParseHttpListener uploadCombinationListener -> c
    android.content.Intent newIntent(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    android.content.Intent newSetPSWIntent(android.content.Context,java.lang.String,java.lang.String) -> a
    void handleExtras(android.os.Bundle) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void setPassword() -> c
    boolean checkUserName() -> d
    boolean checkPassword() -> k
    void uploadUserFollowStock() -> a
    void uploadUserFollowCombination() -> b
    void goMainPage() -> l
    void onPause() -> onPause
    void onResume() -> onResume
    android.widget.EditText access$000(com.dkhs.portfolio.ui.SettingNameActivity) -> a
    android.widget.EditText access$100(com.dkhs.portfolio.ui.SettingNameActivity) -> b
    boolean access$200(com.dkhs.portfolio.ui.SettingNameActivity) -> c
    android.widget.Button access$300(com.dkhs.portfolio.ui.SettingNameActivity) -> d
    android.widget.EditText access$400(com.dkhs.portfolio.ui.SettingNameActivity) -> e
    java.lang.String access$500(com.dkhs.portfolio.ui.SettingNameActivity) -> f
    com.dkhs.portfolio.engine.UserEngineImpl access$600(com.dkhs.portfolio.ui.SettingNameActivity) -> g
    void access$700(com.dkhs.portfolio.ui.SettingNameActivity) -> h
com.dkhs.portfolio.ui.SettingNameActivity$1 -> com.dkhs.portfolio.ui.ds:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.SettingNameActivity$10 -> com.dkhs.portfolio.ui.dt:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.SettingNameActivity$2 -> com.dkhs.portfolio.ui.du:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.SettingNameActivity$3 -> com.dkhs.portfolio.ui.dv:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.SettingNameActivity$4 -> com.dkhs.portfolio.ui.dw:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.SettingNameActivity$5 -> com.dkhs.portfolio.ui.dx:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.SettingNameActivity$6 -> com.dkhs.portfolio.ui.dy:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.SettingNameActivity$7 -> com.dkhs.portfolio.ui.dz:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.SettingNameActivity$8 -> com.dkhs.portfolio.ui.ea:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    void onFailure(int,java.lang.String) -> onFailure
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.SettingNameActivity$9 -> com.dkhs.portfolio.ui.eb:
    com.dkhs.portfolio.ui.SettingNameActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.SplashActivity -> com.dkhs.portfolio.ui.SplashActivity:
    boolean isFirstIn -> a
    android.content.Context context -> b
    android.os.Handler mHandler -> c
    java.lang.String mPageName -> d
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void goGuide() -> b
    void goAccountMain() -> c
    void onPause() -> onPause
    void onResume() -> onResume
    void access$000(com.dkhs.portfolio.ui.SplashActivity) -> a
    void access$100(com.dkhs.portfolio.ui.SplashActivity) -> b
com.dkhs.portfolio.ui.SplashActivity$1 -> com.dkhs.portfolio.ui.ec:
    com.dkhs.portfolio.ui.SplashActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.StockLandView -> com.dkhs.portfolio.ui.StockLandView:
    android.content.Context mContext -> b
    com.dkhs.portfolio.engine.QuotesEngineImpl mQuotesEngine -> c
    com.dkhs.portfolio.bean.StockQuotesBean mStockQuotesBean -> d
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitle -> e
    com.dkhs.portfolio.ui.widget.ScrollViewPager pager -> f
    java.util.ArrayList fragmentList -> g
    com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment mStockQuotesChartFragment -> h
    android.widget.TextView landKlinTextTitle -> i
    android.widget.TextView landKlinTextPrice -> j
    android.widget.TextView landKlinTextValum -> k
    android.widget.TextView landKlinTextData -> l
    com.dkhs.portfolio.bean.SelectStockBean mStockBean -> m
    int mViewType -> n
    com.dkhs.portfolio.ui.widget.StockViewCallBack stockViewCallback -> o
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener titleSelectPostion -> a
    int view_position -> p
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack mLandStockCallBack -> q
    com.dkhs.portfolio.ui.widget.KChartDataListener mKChartDataListener -> r
    void init() -> a
    void initView(android.view.View) -> a
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void updateLandStockView(com.dkhs.portfolio.bean.StockQuotesBean) -> a
    void initTabPage() -> b
    void showView(int) -> a
    void setStockBean(com.dkhs.portfolio.bean.SelectStockBean) -> setStockBean
    void setViewType(int) -> setViewType
    com.dkhs.portfolio.ui.widget.StockViewCallBack getStockViewCallback() -> getStockViewCallback
    void setStockViewCallback(com.dkhs.portfolio.ui.widget.StockViewCallBack) -> setStockViewCallback
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack getLandStockCallBack() -> getLandStockCallBack
    void setLandStockCallBack(com.dkhs.portfolio.ui.widget.LandStockViewCallBack) -> setLandStockCallBack
    com.dkhs.portfolio.ui.widget.KChartDataListener getKChartDataListener() -> getKChartDataListener
    void setKChartDataListener(com.dkhs.portfolio.ui.widget.KChartDataListener) -> setKChartDataListener
    com.dkhs.portfolio.ui.widget.StockViewCallBack access$000(com.dkhs.portfolio.ui.StockLandView) -> a
    com.dkhs.portfolio.ui.widget.ScrollViewPager access$100(com.dkhs.portfolio.ui.StockLandView) -> b
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack access$200(com.dkhs.portfolio.ui.StockLandView) -> c
com.dkhs.portfolio.ui.StockLandView$1 -> com.dkhs.portfolio.ui.ed:
    com.dkhs.portfolio.ui.StockLandView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.StockLandView$2 -> com.dkhs.portfolio.ui.ee:
    com.dkhs.portfolio.ui.StockLandView this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.StockQuotesActivity -> com.dkhs.portfolio.ui.StockQuotesActivity:
    long mLastClickTime -> n
    com.dkhs.portfolio.bean.SelectStockBean mStockBean -> o
    int REQUESTCODE_SELECT_STOCK -> p
    int REQUEST_CHECK -> q
    android.widget.TextView tvCurrent -> r
    android.widget.TextView tvHigh -> s
    android.widget.TextView tvLow -> t
    android.widget.TextView tvOpen -> u
    android.widget.TextView tvChange -> v
    android.widget.TextView tvPercentage -> w
    android.widget.Button btnRefresh -> x
    android.widget.TextView tvChengjiaoLiang -> y
    android.widget.TextView tvChengjiaoE -> z
    android.widget.TextView tvHuanShouLv -> A
    android.widget.TextView tvStockStatus -> B
    android.view.View viewPriceChange -> C
    android.widget.TextView tvLiuzhi -> D
    android.widget.TextView tvZongzhi -> E
    android.widget.TextView tvShiying -> F
    android.widget.TextView tvAmount -> G
    android.widget.TextView tvYesterDay -> H
    com.dkhs.portfolio.ui.widget.InterceptScrollView mScrollview -> I
    com.dkhs.portfolio.engine.QuotesEngineImpl mQuotesEngine -> J
    com.dkhs.portfolio.bean.StockQuotesBean mStockQuotesBean -> K
    long mStockId -> L
    java.lang.String mStockCode -> M
    android.content.Context context -> N
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitle -> O
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitleBottom -> P
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitleSticker -> Q
    com.dkhs.portfolio.ui.widget.ScrollViewPager pager -> R
    java.util.ArrayList fragmentList -> S
    com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment mStockQuotesChartFragment -> T
    android.view.View bottomLayout -> U
    com.dkhs.portfolio.ui.StockQuotesActivity layouts -> V
    android.view.View viewHeader -> W
    java.lang.String symbolType -> X
    android.widget.Button klinVirtulCheck -> Y
    java.lang.String checkValue -> Z
    int MENU_FOLLOWE_OR_UNFOLLOWE -> aa
    int MENU_REMIND -> ab
    com.dkhs.portfolio.ui.StockLandView landStockview -> ac
    com.dkhs.portfolio.ui.FloatingActionMenu mActionMenu -> ad
    com.dkhs.portfolio.engine.VisitorDataEngine mVisitorDataEngine -> ae
    java.util.List localList -> af
    android.os.Handler viewHandler -> a
    int mTitleBarBottom -> ag
    int mMaxListHeight -> ah
    com.dkhs.portfolio.ui.widget.ChangeFollowView changeFollowView -> ai
    com.dkhs.portfolio.ui.widget.ChangeFollowView$IChangeSuccessListener changeFollowListener -> aj
    java.util.List tabBottomFragment -> ak
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener mStockBottomTabListener -> al
    boolean isFirstLoadQuotes -> am
    android.os.Handler requestUiHandler -> b
    com.dkhs.portfolio.ui.widget.InterceptScrollView$ScrollViewListener mScrollViewListener -> c
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener titleSelectPostion -> d
    com.dkhs.portfolio.net.ParseHttpListener quoteListener -> e
    float mPrePrice -> an
    android.view.View$OnClickListener mSearchClick -> f
    android.os.Handler quoteHandler -> k
    java.lang.Runnable updateRunnable -> l
    boolean isChange -> ao
    boolean isFull -> m
    int stickType -> ap
    java.util.List mDayKChart -> aq
    java.util.List mWeekKChart -> ar
    java.util.List mMonthKChart -> as
    android.content.Intent newIntent(android.content.Context,com.dkhs.portfolio.bean.SelectStockBean) -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void processExtraData() -> w
    void onCreate(android.os.Bundle) -> onCreate
    void getLocalOptionList() -> x
    void initView() -> y
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void handFollowOrUnfollowAction() -> z
    void full(boolean) -> a
    void initBottomTabTitle() -> A
    void initBottomTabFragment() -> B
    int getMaxListHeight() -> a
    void interruptSrcollView() -> b
    void scrollviewObatin() -> c
    void updateStickHeaderPosition(int) -> e
    void replaceBottomTabFragment(android.support.v4.app.Fragment) -> b
    boolean isIndexType() -> C
    void setAddOptionalButton() -> D
    void scrollToTop() -> E
    void requestData() -> F
    void showStickHeader() -> G
    void hideStickHeader() -> H
    void initTabPage() -> I
    void updateCurrentText() -> J
    void updateStockView() -> d
    android.content.res.ColorStateList getTextColor(float) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setFuquanView() -> K
    void setTitleDate() -> L
    void onStart() -> onStart
    void onStop() -> onStop
    void onClick(android.view.View) -> onClick
    void rotateRefreshButton() -> M
    void stopRefreshAnimation() -> N
    void initFloatingActionMenu(com.dkhs.portfolio.bean.StockQuotesBean) -> a
    void onDestroy() -> onDestroy
    com.dkhs.portfolio.bean.StockQuotesBean getmStockQuotesBean() -> k
    com.dkhs.portfolio.bean.SelectStockBean getmStockBean() -> l
    void onPause() -> onPause
    void onResume() -> onResume
    java.lang.String getCheckValue() -> m
    void setCheckValue(java.lang.String) -> a
    void landViewFadeOut() -> n
    void stockMarkShow() -> o
    void initLandStockView() -> O
    void rotaVericteStockView() -> P
    void rotaLandStockView() -> Q
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int getStickType() -> p
    com.dkhs.portfolio.bean.StockQuotesBean getStockQuotesBean() -> q
    void setStickType(int) -> a
    int getTabPosition() -> r
    void setTabPosition(int) -> d
    java.util.List getDayLineDatas() -> s
    void setDayKlineDatas(java.util.List) -> a
    java.util.List getMonthLineDatas() -> t
    void setMonthKlineDatas(java.util.List) -> b
    java.util.List getWeekLineDatas() -> u
    void setWeekKlineDatas(java.util.List) -> c
    java.util.List access$002(com.dkhs.portfolio.ui.StockQuotesActivity,java.util.List) -> a
    com.dkhs.portfolio.engine.VisitorDataEngine access$100(com.dkhs.portfolio.ui.StockQuotesActivity) -> a
    long access$200(com.dkhs.portfolio.ui.StockQuotesActivity) -> b
    long access$202(com.dkhs.portfolio.ui.StockQuotesActivity,long) -> a
    void access$300(com.dkhs.portfolio.ui.StockQuotesActivity) -> c
    com.dkhs.portfolio.bean.StockQuotesBean access$400(com.dkhs.portfolio.ui.StockQuotesActivity) -> d
    void access$500(com.dkhs.portfolio.ui.StockQuotesActivity) -> e
    void access$600(com.dkhs.portfolio.ui.StockQuotesActivity) -> f
    void access$700(com.dkhs.portfolio.ui.StockQuotesActivity) -> g
    void access$800(com.dkhs.portfolio.ui.StockQuotesActivity) -> h
    void access$900(com.dkhs.portfolio.ui.StockQuotesActivity) -> i
    void access$1000(com.dkhs.portfolio.ui.StockQuotesActivity) -> j
    void access$1100(com.dkhs.portfolio.ui.StockQuotesActivity,int) -> a
    java.util.List access$1200(com.dkhs.portfolio.ui.StockQuotesActivity) -> k
    void access$1300(com.dkhs.portfolio.ui.StockQuotesActivity,android.support.v4.app.Fragment) -> a
    void access$1400(com.dkhs.portfolio.ui.StockQuotesActivity) -> l
    void access$1500(com.dkhs.portfolio.ui.StockQuotesActivity) -> m
    com.dkhs.portfolio.ui.widget.HScrollTitleView access$1600(com.dkhs.portfolio.ui.StockQuotesActivity) -> n
    void access$1700(com.dkhs.portfolio.ui.StockQuotesActivity) -> o
    void access$1800(com.dkhs.portfolio.ui.StockQuotesActivity) -> p
    com.dkhs.portfolio.ui.widget.ScrollViewPager access$1900(com.dkhs.portfolio.ui.StockQuotesActivity) -> q
    android.widget.Button access$2000(com.dkhs.portfolio.ui.StockQuotesActivity) -> r
    com.dkhs.portfolio.bean.SelectStockBean access$2100(com.dkhs.portfolio.ui.StockQuotesActivity) -> s
    com.dkhs.portfolio.bean.StockQuotesBean access$402(com.dkhs.portfolio.ui.StockQuotesActivity,com.dkhs.portfolio.bean.StockQuotesBean) -> a
    com.dkhs.portfolio.ui.StockLandView access$2200(com.dkhs.portfolio.ui.StockQuotesActivity) -> t
    com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment access$2300(com.dkhs.portfolio.ui.StockQuotesActivity) -> u
    android.widget.TextView access$2400(com.dkhs.portfolio.ui.StockQuotesActivity) -> v
    void access$2500(com.dkhs.portfolio.ui.StockQuotesActivity) -> w
    void access$2600(com.dkhs.portfolio.ui.StockQuotesActivity,boolean) -> a
    android.view.View access$2700(com.dkhs.portfolio.ui.StockQuotesActivity) -> x
    android.view.View access$2800(com.dkhs.portfolio.ui.StockQuotesActivity) -> y
    com.dkhs.portfolio.ui.FloatingActionMenu access$2900(com.dkhs.portfolio.ui.StockQuotesActivity) -> z
    java.util.ArrayList access$3000(com.dkhs.portfolio.ui.StockQuotesActivity) -> A
com.dkhs.portfolio.ui.StockQuotesActivity$1 -> com.dkhs.portfolio.ui.ef:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.StockQuotesActivity$10 -> com.dkhs.portfolio.ui.eg:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    com.dkhs.portfolio.bean.StockQuotesBean parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.StockQuotesBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.StockQuotesActivity$11 -> com.dkhs.portfolio.ui.eh:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.StockQuotesActivity$12 -> com.dkhs.portfolio.ui.ei:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.StockQuotesActivity$13 -> com.dkhs.portfolio.ui.ej:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.StockQuotesActivity$14 -> com.dkhs.portfolio.ui.ek:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.StockQuotesActivity$15 -> com.dkhs.portfolio.ui.el:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.dkhs.portfolio.ui.StockQuotesActivity$16 -> com.dkhs.portfolio.ui.em:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
com.dkhs.portfolio.ui.StockQuotesActivity$2 -> com.dkhs.portfolio.ui.en:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    boolean onMenuItemSelected(int) -> a
com.dkhs.portfolio.ui.StockQuotesActivity$3 -> com.dkhs.portfolio.ui.eo:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.StockQuotesActivity$4 -> com.dkhs.portfolio.ui.ep:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.StockQuotesActivity$5 -> com.dkhs.portfolio.ui.eq:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onChange(com.dkhs.portfolio.bean.SelectStockBean) -> a
com.dkhs.portfolio.ui.StockQuotesActivity$6 -> com.dkhs.portfolio.ui.er:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.StockQuotesActivity$7 -> com.dkhs.portfolio.ui.es:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.StockQuotesActivity$8 -> com.dkhs.portfolio.ui.et:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onScrollChanged(com.dkhs.portfolio.ui.widget.InterceptScrollView,int,int,int,int) -> a
com.dkhs.portfolio.ui.StockQuotesActivity$9 -> com.dkhs.portfolio.ui.eu:
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.StockQuotesActivity$IndexTabSelectListener -> com.dkhs.portfolio.ui.StockQuotesActivity$a:
    java.lang.String mExchange -> b
    java.lang.String mListSector -> c
    com.dkhs.portfolio.ui.StockQuotesActivity this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.StockRemindActivity -> com.dkhs.portfolio.ui.StockRemindActivity:
    android.widget.Button btnRight -> e
    com.dkhs.portfolio.bean.SelectStockBean mStockBean -> f
    com.dkhs.portfolio.bean.CombinationBean mComBean -> k
    boolean isCombinationSetting -> l
    boolean isFundSetting -> m
    android.widget.TextView tvStockName -> n
    android.widget.TextView tvStockCode -> o
    android.widget.TextView tvPercent -> p
    android.widget.TextView tvPrice -> q
    android.widget.TextView tvUpText -> r
    android.widget.TextView tvDownText -> s
    android.widget.TextView tvUpTip -> t
    android.widget.TextView tvDownTip -> u
    android.widget.TextView tvUpUnit -> v
    android.widget.TextView tvDownUnit -> w
    android.support.v7.widget.SwitchCompat swPriceUp -> x
    android.support.v7.widget.SwitchCompat swPriceDown -> y
    android.support.v7.widget.SwitchCompat swDayPercent -> z
    android.widget.EditText etPriceUp -> A
    android.widget.EditText etPriceDown -> B
    android.widget.EditText etDayPercent -> C
    android.view.View viewAdjustRemind -> D
    android.view.View viewFundRemind -> E
    android.view.View viewNoticeRemind -> F
    android.view.View viewYanbaoRemind -> G
    android.support.v7.widget.SwitchCompat swAdjustRemind -> H
    android.support.v7.widget.SwitchCompat swNoticeRemind -> I
    android.support.v7.widget.SwitchCompat swYanbaoRemind -> J
    android.support.v7.widget.SwitchCompat swFundRemind -> K
    boolean isPriceUpOK -> L
    java.lang.String strBefore -> M
    android.text.TextWatcher priceUpTextWatch -> a
    android.text.TextWatcher priceDownTextWatch -> b
    android.text.TextWatcher percentTextWatch -> c
    boolean isPriceDownOk -> N
    com.dkhs.portfolio.net.ParseHttpListener remindHttpListener -> d
    android.content.Intent newStockIntent(android.content.Context,com.dkhs.portfolio.bean.SelectStockBean) -> a
    android.content.Intent newCombinatIntent(android.content.Context,com.dkhs.portfolio.bean.CombinationBean) -> a
    android.content.Intent newStockIntent(android.content.Context,com.dkhs.portfolio.bean.SelectStockBean,boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> b
    void initView() -> a
    void setFundStyle() -> b
    void setStockStyle() -> c
    void setCombinationStyle() -> d
    void setAlertView(com.dkhs.portfolio.bean.AlertSetBean) -> a
    void setFundAlertView(com.dkhs.portfolio.bean.AlertSetBean) -> b
    void setAlertView(com.dkhs.portfolio.bean.PortfolioAlertBean) -> a
    java.lang.String stripZeros(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void setPriceUpTip(float) -> a
    void setPriceDownTip(float) -> b
    java.lang.String setColorText(int,java.lang.String) -> a
    boolean isAllowPriceInputText(java.lang.String) -> b
    boolean isAllowPercentInputText(java.lang.String) -> d
    float priceUpTip(java.lang.String,float) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void showAlertDialog(int) -> a
    void postRemindToServer() -> k
    void postFundRemindToServer() -> l
    float parseToFloat(android.widget.EditText) -> a
    java.lang.String access$002(com.dkhs.portfolio.ui.StockRemindActivity,java.lang.String) -> a
    java.lang.String access$000(com.dkhs.portfolio.ui.StockRemindActivity) -> a
    android.widget.EditText access$100(com.dkhs.portfolio.ui.StockRemindActivity) -> b
    boolean access$200(com.dkhs.portfolio.ui.StockRemindActivity,java.lang.String) -> b
    boolean access$300(com.dkhs.portfolio.ui.StockRemindActivity) -> c
    com.dkhs.portfolio.bean.CombinationBean access$400(com.dkhs.portfolio.ui.StockRemindActivity) -> d
    com.dkhs.portfolio.bean.SelectStockBean access$500(com.dkhs.portfolio.ui.StockRemindActivity) -> e
    float access$600(com.dkhs.portfolio.ui.StockRemindActivity,java.lang.String,float) -> a
    android.widget.TextView access$700(com.dkhs.portfolio.ui.StockRemindActivity) -> f
    void access$800(com.dkhs.portfolio.ui.StockRemindActivity,float) -> a
    android.widget.EditText access$900(com.dkhs.portfolio.ui.StockRemindActivity) -> g
    android.widget.TextView access$1000(com.dkhs.portfolio.ui.StockRemindActivity) -> h
    void access$1100(com.dkhs.portfolio.ui.StockRemindActivity,float) -> b
    android.widget.EditText access$1200(com.dkhs.portfolio.ui.StockRemindActivity) -> i
    boolean access$1300(com.dkhs.portfolio.ui.StockRemindActivity,java.lang.String) -> c
com.dkhs.portfolio.ui.StockRemindActivity$1 -> com.dkhs.portfolio.ui.ev:
    com.dkhs.portfolio.ui.StockRemindActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.StockRemindActivity$2 -> com.dkhs.portfolio.ui.ew:
    com.dkhs.portfolio.ui.StockRemindActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.StockRemindActivity$3 -> com.dkhs.portfolio.ui.ex:
    com.dkhs.portfolio.ui.StockRemindActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.StockRemindActivity$4 -> com.dkhs.portfolio.ui.ey:
    int val$messageId -> a
    com.dkhs.portfolio.ui.StockRemindActivity this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.StockRemindActivity$5 -> com.dkhs.portfolio.ui.ez:
    com.dkhs.portfolio.ui.StockRemindActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.TestActivity -> com.dkhs.portfolio.ui.TestActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.dkhs.portfolio.ui.VerificationActivity -> com.dkhs.portfolio.ui.VerificationActivity:
    java.lang.String phoneNum -> c
    android.widget.Button rlfbutton -> d
    android.widget.TextView tvPhoneNum -> e
    android.widget.EditText etVerifucode -> f
    android.widget.Button btn_get_code -> k
    android.content.Context context -> l
    com.dkhs.portfolio.engine.UserEngineImpl engine -> m
    com.dkhs.portfolio.receiver.SMSBroadcastReceiver mSMSBroadcastReceiver -> n
    boolean isSetPsw -> o
    java.util.Timer mTimer -> a
    com.dkhs.portfolio.net.ParseHttpListener listener -> b
    int count -> p
    android.os.Handler handler -> q
    java.lang.String verifyCode -> r
    java.lang.String mPageName -> s
    android.content.Intent newIntent(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    android.content.Intent newSettPswIntent(android.content.Context,java.lang.String,java.lang.String) -> a
    void handleExtras(android.os.Bundle) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void bindMobile() -> a
    void getVerifyCode() -> b
    void timerTask() -> c
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.widget.EditText access$000(com.dkhs.portfolio.ui.VerificationActivity) -> a
    android.widget.Button access$100(com.dkhs.portfolio.ui.VerificationActivity) -> b
    boolean access$200(com.dkhs.portfolio.ui.VerificationActivity) -> c
    void access$300(com.dkhs.portfolio.ui.VerificationActivity) -> d
    java.lang.String access$400(com.dkhs.portfolio.ui.VerificationActivity) -> e
    java.lang.String access$500(com.dkhs.portfolio.ui.VerificationActivity) -> f
    int access$600(com.dkhs.portfolio.ui.VerificationActivity) -> g
    android.os.Handler access$700(com.dkhs.portfolio.ui.VerificationActivity) -> h
    int access$608(com.dkhs.portfolio.ui.VerificationActivity) -> i
    android.widget.Button access$800(com.dkhs.portfolio.ui.VerificationActivity) -> j
    int access$602(com.dkhs.portfolio.ui.VerificationActivity,int) -> a
com.dkhs.portfolio.ui.VerificationActivity$1 -> com.dkhs.portfolio.ui.fa:
    com.dkhs.portfolio.ui.VerificationActivity this$0 -> a
    void onReceived(java.lang.String) -> a
com.dkhs.portfolio.ui.VerificationActivity$2 -> com.dkhs.portfolio.ui.fb:
    com.dkhs.portfolio.ui.VerificationActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.dkhs.portfolio.ui.VerificationActivity$3 -> com.dkhs.portfolio.ui.fc:
    com.dkhs.portfolio.ui.VerificationActivity this$0 -> a
    java.lang.Boolean parseDateTask(java.lang.String) -> a
    void afterParseData(java.lang.Boolean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.VerificationActivity$4 -> com.dkhs.portfolio.ui.fd:
    com.dkhs.portfolio.ui.VerificationActivity this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.dkhs.portfolio.ui.VerificationActivity$5 -> com.dkhs.portfolio.ui.fe:
    com.dkhs.portfolio.ui.VerificationActivity this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.VerificationActivity$6 -> com.dkhs.portfolio.ui.ff:
    com.dkhs.portfolio.ui.VerificationActivity this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.VerificationActivity$7 -> com.dkhs.portfolio.ui.fg:
    com.dkhs.portfolio.ui.VerificationActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.WebActivity -> com.dkhs.portfolio.ui.WebActivity:
    java.lang.String title -> a
    java.lang.String uri -> b
    android.webkit.WebView webView -> c
    android.content.Intent getIntent(android.content.Context,java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleIntent(android.content.Intent) -> a
    void initView() -> a
com.dkhs.portfolio.ui.YanBaoActivity -> com.dkhs.portfolio.ui.YanBaoActivity:
    android.widget.LinearLayout layout -> a
    android.content.Context context -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initList() -> b
    void onPause() -> onPause
    void onResume() -> onResume
com.dkhs.portfolio.ui.YanbaoDetailActivity -> com.dkhs.portfolio.ui.YanbaoDetailActivity:
    android.widget.ImageView newsTitleIcon -> b
    android.widget.TextView newsTitleName -> c
    android.widget.TextView newsTitleDate -> d
    android.widget.TextView newsTitleNum -> e
    android.widget.TextView newsTextTitle -> f
    android.widget.TextView newsTextText -> k
    android.widget.TextView newsTitleSym -> l
    java.lang.String textId -> m
    com.dkhs.portfolio.engine.LoadNewsTextEngine mLoadDataEngine -> n
    com.dkhs.portfolio.bean.OptionNewsBean mOptionNewsBean -> o
    java.lang.String optionNum -> p
    java.lang.String optionName -> q
    android.content.Context context -> r
    java.lang.String mContentType -> s
    com.dkhs.portfolio.engine.LoadNewsTextEngine$ILoadDataBackListener mSelectStockBackListener -> a
    java.lang.String mPageName -> t
    void onCreate(android.os.Bundle) -> onCreate
    android.content.Intent newIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void getId(android.os.Bundle) -> b
    void initView() -> a
    void setValue() -> b
    void onPause() -> onPause
    void onResume() -> onResume
    com.dkhs.portfolio.bean.OptionNewsBean access$002(com.dkhs.portfolio.ui.YanbaoDetailActivity,com.dkhs.portfolio.bean.OptionNewsBean) -> a
com.dkhs.portfolio.ui.YanbaoDetailActivity$1 -> com.dkhs.portfolio.ui.fh:
    com.dkhs.portfolio.ui.YanbaoDetailActivity this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.OptionNewsBean) -> a
com.dkhs.portfolio.ui.adapter.AchivementAdapter -> com.dkhs.portfolio.ui.adapter.a:
    int selectIndex -> e
    com.dkhs.portfolio.ui.widget.BenefitChartView benefitChartView -> f
    java.util.Map map -> g
    int setLayoutID() -> a
    void onViewCreated(int,android.view.View,com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder) -> a
    void getView33(int,android.view.View,com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder) -> b
    void setText(android.widget.TextView,double) -> a
    void addBenefitView(android.view.ViewGroup,com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity,boolean) -> a
    void access$000(com.dkhs.portfolio.ui.adapter.AchivementAdapter,android.view.ViewGroup,com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity,boolean) -> a
    int access$102(com.dkhs.portfolio.ui.adapter.AchivementAdapter,int) -> a
com.dkhs.portfolio.ui.adapter.AchivementAdapter$OnClickImp -> com.dkhs.portfolio.ui.adapter.a$a:
    com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder vh -> a
    com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity achivementsEntity -> b
    int position -> c
    com.dkhs.portfolio.ui.adapter.AchivementAdapter this$0 -> d
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.AchivementAdapter$OnClickImp$1 -> com.dkhs.portfolio.ui.adapter.b:
    com.dkhs.portfolio.ui.adapter.AchivementAdapter$OnClickImp this$1 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> d
com.dkhs.portfolio.ui.adapter.AddSearchItemAdapter -> com.dkhs.portfolio.ui.adapter.c:
    com.dkhs.portfolio.ui.widget.ChangeFollowView changeFollowView -> g
    com.dkhs.portfolio.ui.widget.ChangeFollowView$IChangeSuccessListener changeSuccessListener -> h
    com.dkhs.portfolio.net.ParseHttpListener delFollowListener -> a
    com.dkhs.portfolio.net.ParseHttpListener followListener -> b
    void init(android.content.Context) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.adapter.AddSearchItemAdapter$1 -> com.dkhs.portfolio.ui.adapter.d:
    com.dkhs.portfolio.ui.adapter.AddSearchItemAdapter this$0 -> a
    void onChange(com.dkhs.portfolio.bean.SelectStockBean) -> a
com.dkhs.portfolio.ui.adapter.AddSearchItemAdapter$2 -> com.dkhs.portfolio.ui.adapter.e:
    com.dkhs.portfolio.ui.adapter.AddSearchItemAdapter this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.adapter.AddSearchItemAdapter$3 -> com.dkhs.portfolio.ui.adapter.f:
    com.dkhs.portfolio.ui.adapter.AddSearchItemAdapter this$0 -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.adapter.AddStockItemAdapter -> com.dkhs.portfolio.ui.adapter.g:
    com.dkhs.portfolio.ui.widget.ChangeFollowView changeFollowView -> a
    com.dkhs.portfolio.ui.widget.ChangeFollowView$IChangeSuccessListener changeSuccessListener -> b
    void init(android.content.Context) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.adapter.AddStockItemAdapter$1 -> com.dkhs.portfolio.ui.adapter.h:
    com.dkhs.portfolio.ui.adapter.AddStockItemAdapter this$0 -> a
    void onChange(com.dkhs.portfolio.bean.SelectStockBean) -> a
com.dkhs.portfolio.ui.adapter.AutoAdapter -> com.dkhs.portfolio.ui.adapter.i:
    com.dkhs.portfolio.ui.adapter.ViewHolderUtils vh -> a
    android.view.View getViewAgent(int,android.view.View,android.view.ViewGroup) -> a
    int setLayoutID() -> a
    void onViewCreated(int,android.view.View,com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder) -> a
com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund -> com.dkhs.portfolio.ui.adapter.j:
    android.content.Context mContext -> c
    java.util.List mDataList -> d
    com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund$ISelectChangeListener mSelectLisenter -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setData(java.util.List) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void setCheckChangeListener(com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund$ISelectChangeListener) -> a
com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund$ISelectChangeListener -> com.dkhs.portfolio.ui.adapter.j$a:
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> a
com.dkhs.portfolio.ui.adapter.BasePagerFragmentAdapter -> com.dkhs.portfolio.ui.adapter.k:
    java.util.List fragmentList -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> getCount
com.dkhs.portfolio.ui.adapter.BaseRVAdapter -> com.dkhs.portfolio.ui.adapter.l:
    java.util.List list -> a
    android.content.Context context -> b
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> c
    com.dkhs.portfolio.ui.adapter.RVHolder onCreateViewHolder(android.view.ViewGroup,int) -> c
    int onCreateViewLayoutID(int) -> c
    void onViewRecycled(com.dkhs.portfolio.ui.adapter.RVHolder) -> a
    void onBindViewHolder(com.dkhs.portfolio.ui.adapter.RVHolder,int) -> a
    void onBindViewHolder(com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder,int) -> a
    int getItemCount() -> a
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> a
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> a
    android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> a
    android.widget.AdapterView$OnItemClickListener access$000(com.dkhs.portfolio.ui.adapter.BaseRVAdapter) -> a
com.dkhs.portfolio.ui.adapter.BaseRVAdapter$1 -> com.dkhs.portfolio.ui.adapter.m:
    com.dkhs.portfolio.ui.adapter.RVHolder val$holder -> a
    com.dkhs.portfolio.ui.adapter.BaseRVAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.CombinationRankAdapter -> com.dkhs.portfolio.ui.adapter.n:
    android.content.Context mContext -> c
    java.util.List mDataList -> d
    java.lang.String mOrderType -> e
    com.dkhs.portfolio.net.ParseHttpListener followComListener -> a
    com.dkhs.portfolio.net.ParseHttpListener delFollowComListener -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void showDelDialog(android.widget.CompoundButton,boolean) -> a
    void delFollowCombinatio(com.dkhs.portfolio.bean.CombinationBean) -> a
    void updateDataList(com.dkhs.portfolio.bean.CombinationBean) -> b
    void access$000(com.dkhs.portfolio.ui.adapter.CombinationRankAdapter,com.dkhs.portfolio.bean.CombinationBean) -> a
    void access$100(com.dkhs.portfolio.ui.adapter.CombinationRankAdapter,com.dkhs.portfolio.bean.CombinationBean) -> b
com.dkhs.portfolio.ui.adapter.CombinationRankAdapter$1 -> com.dkhs.portfolio.ui.adapter.o:
    android.widget.CompoundButton val$buttonView -> a
    com.dkhs.portfolio.ui.adapter.CombinationRankAdapter this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.adapter.CombinationRankAdapter$2 -> com.dkhs.portfolio.ui.adapter.p:
    com.dkhs.portfolio.ui.adapter.CombinationRankAdapter this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.adapter.CombinationRankAdapter$3 -> com.dkhs.portfolio.ui.adapter.q:
    com.dkhs.portfolio.ui.adapter.CombinationRankAdapter this$0 -> a
    void requestCallBack() -> requestCallBack
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.adapter.CombinationRankAdapter$4 -> com.dkhs.portfolio.ui.adapter.r:
    com.dkhs.portfolio.ui.adapter.CombinationRankAdapter this$0 -> a
    void requestCallBack() -> requestCallBack
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.adapter.CombinationRankAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.n$a:
    android.widget.TextView tvUserName -> a
    android.widget.TextView tvValue -> b
    android.widget.TextView tvCombinationName -> c
    android.view.View valueView -> d
    android.widget.TextView tvIncomeText -> e
    android.widget.CheckBox cbFollowed -> f
    android.widget.ImageView ivJiangPai -> g
com.dkhs.portfolio.ui.adapter.CompareIndexAdapter -> com.dkhs.portfolio.ui.adapter.CompareIndexAdapter:
    android.content.Context mContext -> b
    int mItemHeight -> c
    android.widget.AbsListView$LayoutParams mItemViewLayoutParams -> d
    java.util.List mDataList -> e
    android.widget.CompoundButton$OnCheckedChangeListener itemSelectChangeListener -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setItemHeight(int) -> a
    android.content.Context access$000(com.dkhs.portfolio.ui.adapter.CompareIndexAdapter) -> a
com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$1 -> com.dkhs.portfolio.ui.adapter.s:
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem -> com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem:
    java.lang.String name -> name
    java.lang.String value -> value
    boolean iSelect -> iSelect
com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable -> com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable:
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem compareFundItem$$0 -> compareFundItem$$0
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable$Creator$$13 CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem readcom_dkhs_portfolio_ui_adapter_CompareIndexAdapter$CompareFundItem(android.os.Parcel) -> readcom_dkhs_portfolio_ui_adapter_CompareIndexAdapter$CompareFundItem
    void writecom_dkhs_portfolio_ui_adapter_CompareIndexAdapter$CompareFundItem(com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem,android.os.Parcel,int) -> writecom_dkhs_portfolio_ui_adapter_CompareIndexAdapter$CompareFundItem
    int describeContents() -> describeContents
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable$1 -> com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable$1:
com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable$Creator$$13 -> com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable$a:
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable createFromParcel(android.os.Parcel) -> a
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$a:
    android.widget.TextView tvName -> a
    android.widget.TextView tvValue -> b
com.dkhs.portfolio.ui.adapter.DiscussFlowAdapter -> com.dkhs.portfolio.ui.adapter.t:
    android.content.Context mContext -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.DiscussFlowAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.t$a:
    android.widget.ImageView ivUserHeader -> a
    android.widget.TextView tvUserName -> b
    android.widget.TextView tvTime -> c
    android.widget.TextView tvContent -> d
    android.widget.TextView tvSource -> e
    android.widget.TextView tvAgreeCount -> f
    android.widget.TextView tvMessageCount -> g
com.dkhs.portfolio.ui.adapter.FiveRangeAdapter -> com.dkhs.portfolio.ui.adapter.u:
    android.content.Context mContext -> a
    boolean isBuy -> b
    java.util.List volList -> c
    java.util.List priceList -> d
    float mCompareValue -> e
    android.widget.AbsListView$LayoutParams mItemViewLayoutParams -> f
    int mLandTextFont -> g
    android.view.View containerView -> h
    java.lang.String symbol -> i
    void setContainerView(android.view.View) -> a
    void setList(java.util.List,java.util.List,java.lang.String) -> a
    void setCompareValue(float) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean isFloatText(java.lang.String) -> a
com.dkhs.portfolio.ui.adapter.FiveRangeAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.u$a:
    android.widget.TextView tvTag -> a
    android.widget.TextView tvVol -> b
    android.widget.TextView tvPrice -> c
    android.widget.LinearLayout linearLayout -> d
com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter -> com.dkhs.portfolio.ui.adapter.v:
    android.content.Context context -> c
    java.lang.String[] nameList -> d
    java.util.List fragmentList -> e
    android.widget.LinearLayout titleLayout -> f
    android.support.v4.app.FragmentManager mFragmentManager -> g
    android.view.LayoutInflater inflater -> h
    int[] textWid -> i
    int[] textLayout -> j
    android.widget.ImageView iv -> k
    int hisPosition -> l
    android.widget.TextView[] tvList -> m
    int offset -> n
    int oneTextSize -> o
    int imageAddSize -> p
    com.dkhs.portfolio.ui.widget.ScrollViewPager pager -> q
    android.util.DisplayMetrics dm -> r
    int totalLength -> s
    android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener -> a
    android.os.Handler mHandler -> b
    void initDate() -> b
    void createView() -> a
    void scroll(int) -> a
    void setAnima(int,int) -> a
    com.dkhs.portfolio.ui.widget.ScrollViewPager access$000(com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter) -> a
com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter$1 -> com.dkhs.portfolio.ui.adapter.w:
    com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter$2 -> com.dkhs.portfolio.ui.adapter.x:
    com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter$OnItemListener -> com.dkhs.portfolio.ui.adapter.v$a:
    int position -> b
    com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter$OrderFragmentAdapter -> com.dkhs.portfolio.ui.adapter.v$b:
    java.util.List fragmentList -> b
    com.dkhs.portfolio.ui.adapter.FragmentSelectAdapter this$0 -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> getCount
com.dkhs.portfolio.ui.adapter.FriendsOrFollowerAdapter -> com.dkhs.portfolio.ui.adapter.y:
    com.lidroid.xutils.BitmapUtils bitmapUtils -> e
    int setLayoutID() -> a
    void onViewCreated(int,android.view.View,com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder) -> a
com.dkhs.portfolio.ui.adapter.FundManagerAdapter -> com.dkhs.portfolio.ui.adapter.z:
    int setLayoutID() -> a
    void onViewCreated(int,android.view.View,com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder) -> a
com.dkhs.portfolio.ui.adapter.FundOrderAdapter -> com.dkhs.portfolio.ui.adapter.aa:
    java.lang.String sort -> e
    java.lang.String fundType -> f
    void setSortAndType(java.lang.String,java.lang.String) -> a
    int setLayoutID() -> a
    void onViewCreated(int,android.view.View,com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder) -> a
com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter -> com.dkhs.portfolio.ui.adapter.ab:
    java.util.List views -> c
    android.app.Activity activity -> d
    android.view.View$OnClickListener startClickListener -> a
    android.view.View$OnClickListener registerClickListener -> b
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void finishUpdate(android.view.View) -> finishUpdate
    int getCount() -> getCount
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void goLogin() -> a
    void goMainPage() -> b
    void setGuided() -> c
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void startUpdate(android.view.View) -> startUpdate
    void access$000(com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter) -> a
    void access$100(com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter) -> b
    void access$200(com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter) -> c
com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter$1 -> com.dkhs.portfolio.ui.adapter.ac:
    com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter$2 -> com.dkhs.portfolio.ui.adapter.ad:
    com.dkhs.portfolio.ui.adapter.GuideViewPagerAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.HotPlateAdapter -> com.dkhs.portfolio.ui.adapter.ae:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.dkhs.portfolio.ui.adapter.HotPlateAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.ae$a:
    android.widget.LinearLayout tvLayoutTitle -> a
    android.widget.TextView tvTextStockName -> b
    android.widget.TextView tvTextName -> c
    android.widget.TextView tvTextPercent -> d
com.dkhs.portfolio.ui.adapter.InfoOptionAdapter -> com.dkhs.portfolio.ui.adapter.af:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    com.dkhs.portfolio.bean.OptionNewsBean mOptionNewsBean -> c
    com.dkhs.portfolio.ui.adapter.InfoOptionAdapter$ViewHodler viewHolder -> d
    android.util.DisplayMetrics dm -> e
    android.graphics.Rect rect -> f
    boolean isSecondNotice -> g
    void setSecondNotice(boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.InfoOptionAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.af$a:
    android.widget.TextView tvStockName -> a
    android.widget.TextView tvTextDate -> b
    android.widget.TextView text -> c
    android.widget.TextView tv -> d
    android.widget.TextView tvType -> e
com.dkhs.portfolio.ui.adapter.MBaseAdapter -> com.dkhs.portfolio.ui.adapter.ag:
    android.view.LayoutInflater inflater -> b
    android.content.Context context -> c
    java.util.List list -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getViewAgent(int,android.view.View,android.view.ViewGroup) -> a
com.dkhs.portfolio.ui.adapter.MarketCenterGridAdapter -> com.dkhs.portfolio.ui.adapter.ah:
    java.util.List mDataList -> a
    android.view.LayoutInflater mInflater -> b
    android.content.Context mcontext -> c
    boolean isPlate -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.MarketCenterGridAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.ah$a:
    android.widget.TextView tvStockName -> a
    android.widget.TextView tvTitleName -> b
    android.widget.TextView tvCurrentValue -> c
    android.widget.TextView tvIncrease -> d
    android.widget.TextView tvPercent -> e
com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter -> com.dkhs.portfolio.ui.adapter.ai:
    boolean isDefColor -> a
    com.dkhs.portfolio.bean.SelectStockBean mStockQuotesBean -> b
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter$OnItemListener -> com.dkhs.portfolio.ui.adapter.ai$a:
    int position -> b
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.ai$b:
    android.widget.LinearLayout tvLayoutTitle -> a
    android.widget.TextView tvTextName -> b
    android.widget.TextView tvTextNameNum -> c
    android.widget.TextView tvTextItemIndex -> d
    android.widget.TextView tvTextPercent -> e
com.dkhs.portfolio.ui.adapter.MarketPlateGridAdapter -> com.dkhs.portfolio.ui.adapter.aj:
    java.util.List mDataList -> a
    android.view.LayoutInflater mInflater -> b
    android.content.Context mcontext -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.MarketPlateGridAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.aj$a:
    android.widget.TextView tvStockName -> a
    android.widget.TextView tvTitleName -> b
    android.widget.TextView tvCurrentValue -> c
    android.widget.TextView tvIncrease -> d
    android.widget.TextView tvPercent -> e
com.dkhs.portfolio.ui.adapter.OptionForOnelistAdapter -> com.dkhs.portfolio.ui.adapter.ak:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    com.dkhs.portfolio.bean.OptionNewsBean mOptionNewsBean -> c
    com.dkhs.portfolio.ui.adapter.OptionForOnelistAdapter$ViewHodler viewHolder -> d
    android.util.DisplayMetrics dm -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.OptionForOnelistAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.ak$a:
    android.widget.TextView tvTextName -> a
    android.widget.TextView tvTextNameNum -> b
    android.widget.TextView tvTextDate -> c
    android.widget.TextView zhengquan -> d
com.dkhs.portfolio.ui.adapter.OptionMarketAdapter -> com.dkhs.portfolio.ui.adapter.al:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    com.dkhs.portfolio.bean.OptionNewsBean mOptionNewsBean -> c
    com.dkhs.portfolio.ui.adapter.OptionMarketAdapter$ViewHodler viewHolder -> d
    android.util.DisplayMetrics dm -> e
    android.graphics.Rect rect -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.OptionMarketAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.al$a:
    android.widget.TextView tvTextNameNum -> a
    android.widget.TextView tvTextDate -> b
    android.widget.TextView text -> c
    android.widget.TextView tv -> d
com.dkhs.portfolio.ui.adapter.OptionalFundsAdapter -> com.dkhs.portfolio.ui.adapter.am:
    int tabIndex -> a
    android.view.View$OnClickListener percentClick -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.OptionalFundsAdapter$1 -> com.dkhs.portfolio.ui.adapter.an:
    com.dkhs.portfolio.ui.adapter.OptionalFundsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.OptionalFundsAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.am$a:
    android.widget.TextView tvStockName -> a
    android.widget.TextView tvStockNum -> b
    android.widget.TextView tvCurrentValue -> c
    android.widget.TextView tvPercentValue -> d
    android.widget.TextView tvTradeDay -> e
    android.widget.ImageView ivWanShou -> f
com.dkhs.portfolio.ui.adapter.OptionalPriceAdapter -> com.dkhs.portfolio.ui.adapter.ao:
    int tabIndex -> a
    android.view.View$OnClickListener percentClick -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.OptionalPriceAdapter$1 -> com.dkhs.portfolio.ui.adapter.ap:
    com.dkhs.portfolio.ui.adapter.OptionalPriceAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.OptionalPriceAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.ao$a:
    android.widget.TextView tvStockName -> a
    android.widget.TextView tvStockNum -> b
    android.widget.TextView tvCurrentValue -> c
    android.widget.TextView tvPercentValue -> d
    android.widget.TextView tvIncearseValue -> e
com.dkhs.portfolio.ui.adapter.OptionalStockAdapter -> com.dkhs.portfolio.ui.adapter.aq:
    android.content.Context mContext -> a
    float maxValue -> b
    java.util.List stockList -> c
    com.dkhs.portfolio.ui.adapter.OptionalStockAdapter$IDutyNotify mDutyNotify -> d
    void setList(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    float setSurpusValue() -> a
    void setDutyNotifyListener(com.dkhs.portfolio.ui.adapter.OptionalStockAdapter$IDutyNotify) -> a
    java.util.List access$000(com.dkhs.portfolio.ui.adapter.OptionalStockAdapter) -> a
    com.dkhs.portfolio.ui.adapter.OptionalStockAdapter$IDutyNotify access$100(com.dkhs.portfolio.ui.adapter.OptionalStockAdapter) -> b
    float access$200(com.dkhs.portfolio.ui.adapter.OptionalStockAdapter) -> c
com.dkhs.portfolio.ui.adapter.OptionalStockAdapter$1 -> com.dkhs.portfolio.ui.adapter.ar:
    int val$position -> a
    android.widget.SeekBar val$seekbar -> b
    android.widget.TextView val$tvPercent -> c
    com.dkhs.portfolio.ui.adapter.OptionalStockAdapter this$0 -> d
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.dkhs.portfolio.ui.adapter.OptionalStockAdapter$IDutyNotify -> com.dkhs.portfolio.ui.adapter.aq$a:
    void notifyRefresh(int,int) -> a
com.dkhs.portfolio.ui.adapter.OptionlistAdapter -> com.dkhs.portfolio.ui.adapter.as:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    com.dkhs.portfolio.bean.OptionNewsBean mOptionNewsBean -> c
    com.dkhs.portfolio.ui.adapter.OptionlistAdapter$ViewHodler viewHolder -> d
    android.util.DisplayMetrics dm -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.OptionlistAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.as$a:
    android.widget.TextView tvTextName -> a
    android.widget.TextView tvTextNameNum -> b
    android.widget.TextView tvTextDate -> c
    android.widget.TextView zhengquan -> d
com.dkhs.portfolio.ui.adapter.PagerFragmentAdapter -> com.dkhs.portfolio.ui.adapter.at:
    java.util.List fragmentList -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    int getCount() -> getCount
com.dkhs.portfolio.ui.adapter.PositionAdjustHistoryAdapter -> com.dkhs.portfolio.ui.adapter.au:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    void setList(java.util.List) -> a
    void convertPositionBeanToTimeFow(java.util.List,android.content.Context) -> a
    com.dkhs.portfolio.ui.adapter.PositionAdjustHistoryAdapter$AdjustListBean getLastBean() -> a
    boolean isCreateItem(com.dkhs.portfolio.bean.PositionAdjustBean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.PositionAdjustHistoryAdapter$AdjustListBean -> com.dkhs.portfolio.ui.adapter.au$a:
    java.lang.String time -> a
    android.widget.LinearLayout contentView -> b
    com.dkhs.portfolio.ui.adapter.PositionAdjustHistoryAdapter this$0 -> c
com.dkhs.portfolio.ui.adapter.PositionAdjustHistoryAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.au$b:
    android.widget.TextView tvAdjustTime -> a
    android.widget.LinearLayout llAdjustContent -> b
com.dkhs.portfolio.ui.adapter.PositionContributedapter -> com.dkhs.portfolio.ui.adapter.av:
    android.content.Context mContext -> a
    int maxValue -> b
    java.util.List stockList -> c
    void setList(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.PositionContributedapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.av$a:
    android.view.View colorView -> a
    android.widget.TextView tvStockName -> b
    android.widget.TextView tvStockCode -> c
    android.widget.TextView tvCenterValue -> d
    android.widget.TextView tvRightValue -> e
com.dkhs.portfolio.ui.adapter.PositionDetailIncreaAdapter -> com.dkhs.portfolio.ui.adapter.aw:
    android.content.Context mContext -> a
    int maxValue -> b
    java.util.List stockList -> c
    float surpusValu -> d
    void setList(java.util.List) -> a
    void setFundpercent(float) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getSurpusValue() -> a
com.dkhs.portfolio.ui.adapter.PositionDetailIncreaAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.aw$a:
    android.view.View colorView -> a
    android.widget.TextView tvStockName -> b
    android.widget.TextView tvStockCode -> c
    android.widget.TextView tvCenterValue -> d
    android.widget.TextView tvRightValue -> e
com.dkhs.portfolio.ui.adapter.RVHolder -> com.dkhs.portfolio.ui.adapter.ax:
    com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder viewHolder -> j
    com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder getViewHolder() -> v
com.dkhs.portfolio.ui.adapter.ReportFromAdapter -> com.dkhs.portfolio.ui.adapter.ay:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.ReportFromAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.ay$a:
    android.widget.TextView tvDate -> a
    android.widget.TextView tvNetValue -> b
    android.widget.TextView tvDayUP -> c
com.dkhs.portfolio.ui.adapter.ReportNewsAdapter -> com.dkhs.portfolio.ui.adapter.az:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    com.dkhs.portfolio.bean.OptionNewsBean mOptionNewsBean -> c
    android.util.DisplayMetrics dm -> d
    android.graphics.Rect rects -> e
    boolean isSecondYanbao -> f
    void setSecondYanBao(boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.ReportNewsAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.az$a:
    android.widget.TextView tvStockName -> a
    android.widget.TextView tvTextDate -> b
    android.widget.TextView text -> c
    android.widget.TextView tv -> d
    android.widget.TextView tvType -> e
com.dkhs.portfolio.ui.adapter.SearchFundAdatper -> com.dkhs.portfolio.ui.adapter.ba:
    boolean isCombination -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.dkhs.portfolio.ui.adapter.SearchFundAdatper$ViewHodler -> com.dkhs.portfolio.ui.adapter.ba$a:
    android.widget.TextView tvStockName -> a
    android.widget.CheckBox mCheckbox -> b
    android.widget.TextView tvStockNum -> c
com.dkhs.portfolio.ui.adapter.SearchStockAdatper -> com.dkhs.portfolio.ui.adapter.bb:
    boolean isCombination -> a
    com.dkhs.portfolio.engine.VisitorDataEngine mVisitorDataEngine -> f
    java.util.List localList -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.SearchStockAdatper$ViewHodler -> com.dkhs.portfolio.ui.adapter.bb$a:
    android.widget.TextView tvStockName -> a
    android.widget.CheckBox mCheckbox -> b
    android.widget.TextView tvStockNum -> c
    android.widget.TextView tvSuspend -> d
com.dkhs.portfolio.ui.adapter.SelectCompareFundAdatper -> com.dkhs.portfolio.ui.adapter.bc:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.SelectCompareFundAdatper$ViewHodler -> com.dkhs.portfolio.ui.adapter.bc$a:
    android.widget.TextView tvStockName -> a
    android.widget.CheckBox mCheckbox -> b
    android.widget.TextView tvIncreaseValue -> c
com.dkhs.portfolio.ui.adapter.SelectFundAdapter -> com.dkhs.portfolio.ui.adapter.bd:
    android.content.Context mContext -> a
    java.util.List mDataSet -> b
    com.dkhs.portfolio.ui.BaseSelectActivity mActivity -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void showDelDialog() -> a
    void access$000(com.dkhs.portfolio.ui.adapter.SelectFundAdapter) -> a
    java.util.List access$100(com.dkhs.portfolio.ui.adapter.SelectFundAdapter) -> b
    com.dkhs.portfolio.ui.BaseSelectActivity access$200(com.dkhs.portfolio.ui.adapter.SelectFundAdapter) -> c
com.dkhs.portfolio.ui.adapter.SelectFundAdapter$1 -> com.dkhs.portfolio.ui.adapter.be:
    com.dkhs.portfolio.ui.adapter.SelectFundAdapter this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.adapter.SelectFundAdapter$OndelClickListener -> com.dkhs.portfolio.ui.adapter.bd$a:
    com.dkhs.portfolio.bean.SelectStockBean stockBean -> b
    com.dkhs.portfolio.ui.adapter.SelectFundAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.SelectFundAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.bd$b:
    android.widget.TextView tvName -> a
    android.widget.ImageView ivDelIcon -> b
com.dkhs.portfolio.ui.adapter.SelectStockAdatper -> com.dkhs.portfolio.ui.adapter.bf:
    boolean isDefColor -> a
    boolean isAddNewStock -> b
    void init() -> a
    void setAddNewStock(boolean) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.SelectStockAdatper$ViewHodler -> com.dkhs.portfolio.ui.adapter.bf$a:
    android.widget.TextView tvStockName -> a
    android.widget.CheckBox mCheckbox -> b
    android.widget.TextView tvStockNum -> c
    android.widget.TextView tvCurrentValue -> d
    android.widget.TextView tvIncreaseValue -> e
    android.widget.TextView tvSuspend -> f
    android.widget.LinearLayout tvStockLayout -> g
com.dkhs.portfolio.ui.adapter.TabFundsAdapter -> com.dkhs.portfolio.ui.adapter.bg:
    android.content.Context mContext -> a
    java.util.List mDataList -> b
    int tabIndex -> c
    android.view.View$OnClickListener percentClick -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.dkhs.portfolio.ui.adapter.TabFundsAdapter$1 -> com.dkhs.portfolio.ui.adapter.bh:
    com.dkhs.portfolio.ui.adapter.TabFundsAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.adapter.TabFundsAdapter$ViewHodler -> com.dkhs.portfolio.ui.adapter.bg$a:
    android.widget.TextView tvStockName -> a
    android.widget.TextView tvStockNum -> b
    android.widget.TextView tvCurrentValue -> c
    android.widget.TextView tvPercentValue -> d
com.dkhs.portfolio.ui.adapter.UserCombinationAdapter -> com.dkhs.portfolio.ui.adapter.bi:
    android.content.Context mContext -> a
    java.util.List stockList -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.dkhs.portfolio.ui.adapter.UserCombinationAdapter$ViewHolder -> com.dkhs.portfolio.ui.adapter.bi$a:
    android.widget.TextView tvCName -> a
    android.widget.TextView tvCenterValue -> b
    android.widget.TextView tvRightValue -> c
com.dkhs.portfolio.ui.adapter.ViewHolderUtils -> com.dkhs.portfolio.ui.adapter.bj:
    com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder get(android.view.View) -> a
com.dkhs.portfolio.ui.adapter.ViewHolderUtils$ViewHolder -> com.dkhs.portfolio.ui.adapter.bj$a:
    android.util.SparseArray viewHolder -> a
    android.view.View view -> b
    android.view.View get(int) -> a
    android.view.View getRootView() -> a
    android.widget.TextView getTextView(int) -> b
    android.widget.ImageView getImageView(int) -> c
    void setTextView(int,java.lang.CharSequence) -> a
com.dkhs.portfolio.ui.draglist.DragCombinationAdapter -> com.dkhs.portfolio.ui.draglist.a:
    com.dkhs.portfolio.engine.FollowComEngineImpl mQuotesEngine -> c
    void setAdapterData(java.util.List) -> a
    void parseToDragItem(java.util.List) -> c
    void onDeleteClick(int) -> a
    void onAlertClick(android.widget.CompoundButton,int,boolean) -> a
    java.util.List getConList() -> a
com.dkhs.portfolio.ui.draglist.DragCombinationAdapter$1 -> com.dkhs.portfolio.ui.draglist.b:
    int val$position -> a
    com.dkhs.portfolio.ui.draglist.DragCombinationAdapter this$0 -> b
    void run() -> run
com.dkhs.portfolio.ui.draglist.DragListAdapter -> com.dkhs.portfolio.ui.draglist.c:
    java.util.List dataList -> c
    android.content.Context context -> a
    int station -> d
    com.dkhs.portfolio.ui.draglist.DragListView mDragListView -> e
    boolean isLoadByFund -> f
    com.dkhs.portfolio.net.IHttpListener baseListener -> b
    int invisilePosition -> g
    boolean isChanged -> h
    boolean ShowItem -> i
    java.util.ArrayList mCopyList -> j
    boolean isSameDragDirection -> k
    int lastFlag -> l
    int height -> m
    int dragPosition -> n
    void showDropItem(boolean) -> a
    void setInvisiblePosition(int) -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onDeleteClick(int) -> a
    void onAlertClick(android.widget.CompoundButton,int,boolean) -> a
    java.util.List getList() -> b
    void exchangeCopy(int,int) -> a
    com.dkhs.portfolio.bean.DataEntry getCopyItem(int) -> c
    int getCount() -> getCount
    com.dkhs.portfolio.bean.DataEntry getItem(int) -> d
    long getItemId(int) -> getItemId
    void copyList() -> c
    void putUp(int) -> e
    void pastList() -> d
    void setIsSameDragDirection(boolean) -> b
    void setLastFlag(int) -> f
    void setHeight(int) -> g
    android.view.animation.Animation getFromSelfAnimation(int,int) -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void setStation(int) -> h
    java.util.List getDataList() -> e
    void setDataList(java.util.List) -> b
    java.lang.Object getItem(int) -> getItem
    int access$000(com.dkhs.portfolio.ui.draglist.DragListAdapter) -> a
    java.util.List access$100(com.dkhs.portfolio.ui.draglist.DragListAdapter) -> b
com.dkhs.portfolio.ui.draglist.DragListAdapter$1 -> com.dkhs.portfolio.ui.draglist.d:
    com.dkhs.portfolio.ui.draglist.DragListAdapter this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.dkhs.portfolio.ui.draglist.DragListAdapter$Click -> com.dkhs.portfolio.ui.draglist.c$a:
    int position -> a
    android.widget.Button btn -> b
    com.dkhs.portfolio.ui.draglist.DragListAdapter this$0 -> c
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.draglist.DragListAdapter$ClickForUp -> com.dkhs.portfolio.ui.draglist.c$b:
    int position -> a
    com.dkhs.portfolio.ui.draglist.DragListAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.draglist.DragListAdapter$OnDele -> com.dkhs.portfolio.ui.draglist.c$c:
    android.widget.Button btn -> a
    android.widget.TextView tv -> b
    com.dkhs.portfolio.ui.draglist.DragListAdapter this$0 -> c
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.draglist.DragListView -> com.dkhs.portfolio.ui.draglist.DragListView:
    android.view.WindowManager windowManager -> b
    android.view.WindowManager$LayoutParams windowParams -> c
    int scaledTouchSlop -> d
    android.widget.ImageView dragImageView -> e
    int startPosition -> f
    int dragPosition -> g
    int lastPosition -> h
    android.view.ViewGroup dragItemView -> i
    int dragPoint -> j
    int dragOffset -> k
    int upScrollBounce -> l
    int downScrollBounce -> m
    int current_Step -> n
    boolean isLock -> o
    com.dkhs.portfolio.ui.draglist.ItemInfo mDragItemInfo -> p
    boolean isMoving -> q
    boolean isDragItemMoving -> r
    int mItemVerticalSpacing -> s
    boolean bHasGetSapcing -> t
    android.os.Handler mHandler -> a
    boolean isSameDragDirection -> u
    int lastFlag -> v
    int mFirstVisiblePosition -> w
    boolean isNormal -> x
    int turnUpPosition -> y
    int turnDownPosition -> z
    boolean isScroll -> A
    int holdPosition -> B
    void setLock(boolean) -> setLock
    void init() -> b
    void getSpacing() -> getSpacing
    void review(int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setAnima(int,int,android.view.View,android.view.View,android.view.View) -> setAnima
    void reSet(int) -> b
    android.view.animation.Animation getScaleAnimation() -> getScaleAnimation
    void hideDropItem() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onChangeCopy(int,int) -> c
    void testAnimation(int) -> f
    void onDrop(int,int) -> d
    void startDrag(android.graphics.Bitmap,int) -> a
    void onDrag(int) -> c
    void doScroller(int) -> d
    void stopDrag() -> a
    void onDrop(int) -> e
    android.view.animation.Animation getFromSelfAnimation(int,int) -> a
    android.view.animation.Animation getToSelfAnimation(int,int) -> b
com.dkhs.portfolio.ui.draglist.DragListView$1 -> com.dkhs.portfolio.ui.draglist.e:
    com.dkhs.portfolio.ui.draglist.DragListView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.draglist.DragListView$2 -> com.dkhs.portfolio.ui.draglist.f:
    android.view.View val$v1 -> a
    android.view.View val$v2 -> b
    com.dkhs.portfolio.ui.draglist.DragListView this$0 -> c
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dkhs.portfolio.ui.draglist.DragStockAdapter -> com.dkhs.portfolio.ui.draglist.g:
    com.dkhs.portfolio.engine.QuotesEngineImpl mQuotesEngine -> c
    boolean isLoadByFund -> d
    void setAdapterData(java.util.List) -> a
    void parseToDragItem(java.util.List) -> c
    void onDeleteClick(int) -> a
    void onAlertClick(android.widget.CompoundButton,int,boolean) -> a
    void startRemindActivity(com.dkhs.portfolio.bean.SelectStockBean) -> a
    java.util.List getStockList() -> a
com.dkhs.portfolio.ui.draglist.DragStockAdapter$1 -> com.dkhs.portfolio.ui.draglist.h:
    int val$position -> a
    com.dkhs.portfolio.ui.draglist.DragStockAdapter this$0 -> b
    void run() -> run
com.dkhs.portfolio.ui.draglist.ItemInfo -> com.dkhs.portfolio.ui.draglist.i:
    java.lang.Object obj -> a
com.dkhs.portfolio.ui.eventbus.BusProvider -> com.dkhs.portfolio.ui.a.a:
    com.squareup.otto.Bus BUS -> a
    com.squareup.otto.Bus getInstance() -> a
com.dkhs.portfolio.ui.eventbus.DataUpdateEvent -> com.dkhs.portfolio.ui.a.b:
    boolean isEmpty -> a
com.dkhs.portfolio.ui.eventbus.IDataUpdateListener -> com.dkhs.portfolio.ui.a.c:
    void dataUpdate(boolean) -> a
com.dkhs.portfolio.ui.eventbus.NewMessageEvent -> com.dkhs.portfolio.ui.a.d:
    boolean hasUnread -> a
com.dkhs.portfolio.ui.eventbus.RotateRefreshEvent -> com.dkhs.portfolio.ui.a.e:
com.dkhs.portfolio.ui.eventbus.StopRefreshEvent -> com.dkhs.portfolio.ui.a.f:
com.dkhs.portfolio.ui.eventbus.TabComTitleChangeEvent -> com.dkhs.portfolio.ui.a.g:
    java.lang.String tabType -> a
com.dkhs.portfolio.ui.eventbus.TabFundsTitleChangeEvent -> com.dkhs.portfolio.ui.a.h:
    java.lang.String tabType -> a
com.dkhs.portfolio.ui.eventbus.TabStockTitleChangeEvent -> com.dkhs.portfolio.ui.a.i:
    java.lang.String tabType -> a
com.dkhs.portfolio.ui.eventbus.TitleChangeEvent -> com.dkhs.portfolio.ui.a.j:
    float netvalue -> a
com.dkhs.portfolio.ui.eventbus.UnFollowEvent -> com.dkhs.portfolio.ui.a.k:
    long id -> a
    long getId() -> a
    void setId(long) -> a
com.dkhs.portfolio.ui.eventbus.UpdateComDescEvent -> com.dkhs.portfolio.ui.a.l:
    java.lang.String comName -> a
    java.lang.String comDesc -> b
com.dkhs.portfolio.ui.eventbus.UpdateCombinationEvent -> com.dkhs.portfolio.ui.a.m:
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> a
com.dkhs.portfolio.ui.eventbus.UpdatePositinoEvent -> com.dkhs.portfolio.ui.a.n:
com.dkhs.portfolio.ui.fragment.BaseFragment -> com.dkhs.portfolio.ui.fragment.BaseFragment:
    void onDetach() -> onDetach
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    int setContentLayoutId() -> h
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
com.dkhs.portfolio.ui.fragment.BaseTitleFragment -> com.dkhs.portfolio.ui.fragment.BaseTitleFragment:
    int RIGHTBUTTON_ID -> a
    int BACKBUTTON_ID -> b
    int SECONDRIGHTBUTTON_ID -> c
    com.dkhs.portfolio.ui.widget.TextImageButton btnBack -> d
    android.widget.Button btnRight -> e
    android.widget.Button btnSecondRight -> f
    android.widget.TextView tvTitle -> g
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void hideBackButton() -> a
    void setTitle(int) -> a
    android.widget.Button getRightButton() -> b
com.dkhs.portfolio.ui.fragment.CombinationRankFragment -> com.dkhs.portfolio.ui.fragment.CombinationRankFragment:
    java.lang.String mOrderType -> f
    com.dkhs.portfolio.ui.adapter.CombinationRankAdapter mAdapter -> g
    java.util.List mDataList -> h
    com.dkhs.portfolio.engine.CombinationRankEngineImpl orderEngine -> i
    boolean isvisible -> j
    boolean isRefresh -> k
    android.os.Handler dataHandler -> a
    java.lang.Runnable runnable -> b
    java.lang.String mPageName -> l
    com.dkhs.portfolio.ui.fragment.CombinationRankFragment getFragment(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.widget.ListAdapter getListAdapter() -> b
    void loadData() -> c
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> e
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> f
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener setOnRefreshListener() -> g
    void loadFail() -> a
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.CombinationRankFragment) -> a
    boolean access$102(com.dkhs.portfolio.ui.fragment.CombinationRankFragment,boolean) -> a
com.dkhs.portfolio.ui.fragment.CombinationRankFragment$1 -> com.dkhs.portfolio.ui.fragment.a:
    com.dkhs.portfolio.ui.fragment.CombinationRankFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.CombinationRankFragment$2 -> com.dkhs.portfolio.ui.fragment.b:
    com.dkhs.portfolio.ui.fragment.CombinationRankFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.CombinationRankFragment$3 -> com.dkhs.portfolio.ui.fragment.c:
    com.dkhs.portfolio.ui.fragment.CombinationRankFragment this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.CompareIndexFragment -> com.dkhs.portfolio.ui.fragment.CompareIndexFragment:
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> h
    java.lang.String mCompareIds -> i
    android.widget.TextView tvCombinationName -> j
    com.dkhs.portfolio.engine.CompareEngine mCompareEngine -> k
    com.dkhs.portfolio.engine.NetValueEngine netValueEngine -> l
    java.util.Calendar mCreateCalender -> m
    java.util.Calendar cStart -> a
    java.util.Calendar cEnd -> b
    com.dkhs.portfolio.ui.widget.TrendChart maChartView -> n
    android.view.View moreFundView -> o
    java.util.List lineDataList -> p
    java.util.List lineEntityList -> q
    com.dkhs.portfolio.net.ParseHttpListener historyNetValueListener -> c
    com.dkhs.portfolio.ui.widget.LineEntity combinationLineEntity -> d
    java.util.List compareLinesList -> e
    float maxOffsetValue -> f
    com.dkhs.portfolio.net.ParseHttpListener compareListener -> g
    int setContentLayoutId() -> h
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void onClick(android.view.View) -> onClick
    void setLineData() -> a
    void setCompareLineList() -> b
    void setXTitle(java.util.List) -> a
    void setYTitle(float,float) -> a
    void getMaxOffetValue(com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void requestCompare() -> c
    void access$000(com.dkhs.portfolio.ui.fragment.CompareIndexFragment,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void access$100(com.dkhs.portfolio.ui.fragment.CompareIndexFragment,float,float) -> a
    void access$200(com.dkhs.portfolio.ui.fragment.CompareIndexFragment,java.util.List) -> a
    java.util.List access$300(com.dkhs.portfolio.ui.fragment.CompareIndexFragment) -> a
    java.util.List access$400(com.dkhs.portfolio.ui.fragment.CompareIndexFragment) -> b
    void access$500(com.dkhs.portfolio.ui.fragment.CompareIndexFragment) -> c
    void access$600(com.dkhs.portfolio.ui.fragment.CompareIndexFragment) -> d
com.dkhs.portfolio.ui.fragment.CompareIndexFragment$1 -> com.dkhs.portfolio.ui.fragment.d:
    com.dkhs.portfolio.ui.fragment.CompareIndexFragment this$0 -> a
    com.dkhs.portfolio.bean.HistoryNetValue parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.CompareIndexFragment$2 -> com.dkhs.portfolio.ui.fragment.e:
    com.dkhs.portfolio.ui.fragment.CompareIndexFragment this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.EmptyFragment -> com.dkhs.portfolio.ui.fragment.EmptyFragment:
    int setContentLayoutId() -> h
com.dkhs.portfolio.ui.fragment.FragmentCombinationNews -> com.dkhs.portfolio.ui.fragment.FragmentCombinationNews:
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> a
    android.widget.LinearLayout comLayout -> b
    java.lang.String mPageName -> c
    com.dkhs.portfolio.ui.fragment.FragmentCombinationNews newInstance() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initTabPage(android.view.View) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    int setContentLayoutId() -> h
com.dkhs.portfolio.ui.fragment.FragmentCompare -> com.dkhs.portfolio.ui.fragment.FragmentCompare:
    int REQUESTCODE_SELECT_FUND -> k
    android.widget.GridView mGridView -> l
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter mGridAdapter -> m
    java.util.List mCompareItemList -> n
    java.util.List selectStockList -> o
    android.widget.Button btnStartTime -> p
    android.widget.Button btnEndTime -> q
    android.widget.Button btnCompare -> r
    android.widget.Button btnSelectFund -> s
    android.widget.TextView tvTimeDuration -> t
    android.widget.TextView tvIncreaseValue -> u
    android.view.View increaseView -> v
    boolean isPickStartDate -> w
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> x
    java.lang.String mCompareIds -> y
    com.dkhs.portfolio.engine.CompareEngine mCompareEngine -> z
    java.util.Calendar mCreateCalender -> A
    java.util.Calendar cStart -> a
    java.util.Calendar cEnd -> b
    com.dkhs.portfolio.ui.widget.TrendChart maChartView -> B
    java.util.List lineDataList -> C
    java.util.List lineEntityList -> D
    int mListCount -> E
    java.lang.String SHARE_IMAGE -> F
    android.os.Handler shareHandler -> c
    android.widget.AdapterView$OnItemClickListener compareItemClick -> d
    com.dkhs.portfolio.net.ParseHttpListener historyNetValueListener -> e
    com.dkhs.portfolio.ui.widget.LineEntity combinationLineEntity -> f
    java.util.List compareLinesList -> g
    float maxOffsetValue -> h
    com.dkhs.portfolio.net.ParseHttpListener compareListener -> i
    android.app.DatePickerDialog dpg -> G
    int noOfTimesCalled -> j
    boolean isFirstTimeOnDateSet -> H
    android.app.DatePickerDialog$OnDateSetListener mDateSetListener -> I
    com.dkhs.portfolio.engine.NetValueEngine netValueEngine -> J
    java.lang.String mPageName -> K
    com.dkhs.portfolio.ui.fragment.FragmentCompare newInstance() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void handleExtras(android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onStart() -> onStart
    void showShare() -> b
    void initView(android.view.View) -> a
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void onClick(android.view.View) -> onClick
    boolean isBetween7day() -> c
    void requestCompare() -> d
    void reShowGirdItem() -> e
    void setLineData() -> f
    void setCompareLineList() -> g
    void setXTitle(java.util.List) -> a
    void setYTitle(float,float) -> a
    void getMaxOffetValue(com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void showPickerDate() -> i
    boolean isBeforeMonthCreateDate(java.util.Calendar) -> a
    void updateDayDisplay() -> j
    void updateSelectData(java.util.List) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    int setContentLayoutId() -> h
    void access$100(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> a
    android.widget.GridView access$200(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> b
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter access$300(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> c
    java.util.List access$400(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> d
    java.util.List access$500(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> e
    com.dkhs.portfolio.ui.widget.TrendChart access$600(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> f
    android.widget.Button access$700(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> g
    void access$800(com.dkhs.portfolio.ui.fragment.FragmentCompare,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void access$900(com.dkhs.portfolio.ui.fragment.FragmentCompare,float,float) -> a
    void access$1000(com.dkhs.portfolio.ui.fragment.FragmentCompare,java.util.List) -> a
    java.util.List access$1100(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> h
    void access$1200(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> i
    android.widget.TextView access$1300(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> j
    android.view.View access$1400(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> k
    void access$1500(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> l
    android.app.DatePickerDialog access$1600(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> m
    boolean access$1700(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> n
    boolean access$1800(com.dkhs.portfolio.ui.fragment.FragmentCompare,java.util.Calendar) -> a
    void access$1900(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> o
    void access$2000(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> p
    boolean access$2200(com.dkhs.portfolio.ui.fragment.FragmentCompare) -> q
    boolean access$2202(com.dkhs.portfolio.ui.fragment.FragmentCompare,boolean) -> a
com.dkhs.portfolio.ui.fragment.FragmentCompare$11 -> com.dkhs.portfolio.ui.fragment.f:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dkhs.portfolio.ui.fragment.FragmentCompare$2 -> com.dkhs.portfolio.ui.fragment.g:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.FragmentCompare$3 -> com.dkhs.portfolio.ui.fragment.h:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.dkhs.portfolio.ui.fragment.FragmentCompare$4 -> com.dkhs.portfolio.ui.fragment.i:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.dkhs.portfolio.ui.fragment.FragmentCompare$5 -> com.dkhs.portfolio.ui.fragment.j:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentCompare$6 -> com.dkhs.portfolio.ui.fragment.k:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    com.dkhs.portfolio.bean.HistoryNetValue parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.FragmentCompare$7 -> com.dkhs.portfolio.ui.fragment.l:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.FragmentCompare$8 -> com.dkhs.portfolio.ui.fragment.m:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.fragment.FragmentCompare$9 -> com.dkhs.portfolio.ui.fragment.n:
    com.dkhs.portfolio.ui.fragment.FragmentCompare this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.fragment.FragmentDiscussFlow -> com.dkhs.portfolio.ui.fragment.FragmentDiscussFlow:
    android.widget.ListView mListView -> a
    com.dkhs.portfolio.ui.adapter.DiscussFlowAdapter mFlowAdapter -> b
    android.view.View mFootView -> c
    boolean isLoadingMore -> d
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
    boolean access$000(com.dkhs.portfolio.ui.fragment.FragmentDiscussFlow) -> a
    android.view.View access$100(com.dkhs.portfolio.ui.fragment.FragmentDiscussFlow) -> b
    android.widget.ListView access$200(com.dkhs.portfolio.ui.fragment.FragmentDiscussFlow) -> c
com.dkhs.portfolio.ui.fragment.FragmentDiscussFlow$1 -> com.dkhs.portfolio.ui.fragment.o:
    com.dkhs.portfolio.ui.fragment.FragmentDiscussFlow this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr -> com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr:
    android.widget.ListView mListView -> d
    boolean isLoadingMore -> e
    android.view.View mFootView -> f
    android.content.Context context -> g
    com.dkhs.portfolio.ui.adapter.OptionlistAdapter mOptionMarketAdapter -> h
    java.util.List mDataList -> i
    com.dkhs.portfolio.engine.LoadNewsDataEngine mLoadDataEngine -> j
    boolean first -> a
    android.widget.TextView iv -> k
    java.lang.String symbol -> l
    java.lang.String name -> m
    java.lang.String subType -> n
    android.view.View view -> o
    boolean getadble -> p
    android.widget.RelativeLayout pb -> q
    android.view.View mContentView -> r
    android.widget.AdapterView$OnItemClickListener itemBackClick -> b
    com.dkhs.portfolio.engine.LoadNewsDataEngine$ILoadDataBackListener mSelectStockBackListener -> c
    java.lang.String mPageName -> s
    android.support.v4.app.Fragment newIntent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initDate() -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
    void loadMore() -> a
    void loadFinishUpdateView() -> c
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onPause() -> onPause
    void onResume() -> onResume
    boolean access$000(com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr) -> a
    java.util.List access$100(com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr) -> b
    android.content.Context access$200(com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr) -> c
    android.widget.RelativeLayout access$300(com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr) -> d
    com.dkhs.portfolio.ui.adapter.OptionlistAdapter access$400(com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr) -> e
    void access$500(com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr) -> f
    android.widget.TextView access$600(com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr) -> g
com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr$1 -> com.dkhs.portfolio.ui.fragment.p:
    com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr$2 -> com.dkhs.portfolio.ui.fragment.q:
    com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr$3 -> com.dkhs.portfolio.ui.fragment.r:
    com.dkhs.portfolio.ui.fragment.FragmentForOptionOnr this$0 -> a
    void loadFinish(java.util.List) -> a
    void loadingFail() -> a
com.dkhs.portfolio.ui.fragment.FragmentForStockSHC -> com.dkhs.portfolio.ui.fragment.FragmentForStockSHC:
    android.widget.ListView mListView -> d
    android.content.Context context -> e
    java.util.List mDataList -> f
    com.dkhs.portfolio.engine.LoadMoreDataEngine mLoadDataEngine -> g
    boolean first -> a
    android.view.View mContentView -> h
    android.widget.TextView tv -> i
    boolean getadle -> j
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter mOptionlistAdapter -> k
    java.util.Timer mMarketTimer -> l
    boolean isTimerStart -> m
    java.lang.String exchange -> n
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType sort -> o
    java.lang.String symbol_stype -> p
    java.lang.String list_sector -> q
    boolean setColor -> r
    android.widget.RelativeLayout pb -> s
    android.widget.AdapterView$OnItemClickListener itemBackClick -> b
    java.lang.String mPageName -> t
    com.dkhs.portfolio.ui.widget.IStockQuoteScrollListener mStockQuoteScrollListener -> c
    com.dkhs.portfolio.ui.fragment.FragmentForStockSHC newIntent(java.lang.String,com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType,java.lang.String,java.lang.String,boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initDate() -> c
    void initView(android.view.View) -> a
    void scrollSelf() -> a
    void scrollParent() -> b
    void loadFinishUpdateView() -> d
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    int setContentLayoutId() -> h
    void setStockQuoteScrollListener(com.dkhs.portfolio.ui.widget.IStockQuoteScrollListener) -> a
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.FragmentForStockSHC) -> a
    android.widget.RelativeLayout access$100(com.dkhs.portfolio.ui.fragment.FragmentForStockSHC) -> b
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter access$200(com.dkhs.portfolio.ui.fragment.FragmentForStockSHC) -> c
    void access$300(com.dkhs.portfolio.ui.fragment.FragmentForStockSHC) -> d
    com.dkhs.portfolio.engine.LoadMoreDataEngine access$400(com.dkhs.portfolio.ui.fragment.FragmentForStockSHC) -> e
com.dkhs.portfolio.ui.fragment.FragmentForStockSHC$1 -> com.dkhs.portfolio.ui.fragment.s:
    com.dkhs.portfolio.ui.fragment.FragmentForStockSHC this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.dkhs.portfolio.ui.fragment.FragmentForStockSHC$2 -> com.dkhs.portfolio.ui.fragment.t:
    com.dkhs.portfolio.ui.fragment.FragmentForStockSHC this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentForStockSHC$RequestMarketTask -> com.dkhs.portfolio.ui.fragment.FragmentForStockSHC$a:
    com.dkhs.portfolio.ui.fragment.FragmentForStockSHC this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.FragmentForStockSHC$StockLoadDataListener -> com.dkhs.portfolio.ui.fragment.FragmentForStockSHC$b:
    com.dkhs.portfolio.ui.fragment.FragmentForStockSHC this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.FragmentLifecycle -> com.dkhs.portfolio.ui.fragment.u:
    void onVisible() -> c_
    void onUnVisible() -> d_
com.dkhs.portfolio.ui.fragment.FragmentMarkerCenter -> com.dkhs.portfolio.ui.fragment.FragmentMarkerCenter:
    int mType -> a
    android.support.v4.app.Fragment loadDataListFragment -> b
    android.widget.ImageView marketIconUpDown -> c
    android.widget.ImageView ivCenter -> d
    android.widget.TextView tvUpDown -> e
    android.widget.TextView marketTextIndex -> f
    android.widget.TextView marketTextEdition -> g
    android.widget.LinearLayout marketLayoutUpanddown -> h
    java.util.Timer mMarketTimer -> i
    boolean start -> j
    java.lang.ref.WeakReference mWeakActivity -> k
    java.lang.String mPlateName -> l
    java.lang.String mPlateId -> m
    java.lang.String mPageName -> n
    com.dkhs.portfolio.ui.fragment.FragmentMarkerCenter initFrag(int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> onAttach
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void refreshData() -> c
    void loadFragment(int) -> b
    void setLoadTypeView(int) -> c
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onStop() -> onStop
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onPause() -> onPause
    void loadingFinish() -> a
    void startLoadingData() -> b
    int setContentLayoutId() -> h
    android.support.v4.app.Fragment access$000(com.dkhs.portfolio.ui.fragment.FragmentMarkerCenter) -> a
com.dkhs.portfolio.ui.fragment.FragmentMarkerCenter$RequestMarketTask -> com.dkhs.portfolio.ui.fragment.FragmentMarkerCenter$a:
    com.dkhs.portfolio.ui.fragment.FragmentMarkerCenter this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.FragmentMarketList -> com.dkhs.portfolio.ui.fragment.FragmentMarketList:
    java.lang.String TAG -> t
    com.dkhs.portfolio.ui.widget.PullToRefreshPageListView mListView -> a
    com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund mAdapterConbinStock -> b
    boolean isLoadingMore -> c
    boolean isRefresh -> d
    java.util.List mDataList -> e
    boolean isFund -> f
    boolean isItemClickBack -> g
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType mViewType -> h
    boolean fromPosition -> i
    com.dkhs.portfolio.engine.LoadMoreDataEngine mLoadDataEngine -> j
    android.widget.TextView tvEmptyText -> k
    int timeMill -> l
    boolean flush -> m
    java.lang.String mSecotrId -> n
    boolean isLoading -> o
    com.lidroid.xutils.http.HttpHandler mHttpHandler -> u
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener mSelectStockBackListener -> p
    android.widget.AdapterView$OnItemClickListener priceStockItemClick -> q
    android.widget.AdapterView$OnItemClickListener itemBackClick -> r
    java.lang.String mPageName -> v
    com.dkhs.portfolio.ui.MarketListActivity$ILoadingFinishListener loadingFinishListener -> s
    com.dkhs.portfolio.ui.fragment.FragmentMarketList getStockFragment(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType) -> a
    com.dkhs.portfolio.ui.fragment.FragmentMarketList getStockFragmentByPlate(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setListViewAdapter() -> e
    boolean isLoadStockType() -> f
    void initData() -> g
    void cancelHttpHandler() -> i
    void loadDataByStock() -> j
    void refreshNoCaseTime() -> a
    void refreshForMarker() -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initNotice() -> c
    void onStart() -> onStart
    void initView(android.view.View) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void onLoadMore() -> d
    void setLoadingFinishListener(com.dkhs.portfolio.ui.MarketListActivity$ILoadingFinishListener) -> a
    int setContentLayoutId() -> h
    void access$000(com.dkhs.portfolio.ui.fragment.FragmentMarketList) -> a
    com.lidroid.xutils.http.HttpHandler access$102(com.dkhs.portfolio.ui.fragment.FragmentMarketList,com.lidroid.xutils.http.HttpHandler) -> a
com.dkhs.portfolio.ui.fragment.FragmentMarketList$1 -> com.dkhs.portfolio.ui.fragment.v:
    com.dkhs.portfolio.ui.fragment.FragmentMarketList this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.FragmentMarketList$2 -> com.dkhs.portfolio.ui.fragment.w:
    com.dkhs.portfolio.ui.fragment.FragmentMarketList this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.FragmentMarketList$3 -> com.dkhs.portfolio.ui.fragment.x:
    com.dkhs.portfolio.ui.fragment.FragmentMarketList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentMarketList$4 -> com.dkhs.portfolio.ui.fragment.y:
    com.dkhs.portfolio.ui.fragment.FragmentMarketList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentMarketList$5 -> com.dkhs.portfolio.ui.fragment.FragmentMarketList$1:
    int[] $SwitchMap$com$dkhs$portfolio$ui$fragment$FragmentSelectStockFund$StockViewType -> a
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend -> com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend:
    android.widget.TextView tvIncreaseValue -> k
    android.widget.TextView tvIncreaseRatio -> l
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> m
    com.dkhs.portfolio.engine.MyCombinationEngineImpl mMyCombinationEngineImpl -> n
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$MyPagerFragmentAdapter mPagerAdapter -> a
    android.widget.TextView netvalueDay -> o
    android.widget.TextView netvalueWeek -> p
    android.widget.TextView netvalueMonth -> q
    android.widget.TextView tvCreateUser -> r
    android.widget.TextView tvFollowCount -> s
    android.widget.TextView tvComDesc -> t
    android.view.View comView -> u
    java.lang.String type -> v
    java.util.Timer mMarketTimer -> w
    java.lang.String myType -> x
    com.dkhs.portfolio.bean.PositionDetail mPositionDetail -> y
    boolean isMyCombination -> z
    boolean isFromOrder -> A
    android.widget.ImageView ivUserheader -> B
    android.widget.TextView tvUserDesc -> C
    android.os.Handler updateHandler -> b
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitle -> D
    java.util.ArrayList fragmentList -> E
    com.dkhs.portfolio.ui.fragment.TrendChartFragment mtrendFragment -> c
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment todayFragment -> d
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment sevendayFragment -> e
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment monthFragment -> f
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment historyFragment -> g
    java.lang.String SHARE_IMAGE -> F
    android.os.Handler shareHandler -> h
    android.support.v4.app.Fragment lastFragment -> G
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener titleSelectPostion -> i
    android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener -> H
    com.dkhs.portfolio.net.ParseHttpListener followComListener -> j
    java.lang.String mPageName -> I
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend newInstance(boolean,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void handleArguments(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void updateComName(com.dkhs.portfolio.ui.eventbus.UpdateComDescEvent) -> updateComName
    void setupViewData() -> b
    void updateIncreaseRatio(float) -> a
    void setColor(java.lang.String) -> a
    void showShareImage() -> a
    void showShare() -> c
    void saveShareBitmap() -> d
    void replaceFragment(android.support.v4.app.Fragment) -> a
    void initTabPage(android.view.View) -> a
    void onClick(android.view.View) -> onClick
    void delFollowSuccess() -> e
    void addFollowSuccess() -> f
    void onResume() -> onResume
    void onStop() -> onStop
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    com.dkhs.portfolio.bean.CombinationBean access$000(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> a
    com.dkhs.portfolio.engine.MyCombinationEngineImpl access$100(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> b
    void access$200(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend,android.support.v4.app.Fragment) -> a
    void access$300(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> c
    void access$400(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> d
    java.lang.String access$502(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend,java.lang.String) -> a
    void access$700(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> e
    void access$800(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> f
    com.dkhs.portfolio.bean.PositionDetail access$902(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend,com.dkhs.portfolio.bean.PositionDetail) -> a
    com.dkhs.portfolio.bean.PositionDetail access$900(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> g
    com.dkhs.portfolio.bean.CombinationBean access$002(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend,com.dkhs.portfolio.bean.CombinationBean) -> a
    android.widget.TextView access$1000(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> h
    android.widget.TextView access$1100(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> i
    android.widget.TextView access$1200(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> j
    android.widget.TextView access$1300(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> k
    android.widget.ImageView access$1400(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> l
    android.widget.TextView access$1500(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> m
    java.lang.String access$500(com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend) -> n
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$1 -> com.dkhs.portfolio.ui.fragment.z:
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$2 -> com.dkhs.portfolio.ui.fragment.aa:
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$3 -> com.dkhs.portfolio.ui.fragment.ab:
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$4 -> com.dkhs.portfolio.ui.fragment.ac:
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$5 -> com.dkhs.portfolio.ui.fragment.ad:
    int currentPosition -> a
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> b
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$8 -> com.dkhs.portfolio.ui.fragment.ae:
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> a
    void requestCallBack() -> requestCallBack
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$MyPagerFragmentAdapter -> com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$a:
    java.util.List fragmentList -> a
    java.lang.String[] titleList -> b
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    int getCount() -> getCount
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$QueryCombinationListener -> com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$b:
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> a
    com.dkhs.portfolio.bean.PositionDetail parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.PositionDetail) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$RequestMarketTask -> com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend$c:
    com.dkhs.portfolio.ui.fragment.FragmentNetValueTrend this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.FragmentNewsList -> com.dkhs.portfolio.ui.fragment.FragmentNewsList:
    android.widget.ListView mListView -> f
    boolean isLoadingMore -> g
    android.view.View mFootView -> h
    android.content.Context context -> i
    java.util.List mDataList -> j
    com.dkhs.portfolio.engine.LoadNewsDataEngine mLoadDataEngine -> k
    boolean first -> a
    android.view.View view -> l
    com.dkhs.portfolio.engine.NewsforModel vo -> m
    int types -> n
    android.widget.TextView tv -> o
    boolean getadle -> p
    com.dkhs.portfolio.ui.adapter.OptionForOnelistAdapter mOptionlistAdapter -> q
    android.widget.RelativeLayout pb -> r
    android.support.v4.widget.SwipeRefreshLayout mSwipeLayout -> b
    android.view.View mContentView -> s
    android.widget.AdapterView$OnItemClickListener itemBackClick -> c
    com.dkhs.portfolio.engine.LoadNewsDataEngine$ILoadDataBackListener mSelectStockBackListener -> d
    java.lang.String mPageName -> t
    com.dkhs.portfolio.ui.widget.IStockQuoteScrollListener mStockQuoteScrollListener -> e
    boolean isViewShown -> u
    com.dkhs.portfolio.ui.fragment.FragmentNewsList newIntent(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initDate() -> d
    void initView(android.view.View) -> a
    void loadMore() -> c
    void loadFinishUpdateView() -> e
    void setStockQuoteScrollListener(com.dkhs.portfolio.ui.widget.IStockQuoteScrollListener) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void scrollSelf() -> a
    void scrollParent() -> b
    boolean access$000(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> a
    java.util.List access$100(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> b
    android.content.Context access$200(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> c
    com.dkhs.portfolio.engine.NewsforModel access$300(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> d
    android.widget.RelativeLayout access$400(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> e
    com.dkhs.portfolio.ui.adapter.OptionForOnelistAdapter access$500(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> f
    void access$600(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> g
    android.widget.TextView access$700(com.dkhs.portfolio.ui.fragment.FragmentNewsList) -> h
com.dkhs.portfolio.ui.fragment.FragmentNewsList$1 -> com.dkhs.portfolio.ui.fragment.af:
    com.dkhs.portfolio.ui.fragment.FragmentNewsList this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.dkhs.portfolio.ui.fragment.FragmentNewsList$2 -> com.dkhs.portfolio.ui.fragment.ag:
    com.dkhs.portfolio.ui.fragment.FragmentNewsList this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.FragmentNewsList$2$1 -> com.dkhs.portfolio.ui.fragment.ah:
    com.dkhs.portfolio.ui.fragment.FragmentNewsList$2 this$1 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.FragmentNewsList$3 -> com.dkhs.portfolio.ui.fragment.ai:
    com.dkhs.portfolio.ui.fragment.FragmentNewsList this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.dkhs.portfolio.ui.fragment.FragmentNewsList$4 -> com.dkhs.portfolio.ui.fragment.aj:
    com.dkhs.portfolio.ui.fragment.FragmentNewsList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentNewsList$5 -> com.dkhs.portfolio.ui.fragment.ak:
    com.dkhs.portfolio.ui.fragment.FragmentNewsList this$0 -> a
    void loadFinish(java.util.List) -> a
    void loadingFail() -> a
com.dkhs.portfolio.ui.fragment.FragmentPositionBottom -> com.dkhs.portfolio.ui.fragment.FragmentPositionBottom:
    com.dkhs.portfolio.ui.widget.PieGraph pgView -> a
    java.util.ArrayList pieList -> b
    java.util.List stockList -> c
    com.dkhs.portfolio.ui.widget.ListViewEx lvStock -> d
    com.dkhs.portfolio.ui.adapter.PositionDetailIncreaAdapter stockAdapter -> e
    java.lang.String mCombinationId -> f
    com.dkhs.portfolio.bean.PositionDetail mPositionDetail -> g
    android.widget.TextView tvHistory -> h
    com.dkhs.portfolio.ui.fragment.FragmentPositionBottom newInstance(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void handleArguments(android.os.Bundle) -> b
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onAttach(android.app.Activity) -> onAttach
    void updateView() -> a
    void setStockList() -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initPieView(android.view.View) -> a
    void initIncreaseList(android.view.View) -> b
    void setPieList() -> c
    void onStart() -> onStart
    void onDestroyView() -> onDestroyView
    void updateListener(com.dkhs.portfolio.ui.eventbus.UpdatePositinoEvent) -> updateListener
    void onClick(android.view.View) -> onClick
    com.dkhs.portfolio.bean.PositionDetail access$002(com.dkhs.portfolio.ui.fragment.FragmentPositionBottom,com.dkhs.portfolio.bean.PositionDetail) -> a
    void access$100(com.dkhs.portfolio.ui.fragment.FragmentPositionBottom) -> a
    java.util.List access$200(com.dkhs.portfolio.ui.fragment.FragmentPositionBottom) -> b
com.dkhs.portfolio.ui.fragment.FragmentPositionBottom$1 -> com.dkhs.portfolio.ui.fragment.al:
    com.dkhs.portfolio.ui.fragment.FragmentPositionBottom this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentPositionBottom$QueryCombinationDetailListener -> com.dkhs.portfolio.ui.fragment.FragmentPositionBottom$a:
    com.dkhs.portfolio.ui.fragment.FragmentPositionBottom this$0 -> a
    void beforeRequest() -> beforeRequest
    com.dkhs.portfolio.bean.PositionDetail parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.PositionDetail) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.FragmentPositionDetail -> com.dkhs.portfolio.ui.fragment.FragmentPositionDetail:
    com.dkhs.portfolio.ui.widget.PieGraph pgView -> b
    android.view.View btnDate -> c
    android.view.View btnAdjust -> d
    android.widget.TextView tvCurrentDay -> e
    android.widget.ScrollView mScrollview -> f
    android.view.View shareView -> g
    java.util.ArrayList pieList -> h
    java.util.List stockList -> i
    com.dkhs.portfolio.ui.widget.ListViewEx lvStock -> j
    com.dkhs.portfolio.ui.adapter.PositionDetailIncreaAdapter stockAdapter -> k
    com.dkhs.portfolio.ui.widget.ListViewEx lvContribute -> l
    com.dkhs.portfolio.ui.adapter.PositionContributedapter mContributeAdapter -> m
    java.util.List mAdjustList -> n
    com.dkhs.portfolio.ui.widget.ListViewEx lvAdjustHistory -> o
    com.dkhs.portfolio.ui.adapter.PositionAdjustHistoryAdapter mAdjustAdapter -> p
    java.lang.String mCombinationId -> q
    com.dkhs.portfolio.bean.PositionDetail mPositionDetail -> r
    java.util.Calendar mCurrentCalendar -> s
    boolean isDefalutRequest -> t
    java.util.Calendar hisDate -> u
    java.lang.String SHARE_IMAGE -> v
    android.os.Handler shareHandler -> a
    int mYear -> w
    int mMonth -> x
    int mDay -> y
    android.app.DatePickerDialog$OnDateSetListener mDateSetListener -> z
    android.app.DatePickerDialog dpg -> A
    java.lang.String mPageName -> B
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void handleArguments(android.os.Bundle) -> b
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onAttach(android.app.Activity) -> onAttach
    void updateView() -> c
    void setCombinationInfo() -> a
    void setAdjustHistoryList() -> b
    void setStockList() -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initAdjustHistoryView(android.view.View) -> a
    void initContributeView(android.view.View) -> b
    void initView(android.view.View) -> c
    void initPieView(android.view.View) -> d
    void initIncreaseList(android.view.View) -> e
    void setPieList() -> e
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void showShare() -> f
    void showPickerDate() -> g
    boolean isEqualsCalenderDay(java.util.Calendar,java.util.Calendar) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> a
    java.util.ArrayList access$100(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> b
    boolean access$200(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> c
    java.util.Calendar access$302(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail,java.util.Calendar) -> a
    com.dkhs.portfolio.bean.PositionDetail access$402(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail,com.dkhs.portfolio.bean.PositionDetail) -> a
    void access$500(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> d
    android.widget.ScrollView access$600(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> e
    void access$700(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> f
    android.app.DatePickerDialog access$800(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> g
    com.dkhs.portfolio.bean.PositionDetail access$400(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> h
    java.util.Calendar access$902(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail,java.util.Calendar) -> b
    java.util.Calendar access$300(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> i
    boolean access$1000(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail,java.util.Calendar,java.util.Calendar) -> a
    android.view.View access$1100(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> j
    android.widget.TextView access$1200(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> k
    boolean access$202(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail,boolean) -> a
    java.lang.String access$1300(com.dkhs.portfolio.ui.fragment.FragmentPositionDetail) -> l
com.dkhs.portfolio.ui.fragment.FragmentPositionDetail$1 -> com.dkhs.portfolio.ui.fragment.am:
    com.dkhs.portfolio.ui.fragment.FragmentPositionDetail this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.dkhs.portfolio.ui.fragment.FragmentPositionDetail$2 -> com.dkhs.portfolio.ui.fragment.an:
    com.dkhs.portfolio.ui.fragment.FragmentPositionDetail this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentPositionDetail$3 -> com.dkhs.portfolio.ui.fragment.ao:
    com.dkhs.portfolio.ui.fragment.FragmentPositionDetail this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.FragmentPositionDetail$4 -> com.dkhs.portfolio.ui.fragment.ap:
    com.dkhs.portfolio.ui.fragment.FragmentPositionDetail this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.fragment.FragmentPositionDetail$5 -> com.dkhs.portfolio.ui.fragment.aq:
    com.dkhs.portfolio.ui.fragment.FragmentPositionDetail this$0 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.dkhs.portfolio.ui.fragment.FragmentPositionDetail$QueryCombinationDetailListener -> com.dkhs.portfolio.ui.fragment.FragmentPositionDetail$a:
    com.dkhs.portfolio.ui.fragment.FragmentPositionDetail this$0 -> a
    void beforeRequest() -> beforeRequest
    com.dkhs.portfolio.bean.PositionDetail parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.PositionDetail) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.FragmentReportForm -> com.dkhs.portfolio.ui.fragment.FragmentReportForm:
    int pageIndex -> c
    android.widget.ListView mListView -> d
    com.dkhs.portfolio.ui.adapter.ReportFromAdapter mAdapter -> e
    java.lang.String trendType -> f
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> g
    com.dkhs.portfolio.engine.NetValueReportEngine mNetValueDataEngine -> h
    java.util.List mReportList -> a
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener mLoadBackListener -> b
    void onCreate(android.os.Bundle) -> onCreate
    void handleArguments(android.os.Bundle) -> a
    void handleExtras(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
    void onAttach(android.app.Activity) -> onAttach
    void onStart() -> onStart
    void loadData() -> a
    com.dkhs.portfolio.ui.adapter.ReportFromAdapter access$000(com.dkhs.portfolio.ui.fragment.FragmentReportForm) -> a
com.dkhs.portfolio.ui.fragment.FragmentReportForm$1 -> com.dkhs.portfolio.ui.fragment.ar:
    com.dkhs.portfolio.ui.fragment.FragmentReportForm this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund -> com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund:
    java.lang.String TAG -> e
    boolean isItemClickBack -> f
    java.lang.String mSearchType -> g
    android.widget.ListView mListView -> h
    com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund mAdapterConbinStock -> i
    java.util.List mDataList -> j
    boolean isFund -> k
    com.dkhs.portfolio.engine.SearchStockEngineImpl mSearchEngine -> a
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener mSelectStockBackListener -> b
    android.os.Handler updateHandler -> c
    android.widget.AdapterView$OnItemClickListener itemBackClick -> d
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund getStockFragment() -> a
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund getFundFragment() -> b
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund getItemClickBackFragment() -> c
    void searchByKey(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void refreshSelect() -> d
    void onStart() -> onStart
    void initView(android.view.View) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> a
    void onClick(android.view.View) -> onClick
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund) -> a
    com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund access$100(com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund) -> b
com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund$1 -> com.dkhs.portfolio.ui.fragment.as:
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund$2 -> com.dkhs.portfolio.ui.fragment.at:
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund$3 -> com.dkhs.portfolio.ui.fragment.au:
    com.dkhs.portfolio.ui.fragment.FragmentSearchStockFund this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund -> com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund:
    java.lang.String TAG -> r
    com.dkhs.portfolio.ui.widget.PullToRefreshListView mListView -> a
    com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund mAdapterConbinStock -> b
    boolean isLoadingMore -> c
    boolean isRefresh -> d
    java.util.List mDataList -> e
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType mViewType -> f
    com.dkhs.portfolio.engine.LoadMoreDataEngine mLoadDataEngine -> g
    android.widget.TextView tvEmptyText -> h
    boolean flush -> i
    java.lang.String mSecotrId -> j
    boolean isLoading -> k
    android.widget.RelativeLayout pb -> s
    com.lidroid.xutils.http.HttpHandler loadHandler -> t
    java.lang.String mUserId -> u
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener mSelectStockBackListener -> l
    android.support.v4.widget.SwipeRefreshLayout mSwipeLayout -> m
    android.os.Handler updateHander -> n
    android.widget.TextView emptyview -> v
    android.widget.AdapterView$OnItemClickListener priceStockItemClick -> o
    android.widget.AdapterView$OnItemClickListener itemBackClick -> p
    java.lang.String mPageName -> w
    com.dkhs.portfolio.ui.MarketListActivity$ILoadingFinishListener loadingFinishListener -> q
    com.dkhs.portfolio.ui.eventbus.IDataUpdateListener dataUpdateListener -> x
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund getStockFragment(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType) -> a
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund getStockFragmentByUserId(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean isLoadStockType() -> j
    void requestEngine() -> k
    void initDataEngine() -> l
    void loadDataByFund() -> m
    void loadDataByStock() -> o
    void refreshEditView() -> b
    void setOrderType(com.dkhs.portfolio.engine.FundDataEngine$OrderType) -> a
    void setOptionalOrderType(java.lang.String) -> a
    void refresh() -> c
    void refreshNoCaseTime() -> e
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void hideEmptyNotice() -> p
    void showEmptyNotice() -> f
    void refreshSelect() -> g
    void onStart() -> onStart
    void initView(android.view.View) -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onPause() -> onPause
    void onResume() -> onResume
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onLoadMore() -> a_
    int setContentLayoutId() -> h
    java.util.List getDataList() -> i
    void setDataUpdateListener(com.dkhs.portfolio.ui.eventbus.IDataUpdateListener) -> a
    void onDestroyView() -> onDestroyView
    android.widget.RelativeLayout access$000(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund) -> a
    void access$100(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund) -> b
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$1 -> com.dkhs.portfolio.ui.fragment.av:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$2 -> com.dkhs.portfolio.ui.fragment.aw:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$3 -> com.dkhs.portfolio.ui.fragment.ax:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$4 -> com.dkhs.portfolio.ui.fragment.ay:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$5 -> com.dkhs.portfolio.ui.fragment.az:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$6 -> com.dkhs.portfolio.ui.fragment.ba:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$7 -> com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$1:
    int[] $SwitchMap$com$dkhs$portfolio$ui$fragment$FragmentSelectStockFund$StockViewType -> a
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$AdapterHelper -> com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$a:
    java.lang.ref.WeakReference mcontext -> a
    com.dkhs.portfolio.ui.adapter.BaseAdatperSelectStockFund create(com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType) -> a
com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType -> com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$b:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_OPTIONAL -> a
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_INCREASE -> b
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_DRAWDOWN -> c
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_HANDOVER -> d
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType FUND_MAININDEX -> e
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType FUND_INDEX -> f
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType FUND_STOCK -> g
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_OPTIONAL_PRICE -> h
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_INLAND_INDEX -> i
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_INLAND_INDEX_ACE -> j
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_INLAND_INDEX_CURRENT -> k
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_STOCK_DOWNRATIO -> l
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_STOCK_UPRATIO -> m
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_STOCK_TURNOVER -> n
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_STOCK_TURNOVER_ACE -> o
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_STOCK_AMPLIT -> p
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_STOCK_AMPLIT_ACE -> q
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_PLATE_LIST -> r
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType MARKET_PLATE_LIST_ACE -> s
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_INCREASE_CLICKABLE -> t
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_DRAWDOWN_CLICKABLE -> u
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType STOCK_HANDOVER_CLICKABLE -> v
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType OPTIONAL_FUNDS -> w
    int typeId -> x
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType[] $VALUES -> y
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType[] values() -> values
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund$StockViewType valueOf(java.lang.String) -> valueOf
com.dkhs.portfolio.ui.fragment.FragmentreportOneList -> com.dkhs.portfolio.ui.fragment.FragmentreportOneList:
    com.dkhs.portfolio.ui.widget.PullToRefreshListView mListView -> e
    boolean isLoadingMore -> f
    android.view.View mFootView -> g
    android.content.Context context -> h
    com.dkhs.portfolio.ui.adapter.ReportNewsAdapter mOptionMarketAdapter -> i
    java.util.List mDataList -> j
    com.dkhs.portfolio.engine.LoadNewsDataEngine mLoadDataEngine -> k
    boolean first -> a
    android.view.View view -> l
    android.widget.TextView tv -> m
    java.lang.String subType -> n
    boolean uservivible -> o
    android.widget.RelativeLayout pb -> p
    android.support.v4.widget.SwipeRefreshLayout mSwipeLayout -> b
    android.widget.AdapterView$OnItemClickListener itemBackClick -> c
    com.dkhs.portfolio.engine.LoadNewsDataEngine$ILoadDataBackListener mSelectStockBackListener -> d
    java.lang.String mPageName -> q
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initDate() -> b
    void initView(android.view.View) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onLoadMore() -> a_
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> a
    android.content.Context access$100(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> b
    java.lang.String access$200(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> c
    com.dkhs.portfolio.ui.widget.PullToRefreshListView access$300(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> d
    android.widget.RelativeLayout access$400(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> e
    com.dkhs.portfolio.engine.LoadNewsDataEngine access$500(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> f
    android.view.View access$600(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> g
    void access$700(com.dkhs.portfolio.ui.fragment.FragmentreportOneList,android.view.View) -> a
    com.dkhs.portfolio.ui.adapter.ReportNewsAdapter access$800(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> h
    boolean access$902(com.dkhs.portfolio.ui.fragment.FragmentreportOneList,boolean) -> a
    android.view.View access$1000(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> i
    android.widget.TextView access$1100(com.dkhs.portfolio.ui.fragment.FragmentreportOneList) -> j
com.dkhs.portfolio.ui.fragment.FragmentreportOneList$1 -> com.dkhs.portfolio.ui.fragment.bb:
    com.dkhs.portfolio.ui.fragment.FragmentreportOneList this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.FragmentreportOneList$1$1 -> com.dkhs.portfolio.ui.fragment.bc:
    com.dkhs.portfolio.ui.fragment.FragmentreportOneList$1 this$1 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.FragmentreportOneList$2 -> com.dkhs.portfolio.ui.fragment.bd:
    com.dkhs.portfolio.ui.fragment.FragmentreportOneList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FragmentreportOneList$3 -> com.dkhs.portfolio.ui.fragment.be:
    com.dkhs.portfolio.ui.fragment.FragmentreportOneList this$0 -> a
    void loadFinish(java.util.List) -> a
    void loadingFail() -> a
com.dkhs.portfolio.ui.fragment.FramgentInlandIndex -> com.dkhs.portfolio.ui.fragment.FramgentInlandIndex:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment -> com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment:
    java.util.List dataList -> b
    com.dkhs.portfolio.engine.PeopleEngineImpl peopleEngine -> c
    com.dkhs.portfolio.engine.PeopleEngineImpl$TYPE type -> d
    android.widget.BaseAdapter adapter -> e
    java.lang.String userId -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void loadData() -> b
    android.widget.BaseAdapter getListAdapter() -> c
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> d
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> e
    void startLoadData() -> g
    void endLoadData() -> h
    void loadFail() -> a
    void updateList(com.dkhs.portfolio.ui.eventbus.UnFollowEvent) -> updateList
    android.widget.ListAdapter getListAdapter() -> f
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment) -> a
com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment$2 -> com.dkhs.portfolio.ui.fragment.bf:
    com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment$3 -> com.dkhs.portfolio.ui.fragment.FriendsOrFollowersFragment$1:
    int[] $SwitchMap$com$dkhs$portfolio$engine$PeopleEngineImpl$TYPE -> a
com.dkhs.portfolio.ui.fragment.FundManagerFragment -> com.dkhs.portfolio.ui.fragment.FundManagerFragment:
    com.dkhs.portfolio.ui.widget.ListViewEx lvManger -> a
    android.widget.TextView tvEmpty -> b
    com.dkhs.portfolio.ui.adapter.FundManagerAdapter mManagerAdapter -> c
    java.util.List mListManager -> d
    com.dkhs.portfolio.ui.fragment.FundManagerFragment newInstance(java.util.List) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.FundManagerFragment) -> a
com.dkhs.portfolio.ui.fragment.FundManagerFragment$1 -> com.dkhs.portfolio.ui.fragment.bg:
    com.dkhs.portfolio.ui.fragment.FundManagerFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FundOrderFragment -> com.dkhs.portfolio.ui.fragment.FundOrderFragment:
    java.util.List dataList -> a
    com.dkhs.portfolio.engine.FundOrderEngineImpl fundOrderEngine -> b
    com.dkhs.portfolio.ui.adapter.FundOrderAdapter adapter -> f
    java.lang.String type -> g
    java.lang.String sort -> h
    void onCreate(android.os.Bundle) -> onCreate
    com.dkhs.portfolio.ui.fragment.FundOrderFragment newInstant(java.lang.String,java.lang.String) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void loadData() -> c
    void refresh(java.lang.String,java.lang.String) -> b
    void onLoadMore() -> a_
    android.widget.BaseAdapter getListAdapter() -> i
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    com.dkhs.portfolio.engine.FundOrderEngineImpl getLoadEngine() -> j
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener setOnRefreshListener() -> g
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> f
    void loadFail() -> a
    void startLoadData() -> k
    void endLoadData() -> l
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> e
    android.widget.ListAdapter getListAdapter() -> b
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.FundOrderFragment) -> a
com.dkhs.portfolio.ui.fragment.FundOrderFragment$1 -> com.dkhs.portfolio.ui.fragment.bh:
    com.dkhs.portfolio.ui.fragment.FundOrderFragment this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.FundOrderFragment$2 -> com.dkhs.portfolio.ui.fragment.bi:
    com.dkhs.portfolio.ui.fragment.FundOrderFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.FundProfileFragment -> com.dkhs.portfolio.ui.fragment.FundProfileFragment:
    android.widget.LinearLayout mContentView -> a
    android.content.Context mContext -> b
    com.dkhs.portfolio.bean.FundQuoteBean mFundQuoteBean -> c
    com.dkhs.portfolio.ui.fragment.FundProfileFragment newIntent(com.dkhs.portfolio.bean.FundQuoteBean) -> a
    int setContentLayoutId() -> h
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void handArguments() -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
com.dkhs.portfolio.ui.fragment.FundTrendFragment -> com.dkhs.portfolio.ui.fragment.FundTrendFragment:
    android.view.ViewGroup rootView -> a
    com.dkhs.portfolio.ui.widget.BenefitChartView benefitChartView -> b
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType mTrendType -> c
    com.dkhs.portfolio.bean.FundQuoteBean mFundQuoteBean -> d
    com.dkhs.portfolio.ui.fragment.FundTrendFragment newInstance(com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType,com.dkhs.portfolio.bean.FundQuoteBean) -> a
    int setContentLayoutId() -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void onDestroy() -> onDestroy
    void setUserVisibleHint(boolean) -> setUserVisibleHint
com.dkhs.portfolio.ui.fragment.HotPlateFragment -> com.dkhs.portfolio.ui.fragment.HotPlateFragment:
    java.lang.String mOrderType -> d
    com.dkhs.portfolio.ui.adapter.HotPlateAdapter mAdapter -> e
    java.util.List mDataList -> f
    com.dkhs.portfolio.engine.PlateLoadMoreEngineImpl orderEngine -> g
    com.dkhs.portfolio.ui.widget.PullToRefreshPageListView mListView -> h
    boolean isRefresh -> i
    com.dkhs.portfolio.ui.MarketListActivity$ILoadingFinishListener finishListener -> j
    android.os.Handler dataHandler -> a
    java.lang.Runnable runnable -> b
    java.lang.String mPageName -> k
    com.dkhs.portfolio.ui.fragment.HotPlateFragment getFragment(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setListViewInit(com.dkhs.portfolio.ui.widget.PullToRefreshPageListView) -> a
    android.widget.ListAdapter getListAdapter() -> b
    void loadData() -> c
    void refreshData() -> e
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void setLoadingFinishListener(com.dkhs.portfolio.ui.MarketListActivity$ILoadingFinishListener) -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> f
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> g
    void loadFail() -> a
    com.dkhs.portfolio.engine.PlateLoadMoreEngineImpl access$000(com.dkhs.portfolio.ui.fragment.HotPlateFragment) -> a
    com.dkhs.portfolio.ui.MarketListActivity$ILoadingFinishListener access$100(com.dkhs.portfolio.ui.fragment.HotPlateFragment) -> b
    java.util.List access$200(com.dkhs.portfolio.ui.fragment.HotPlateFragment) -> c
com.dkhs.portfolio.ui.fragment.HotPlateFragment$1 -> com.dkhs.portfolio.ui.fragment.bj:
    com.dkhs.portfolio.ui.fragment.HotPlateFragment this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.HotPlateFragment$2 -> com.dkhs.portfolio.ui.fragment.bk:
    com.dkhs.portfolio.ui.fragment.HotPlateFragment this$0 -> a
com.dkhs.portfolio.ui.fragment.HotPlateFragment$3 -> com.dkhs.portfolio.ui.fragment.bl:
    com.dkhs.portfolio.ui.fragment.HotPlateFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.HotPlateFragment$4 -> com.dkhs.portfolio.ui.fragment.bm:
    com.dkhs.portfolio.ui.fragment.HotPlateFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.InvalidStateFragment -> com.dkhs.portfolio.ui.fragment.InvalidStateFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.dkhs.portfolio.ui.fragment.KChartsFragment -> com.dkhs.portfolio.ui.fragment.KChartsFragment:
    com.dkhs.portfolio.ui.widget.kline.KChartsView mMyChartsView -> d
    com.dkhs.portfolio.ui.widget.chart.StickChart mVolumnChartView -> e
    android.widget.ImageButton mLargerButton -> f
    android.widget.ImageButton mSmallerButton -> g
    java.util.List ohlcs -> a
    boolean having -> h
    android.widget.RelativeLayout pb -> i
    java.lang.String checkValue -> j
    com.dkhs.portfolio.ui.widget.kline.KChartsView$DisplayDataChangeListener mDisplayDataChangeListener -> k
    com.dkhs.portfolio.net.IHttpListener mKlineHttpListener -> l
    android.os.Handler updateHandler -> b
    java.lang.Runnable requestMarketRunnable -> c
    com.dkhs.portfolio.net.IHttpListener mKlineFlushListener -> m
    java.lang.String mPageName -> n
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack mLandCallBack -> o
    com.dkhs.portfolio.ui.widget.StockViewCallBack mStockCallback -> p
    com.dkhs.portfolio.ui.fragment.KChartsFragment getKChartFragment(java.lang.Integer,java.lang.String,java.lang.String) -> b
    int setContentLayoutId() -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initChartView() -> j
    void initVloumnChartView() -> k
    void refreshChartsView(java.util.List) -> b
    void refreshVolumnCharts() -> l
    void queryDefData() -> m
    void regetDate(java.lang.String) -> a
    void updateChartData(java.util.List) -> c
    void updateChartView() -> n
    java.util.List getOHLCDatasFromJson(java.lang.String) -> c
    void large(android.view.View) -> a
    void small(android.view.View) -> b
    void changeButtonState() -> o
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onResume() -> onResume
    void onStop() -> onStop
    void pollRequestData() -> p
    void onPause() -> onPause
    java.lang.String getCheckValue() -> i
    void setCheckValue(java.lang.String) -> b
    void setLandCallBack(com.dkhs.portfolio.ui.widget.LandStockViewCallBack) -> a
    void setStockViewCallBack(com.dkhs.portfolio.ui.widget.StockViewCallBack) -> a
    void access$000(com.dkhs.portfolio.ui.fragment.KChartsFragment) -> a
    java.util.List access$100(com.dkhs.portfolio.ui.fragment.KChartsFragment,java.lang.String) -> a
    android.widget.RelativeLayout access$200(com.dkhs.portfolio.ui.fragment.KChartsFragment) -> b
    void access$300(com.dkhs.portfolio.ui.fragment.KChartsFragment,java.util.List) -> a
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack access$400(com.dkhs.portfolio.ui.fragment.KChartsFragment) -> c
    com.dkhs.portfolio.net.IHttpListener access$500(com.dkhs.portfolio.ui.fragment.KChartsFragment) -> d
    void access$600(com.dkhs.portfolio.ui.fragment.KChartsFragment) -> e
    void access$700(com.dkhs.portfolio.ui.fragment.KChartsFragment,java.util.List) -> b
com.dkhs.portfolio.ui.fragment.KChartsFragment$1 -> com.dkhs.portfolio.ui.fragment.bn:
    com.dkhs.portfolio.ui.fragment.KChartsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.KChartsFragment$2 -> com.dkhs.portfolio.ui.fragment.bo:
    com.dkhs.portfolio.ui.fragment.KChartsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.KChartsFragment$3 -> com.dkhs.portfolio.ui.fragment.bp:
    com.dkhs.portfolio.ui.fragment.KChartsFragment this$0 -> a
    void onDisplayDataChange(java.util.List) -> onDisplayDataChange
com.dkhs.portfolio.ui.fragment.KChartsFragment$4 -> com.dkhs.portfolio.ui.fragment.bq:
    com.dkhs.portfolio.ui.fragment.KChartsFragment this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.KChartsFragment$5 -> com.dkhs.portfolio.ui.fragment.br:
    com.dkhs.portfolio.ui.fragment.KChartsFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.KChartsFragment$6 -> com.dkhs.portfolio.ui.fragment.bs:
    com.dkhs.portfolio.ui.fragment.KChartsFragment this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.KChartsLandFragment -> com.dkhs.portfolio.ui.fragment.KChartsLandFragment:
    com.dkhs.portfolio.ui.widget.kline.KChartsLandView mMyChartsView -> b
    com.dkhs.portfolio.ui.widget.chart.StickChart mVolumnChartView -> c
    android.widget.ImageButton mLargerButton -> d
    android.widget.ImageButton mSmallerButton -> e
    boolean first -> f
    java.util.Timer mMarketTimer -> g
    java.util.List ohlcs -> a
    boolean having -> h
    java.lang.String TAG -> i
    android.widget.RelativeLayout pb -> j
    android.widget.TextView tvUnCheck -> k
    android.widget.TextView tvBeforeCheck -> l
    android.widget.TextView tvAfterCheck -> m
    android.widget.TextView tvTurnover -> n
    android.widget.TextView tvMacd -> o
    int page -> p
    boolean addmore -> q
    android.view.View pbLoadMore -> r
    com.dkhs.portfolio.net.IHttpListener mKlineHttpListener -> s
    com.dkhs.portfolio.net.IHttpListener mKlineFlushListener -> t
    java.lang.String mPageName -> u
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack mLandCallBack -> v
    com.dkhs.portfolio.ui.widget.StockViewCallBack stockViewCallback -> w
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment getKChartFragment(java.lang.Integer,java.lang.String,java.lang.String) -> b
    int setContentLayoutId() -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initChartView() -> m
    void initVloumnChartView() -> n
    void refreshChartsView(java.util.List) -> c
    void refreshVolumnCharts() -> o
    java.util.List getOHLCDatas() -> p
    void loadMordKline() -> i
    void updateChartData(java.util.List) -> d
    void updateChartView() -> q
    java.util.List getOHLCDatasFromJson(java.lang.String) -> a
    void large(android.view.View) -> a
    void small(android.view.View) -> b
    void changeButtonState() -> r
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void setViewVisible(boolean) -> a
    void onResume() -> onResume
    void onStop() -> onStop
    void onVisible() -> c_
    void onUnVisible() -> d_
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    void updateCheckView(java.lang.String) -> b
    void updateVolumView(int) -> a
    void setLandCallBack(com.dkhs.portfolio.ui.widget.LandStockViewCallBack) -> a
    void onDisplayDataChange(java.util.List) -> b
    void onLoadMoreDataStart() -> j
    void onLoadMoreDataEnd() -> k
    void setStockViewCallback(com.dkhs.portfolio.ui.widget.StockViewCallBack) -> a
    void onDoubleClick(android.view.View) -> c
    void loadMore() -> l
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.KChartsLandFragment,java.lang.String) -> a
    android.widget.RelativeLayout access$100(com.dkhs.portfolio.ui.fragment.KChartsLandFragment) -> a
    void access$200(com.dkhs.portfolio.ui.fragment.KChartsLandFragment,java.util.List) -> a
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack access$300(com.dkhs.portfolio.ui.fragment.KChartsLandFragment) -> b
    com.dkhs.portfolio.net.IHttpListener access$400(com.dkhs.portfolio.ui.fragment.KChartsLandFragment) -> c
    int access$500(com.dkhs.portfolio.ui.fragment.KChartsLandFragment) -> d
    com.dkhs.portfolio.ui.widget.kline.KChartsLandView access$600(com.dkhs.portfolio.ui.fragment.KChartsLandFragment) -> e
    com.dkhs.portfolio.ui.widget.chart.StickChart access$700(com.dkhs.portfolio.ui.fragment.KChartsLandFragment) -> f
    android.view.View access$800(com.dkhs.portfolio.ui.fragment.KChartsLandFragment) -> g
com.dkhs.portfolio.ui.fragment.KChartsLandFragment$1 -> com.dkhs.portfolio.ui.fragment.bt:
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.KChartsLandFragment$2 -> com.dkhs.portfolio.ui.fragment.bu:
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.KChartsLandFragment$3 -> com.dkhs.portfolio.ui.fragment.bv:
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.KChartsLandFragment$4 -> com.dkhs.portfolio.ui.fragment.bw:
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.KChartsLandFragment$5 -> com.dkhs.portfolio.ui.fragment.bx:
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.KChartsLandFragment$6 -> com.dkhs.portfolio.ui.fragment.by:
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.KChartsLandFragment$RequestMarketTask -> com.dkhs.portfolio.ui.fragment.KChartsLandFragment$a:
    com.dkhs.portfolio.ui.fragment.KChartsLandFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.LoadMoreListFragment -> com.dkhs.portfolio.ui.fragment.LoadMoreListFragment:
    com.dkhs.portfolio.ui.widget.PullToRefreshListView mListView -> c
    android.widget.TextView tvEmptyText -> a
    com.lidroid.xutils.http.HttpHandler mHttpHandler -> b
    android.view.View mProgressView -> d
    android.support.v4.widget.SwipeRefreshLayout mSwipeLayout -> e
    void onCreate(android.os.Bundle) -> onCreate
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setListViewVisible() -> m
    void setEmptyText(java.lang.String) -> b
    void initLoadMoreList(android.view.View) -> a
    android.widget.ListAdapter getListAdapter() -> b
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> e
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener setOnRefreshListener() -> g
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> f
    void setListViewInit(android.widget.ListView) -> a
    void loadData() -> c
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void onLoadMore() -> a_
    void setHttpHandler(com.lidroid.xutils.http.HttpHandler) -> a
com.dkhs.portfolio.ui.fragment.LoadMoreNoRefreshListFragment -> com.dkhs.portfolio.ui.fragment.LoadMoreNoRefreshListFragment:
    com.dkhs.portfolio.ui.widget.PullToRefreshListView mListView -> a
    android.widget.TextView tvEmptyText -> b
    com.lidroid.xutils.http.HttpHandler mHttpHandler -> c
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setEmptyText(int) -> a
    void initLoadMoreList(android.view.View) -> a
    android.widget.ListAdapter getListAdapter() -> f
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> d
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> e
    void setListViewInit(android.widget.ListView) -> a
    void loadData() -> b
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void onLoadMore() -> a_
    void setHttpHandler(com.lidroid.xutils.http.HttpHandler) -> a
com.dkhs.portfolio.ui.fragment.LoadPageMoreListFragment -> com.dkhs.portfolio.ui.fragment.LoadPageMoreListFragment:
    com.dkhs.portfolio.ui.widget.PullToRefreshPageListView mListView -> c
    android.widget.TextView tvEmptyText -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    int setContentLayoutId() -> h
    void setListViewVisible() -> i
    void setEmptyText(java.lang.String) -> b
    void initLoadMoreList(android.view.View) -> a
    android.widget.ListAdapter getListAdapter() -> b
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> f
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> g
    void setListViewInit(com.dkhs.portfolio.ui.widget.PullToRefreshPageListView) -> a
    void loadData() -> c
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void onLoadMore() -> d
com.dkhs.portfolio.ui.fragment.MainInfoFragment -> com.dkhs.portfolio.ui.fragment.MainInfoFragment:
    android.widget.LinearLayout layout -> d
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
com.dkhs.portfolio.ui.fragment.MainMarketFragment -> com.dkhs.portfolio.ui.fragment.MainMarketFragment:
    android.support.v4.view.ViewPager vp -> a
    android.widget.Button mBtnrefresh -> b
    android.widget.Button mBtnsearch -> c
    com.dkhs.portfolio.ui.widget.TabWidget tabWidget -> d
    java.util.ArrayList fragmentList -> e
    int setContentLayoutId() -> h
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void rotateRefreshButton(com.dkhs.portfolio.ui.eventbus.RotateRefreshEvent) -> rotateRefreshButton
    void stopRefreshAnimation(com.dkhs.portfolio.ui.eventbus.StopRefreshEvent) -> stopRefreshAnimation
    void onDestroy() -> onDestroy
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.dkhs.portfolio.ui.fragment.MainMarketFragment$1 -> com.dkhs.portfolio.ui.fragment.bz:
    com.dkhs.portfolio.ui.fragment.MainMarketFragment this$0 -> a
    void onSelect(int) -> a
com.dkhs.portfolio.ui.fragment.MainOptionalFragment -> com.dkhs.portfolio.ui.fragment.MainOptionalFragment:
    android.support.v4.view.ViewPager mVp -> a
    android.widget.Button btnRight -> b
    android.widget.Button btnLeft -> c
    java.lang.String mUserId -> d
    com.dkhs.portfolio.ui.widget.TabWidget tabWidget -> e
    com.dkhs.portfolio.ui.fragment.TabStockFragment tabStockFragment -> f
    com.dkhs.portfolio.ui.fragment.TabFundsFragment tabFundsFragment -> g
    com.dkhs.portfolio.ui.fragment.TabConbinationFragment tabConbinationFragment -> h
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment getMainFragment(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setBackTitleBar() -> c
    void setOptionTitleBar() -> d
    void setCombinationBar() -> e
    void setFundBar() -> f
    void displayFragmentA() -> a
    void displayFragmentC() -> g
    void displayFragmentB() -> b
    void dataUpdate(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.dkhs.portfolio.ui.fragment.TabStockFragment access$000(com.dkhs.portfolio.ui.fragment.MainOptionalFragment) -> a
    com.dkhs.portfolio.ui.fragment.TabConbinationFragment access$100(com.dkhs.portfolio.ui.fragment.MainOptionalFragment) -> b
    com.dkhs.portfolio.ui.fragment.TabFundsFragment access$200(com.dkhs.portfolio.ui.fragment.MainOptionalFragment) -> c
    com.dkhs.portfolio.ui.widget.TabWidget access$300(com.dkhs.portfolio.ui.fragment.MainOptionalFragment) -> d
    void access$400(com.dkhs.portfolio.ui.fragment.MainOptionalFragment) -> e
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$1 -> com.dkhs.portfolio.ui.fragment.ca:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onSelect(int) -> a
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$2 -> com.dkhs.portfolio.ui.fragment.cb:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$3 -> com.dkhs.portfolio.ui.fragment.cc:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$4 -> com.dkhs.portfolio.ui.fragment.cd:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$5 -> com.dkhs.portfolio.ui.fragment.ce:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$6 -> com.dkhs.portfolio.ui.fragment.cf:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$7 -> com.dkhs.portfolio.ui.fragment.cg:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$8 -> com.dkhs.portfolio.ui.fragment.ch:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MainOptionalFragment$OnPagerListener -> com.dkhs.portfolio.ui.fragment.MainOptionalFragment$a:
    com.dkhs.portfolio.ui.fragment.MainOptionalFragment this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.dkhs.portfolio.ui.fragment.MarketCombinationFragment -> com.dkhs.portfolio.ui.fragment.MarketCombinationFragment:
    com.dkhs.portfolio.ui.widget.HScrollTitleView hsTitle -> d
    com.dkhs.portfolio.ui.widget.ScrollViewPager pager -> e
    java.util.List mVisitorData -> a
    int titleIndex -> f
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener titleSelectPostion -> b
    android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener -> c
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void initViews(android.view.View) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void loadVisitorCombinationList() -> a
    void onDestroy() -> onDestroy
    com.dkhs.portfolio.ui.widget.ScrollViewPager access$000(com.dkhs.portfolio.ui.fragment.MarketCombinationFragment) -> a
    com.dkhs.portfolio.ui.widget.HScrollTitleView access$100(com.dkhs.portfolio.ui.fragment.MarketCombinationFragment) -> b
com.dkhs.portfolio.ui.fragment.MarketCombinationFragment$1 -> com.dkhs.portfolio.ui.fragment.ci:
    com.dkhs.portfolio.ui.fragment.MarketCombinationFragment this$0 -> a
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.fragment.MarketCombinationFragment$2 -> com.dkhs.portfolio.ui.fragment.cj:
    com.dkhs.portfolio.ui.fragment.MarketCombinationFragment this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.dkhs.portfolio.ui.fragment.MarketFundsFragment -> com.dkhs.portfolio.ui.fragment.MarketFundsFragment:
    java.util.LinkedList sorts -> b
    com.dkhs.portfolio.ui.fragment.FundOrderFragment loadDataListFragment -> c
    android.view.ViewGroup menuRL -> a
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout fundTypeMenuChooserL -> d
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout sortTypeMenuChooserL -> e
    android.widget.TextView tvCurrent -> f
    android.widget.TextView tvPercentgae -> g
    android.widget.TextView fundTypeTV -> h
    android.view.View titleView -> i
    int setContentLayoutId() -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void initView(android.view.View) -> a
    void onResume() -> onResume
    void replaceDataList(java.lang.String,java.lang.String) -> a
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void update(com.dkhs.portfolio.bean.MenuBean) -> update
    void menuRLdismiss(com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout) -> menuRLdismiss
    void setDrawableUp(android.widget.TextView) -> a
    void setDrawableDown(android.widget.TextView) -> b
    void setViewOrderIndicator(android.widget.TextView,boolean) -> a
    void onPause() -> onPause
    void dataUpdate(boolean) -> a
com.dkhs.portfolio.ui.fragment.MarketStockFragment -> com.dkhs.portfolio.ui.fragment.MarketStockFragment:
    android.widget.GridView gvMainIndex -> c
    java.util.List mIndexDataList -> d
    com.dkhs.portfolio.ui.adapter.MarketCenterGridAdapter mIndexAdapter -> e
    android.widget.GridView gvPlate -> f
    java.util.List mSecotrList -> g
    com.dkhs.portfolio.ui.adapter.MarketPlateGridAdapter mPlateAdapter -> h
    android.widget.ListView lvIncease -> i
    java.util.List mIncreaseDataList -> j
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter mIncreaseAdapter -> k
    android.widget.ListView lvDown -> l
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter mDownAdapter -> m
    java.util.List mDownDataList -> n
    android.widget.ListView lvHandover -> o
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter mTurnOverAdapter -> p
    java.util.List mTurnOverDataList -> q
    android.widget.ListView lvAmplit -> r
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter mAmplitAdapter -> s
    java.util.List mAmpliDataList -> t
    java.util.Timer mMarketTimer -> u
    boolean isTimerStart -> v
    android.support.v4.widget.SwipeRefreshLayout mSwipeLayout -> a
    android.animation.LayoutTransition mTransitioner -> w
    boolean isLoading -> x
    java.util.List engineList -> y
    com.dkhs.portfolio.engine.PlateLoadMoreEngineImpl plateEngine -> z
    com.dkhs.portfolio.engine.LoadMoreDataEngine$ILoadDataBackListener plateListener -> b
    boolean hasSetLVIncreaseHigh -> A
    boolean hasSetLVDownHigh -> B
    boolean hasSetLVHandoverHigh -> C
    boolean hasSetLVAmpltHigh -> D
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStop() -> onStop
    void initView(android.view.View) -> a
    void setDefTransittion() -> c
    void onStart() -> onStart
    void initData() -> d
    void onClick(android.view.View) -> onClick
    void startQuoteActivity(com.dkhs.portfolio.bean.SelectStockBean) -> a
    void onPause() -> onPause
    void loadingAllData() -> e
    void startAnimaRefresh() -> a
    void endAnimaRefresh() -> b
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> a
    java.util.List access$100(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> b
    void access$200(com.dkhs.portfolio.ui.fragment.MarketStockFragment,com.dkhs.portfolio.bean.SelectStockBean) -> a
    void access$300(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> c
    com.dkhs.portfolio.ui.adapter.MarketPlateGridAdapter access$400(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> d
    boolean access$502(com.dkhs.portfolio.ui.fragment.MarketStockFragment,boolean) -> a
    java.util.List access$600(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> e
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter access$700(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> f
    boolean access$800(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> g
    boolean access$802(com.dkhs.portfolio.ui.fragment.MarketStockFragment,boolean) -> b
    android.widget.ListView access$900(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> h
    java.util.List access$1000(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> i
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter access$1100(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> j
    boolean access$1200(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> k
    boolean access$1202(com.dkhs.portfolio.ui.fragment.MarketStockFragment,boolean) -> c
    android.widget.ListView access$1300(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> l
    java.util.List access$1400(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> m
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter access$1500(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> n
    boolean access$1600(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> o
    boolean access$1602(com.dkhs.portfolio.ui.fragment.MarketStockFragment,boolean) -> d
    android.widget.ListView access$1700(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> p
    java.util.List access$1800(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> q
    com.dkhs.portfolio.ui.adapter.MarketCenterItemAdapter access$1900(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> r
    boolean access$2000(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> s
    boolean access$2002(com.dkhs.portfolio.ui.fragment.MarketStockFragment,boolean) -> e
    android.widget.ListView access$2100(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> t
    com.dkhs.portfolio.ui.adapter.MarketCenterGridAdapter access$2200(com.dkhs.portfolio.ui.fragment.MarketStockFragment) -> u
com.dkhs.portfolio.ui.fragment.MarketStockFragment$1 -> com.dkhs.portfolio.ui.fragment.ck:
    com.dkhs.portfolio.ui.fragment.MarketStockFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.MarketStockFragment$2 -> com.dkhs.portfolio.ui.fragment.cl:
    com.dkhs.portfolio.ui.fragment.MarketStockFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.MarketStockFragment$3 -> com.dkhs.portfolio.ui.fragment.cm:
    com.dkhs.portfolio.ui.fragment.MarketStockFragment this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.MarketStockFragment$4 -> com.dkhs.portfolio.ui.fragment.cn:
    com.dkhs.portfolio.ui.fragment.MarketStockFragment this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.MarketStockFragment$5 -> com.dkhs.portfolio.ui.fragment.co:
    com.dkhs.portfolio.ui.fragment.MarketStockFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.MarketStockFragment$RequestMarketTask -> com.dkhs.portfolio.ui.fragment.MarketStockFragment$a:
    com.dkhs.portfolio.ui.fragment.MarketStockFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.MarketStockFragment$StockLoadDataListener -> com.dkhs.portfolio.ui.fragment.MarketStockFragment$b:
    java.lang.String type -> b
    com.dkhs.portfolio.ui.fragment.MarketStockFragment this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.MarketStockFragment$StockLoadDataListener$1 -> com.dkhs.portfolio.ui.fragment.cp:
    com.dkhs.portfolio.ui.fragment.MarketStockFragment$StockLoadDataListener this$1 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.MenuItemFragment -> com.dkhs.portfolio.ui.fragment.MenuItemFragment:
    android.widget.Button btnTab1 -> a
    android.widget.TextView tvTab1 -> b
    android.widget.Button btnTab2 -> c
    android.widget.TextView tvTab2 -> d
    android.widget.Button btnTab3 -> e
    android.widget.TextView tvTab3 -> f
    android.widget.Button btnTab4 -> g
    android.widget.TextView tvTab4 -> h
    android.view.View tabLayout1 -> i
    android.view.View tabLayout2 -> j
    android.view.View tabLayout3 -> k
    android.view.View tabLayout4 -> l
    android.widget.TextView newCountTV -> m
    int mIndex -> n
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void clickTab(int) -> a
    void setupView() -> a
    void setViewDefStatus() -> b
    void setSelectView(android.view.View) -> a
    void onDestroy() -> onDestroy
    void setSelectText(android.widget.TextView) -> a
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void updateMessageCenter(com.dkhs.portfolio.ui.eventbus.NewMessageEvent) -> updateMessageCenter
    void updateNewMessageView(boolean) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet -> com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$CombinationAdapter mAdapter -> c
    com.baoyz.swipemenulistview.SwipeMenuListView mListView -> d
    java.util.List mDataList -> e
    com.dkhs.portfolio.engine.UserCombinationEngineImpl dataEngine -> f
    android.widget.TextView tvEmptyText -> a
    java.util.Timer mCombinationTimer -> g
    android.os.Handler uiHandler -> b
    boolean isRefresh -> h
    int setContentLayoutId() -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void delCombination(int) -> a
    void showDelDialog(com.dkhs.portfolio.bean.CombinationBean) -> a
    int dp2px(int) -> b
    void onResume() -> onResume
    void onStop() -> onStop
    void refresh() -> b
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
    void startLoadData() -> d
    void endLoadData() -> e
    void createNewCombination() -> c
    int access$000(com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet,int) -> a
    void access$100(com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet,int) -> b
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$CombinationAdapter access$200(com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet) -> a
    java.util.List access$300(com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet) -> b
    void access$400(com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet) -> c
    void access$500(com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet) -> d
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$1 -> com.dkhs.portfolio.ui.fragment.cq:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$2 -> com.dkhs.portfolio.ui.fragment.cr:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    void create(com.baoyz.swipemenulistview.SwipeMenu) -> a
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$3 -> com.dkhs.portfolio.ui.fragment.cs:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    boolean onMenuItemClick(int,com.baoyz.swipemenulistview.SwipeMenu,int) -> a
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$4 -> com.dkhs.portfolio.ui.fragment.ct:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    void onSwipeStart(int) -> a
    void onSwipeEnd(int) -> b
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$5 -> com.dkhs.portfolio.ui.fragment.cu:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$6 -> com.dkhs.portfolio.ui.fragment.cv:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$7 -> com.dkhs.portfolio.ui.fragment.cw:
    com.dkhs.portfolio.bean.CombinationBean val$mCombination -> a
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$7$1 -> com.dkhs.portfolio.ui.fragment.cx:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$7 this$1 -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
    void beforeRequest() -> beforeRequest
    void requestCallBack() -> requestCallBack
    java.lang.Object parseDateTask(java.lang.String) -> b
    void afterParseData(java.lang.Object) -> a
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$8 -> com.dkhs.portfolio.ui.fragment.cy:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$9 -> com.dkhs.portfolio.ui.fragment.cz:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$CombinationAdapter -> com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$a:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    int getCount() -> getCount
    com.dkhs.portfolio.bean.CombinationBean getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$CombinationAdapter$ViewHolder -> com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$a$a:
    android.widget.TextView tvTitle -> a
    android.widget.TextView tvCurrent -> b
    android.widget.TextView tvAddup -> c
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$CombinationAdapter this$1 -> d
com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$RequestCombinationTask -> com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet$b:
    com.dkhs.portfolio.ui.fragment.MyCombinationFragmnet this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.ReportListForAllFragment -> com.dkhs.portfolio.ui.fragment.ReportListForAllFragment:
    com.dkhs.portfolio.ui.widget.PullToRefreshListView mListView -> e
    boolean isLoadingMore -> f
    android.view.View mFootView -> g
    android.content.Context context -> h
    android.widget.BaseAdapter mOptionMarketAdapter -> i
    java.util.List mDataList -> j
    com.dkhs.portfolio.engine.OpitionNewsEngineImple mLoadDataEngine -> k
    boolean first -> a
    android.widget.TextView tvEmpty -> l
    android.widget.RelativeLayout pb -> m
    android.support.v4.widget.SwipeRefreshLayout mSwipeLayout -> b
    int viewType -> n
    com.dkhs.portfolio.engine.NewsforModel vo -> o
    boolean isRefresh -> p
    android.widget.AdapterView$OnItemClickListener itemBackClick -> c
    com.dkhs.portfolio.engine.LoadNewsDataEngine$ILoadDataBackListener mSelectStockBackListener -> d
    com.dkhs.portfolio.ui.fragment.ReportListForAllFragment getFragment(com.dkhs.portfolio.engine.NewsforModel,int) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void onViewShow() -> b_
    void initDate() -> c
    void refreshData() -> e
    void initView(android.view.View) -> a
    void setEmptyText() -> f
    void hideEmptyText() -> g
    void onLoadMore() -> a_
    int setContentLayoutId() -> h
    void access$000(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> a
    java.util.List access$100(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> b
    int access$200(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> c
    android.content.Context access$300(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> d
    com.dkhs.portfolio.engine.NewsforModel access$400(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> e
    android.widget.RelativeLayout access$500(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> f
    com.dkhs.portfolio.ui.widget.PullToRefreshListView access$600(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> g
    com.dkhs.portfolio.engine.OpitionNewsEngineImple access$700(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> h
    boolean access$800(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> i
    boolean access$802(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment,boolean) -> a
    android.widget.BaseAdapter access$900(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> j
    void access$1000(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> k
    void access$1100(com.dkhs.portfolio.ui.fragment.ReportListForAllFragment) -> l
com.dkhs.portfolio.ui.fragment.ReportListForAllFragment$1 -> com.dkhs.portfolio.ui.fragment.da:
    com.dkhs.portfolio.ui.fragment.ReportListForAllFragment this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.ReportListForAllFragment$2 -> com.dkhs.portfolio.ui.fragment.db:
    com.dkhs.portfolio.ui.fragment.ReportListForAllFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.ReportListForAllFragment$3 -> com.dkhs.portfolio.ui.fragment.dc:
    com.dkhs.portfolio.ui.fragment.ReportListForAllFragment this$0 -> a
    void loadFinish(java.util.List) -> a
    void loadingFail() -> a
com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment -> com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment:
    java.lang.String trendType -> g
    boolean isTodayNetValue -> h
    com.dkhs.portfolio.ui.widget.TimesharingplanChart mMaChart -> i
    com.dkhs.portfolio.engine.QuotesEngineImpl mQuotesDataEngine -> j
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter mBuyAdapter -> k
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter mSellAdapter -> l
    android.widget.ListView mListviewBuy -> m
    android.widget.ListView mListviewSell -> n
    android.view.View viewFiveRange -> o
    java.lang.String mStockCode -> p
    com.dkhs.portfolio.ui.widget.LineEntity fenshiPiceLine -> q
    com.dkhs.portfolio.ui.widget.LineEntity averageLine -> r
    com.dkhs.portfolio.bean.SelectStockBean mSelectStockBean -> s
    android.widget.RelativeLayout pb -> t
    com.dkhs.portfolio.bean.StockQuotesBean mStockBean -> u
    android.os.Handler mHandler -> v
    com.dkhs.portfolio.bean.FSDataBean mFsDataBean -> a
    com.dkhs.portfolio.net.ParseHttpListener todayListener -> b
    java.util.List fenshiLineData -> c
    java.util.List averagelineData -> d
    android.os.Handler dataHandler -> e
    java.lang.Runnable requestRunnable -> f
    java.lang.String mPageName -> w
    com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment newInstance(java.lang.String,java.lang.String) -> a
    int setContentLayoutId() -> h
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void handleArguments(android.os.Bundle) -> b
    void handleSavedInstanceState(android.os.Bundle) -> c
    void onAttach(android.app.Activity) -> onAttach
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setLineData(java.util.List,java.util.List) -> a
    void initTodayTrendTitle() -> a
    void setStockQuotesBean(com.dkhs.portfolio.bean.StockQuotesBean) -> a
    boolean isStopStock() -> b
    float getMaxOffetValue(float,java.util.List) -> a
    void setYTitle(float,float) -> a
    void setStopYTitle(float) -> a
    void setTodayPointTitle() -> c
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onDestroyView() -> onDestroyView
    void onStop() -> onStop
    void setStockViewCallBack(com.dkhs.portfolio.ui.widget.StockViewCallBack) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    android.view.View access$000(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> a
    com.dkhs.portfolio.bean.StockQuotesBean access$100(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> b
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter access$200(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> c
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter access$300(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> d
    boolean access$400(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> e
    void access$500(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment,float) -> a
    android.widget.RelativeLayout access$600(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> f
    float access$700(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment,float,java.util.List) -> a
    void access$800(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment,float,float) -> a
    void access$900(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> g
    void access$1000(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment,java.util.List,java.util.List) -> a
    java.lang.String access$1100(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> h
    com.dkhs.portfolio.engine.QuotesEngineImpl access$1200(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> i
    java.lang.String access$1300(com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment) -> j
com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment$1 -> com.dkhs.portfolio.ui.fragment.dd:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment$2 -> com.dkhs.portfolio.ui.fragment.de:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment this$0 -> a
    com.dkhs.portfolio.bean.FSDataBean parseDateTask(java.lang.String) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(com.dkhs.portfolio.bean.FSDataBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment$3 -> com.dkhs.portfolio.ui.fragment.df:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment$4 -> com.dkhs.portfolio.ui.fragment.dg:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment -> com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment:
    java.lang.String trendType -> h
    boolean isTodayNetValue -> i
    com.dkhs.portfolio.ui.widget.TimesharingplanChart mMaChart -> j
    com.dkhs.portfolio.engine.QuotesEngineImpl mQuotesDataEngine -> k
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter mBuyAdapter -> l
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter mSellAdapter -> m
    android.widget.ListView mListviewBuy -> n
    android.widget.ListView mListviewSell -> o
    android.view.View viewFiveRange -> p
    java.lang.String mStockCode -> q
    com.dkhs.portfolio.ui.widget.LineEntity fenshiPiceLine -> a
    com.dkhs.portfolio.bean.SelectStockBean mSelectStockBean -> r
    android.widget.RelativeLayout pb -> s
    com.dkhs.portfolio.ui.widget.StockViewCallBack stockViewCallback -> t
    com.dkhs.portfolio.bean.StockQuotesBean mStockBean -> u
    android.os.Handler mHandler -> v
    com.dkhs.portfolio.bean.FSDataBean mFsDataBean -> b
    com.dkhs.portfolio.net.ParseHttpListener todayListener -> c
    java.util.List lineDataList -> d
    java.util.List averagelineData -> e
    android.os.Handler dataHandler -> f
    java.lang.Runnable runnable -> g
    java.lang.String mPageName -> w
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack mLandCallBack -> x
    com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment newInstance(java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleExtras(android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void handleArguments(android.os.Bundle) -> b
    void handleSavedInstanceState(android.os.Bundle) -> c
    void onAttach(android.app.Activity) -> onAttach
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setStockViewCallback(com.dkhs.portfolio.ui.widget.StockViewCallBack) -> a
    void setLineData(java.util.List) -> a
    void initTodayTrendTitle() -> c
    void setStockQuotesBean(com.dkhs.portfolio.bean.StockQuotesBean) -> a
    boolean isStopStock() -> d
    float getMaxOffetValue(float,java.util.List) -> a
    void setYTitle(float,float) -> a
    void setStopYTitle(float) -> a
    void setTodayPointTitle() -> e
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onDestroyView() -> onDestroyView
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    int setContentLayoutId() -> h
    void setLandCallBack(com.dkhs.portfolio.ui.widget.LandStockViewCallBack) -> a
    void onVisible() -> c_
    void onUnVisible() -> d_
    com.dkhs.portfolio.ui.widget.StockViewCallBack access$000(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> a
    com.dkhs.portfolio.bean.StockQuotesBean access$100(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> b
    android.view.View access$200(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> c
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter access$300(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> d
    com.dkhs.portfolio.ui.adapter.FiveRangeAdapter access$400(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> e
    boolean access$500(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> f
    void access$600(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment,float) -> a
    android.widget.RelativeLayout access$700(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> g
    com.dkhs.portfolio.ui.widget.LandStockViewCallBack access$800(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> h
    float access$900(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment,float,java.util.List) -> a
    void access$1000(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment,float,float) -> a
    void access$1100(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> i
    void access$1200(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment,java.util.List) -> a
    java.lang.String access$1300(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> j
    com.dkhs.portfolio.engine.QuotesEngineImpl access$1400(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> k
    java.lang.String access$1500(com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment) -> l
com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment$1 -> com.dkhs.portfolio.ui.fragment.dh:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment this$0 -> a
    void OnDoubleClick(android.view.View) -> a
com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment$2 -> com.dkhs.portfolio.ui.fragment.di:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment$3 -> com.dkhs.portfolio.ui.fragment.dj:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment this$0 -> a
    com.dkhs.portfolio.bean.FSDataBean parseDateTask(java.lang.String) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(com.dkhs.portfolio.bean.FSDataBean) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment$4 -> com.dkhs.portfolio.ui.fragment.dk:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment$5 -> com.dkhs.portfolio.ui.fragment.dl:
    com.dkhs.portfolio.ui.fragment.StockQuotesChartLandFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TabConbinationFragment -> com.dkhs.portfolio.ui.fragment.TabConbinationFragment:
    android.widget.TextView tvCurrent -> c
    android.widget.TextView tvPercentgae -> d
    android.view.View titleView -> e
    com.dkhs.portfolio.ui.adapter.TabFundsAdapter mFundsAdapter -> f
    java.util.List mDataList -> g
    com.dkhs.portfolio.engine.FollowComListEngineImpl dataEngine -> h
    java.lang.String mUserId -> i
    com.dkhs.portfolio.ui.eventbus.IDataUpdateListener dataUpdateListener -> j
    com.dkhs.portfolio.ui.widget.PullToRefreshListView mListView -> a
    android.support.v4.widget.SwipeRefreshLayout mSwipeLayout -> b
    android.widget.TextView viewLastClick -> k
    java.lang.String orderType -> l
    int lastPercentTextIds -> m
    com.dkhs.portfolio.ui.fragment.TabConbinationFragment getFragment(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    int setContentLayoutId() -> h
    void onResume() -> onResume
    void onPause() -> onPause
    void refreshEditView() -> a
    void setDataUpdateListener(com.dkhs.portfolio.ui.eventbus.IDataUpdateListener) -> a
    void onClick(android.view.View) -> onClick
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void addItem() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void refresh() -> c
    void replaceDataList() -> d
    void setDrawableUp(android.widget.TextView) -> a
    void setDrawableDown(android.widget.TextView) -> b
    void setTextDrawableHide(android.widget.TextView) -> c
    void setViewOrderIndicator(android.widget.TextView) -> d
    boolean isDownOrder(java.lang.String) -> b
    boolean isDefOrder(java.lang.String) -> c
    boolean isPercentType(java.lang.String) -> d
    void setDownType(android.widget.TextView) -> e
    void setUpType(android.widget.TextView) -> f
    void setDefType(android.widget.TextView) -> g
    void dataUpdate(boolean) -> a
    void onTabTitleChange(com.dkhs.portfolio.ui.eventbus.TabComTitleChangeEvent) -> onTabTitleChange
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.TabConbinationFragment) -> a
    com.dkhs.portfolio.ui.adapter.TabFundsAdapter access$100(com.dkhs.portfolio.ui.fragment.TabConbinationFragment) -> b
com.dkhs.portfolio.ui.fragment.TabConbinationFragment$1 -> com.dkhs.portfolio.ui.fragment.dm:
    com.dkhs.portfolio.ui.fragment.TabConbinationFragment this$0 -> a
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void loadFail() -> a
com.dkhs.portfolio.ui.fragment.TabConbinationFragment$2 -> com.dkhs.portfolio.ui.fragment.dn:
    com.dkhs.portfolio.ui.fragment.TabConbinationFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.TabConbinationFragment$3 -> com.dkhs.portfolio.ui.fragment.do:
    com.dkhs.portfolio.ui.fragment.TabConbinationFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.TabConbinationFragment$4 -> com.dkhs.portfolio.ui.fragment.dp:
    com.dkhs.portfolio.ui.fragment.TabConbinationFragment this$0 -> a
    void onRefresh() -> a
com.dkhs.portfolio.ui.fragment.TabF10Fragment -> com.dkhs.portfolio.ui.fragment.TabF10Fragment:
    com.dkhs.portfolio.engine.F10DataEngineImpl mDataEngine -> b
    android.widget.LinearLayout mContentView -> c
    android.content.Context mContext -> d
    com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType mTabtype -> e
    java.lang.String mSymbol -> f
    boolean getadle -> g
    com.dkhs.portfolio.net.ParseHttpListener requestListener -> a
    com.dkhs.portfolio.ui.fragment.TabF10Fragment newIntent(java.lang.String,com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType) -> a
    int setContentLayoutId() -> h
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void handArguments() -> a
    void loadDate() -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    android.content.Context access$000(com.dkhs.portfolio.ui.fragment.TabF10Fragment) -> a
    android.widget.LinearLayout access$100(com.dkhs.portfolio.ui.fragment.TabF10Fragment) -> b
com.dkhs.portfolio.ui.fragment.TabF10Fragment$1 -> com.dkhs.portfolio.ui.fragment.dq:
    com.dkhs.portfolio.ui.fragment.TabF10Fragment this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType -> com.dkhs.portfolio.ui.fragment.TabF10Fragment$a:
    com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType INTRODUCTION -> a
    com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType STOCK_HODLER -> b
    com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType FINANCE -> c
    com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType[] $VALUES -> d
    com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType[] values() -> values
    com.dkhs.portfolio.ui.fragment.TabF10Fragment$TabType valueOf(java.lang.String) -> valueOf
com.dkhs.portfolio.ui.fragment.TabFundsFragment -> com.dkhs.portfolio.ui.fragment.TabFundsFragment:
    java.lang.String TAG -> c
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund loadDataListFragment -> d
    android.widget.TextView tvCurrent -> e
    android.widget.TextView tvPercentgae -> f
    android.view.View titleView -> g
    android.widget.TextView viewLastClick -> h
    java.lang.String orderType -> i
    int lastPercentTextIds -> j
    java.lang.String mUserId -> k
    android.os.Handler updateHandler -> a
    com.dkhs.portfolio.ui.eventbus.IDataUpdateListener dataUpdateListener -> l
    java.lang.Runnable updateRunnable -> b
    java.lang.String mPageName -> m
    int setContentLayoutId() -> h
    com.dkhs.portfolio.ui.fragment.TabFundsFragment getFragment(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void onResume() -> onResume
    void refreshEditView() -> a
    void setDataUpdateListener(com.dkhs.portfolio.ui.eventbus.IDataUpdateListener) -> a
    void onStop() -> onStop
    void replaceDataList() -> e
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void reloadData() -> f
    void setDrawableUp(android.widget.TextView) -> a
    void setDrawableDown(android.widget.TextView) -> b
    void setTextDrawableHide(android.widget.TextView) -> c
    void setViewOrderIndicator(android.widget.TextView) -> d
    boolean isDownOrder(java.lang.String) -> b
    boolean isPercentType(java.lang.String) -> c
    boolean isDefOrder(java.lang.String) -> d
    void setDownType(android.widget.TextView) -> e
    void setUpType(android.widget.TextView) -> f
    void setDefType(android.widget.TextView) -> g
    void onPause() -> onPause
    void onTabTitleChange(com.dkhs.portfolio.ui.eventbus.TabFundsTitleChangeEvent) -> onTabTitleChange
    void dataUpdate(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.List getDataList() -> c
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund access$000(com.dkhs.portfolio.ui.fragment.TabFundsFragment) -> a
com.dkhs.portfolio.ui.fragment.TabFundsFragment$1 -> com.dkhs.portfolio.ui.fragment.dr:
    com.dkhs.portfolio.ui.fragment.TabFundsFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TabFundsFragment$2 -> com.dkhs.portfolio.ui.fragment.ds:
    com.dkhs.portfolio.ui.fragment.TabFundsFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TabStockFragment -> com.dkhs.portfolio.ui.fragment.TabStockFragment:
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund loadDataListFragment -> c
    android.widget.TextView tvCurrent -> d
    android.widget.TextView tvPercentgae -> e
    android.view.View titleView -> f
    boolean isLoading -> g
    java.lang.String mUserId -> h
    android.os.Handler updateHandler -> a
    com.dkhs.portfolio.ui.eventbus.IDataUpdateListener dataUpdateListener -> i
    java.lang.Runnable updateRunnable -> b
    android.widget.TextView viewLastClick -> j
    java.lang.String orderType -> k
    int lastPercentTextIds -> l
    java.lang.String mPageName -> m
    int setContentLayoutId() -> h
    com.dkhs.portfolio.ui.fragment.TabStockFragment getTabStockFragment(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void refreshEditView() -> a
    void setDataUpdateListener(com.dkhs.portfolio.ui.eventbus.IDataUpdateListener) -> a
    void onStop() -> onStop
    void replaceDataList() -> c
    void onStart() -> onStart
    void onClick(android.view.View) -> onClick
    void reloadData() -> d
    void setDrawableUp(android.widget.TextView) -> a
    void setDrawableDown(android.widget.TextView) -> b
    void setTextDrawableHide(android.widget.TextView) -> c
    void setViewOrderIndicator(android.widget.TextView) -> d
    boolean isDownOrder(java.lang.String) -> b
    boolean isPercentType(java.lang.String) -> c
    boolean isDefOrder(java.lang.String) -> d
    void setDownType(android.widget.TextView) -> e
    void setUpType(android.widget.TextView) -> f
    void setDefType(android.widget.TextView) -> g
    void onPause() -> onPause
    void onTabTitleChange(com.dkhs.portfolio.ui.eventbus.TabStockTitleChangeEvent) -> onTabTitleChange
    void dataUpdate(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.List getDataList() -> b
    com.dkhs.portfolio.ui.fragment.FragmentSelectStockFund access$000(com.dkhs.portfolio.ui.fragment.TabStockFragment) -> a
com.dkhs.portfolio.ui.fragment.TabStockFragment$1 -> com.dkhs.portfolio.ui.fragment.dt:
    com.dkhs.portfolio.ui.fragment.TabStockFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TabStockFragment$2 -> com.dkhs.portfolio.ui.fragment.du:
    com.dkhs.portfolio.ui.fragment.TabStockFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TestFragment -> com.dkhs.portfolio.ui.fragment.TestFragment:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
com.dkhs.portfolio.ui.fragment.TrendChartFragment -> com.dkhs.portfolio.ui.fragment.TrendChartFragment:
    java.lang.String trendType -> g
    boolean needCloseDialog -> h
    android.widget.TextView tvTimeLeft -> i
    android.widget.TextView tvTimeRight -> j
    android.widget.TextView tvNetValue -> k
    android.widget.TextView tvUpValue -> l
    android.widget.TextView tvIncreaseValue -> m
    android.widget.TextView tvStartText -> n
    android.widget.TextView tvEndText -> o
    android.widget.TextView tvIncreaseText -> p
    android.view.View viewDashLineTip -> q
    com.dkhs.portfolio.ui.widget.TrendChart mMaChart -> r
    com.dkhs.portfolio.engine.NetValueEngine mNetValueDataEngine -> s
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> t
    android.os.Handler updateHandler -> u
    java.util.Calendar mCreateCalender -> v
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity mTodayLineData -> w
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity mWeekLineData -> x
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity mMonthLineData -> y
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity mAllLineData -> z
    android.os.Handler drawCharHandler -> a
    android.os.Handler shareHandler -> b
    java.util.List lines -> A
    com.dkhs.portfolio.ui.widget.LineEntity MA5 -> B
    com.dkhs.portfolio.net.ParseHttpListener todayListener -> c
    android.os.Handler dataHandler -> d
    com.dkhs.portfolio.net.ParseHttpListener historyNetValueListener -> e
    java.lang.Runnable runnable -> f
    java.lang.String strLeft -> C
    java.lang.String strRight -> D
    void onCreate(android.os.Bundle) -> onCreate
    void handleArguments(android.os.Bundle) -> a
    void showShare() -> a
    void updateView() -> b
    void handleExtras(android.os.Bundle) -> b
    void onAttach(android.app.Activity) -> onAttach
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initView(android.view.View) -> a
    void setupBottomTextViewData() -> c
    boolean isTodayShow() -> d
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setLineData(java.util.List) -> a
    void initTodayTrendTitle() -> e
    void setTipVisible(boolean) -> a
    void setTodayViewLoad() -> f
    float getMaxOffetValue(com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.TodayNetValue) -> a
    void setYTitle(float,float) -> a
    float getMaxOffetValue(com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void setHistoryViewload(com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> a
    void setXTitle(com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> b
    void onPause() -> onPause
    void onStart() -> onStart
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onDestroyView() -> onDestroyView
    int setContentLayoutId() -> h
    void access$000(com.dkhs.portfolio.ui.fragment.TrendChartFragment) -> a
    float access$200(com.dkhs.portfolio.ui.fragment.TrendChartFragment,com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.TodayNetValue) -> a
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity access$302(com.dkhs.portfolio.ui.fragment.TrendChartFragment,com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> a
    java.lang.String access$400(com.dkhs.portfolio.ui.fragment.TrendChartFragment) -> b
    void access$500(com.dkhs.portfolio.ui.fragment.TrendChartFragment) -> c
    float access$600(com.dkhs.portfolio.ui.fragment.TrendChartFragment,com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity access$702(com.dkhs.portfolio.ui.fragment.TrendChartFragment,com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> b
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity access$802(com.dkhs.portfolio.ui.fragment.TrendChartFragment,com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> c
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity access$902(com.dkhs.portfolio.ui.fragment.TrendChartFragment,com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> d
    void access$1000(com.dkhs.portfolio.ui.fragment.TrendChartFragment,com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> e
    com.dkhs.portfolio.engine.NetValueEngine access$1100(com.dkhs.portfolio.ui.fragment.TrendChartFragment) -> d
    boolean access$1200(com.dkhs.portfolio.ui.fragment.TrendChartFragment) -> e
    void access$1300(com.dkhs.portfolio.ui.fragment.TrendChartFragment) -> f
com.dkhs.portfolio.ui.fragment.TrendChartFragment$1 -> com.dkhs.portfolio.ui.fragment.dv:
    com.dkhs.portfolio.ui.fragment.TrendChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TrendChartFragment$3 -> com.dkhs.portfolio.ui.fragment.dw:
    com.dkhs.portfolio.ui.fragment.TrendChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TrendChartFragment$4 -> com.dkhs.portfolio.ui.fragment.dx:
    com.dkhs.portfolio.ui.fragment.TrendChartFragment this$0 -> a
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.TrendChartFragment$5 -> com.dkhs.portfolio.ui.fragment.dy:
    com.dkhs.portfolio.ui.fragment.TrendChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TrendChartFragment$6 -> com.dkhs.portfolio.ui.fragment.dz:
    com.dkhs.portfolio.ui.fragment.TrendChartFragment this$0 -> a
    com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.TrendChartFragment$7 -> com.dkhs.portfolio.ui.fragment.ea:
    com.dkhs.portfolio.ui.fragment.TrendChartFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TrendChartFragment$DrawLineDataEntity -> com.dkhs.portfolio.ui.fragment.TrendChartFragment$a:
    java.util.List dataList -> a
    int dashLineSize -> b
    float begin -> c
    float end -> d
    java.lang.String startDay -> e
    java.lang.String endDay -> f
    float maxOffetvalue -> g
    float addupvalue -> h
    float netvalue -> i
    com.dkhs.portfolio.ui.fragment.TrendChartFragment this$0 -> j
com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment -> com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment:
    java.lang.String trendType -> d
    android.widget.TextView tvTimeLeft -> e
    android.widget.TextView tvTimeRight -> f
    android.widget.TextView tvNetValue -> g
    android.widget.TextView tvUpValue -> h
    android.widget.TextView tvIncreaseValue -> i
    android.view.View viewDashLineTip -> j
    com.dkhs.portfolio.ui.widget.TrendChart mMaChart -> k
    com.dkhs.portfolio.engine.NetValueEngine mNetValueDataEngine -> l
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> m
    java.util.Calendar mCreateCalender -> n
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity historyNetvalue -> o
    android.widget.RelativeLayout pb -> p
    android.view.View rootView -> q
    java.util.List lines -> r
    com.dkhs.portfolio.ui.widget.LineEntity MA5 -> s
    com.dkhs.portfolio.net.ParseHttpListener historyListener -> a
    android.os.Handler dataHandler -> b
    java.lang.Runnable runnable -> c
    java.lang.String strLeft -> t
    java.lang.String strRight -> u
    java.lang.String mPageName -> v
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment newInstance(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleArguments(android.os.Bundle) -> a
    void handleExtras(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setInitYTitle() -> c
    void setLineData(java.util.List) -> a
    void setTipVisible(boolean) -> a
    void setHistoryViewload() -> d
    void setYTitle(float,float) -> a
    float getMaxOffetValue(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void setXTitle(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity) -> a
    void startRequry() -> a
    void stopRequry() -> b
    void onPause() -> onPause
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onResume() -> onResume
    void onDestroyView() -> onDestroyView
    int setContentLayoutId() -> h
    float access$000(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment,com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    android.widget.RelativeLayout access$100(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment) -> a
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity access$202(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment,com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity) -> a
    void access$300(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment) -> b
    com.dkhs.portfolio.engine.NetValueEngine access$400(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment) -> c
com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$1 -> com.dkhs.portfolio.ui.fragment.eb:
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment this$0 -> a
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$2 -> com.dkhs.portfolio.ui.fragment.ec:
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$3 -> com.dkhs.portfolio.ui.fragment.ed:
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$DrawLineDataEntity -> com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment$a:
    java.util.List dataList -> a
    int dashLineSize -> b
    float begin -> c
    float end -> d
    java.lang.String startDay -> e
    java.lang.String endDay -> f
    float maxOffetvalue -> g
    com.dkhs.portfolio.ui.fragment.TrendHistoryChartFragment this$0 -> h
com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment -> com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment:
    java.lang.String trendType -> d
    android.widget.TextView tvTimeLeft -> e
    android.widget.TextView tvTimeRight -> f
    android.widget.TextView tvNetValue -> g
    android.widget.TextView tvUpValue -> h
    android.widget.TextView tvIncreaseValue -> i
    android.view.View viewDashLineTip -> j
    com.dkhs.portfolio.ui.widget.TrendChart mMaChart -> k
    com.dkhs.portfolio.engine.NetValueEngine mNetValueDataEngine -> l
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> m
    java.util.Calendar mCreateCalender -> n
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity monthNetvalue -> o
    android.widget.RelativeLayout pb -> p
    android.view.View rootView -> q
    java.util.List lines -> r
    com.dkhs.portfolio.ui.widget.LineEntity MA5 -> s
    com.dkhs.portfolio.net.ParseHttpListener monthListener -> a
    android.os.Handler dataHandler -> b
    java.lang.Runnable runnable -> c
    java.lang.String strLeft -> t
    java.lang.String strRight -> u
    java.lang.String mPageName -> v
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment newInstance(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleArguments(android.os.Bundle) -> a
    void handleExtras(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setInitYTitle() -> c
    void setLineData(java.util.List) -> a
    void setTipVisible(boolean) -> a
    void setMonthViewLoad() -> d
    void setYTitle(float,float) -> a
    float getMaxOffetValue(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void setXTitle(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity) -> a
    void startRequry() -> a
    void stopRequry() -> b
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroyView() -> onDestroyView
    int setContentLayoutId() -> h
    float access$000(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment,com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    android.widget.RelativeLayout access$100(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment) -> a
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity access$202(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment,com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity) -> a
    void access$300(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment) -> b
    com.dkhs.portfolio.engine.NetValueEngine access$400(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment) -> c
com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$1 -> com.dkhs.portfolio.ui.fragment.ee:
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment this$0 -> a
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$2 -> com.dkhs.portfolio.ui.fragment.ef:
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$3 -> com.dkhs.portfolio.ui.fragment.eg:
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$DrawLineDataEntity -> com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment$a:
    java.util.List dataList -> a
    int dashLineSize -> b
    float begin -> c
    float end -> d
    java.lang.String startDay -> e
    java.lang.String endDay -> f
    float maxOffetvalue -> g
    com.dkhs.portfolio.ui.fragment.TrendMonthChartFragment this$0 -> h
com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment -> com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment:
    java.lang.String trendType -> d
    android.widget.TextView tvTimeLeft -> e
    android.widget.TextView tvTimeRight -> f
    android.widget.TextView tvNetValue -> g
    android.widget.TextView tvUpValue -> h
    android.widget.TextView tvIncreaseValue -> i
    android.view.View viewDashLineTip -> j
    com.dkhs.portfolio.ui.widget.TrendChart mMaChart -> k
    com.dkhs.portfolio.engine.NetValueEngine mNetValueDataEngine -> l
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> m
    java.util.Calendar mCreateCalender -> n
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity sevendayNetvalue -> o
    android.widget.RelativeLayout pb -> p
    android.view.View rootView -> q
    java.util.List lines -> r
    com.dkhs.portfolio.ui.widget.LineEntity MA5 -> s
    com.dkhs.portfolio.net.ParseHttpListener sevendayListener -> a
    android.os.Handler dataHandler -> b
    java.lang.Runnable runnable -> c
    java.lang.String strLeft -> t
    java.lang.String strRight -> u
    java.lang.String mPageName -> v
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment newInstance(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleArguments(android.os.Bundle) -> a
    void handleExtras(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setInitYTitle() -> c
    void setLineData(java.util.List) -> a
    void setTipVisible(boolean) -> a
    void setSevendayViewLoad() -> d
    void setYTitle(float,float) -> a
    float getMaxOffetValue(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    void setXTitle(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity) -> a
    void startRequry() -> a
    void stopRequry() -> b
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroyView() -> onDestroyView
    int setContentLayoutId() -> h
    float access$000(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment,com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.HistoryNetValue) -> a
    android.widget.RelativeLayout access$100(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment) -> a
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity access$202(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment,com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity) -> a
    void access$300(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment) -> b
    com.dkhs.portfolio.engine.NetValueEngine access$400(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment) -> c
com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$1 -> com.dkhs.portfolio.ui.fragment.eh:
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment this$0 -> a
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$2 -> com.dkhs.portfolio.ui.fragment.ei:
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$3 -> com.dkhs.portfolio.ui.fragment.ej:
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$DrawLineDataEntity -> com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment$a:
    java.util.List dataList -> a
    int dashLineSize -> b
    float begin -> c
    float end -> d
    java.lang.String startDay -> e
    java.lang.String endDay -> f
    float maxOffetvalue -> g
    com.dkhs.portfolio.ui.fragment.TrendSevenDayChartFragment this$0 -> h
com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment -> com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment:
    java.lang.String trendType -> d
    android.widget.TextView tvTimeLeft -> e
    android.widget.TextView tvTimeRight -> f
    android.view.View viewDashLineTip -> g
    com.dkhs.portfolio.ui.widget.TrendChart mMaChart -> h
    com.dkhs.portfolio.engine.NetValueEngine mNetValueDataEngine -> i
    com.dkhs.portfolio.bean.CombinationBean mCombinationBean -> j
    android.os.Handler updateHandler -> k
    java.util.Calendar mCreateCalender -> l
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity mTodayLineData -> m
    android.widget.RelativeLayout pb -> n
    android.view.View rootView -> o
    java.util.List lines -> p
    com.dkhs.portfolio.ui.widget.LineEntity MA5 -> q
    com.dkhs.portfolio.net.ParseHttpListener todayListener -> a
    android.os.Handler dataHandler -> b
    java.lang.Runnable runnable -> c
    java.lang.String mPageName -> r
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment newInstance(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void handleArguments(android.os.Bundle) -> a
    void handleExtras(android.os.Bundle) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initView(android.view.View) -> a
    void startRequry() -> a
    void stopRequry() -> b
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setLineData(java.util.List) -> a
    void initTodayTrendTitle() -> c
    void setTipVisible(boolean) -> a
    void setTodayViewLoad() -> d
    float getMaxOffetValue(com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.TodayNetValue) -> a
    void setYTitle(float,float) -> a
    void setInitYTitle() -> e
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onPause() -> onPause
    void onResume() -> onResume
    int setContentLayoutId() -> h
    float access$000(com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment,com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity,com.dkhs.portfolio.bean.TodayNetValue) -> a
    android.widget.RelativeLayout access$100(com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment) -> a
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity access$202(com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment,com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity) -> a
    void access$300(com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment) -> b
    com.dkhs.portfolio.engine.NetValueEngine access$400(com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment) -> c
com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$1 -> com.dkhs.portfolio.ui.fragment.ek:
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment this$0 -> a
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity) -> a
    void onFailure(int,java.lang.String) -> onFailure
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$2 -> com.dkhs.portfolio.ui.fragment.el:
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$3 -> com.dkhs.portfolio.ui.fragment.em:
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$DrawLineDataEntity -> com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment$a:
    java.util.List dataList -> a
    int dashLineSize -> b
    float begin -> c
    float end -> d
    java.lang.String endDay -> e
    float maxOffetvalue -> f
    float addupvalue -> g
    float netvalue -> h
    com.dkhs.portfolio.ui.fragment.TrendTodayChartFragment this$0 -> i
com.dkhs.portfolio.ui.fragment.UserCombinationListFragment -> com.dkhs.portfolio.ui.fragment.UserCombinationListFragment:
    com.dkhs.portfolio.ui.adapter.UserCombinationAdapter mAdapter -> b
    java.util.List mDataList -> c
    com.dkhs.portfolio.engine.UserCombinationEngineImpl dataEngine -> d
    java.lang.String mUserName -> e
    java.lang.String mUserId -> f
    android.view.View headerView -> g
    android.view.View footView -> h
    float animPercent -> i
    int headerHeight -> j
    com.lidroid.xutils.http.HttpHandler mHttpHandler -> k
    com.dkhs.portfolio.ui.FloatingActionMenu localFloatingActionMenu -> l
    java.lang.String mPageName -> m
    android.os.Handler handler -> n
    com.dkhs.portfolio.ui.fragment.UserCombinationListFragment$OnFragmentInteractionListener mListener -> o
    com.dkhs.portfolio.ui.fragment.UserCombinationListFragment getFragment(java.lang.String,java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.ListView getListView() -> c
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.widget.ListAdapter getListAdapter() -> f
    void loadFinish(com.dkhs.portfolio.bean.MoreDataBean) -> a
    void addListViewFootView() -> g
    com.dkhs.portfolio.engine.LoadMoreDataEngine getLoadEngine() -> d
    void loadData() -> b
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.widget.AdapterView$OnItemClickListener getItemClickListener() -> e
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void loadFail() -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    float getValues(int) -> b
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onLoadMore() -> a_
    void setHttpHandler(com.lidroid.xutils.http.HttpHandler) -> a
    java.util.List access$000(com.dkhs.portfolio.ui.fragment.UserCombinationListFragment) -> a
    java.lang.String access$100(com.dkhs.portfolio.ui.fragment.UserCombinationListFragment) -> b
    java.lang.String access$200(com.dkhs.portfolio.ui.fragment.UserCombinationListFragment) -> c
    float access$300(com.dkhs.portfolio.ui.fragment.UserCombinationListFragment) -> d
    android.os.Handler access$400(com.dkhs.portfolio.ui.fragment.UserCombinationListFragment) -> e
com.dkhs.portfolio.ui.fragment.UserCombinationListFragment$1 -> com.dkhs.portfolio.ui.fragment.en:
    com.dkhs.portfolio.ui.fragment.UserCombinationListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.fragment.UserCombinationListFragment$2 -> com.dkhs.portfolio.ui.fragment.eo:
    com.dkhs.portfolio.ui.fragment.UserCombinationListFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.dkhs.portfolio.ui.fragment.UserCombinationListFragment$OnFragmentInteractionListener -> com.dkhs.portfolio.ui.fragment.UserCombinationListFragment$a:
    void onScrollChanged(float) -> a
com.dkhs.portfolio.ui.fragment.UserFragment -> com.dkhs.portfolio.ui.fragment.UserFragment:
    android.view.View viewLogin -> e
    android.view.View viewUserInfo -> f
    android.widget.ImageView settingImageHead -> g
    android.widget.TextView settingTextAccountText -> h
    android.widget.TextView settingTextNameText -> i
    android.widget.TextView unreadCountTV -> j
    android.widget.TextView tvFollowers -> k
    android.widget.TextView tvFollowing -> l
    com.dkhs.portfolio.engine.UserEngineImpl userImp -> m
    com.dkhs.portfolio.net.ParseHttpListener userInfoListener -> d
    int setContentLayoutId() -> h
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void initView(android.view.View) -> a
    void updateUserInfo() -> c
    void updateUserFollowInfo(com.dkhs.portfolio.bean.UserEntity) -> a
    void handleNumber(android.widget.TextView,int) -> a
    void updateMessageCenterState() -> d
    void startSettingActivity() -> e
    void startUserInfoActivity() -> f
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void updateMessageCenter(com.dkhs.portfolio.ui.eventbus.NewMessageEvent) -> updateMessageCenter
    void access$000(com.dkhs.portfolio.ui.fragment.UserFragment) -> a
    void access$100(com.dkhs.portfolio.ui.fragment.UserFragment,com.dkhs.portfolio.bean.UserEntity) -> a
com.dkhs.portfolio.ui.fragment.UserFragment$1 -> com.dkhs.portfolio.ui.fragment.ep:
    com.dkhs.portfolio.ui.fragment.UserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.fragment.UserFragment$2 -> com.dkhs.portfolio.ui.fragment.eq:
    com.dkhs.portfolio.ui.fragment.UserFragment this$0 -> a
    com.dkhs.portfolio.bean.UserEntity parseDateTask(java.lang.String) -> a
    void afterParseData(com.dkhs.portfolio.bean.UserEntity) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.fragment.VisiableLoadFragment -> com.dkhs.portfolio.ui.fragment.VisiableLoadFragment:
    java.lang.String TAG -> a
    boolean isViewShown -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void requestData() -> d
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    void onResume() -> onResume
    void onPause() -> onPause
    void onViewShow() -> b_
    void onViewHide() -> n
com.dkhs.portfolio.ui.messagecenter.DKImgTextMsg -> com.dkhs.portfolio.ui.messagecenter.DKImgTextMsg:
    java.lang.String imageUri -> imageUri
    java.lang.String extra -> extra
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String url -> url
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.dkhs.portfolio.ui.messagecenter.DKImgTextMsg obtain(java.lang.String) -> obtain
    byte[] encode() -> encode
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    void setImageUri(java.lang.String) -> setImageUri
    void setExtra(java.lang.String) -> setExtra
    void setTitle(java.lang.String) -> setTitle
    void setContent(java.lang.String) -> setContent
    java.lang.String getImageUri() -> getImageUri
    java.lang.String getExtra() -> getExtra
    java.lang.String getTitle() -> getTitle
    java.lang.String getContent() -> getContent
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dkhs.portfolio.ui.messagecenter.DKImgTextMsg$1 -> com.dkhs.portfolio.ui.messagecenter.DKImgTextMsg$1:
    com.dkhs.portfolio.ui.messagecenter.DKImgTextMsg createFromParcel(android.os.Parcel) -> createFromParcel
    com.dkhs.portfolio.ui.messagecenter.DKImgTextMsg[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.ui.messagecenter.DKImgTextMsgProvider -> com.dkhs.portfolio.ui.messagecenter.DKImgTextMsgProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    android.text.Spannable getSummary(io.rong.imlib.model.Message) -> getSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
com.dkhs.portfolio.ui.messagecenter.IConnectInterface -> com.dkhs.portfolio.ui.messagecenter.IConnectInterface:
    void connect() -> connect
    boolean isConnecting() -> isConnecting
    void disConnect(android.content.Context) -> disConnect
com.dkhs.portfolio.ui.messagecenter.MessageHandler -> com.dkhs.portfolio.ui.messagecenter.MessageHandler:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    boolean handleMessage(io.rong.imlib.model.Message) -> handleMessage
    void handleDKImgTextMsg(io.rong.imlib.model.Message) -> handleDKImgTextMsg
    void gotoNewOrYaoBaoDetail(java.lang.String) -> gotoNewOrYaoBaoDetail
    void gotoOrderFundDetailActivity(java.lang.String) -> gotoOrderFundDetailActivity
    void gotoStockQuotesActivity(java.util.List) -> gotoStockQuotesActivity
com.dkhs.portfolio.ui.messagecenter.MessageHandler$1 -> com.dkhs.portfolio.ui.messagecenter.MessageHandler$1:
    com.dkhs.portfolio.ui.messagecenter.MessageHandler this$0 -> this$0
    void beforeRequest() -> beforeRequest
    void onSuccess(java.lang.String) -> onSuccess
    void requestCallBack() -> requestCallBack
com.dkhs.portfolio.ui.messagecenter.MessageHandler$2 -> com.dkhs.portfolio.ui.messagecenter.MessageHandler$2:
    com.dkhs.portfolio.ui.messagecenter.MessageHandler this$0 -> this$0
    void beforeRequest() -> beforeRequest
    void onSuccess(java.lang.String) -> onSuccess
    void requestCallBack() -> requestCallBack
com.dkhs.portfolio.ui.messagecenter.MessageHandler$3 -> com.dkhs.portfolio.ui.messagecenter.MessageHandler$3:
    com.dkhs.portfolio.bean.SelectStockBean val$itemStock -> val$itemStock
    com.dkhs.portfolio.ui.messagecenter.MessageHandler this$0 -> this$0
    void beforeRequest() -> beforeRequest
    void onSuccess(java.lang.String) -> onSuccess
    void requestCallBack() -> requestCallBack
com.dkhs.portfolio.ui.messagecenter.MessageManager -> com.dkhs.portfolio.ui.messagecenter.MessageManager:
    com.dkhs.portfolio.ui.messagecenter.RongConnect mConnct -> mConnct
    boolean hasNewUnread -> hasNewUnread
    java.lang.String TAG -> TAG
    void init() -> init
    com.dkhs.portfolio.ui.messagecenter.MessageManager getInstance() -> getInstance
    void notifyNewMessage() -> notifyNewMessage
    void connect() -> connect
    void disConnect(android.content.Context) -> disConnect
    boolean isHasNewUnread() -> isHasNewUnread
    void setHasNewUnread(boolean) -> setHasNewUnread
    int getTotalUnreadCount() -> getTotalUnreadCount
    void startPrivateChat(android.content.Context,java.lang.String,java.lang.String) -> startPrivateChat
    void startConversationList(android.content.Context) -> startConversationList
    com.dkhs.portfolio.ui.messagecenter.RongConnect getmConnct() -> getmConnct
com.dkhs.portfolio.ui.messagecenter.MessageManager$1 -> com.dkhs.portfolio.ui.messagecenter.MessageManager$1:
com.dkhs.portfolio.ui.messagecenter.MessageManager$SingleMessageManager -> com.dkhs.portfolio.ui.messagecenter.MessageManager$SingleMessageManager:
    com.dkhs.portfolio.ui.messagecenter.MessageManager INSTANCE -> INSTANCE
    com.dkhs.portfolio.ui.messagecenter.MessageManager access$100() -> access$100
com.dkhs.portfolio.ui.messagecenter.MessageProvider -> com.dkhs.portfolio.ui.messagecenter.MessageProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    android.text.Spannable getContentSummary(io.rong.message.RichContentMessage) -> getContentSummary
    void bindView(android.view.View,int,io.rong.message.RichContentMessage,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
com.dkhs.portfolio.ui.messagecenter.MessageReceive -> com.dkhs.portfolio.ui.messagecenter.MessageReceive:
    java.lang.String TAG -> TAG
    java.lang.String KEY_MESSAGE -> KEY_MESSAGE
    android.content.Intent getMessageIntent(io.rong.imlib.model.Message) -> getMessageIntent
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void acquireWakeLock(android.content.Context) -> acquireWakeLock
    void vibrationPhone() -> vibrationPhone
    void handDKImgTextMsg(android.content.Context,io.rong.imlib.model.Message) -> handDKImgTextMsg
com.dkhs.portfolio.ui.messagecenter.RongConnect -> com.dkhs.portfolio.ui.messagecenter.RongConnect:
    java.lang.String TAG -> TAG
    com.dkhs.portfolio.engine.UserEngineImpl userEngine -> userEngine
    boolean isConnect -> isConnect
    java.util.Map userInfoList -> userInfoList
    void add(io.rong.imlib.model.UserInfo) -> add
    io.rong.imlib.model.UserInfo get(java.lang.String) -> get
    void initDefaultListener() -> initDefaultListener
    void setOtherListener() -> setOtherListener
    void setOnReceiveMessageListener() -> setOnReceiveMessageListener
    void init() -> init
    void connect() -> connect
    boolean isValid() -> isValid
    void connectRongIM(java.lang.String) -> connectRongIM
    int getUnReadCount() -> getUnReadCount
    void startPrivateChat(android.content.Context,java.lang.String,java.lang.String) -> startPrivateChat
    void startConversationList(android.content.Context) -> startConversationList
    boolean isConnecting() -> isConnecting
    void disConnect(android.content.Context) -> disConnect
    void onChanged(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onChanged
    io.rong.imlib.model.UserInfo getUserInfo(java.lang.String) -> getUserInfo
    void cancelAllNotification(android.content.Context) -> cancelAllNotification
    boolean access$002(com.dkhs.portfolio.ui.messagecenter.RongConnect,boolean) -> access$002
    void access$100(com.dkhs.portfolio.ui.messagecenter.RongConnect,java.lang.String) -> access$100
com.dkhs.portfolio.ui.messagecenter.RongConnect$1 -> com.dkhs.portfolio.ui.messagecenter.RongConnect$1:
    com.dkhs.portfolio.ui.messagecenter.RongConnect this$0 -> this$0
    io.rong.imlib.model.UserInfo getUserInfo(java.lang.String) -> getUserInfo
com.dkhs.portfolio.ui.messagecenter.RongConnect$2 -> com.dkhs.portfolio.ui.messagecenter.RongConnect$2:
    com.dkhs.portfolio.ui.messagecenter.RongConnect this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
com.dkhs.portfolio.ui.messagecenter.RongConnect$3 -> com.dkhs.portfolio.ui.messagecenter.RongConnect$3:
    com.dkhs.portfolio.ui.messagecenter.RongConnect this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
com.dkhs.portfolio.ui.messagecenter.RongConnect$4 -> com.dkhs.portfolio.ui.messagecenter.RongConnect$4:
    com.dkhs.portfolio.ui.messagecenter.RongConnect this$0 -> this$0
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.String) -> onSuccess
    void onSuccess(java.lang.Object) -> onSuccess
com.dkhs.portfolio.ui.messagecenter.RongConnect$5 -> com.dkhs.portfolio.ui.messagecenter.RongConnect$5:
    io.rong.imlib.model.UserInfo val$userInfo -> val$userInfo
    com.dkhs.portfolio.ui.messagecenter.RongConnect this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.dkhs.portfolio.ui.messagecenter.RongConnect$OnReceiveMessageListener -> com.dkhs.portfolio.ui.messagecenter.RongConnect$OnReceiveMessageListener:
    com.dkhs.portfolio.ui.messagecenter.RongConnect this$0 -> this$0
    boolean onReceived(io.rong.imlib.model.Message,int) -> onReceived
com.dkhs.portfolio.ui.widget.BaseLayoutManager -> com.dkhs.portfolio.ui.widget.BaseLayoutManager:
    int mOrientation -> a
    com.dkhs.portfolio.ui.widget.BaseLayoutManager$RenderState mRenderState -> b
    com.dkhs.portfolio.ui.widget.BaseLayoutManager$OrientationHelper mOrientationHelper -> c
    boolean mLastStackFromEnd -> e
    boolean mReverseLayout -> f
    boolean mShouldReverseLayout -> d
    boolean mStackFromEnd -> g
    int mPendingScrollPosition -> h
    int mPendingScrollPositionOffset -> i
    com.dkhs.portfolio.ui.widget.BaseLayoutManager$SavedState mPendingSavedState -> j
    android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> a
    android.os.Parcelable onSaveInstanceState() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> a
    boolean canScrollHorizontally() -> d
    boolean canScrollVertically() -> e
    void setStackFromEnd(boolean) -> a
    int getOrientation() -> f
    void setOrientation(int) -> h
    void resolveShouldLayoutReverse() -> k
    void setReverseLayout(boolean) -> b
    android.view.View findViewByPosition(int) -> a
    int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> a
    void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> a
    int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> b
    void updateRenderStateToFillEnd(int,int) -> c
    void updateRenderStateToFillStart(int,int) -> d
    boolean isLayoutRTL() -> g
    void ensureRenderState() -> h
    int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> b
    int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> b
    int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> c
    int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> d
    int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> e
    int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> f
    int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> g
    void updateRenderState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> a
    int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> c
    void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> a
    void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> a
    void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> b
    void recycleByRenderState(android.support.v7.widget.RecyclerView$Recycler,com.dkhs.portfolio.ui.widget.BaseLayoutManager$RenderState) -> a
    int fill(android.support.v7.widget.RecyclerView$Recycler,com.dkhs.portfolio.ui.widget.BaseLayoutManager$RenderState,android.support.v7.widget.RecyclerView$State,boolean) -> a
    int convertFocusDirectionToLayoutDirection(int) -> i
    android.view.View getChildClosestToStart() -> B
    android.view.View getChildClosestToEnd() -> C
    android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> a
    boolean supportsPredictiveItemAnimations() -> b
    com.dkhs.portfolio.ui.widget.BaseLayoutManager$OrientationHelper createVerticalOrientationHelper() -> i
    com.dkhs.portfolio.ui.widget.BaseLayoutManager$OrientationHelper createHorizontalOrientationHelper() -> j
com.dkhs.portfolio.ui.widget.BaseLayoutManager$2 -> com.dkhs.portfolio.ui.widget.a:
    com.dkhs.portfolio.ui.widget.BaseLayoutManager this$0 -> a
    int getEndAfterPadding() -> a
    void offsetChildren(int) -> a
    int getStartAfterPadding() -> b
    int getDecoratedMeasurement(android.view.View) -> a
    int getDecoratedMeasurementInOther(android.view.View) -> b
    int getDecoratedEnd(android.view.View) -> c
    int getDecoratedStart(android.view.View) -> d
    int getTotalSpace() -> c
com.dkhs.portfolio.ui.widget.BaseLayoutManager$3 -> com.dkhs.portfolio.ui.widget.b:
    com.dkhs.portfolio.ui.widget.BaseLayoutManager this$0 -> a
    int getEndAfterPadding() -> a
    void offsetChildren(int) -> a
    int getStartAfterPadding() -> b
    int getDecoratedMeasurement(android.view.View) -> a
    int getDecoratedMeasurementInOther(android.view.View) -> b
    int getDecoratedEnd(android.view.View) -> c
    int getDecoratedStart(android.view.View) -> d
    int getTotalSpace() -> c
com.dkhs.portfolio.ui.widget.BaseLayoutManager$OrientationHelper -> com.dkhs.portfolio.ui.widget.BaseLayoutManager$a:
    int getDecoratedStart(android.view.View) -> d
    int getDecoratedEnd(android.view.View) -> c
    int getDecoratedMeasurement(android.view.View) -> a
    int getDecoratedMeasurementInOther(android.view.View) -> b
    int getStartAfterPadding() -> b
    int getEndAfterPadding() -> a
    void offsetChildren(int) -> a
    int getTotalSpace() -> c
com.dkhs.portfolio.ui.widget.BaseLayoutManager$RenderState -> com.dkhs.portfolio.ui.widget.BaseLayoutManager$b:
    int mOffset -> a
    int mAvailable -> b
    int mCurrentPosition -> c
    int mItemDirection -> d
    int mLayoutDirection -> e
    int mScrollingOffset -> f
    int mExtra -> g
    java.util.List mScrapList -> h
    boolean hasMore(android.support.v7.widget.RecyclerView$State) -> a
    android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> a
    android.view.View nextFromLimitedList() -> a
com.dkhs.portfolio.ui.widget.BaseLayoutManager$SavedState -> com.dkhs.portfolio.ui.widget.BaseLayoutManager$SavedState:
    int mOrientation -> a
    int mAnchorPosition -> b
    int mAnchorOffset -> c
    boolean mReverseLayout -> d
    boolean mStackFromEnd -> e
    boolean mAnchorLayoutFromEnd -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dkhs.portfolio.ui.widget.BaseLayoutManager$SavedState$1 -> com.dkhs.portfolio.ui.widget.c:
    com.dkhs.portfolio.ui.widget.BaseLayoutManager$SavedState createFromParcel(android.os.Parcel) -> a
    com.dkhs.portfolio.ui.widget.BaseLayoutManager$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.ui.widget.BenefitChartView -> com.dkhs.portfolio.ui.widget.d:
    java.lang.String mCompareIds -> h
    android.widget.TextView tvCombinationName -> i
    com.dkhs.portfolio.engine.CompareEngine mCompareEngine -> j
    java.util.Calendar cStart -> a
    java.util.Calendar cEnd -> b
    com.dkhs.portfolio.ui.widget.TrendChart maChartView -> k
    android.view.View moreFundView -> l
    android.view.View titleView -> m
    android.view.View loadView -> n
    android.view.View contentView -> o
    android.content.Context ctx -> p
    java.lang.String fundId -> q
    int symbol_stype -> r
    java.lang.String abbrName -> s
    java.util.List lineEntityList -> t
    android.view.View benifitView -> u
    com.dkhs.portfolio.bean.FundQuoteBean mFundQuoteBean -> v
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType trendType -> w
    java.util.List compareLinesList -> c
    float maxOffsetValue -> d
    float minOffsetValue -> e
    com.dkhs.portfolio.net.ParseHttpListener sepFundHttpListener -> f
    com.dkhs.portfolio.net.ParseHttpListener compareListener -> g
    android.view.View getBenifitView() -> a
    android.view.View initView() -> b
    void draw(com.dkhs.portfolio.bean.FundManagerInfoBean$AchivementsEntity) -> a
    void draw(com.dkhs.portfolio.bean.FundQuoteBean,com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType) -> a
    void draw(com.dkhs.portfolio.bean.FundQuoteBean) -> a
    void onRequest() -> c
    void requestSepFund() -> d
    void requestCompare() -> e
    void initMaChart(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    void setCompareLineList() -> f
    void onFinishUpdateUI() -> g
    void setSepFundLineList() -> h
    void setXTitleByComparePoint(java.util.List) -> a
    void setXTitleBySepFundChartBean(java.util.List) -> b
    void setYTitle(float,float,float,float) -> a
    void setYTitle(float,float) -> a
    java.lang.String getManagerByData(java.lang.String) -> a
    void access$000(com.dkhs.portfolio.ui.widget.BenefitChartView,java.util.List) -> a
    java.lang.String access$100(com.dkhs.portfolio.ui.widget.BenefitChartView,java.lang.String) -> a
    java.util.List access$200(com.dkhs.portfolio.ui.widget.BenefitChartView) -> a
    void access$300(com.dkhs.portfolio.ui.widget.BenefitChartView) -> b
    java.lang.String access$400(com.dkhs.portfolio.ui.widget.BenefitChartView) -> c
    java.lang.String access$500(com.dkhs.portfolio.ui.widget.BenefitChartView) -> d
    void access$600(com.dkhs.portfolio.ui.widget.BenefitChartView,java.util.List) -> b
    void access$700(com.dkhs.portfolio.ui.widget.BenefitChartView) -> e
com.dkhs.portfolio.ui.widget.BenefitChartView$1 -> com.dkhs.portfolio.ui.widget.e:
    com.dkhs.portfolio.ui.widget.BenefitChartView this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.widget.BenefitChartView$2 -> com.dkhs.portfolio.ui.widget.f:
    com.dkhs.portfolio.ui.widget.BenefitChartView this$0 -> a
    java.util.List parseDateTask(java.lang.String) -> a
    void afterParseData(java.util.List) -> a
    void afterParseData(java.lang.Object) -> a
    java.lang.Object parseDateTask(java.lang.String) -> b
com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType -> com.dkhs.portfolio.ui.widget.d$a:
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType Default -> a
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType Month -> b
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType Season -> c
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType HalfYear -> d
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType OneYear -> e
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType OfficeDay -> f
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType ToYear -> g
    java.lang.String value -> h
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType[] $VALUES -> i
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType[] values() -> values
    com.dkhs.portfolio.ui.widget.BenefitChartView$FundTrendType valueOf(java.lang.String) -> valueOf
    java.lang.String getValue() -> a
com.dkhs.portfolio.ui.widget.ChangeFollowView -> com.dkhs.portfolio.ui.widget.g:
    android.content.Context mContext -> b
    com.dkhs.portfolio.bean.SelectStockBean mStockBean -> c
    com.dkhs.portfolio.engine.VisitorDataEngine mVisitorDataEngine -> d
    com.dkhs.portfolio.net.IHttpListener baseListener -> a
    com.dkhs.portfolio.ui.widget.ChangeFollowView$IChangeSuccessListener mChangeListener -> e
    void changeFollow(com.dkhs.portfolio.bean.SelectStockBean) -> a
    void changeFollowNoDialog(com.dkhs.portfolio.bean.SelectStockBean) -> b
    void showDelDialog() -> a
    void followStockChange() -> b
    void afterChange() -> c
    void setmChangeListener(com.dkhs.portfolio.ui.widget.ChangeFollowView$IChangeSuccessListener) -> a
    void access$000(com.dkhs.portfolio.ui.widget.ChangeFollowView) -> a
    com.dkhs.portfolio.bean.SelectStockBean access$100(com.dkhs.portfolio.ui.widget.ChangeFollowView) -> b
    void access$200(com.dkhs.portfolio.ui.widget.ChangeFollowView) -> c
com.dkhs.portfolio.ui.widget.ChangeFollowView$1 -> com.dkhs.portfolio.ui.widget.h:
    com.dkhs.portfolio.ui.widget.ChangeFollowView this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.widget.ChangeFollowView$2 -> com.dkhs.portfolio.ui.widget.i:
    com.dkhs.portfolio.ui.widget.ChangeFollowView this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dkhs.portfolio.ui.widget.ChangeFollowView$3 -> com.dkhs.portfolio.ui.widget.j:
    com.dkhs.portfolio.ui.widget.ChangeFollowView this$0 -> a
    void onSuccess(java.lang.String) -> onSuccess
com.dkhs.portfolio.ui.widget.ChangeFollowView$IChangeSuccessListener -> com.dkhs.portfolio.ui.widget.g$a:
    void onChange(com.dkhs.portfolio.bean.SelectStockBean) -> a
com.dkhs.portfolio.ui.widget.CircularProgress -> com.dkhs.portfolio.ui.widget.CircularProgress:
    int mColor -> a
    int mSize -> b
    boolean mIndeterminate -> c
    int mBorderWidth -> d
    android.graphics.RectF arcRectF -> e
    int mMax -> f
    int mProgress -> g
    int mDuration -> h
    boolean mAttached -> i
    com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable mIndeterminateProgressDrawable -> j
    com.dkhs.portfolio.ui.widget.CircularProgress$DeterminateProgressDrawable mDeterminateProgressDrawable -> k
    void setColor(int) -> setColor
    void setIndeterminate(boolean) -> setIndeterminate
    void startAnimation() -> a
    void stopAnimation() -> b
    void setProgress(int) -> setProgress
    int getProgress() -> getProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    android.graphics.RectF getArcRectF() -> getArcRectF
    void onMeasure(int,int) -> onMeasure
    void draw(android.graphics.Canvas) -> draw
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
com.dkhs.portfolio.ui.widget.CircularProgress$DeterminateProgressDrawable -> com.dkhs.portfolio.ui.widget.CircularProgress$a:
    android.graphics.Paint mPaint -> b
    float mBorderWidth -> c
    float mEndAngle -> d
    android.graphics.RectF mDrawableBounds -> e
    com.dkhs.portfolio.ui.widget.CircularProgress this$0 -> a
    void setAngle(float) -> a
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable -> com.dkhs.portfolio.ui.widget.CircularProgress$b:
    android.view.animation.Interpolator ANGLE_INTERPOLATOR -> b
    android.view.animation.Interpolator SWEEP_INTERPOLATOR -> c
    android.graphics.RectF mDrawableBounds -> d
    android.animation.ObjectAnimator mObjectAnimatorSweep -> e
    android.animation.ObjectAnimator mObjectAnimatorAngle -> f
    boolean mModeAppearing -> g
    android.graphics.Paint mPaint -> h
    float mCurrentGlobalAngleOffset -> i
    float mCurrentGlobalAngle -> j
    float mCurrentSweepAngle -> k
    float mBorderWidth -> l
    boolean mRunning -> m
    android.util.Property mAngleProperty -> n
    android.util.Property mSweepProperty -> o
    com.dkhs.portfolio.ui.widget.CircularProgress this$0 -> a
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void toggleAppearingMode() -> c
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setupAnimations() -> d
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void setCurrentGlobalAngle(float) -> a
    float getCurrentGlobalAngle() -> a
    void setCurrentSweepAngle(float) -> b
    float getCurrentSweepAngle() -> b
    void access$000(com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable) -> a
com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable$1 -> com.dkhs.portfolio.ui.widget.k:
    com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable this$1 -> a
    java.lang.Float get(com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable) -> a
    void set(com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable,java.lang.Float) -> a
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable$2 -> com.dkhs.portfolio.ui.widget.l:
    com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable this$1 -> a
    java.lang.Float get(com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable) -> a
    void set(com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable,java.lang.Float) -> a
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable$3 -> com.dkhs.portfolio.ui.widget.m:
    com.dkhs.portfolio.ui.widget.CircularProgress$IndeterminateProgressDrawable this$1 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.dkhs.portfolio.ui.widget.ClearableEditText -> com.dkhs.portfolio.ui.widget.ClearableEditText:
    android.graphics.drawable.Drawable mClearDrawable -> a
    boolean hasFoucs -> b
    boolean needClearViewVisible -> c
    void init() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void setClearIconVisible(boolean) -> setClearIconVisible
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void setShakeAnimation() -> setShakeAnimation
    android.view.animation.Animation shakeAnimation(int) -> a
com.dkhs.portfolio.ui.widget.CustomView -> com.dkhs.portfolio.ui.widget.CustomView:
    int minWidth -> a
    int minHeight -> b
    int backgroundColor -> c
    int backgroundResId -> d
    boolean isLastTouch -> e
    void onInitDefaultValues() -> a
    void setAttributes(android.util.AttributeSet) -> setAttributes
    int dpToPx(float,android.content.res.Resources) -> a
    void setBackgroundAttributes(android.util.AttributeSet) -> setBackgroundAttributes
com.dkhs.portfolio.ui.widget.DefFundLineEntity -> com.dkhs.portfolio.ui.widget.n:
com.dkhs.portfolio.ui.widget.F10ViewParse -> com.dkhs.portfolio.ui.widget.o:
    com.dkhs.portfolio.bean.F10DataBean mDataBean -> a
    android.content.Context mContext -> b
    android.widget.LinearLayout mContentView -> c
    void setF10Data(com.dkhs.portfolio.bean.F10DataBean) -> a
    void parseF10View() -> b
    android.widget.LinearLayout getContentView() -> a
    android.view.View createTitleView(java.lang.String,java.lang.String) -> a
    android.widget.LinearLayout createTableRowView() -> c
    boolean createTableHeader() -> d
    void createTableRow() -> e
    android.view.View parseFundProfileView(com.dkhs.portfolio.bean.FundQuoteBean) -> a
    void createFundRow(com.dkhs.portfolio.bean.FundQuoteBean) -> b
    java.lang.String getFundRowText(int,com.dkhs.portfolio.bean.FundQuoteBean) -> a
    android.widget.LinearLayout createFundRowView(java.lang.String,java.lang.String) -> b
com.dkhs.portfolio.ui.widget.FSLinePointEntity -> com.dkhs.portfolio.ui.widget.p:
    java.lang.String time -> a
    java.lang.String price -> b
    java.lang.String avgPrice -> c
    float increaseValue -> d
    float increaseRange -> e
    float minchange -> f
    int turnover -> g
    boolean isIndexType -> h
    java.lang.String getTime() -> a
    void setTime(java.lang.String) -> a
    java.lang.String getPrice() -> b
    void setPrice(java.lang.String) -> b
    java.lang.String getIncreaseValueDesc() -> c
    void setIncreaseValue(float) -> a
    float getIncreaseRange() -> d
    java.lang.String getIncreaseRangeDesc() -> e
    void setIncreaseRange(float) -> b
    int getTurnover() -> f
    java.lang.String getTurnoverDesc() -> g
    void setTurnover(int) -> a
    java.lang.String getAvgPriceDesc() -> h
    void setAvgPrice(java.lang.String) -> c
    float getMinchange() -> i
    void setMinchange(float) -> c
    boolean isIndexType() -> j
    void setIndexType(boolean) -> a
com.dkhs.portfolio.ui.widget.GridChart -> com.dkhs.portfolio.ui.widget.GridChart:
    boolean DEFAULT_DISPLAY_LONGTITUDE -> a
    boolean DEFAULT_DASH_LONGTITUDE -> b
    boolean DEFAULT_DISPLAY_LATITUDE -> c
    boolean DEFAULT_DASH_LATITUDE -> d
    boolean DEFAULT_DISPLAY_AXIS_X_TITLE -> e
    boolean DEFAULT_DISPLAY_AXIS_Y_TITLE -> f
    boolean DEFAULT_DISPLAY_BORDER -> g
    int DEFAULT_LONGTITUDE_FONT_COLOR -> p
    int DEFAULT_LONGTITUDE_FONT_COLOR_UP -> q
    int DEFAULT_LONGTITUDE_FONT_COLOR_MID -> r
    int DEFAULT_LONGTITUDE_FONT_COLOR_DOWN -> s
    int DEFAULT_LONGTITUDE_FONT_SIZE -> t
    int DEFAULT_LATITUDE_FONT_COLOR -> u
    int DEFAULT_LATITUDE_FONT_SIZE -> v
    int DEFAULT_AXIS_Y_MAX_TITLE_LENGTH -> w
    android.graphics.PathEffect DEFAULT_DASH_EFFECT -> h
    int backgroudColor -> x
    int axisXColor -> y
    int axisYColor -> z
    int longitudeColor -> A
    int latitudeColor -> B
    float axisMarginLeft -> i
    float axisMarginBottom -> j
    float axisMarginTop -> k
    float axisMarginRight -> l
    boolean displayAxisXTitle -> C
    boolean displayAxisYTitle -> D
    boolean displayAxisYTitleColor -> E
    boolean displayLongitude -> F
    boolean dashLongitude -> G
    boolean displayLatitude -> H
    boolean dashLatitude -> I
    android.graphics.PathEffect dashEffect -> J
    boolean displayBorder -> K
    int borderColor -> L
    int longtitudeFontColor -> M
    int longtitudeFontSize -> N
    int latitudeFontColor -> O
    int latitudeFontSize -> P
    java.util.List axisXTitles -> Q
    java.util.List axisYTitles -> R
    int axisYMaxTitleLength -> S
    boolean displayCrossXOnTouch -> T
    boolean displayCrossYOnTouch -> U
    boolean isDrawXBorke -> V
    android.graphics.Bitmap mDrawBitmap -> m
    android.graphics.Canvas mDrawCanvas -> n
    int xTitleTextHeight -> o
    int xLineCounts -> W
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawYtitleText(android.graphics.Canvas) -> e
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> a
    int measureHeight(int) -> b
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void drawXtitleText(android.graphics.Canvas) -> f
    int getYTitlePaintFont(int,int) -> a
    void drawBorder(android.graphics.Canvas) -> a
    void drawXAxis(android.graphics.Canvas) -> b
    void drawAxisGridX(android.graphics.Canvas) -> c
    void drawAxisGridY(android.graphics.Canvas) -> d
    int getBackgroudColor() -> getBackgroudColor
    void setBackgroudColor(int) -> setBackgroudColor
    int getAxisXColor() -> getAxisXColor
    void setAxisXColor(int) -> setAxisXColor
    int getAxisYColor() -> getAxisYColor
    void setAxisYColor(int) -> setAxisYColor
    int getLongitudeColor() -> getLongitudeColor
    void setLongitudeColor(int) -> setLongitudeColor
    int getLatitudeColor() -> getLatitudeColor
    void setLatitudeColor(int) -> setLatitudeColor
    float getAxisMarginLeft() -> getAxisMarginLeft
    void setAxisMarginLeft(float) -> setAxisMarginLeft
    float getAxisMarginBottom() -> getAxisMarginBottom
    void setAxisMarginBottom(float) -> setAxisMarginBottom
    float getAxisMarginTop() -> getAxisMarginTop
    void setAxisMarginTop(float) -> setAxisMarginTop
    float getAxisMarginRight() -> getAxisMarginRight
    void setAxisMarginRight(float) -> setAxisMarginRight
    java.util.List getAxisXTitles() -> getAxisXTitles
    void setAxisXTitles(java.util.List) -> setAxisXTitles
    java.util.List getAxisYTitles() -> getAxisYTitles
    void setAxisYTitles(java.util.List) -> setAxisYTitles
    void setDisplayLongitude(boolean) -> setDisplayLongitude
    void setDashLongitude(boolean) -> setDashLongitude
    void setDisplayLatitude(boolean) -> setDisplayLatitude
    void setDashLatitude(boolean) -> setDashLatitude
    android.graphics.PathEffect getDashEffect() -> getDashEffect
    void setDashEffect(android.graphics.PathEffect) -> setDashEffect
    void setDisplayAxisXTitle(boolean) -> setDisplayAxisXTitle
    void setDisplayAxisYTitleColor(boolean) -> setDisplayAxisYTitleColor
    void setDisplayAxisYTitle(boolean) -> setDisplayAxisYTitle
    void setDisplayBorder(boolean) -> setDisplayBorder
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getLongtitudeFontColor() -> getLongtitudeFontColor
    void setLongtitudeFontColor(int) -> setLongtitudeFontColor
    int getLongtitudeFontSize() -> getLongtitudeFontSize
    void setLongtitudeFontSize(int) -> setLongtitudeFontSize
    int getLatitudeFontColor() -> getLatitudeFontColor
    void setLatitudeFontColor(int) -> setLatitudeFontColor
    int getLatitudeFontSize() -> getLatitudeFontSize
    void setLatitudeFontSize(int) -> setLatitudeFontSize
    int getAxisYMaxTitleLength() -> getAxisYMaxTitleLength
    void setAxisYMaxTitleLength(int) -> setAxisYMaxTitleLength
    void setDisplayCrossXOnTouch(boolean) -> setDisplayCrossXOnTouch
    void setDisplayCrossYOnTouch(boolean) -> setDisplayCrossYOnTouch
    void setDrawXBorke(boolean) -> setDrawXBorke
com.dkhs.portfolio.ui.widget.GridLayoutManager -> com.dkhs.portfolio.ui.widget.q:
    int columns -> e
    java.lang.String TAG -> f
    int getColumns() -> k
    int fill(android.support.v7.widget.RecyclerView$Recycler,com.dkhs.portfolio.ui.widget.BaseLayoutManager$RenderState,android.support.v7.widget.RecyclerView$State,boolean) -> a
com.dkhs.portfolio.ui.widget.GridViewEx -> com.dkhs.portfolio.ui.widget.GridViewEx:
    void onMeasure(int,int) -> onMeasure
com.dkhs.portfolio.ui.widget.HScrollTitleView -> com.dkhs.portfolio.ui.widget.HScrollTitleView:
    java.lang.String[] nameList -> a
    android.widget.ImageView iv -> b
    int hisPosition -> c
    android.widget.TextView[] tvList -> d
    int offset -> e
    int indiatorWidth -> f
    int currentPosition -> g
    com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener mSelectListener -> h
    void init() -> b
    void createView() -> a
    void setLayoutWidth(int) -> setLayoutWidth
    void setAnima(int,int) -> setAnima
    void setTitleList(java.lang.String[],int) -> setTitleList
    void setTitleList(java.lang.String[]) -> setTitleList
    void setSelectIndex(int) -> setSelectIndex
    void setSelectIndexNoCallBack(int) -> setSelectIndexNoCallBack
    void setIndicatorWidth(int) -> setIndicatorWidth
    void setSelectPositionListener(com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener) -> setSelectPositionListener
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    int getCurrentPosition() -> getCurrentPosition
    int access$002(com.dkhs.portfolio.ui.widget.HScrollTitleView,int) -> a
    int access$000(com.dkhs.portfolio.ui.widget.HScrollTitleView) -> a
    int access$100(com.dkhs.portfolio.ui.widget.HScrollTitleView) -> b
    int access$200(com.dkhs.portfolio.ui.widget.HScrollTitleView) -> c
    int access$300(com.dkhs.portfolio.ui.widget.HScrollTitleView) -> d
com.dkhs.portfolio.ui.widget.HScrollTitleView$ISelectPostionListener -> com.dkhs.portfolio.ui.widget.HScrollTitleView$a:
    void onSelectPosition(int) -> a
com.dkhs.portfolio.ui.widget.HScrollTitleView$OnItemListener -> com.dkhs.portfolio.ui.widget.HScrollTitleView$b:
    int position -> b
    com.dkhs.portfolio.ui.widget.HScrollTitleView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.IScrollExchangeListener -> com.dkhs.portfolio.ui.widget.r:
    void scrollSelf() -> a
    void scrollParent() -> b
com.dkhs.portfolio.ui.widget.IStockQuoteScrollListener -> com.dkhs.portfolio.ui.widget.s:
    int getMaxListHeight() -> a
    void interruptSrcollView() -> b
    void scrollviewObatin() -> c
com.dkhs.portfolio.ui.widget.IcsLinearLayout -> com.dkhs.portfolio.ui.widget.t:
    int[] LL -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
com.dkhs.portfolio.ui.widget.InterceptScrollView -> com.dkhs.portfolio.ui.widget.InterceptScrollView:
    boolean scrollable -> a
    com.dkhs.portfolio.ui.widget.InterceptScrollView$ScrollViewListener scrollViewListener -> b
    boolean isIntercept -> c
    void setScrollViewListener(com.dkhs.portfolio.ui.widget.InterceptScrollView$ScrollViewListener) -> setScrollViewListener
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void setIsfocus(boolean) -> setIsfocus
    void setScrollable(boolean) -> setScrollable
com.dkhs.portfolio.ui.widget.InterceptScrollView$ScrollViewListener -> com.dkhs.portfolio.ui.widget.InterceptScrollView$a:
    void onScrollChanged(com.dkhs.portfolio.ui.widget.InterceptScrollView,int,int,int,int) -> a
com.dkhs.portfolio.ui.widget.KChartDataListener -> com.dkhs.portfolio.ui.widget.u:
    java.util.List getDayLineDatas() -> s
    void setDayKlineDatas(java.util.List) -> a
    java.util.List getMonthLineDatas() -> t
    void setMonthKlineDatas(java.util.List) -> b
    java.util.List getWeekLineDatas() -> u
    void setWeekKlineDatas(java.util.List) -> c
com.dkhs.portfolio.ui.widget.KChartsLandCallBack -> com.dkhs.portfolio.ui.widget.v:
    void loadMore() -> l
    void onDisplayDataChange(java.util.List) -> b
    void onLoadMoreDataStart() -> j
    void onLoadMoreDataEnd() -> k
    void onDoubleClick(android.view.View) -> c
com.dkhs.portfolio.ui.widget.LandStockViewCallBack -> com.dkhs.portfolio.ui.widget.w:
    java.lang.String getCheckValue() -> m
    int getStickType() -> p
    com.dkhs.portfolio.bean.StockQuotesBean getStockQuotesBean() -> q
    void setCheckValue(java.lang.String) -> a
    void setStickType(int) -> a
    int getTabPosition() -> r
    void setTabPosition(int) -> d
com.dkhs.portfolio.ui.widget.LineChart -> com.dkhs.portfolio.ui.widget.LineChart:
    java.util.List lineData -> p
    int maxPointNum -> q
    int minValue -> r
    int maxValue -> s
    boolean dashLongitude -> t
    android.graphics.PathEffect dashEffect -> u
    float pointLineLength -> v
    float lineLength -> w
    android.graphics.Paint mLinePaint -> x
    float startPointX -> y
    float endY -> z
    boolean isFill -> A
    int fillLineIndex -> B
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawLines(android.graphics.Canvas) -> e
    java.util.List getLineData() -> getLineData
    void setLineData(java.util.List) -> setLineData
    int getMaxPointNum() -> getMaxPointNum
    void setMaxPointNum(int) -> setMaxPointNum
    int getMinValue() -> getMinValue
    void setMinValue(int) -> setMinValue
    int getMaxValue() -> getMaxValue
    void setMaxValue(int) -> setMaxValue
    void setFill(boolean) -> setFill
    int getFillLineIndex() -> getFillLineIndex
    void setFillLineIndex(int) -> setFillLineIndex
com.dkhs.portfolio.ui.widget.LineEntity -> com.dkhs.portfolio.ui.widget.x:
    java.util.List lineData -> a
    java.lang.String title -> b
    int lineColor -> c
    boolean display -> d
    int maxVolNum -> e
    int minVolNum -> f
    java.util.List getLineData() -> a
    void setLineData(java.util.List) -> a
    java.lang.String getTitle() -> b
    void setTitle(java.lang.String) -> a
    int getLineColor() -> c
    void setLineColor(int) -> a
    boolean isDisplay() -> d
    void setDisplay(boolean) -> a
    int getMaxVolNum() -> e
    void setMaxVolNum(int) -> b
    int getMinVolNum() -> f
    void setMinVolNum(int) -> c
com.dkhs.portfolio.ui.widget.LinePoint.DefFundPointEntity -> com.dkhs.portfolio.ui.widget.a.a:
    float netvalue -> a
    java.lang.String info -> b
    float getNetvalue() -> a
    void setNetvalue(float) -> a
    java.lang.String getInfo() -> b
    void setInfo(java.lang.String) -> a
com.dkhs.portfolio.ui.widget.LinePoint.FundLinePointEntity -> com.dkhs.portfolio.ui.widget.a.b:
    java.lang.String info -> a
    java.lang.String getInfo() -> b
    void setInfo(java.lang.String) -> a
com.dkhs.portfolio.ui.widget.LinePoint.LinePointEntity -> com.dkhs.portfolio.ui.widget.a.c:
    java.lang.String desc -> a
    float value -> b
    java.lang.String getDesc() -> k
    void setDesc(java.lang.String) -> d
    float getValue() -> l
    void setValue(float) -> d
com.dkhs.portfolio.ui.widget.LinePoint.SepFundPointEntity -> com.dkhs.portfolio.ui.widget.a.d:
    float netvalue -> a
    float getNetvalue() -> a
    void setNetvalue(float) -> a
com.dkhs.portfolio.ui.widget.LinePoint.TrendLinePointEntity -> com.dkhs.portfolio.ui.widget.a.e:
    java.lang.String time -> a
    float increaseRange -> b
    java.lang.String getTime() -> a
    void setTime(java.lang.String) -> a
    float getIncreaseRange() -> b
    java.lang.String getIncreaseRangeDesc() -> c
    java.lang.String getDataDesc() -> d
    void setIncreaseRange(float) -> a
com.dkhs.portfolio.ui.widget.ListViewEx -> com.dkhs.portfolio.ui.widget.ListViewEx:
    void onMeasure(int,int) -> onMeasure
com.dkhs.portfolio.ui.widget.MAlertDialog -> com.dkhs.portfolio.ui.widget.y:
    android.widget.TextView alertTitle -> a
    android.widget.TextView message -> b
    android.widget.FrameLayout customPanel -> c
    android.widget.Button button1 -> d
    android.widget.Button button2 -> e
    android.widget.Button button3 -> f
    android.widget.RelativeLayout main -> g
    android.content.Context context -> h
    int mDuration -> i
    android.app.Dialog dialog -> j
    com.dkhs.portfolio.ui.widget.MAlertDialog setCancelable(boolean) -> a
    void start(com.dkhs.portfolio.animator.Effectstype) -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog setMessage(java.lang.String) -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog setMessage(int) -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog setTitle(java.lang.String) -> b
    com.dkhs.portfolio.ui.widget.MAlertDialog setTitle(int) -> b
    void show() -> a
    void dismiss() -> b
    com.dkhs.portfolio.ui.widget.MAlertDialog setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> b
    com.dkhs.portfolio.ui.widget.MAlertDialog setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> b
    com.dkhs.portfolio.ui.widget.MAlertDialog create() -> c
    void access$000(com.dkhs.portfolio.ui.widget.MAlertDialog,com.dkhs.portfolio.animator.Effectstype) -> a
    android.app.Dialog access$100(com.dkhs.portfolio.ui.widget.MAlertDialog) -> a
com.dkhs.portfolio.ui.widget.MAlertDialog$1 -> com.dkhs.portfolio.ui.widget.z:
    com.dkhs.portfolio.ui.widget.MAlertDialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.dkhs.portfolio.ui.widget.MAlertDialog$11 -> com.dkhs.portfolio.ui.widget.aa:
    android.content.DialogInterface$OnClickListener val$onClickListener -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.MAlertDialog$12 -> com.dkhs.portfolio.ui.widget.ab:
    android.content.DialogInterface$OnClickListener val$onClickListener -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.MAlertDialog$6 -> com.dkhs.portfolio.ui.widget.ac:
    android.content.DialogInterface$OnClickListener val$onClickListener -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.MAlertDialog$7 -> com.dkhs.portfolio.ui.widget.ad:
    android.content.DialogInterface$OnClickListener val$onClickListener -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog this$0 -> b
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.MarqueeText -> com.dkhs.portfolio.ui.widget.MarqueeText:
    int currentScrollX -> a
    boolean isStop -> b
    int textWidth -> c
    boolean isMeasure -> d
    boolean isFocused() -> isFocused
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void getTextWidth() -> getTextWidth
    void run() -> run
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout -> com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout:
    android.support.v7.widget.RecyclerView recyclerView -> a
    java.util.List data -> b
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$FloatMenuAdapter floatMenuAdapter -> c
    android.widget.ImageView imageView -> d
    android.view.View menuLL -> e
    com.dkhs.portfolio.bean.MenuBean selectItem -> f
    int selectIndex -> g
    android.view.ViewGroup parentView -> h
    void onFinishInflate() -> onFinishInflate
    void init() -> e
    com.dkhs.portfolio.bean.MenuBean getSelectItem() -> getSelectItem
    void notifyDataSetChanged() -> a
    int getSelectIndex() -> getSelectIndex
    void setData(java.util.List) -> setData
    void toggle() -> b
    void show() -> c
    void dismiss(boolean) -> a
    void dismiss() -> d
    android.view.ViewGroup getParentView() -> getParentView
    void setParentView(android.view.ViewGroup) -> setParentView
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$FloatMenuAdapter access$000(com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout) -> a
    com.dkhs.portfolio.bean.MenuBean access$100(com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout) -> b
    android.view.View access$200(com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout) -> c
    android.view.ViewGroup access$300(com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout) -> d
    java.util.List access$400(com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout) -> e
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$1 -> com.dkhs.portfolio.ui.widget.ae:
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$2 -> com.dkhs.portfolio.ui.widget.af:
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$2$1 -> com.dkhs.portfolio.ui.widget.ag:
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$2 this$1 -> a
    void run() -> run
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$3 -> com.dkhs.portfolio.ui.widget.ah:
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$4 -> com.dkhs.portfolio.ui.widget.ai:
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$FloatMenuAdapter -> com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$a:
    int selectIndex -> c
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout this$0 -> b
    int onCreateViewLayoutID(int) -> c
    void onBindViewHolder(com.dkhs.portfolio.ui.adapter.RVHolder,int) -> a
    int getSelectIndex() -> d
    void setSelectIndex(int) -> d
    void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> a
com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$WrapGridLayoutManager -> com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout$b:
    int[] mMeasuredDimension -> f
    com.dkhs.portfolio.ui.widget.MenuChooserRelativeLayout this$0 -> e
    void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> a
    void measureScrapChild(android.support.v7.widget.RecyclerView$Recycler,int,int,int,int[]) -> a
com.dkhs.portfolio.ui.widget.MessageTextView -> com.dkhs.portfolio.ui.widget.MessageTextView:
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
com.dkhs.portfolio.ui.widget.MyScrollExpandableListView -> com.dkhs.portfolio.ui.widget.MyScrollExpandableListView:
    void onMeasure(int,int) -> onMeasure
com.dkhs.portfolio.ui.widget.MyScrollListView -> com.dkhs.portfolio.ui.widget.MyScrollListView:
    void onMeasure(int,int) -> onMeasure
com.dkhs.portfolio.ui.widget.OnDoubleClickListener -> com.dkhs.portfolio.ui.widget.aj:
    void OnDoubleClick(android.view.View) -> a
com.dkhs.portfolio.ui.widget.PageIndicator -> com.dkhs.portfolio.ui.widget.ak:
com.dkhs.portfolio.ui.widget.PieGraph -> com.dkhs.portfolio.ui.widget.PieGraph:
    java.util.ArrayList slices -> g
    android.graphics.Paint paint -> h
    android.graphics.Path path -> i
    int indexSelected -> j
    int circleWidth -> k
    com.dkhs.portfolio.ui.widget.PieGraph$OnSliceClickedListener listener -> l
    int maxValue -> m
    int defalutColor -> n
    float sweepAngle -> o
    float midX -> a
    float midY -> b
    float radius -> c
    float innerRadius -> d
    android.os.Handler handler -> e
    java.lang.Runnable updateRunnable -> f
    void init(android.content.Context) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(android.graphics.Canvas) -> a
    void drawCenterText(android.graphics.Canvas) -> b
    void setSweepAngle(float) -> setSweepAngle
    float getSweepAngle() -> getSweepAngle
    java.util.ArrayList getSlices() -> getSlices
    void setSlices(java.util.ArrayList) -> setSlices
    void setOnSliceClickedListener(com.dkhs.portfolio.ui.widget.PieGraph$OnSliceClickedListener) -> setOnSliceClickedListener
    int getThickness() -> getThickness
    void setThickness(int) -> setThickness
    float access$016(com.dkhs.portfolio.ui.widget.PieGraph,float) -> a
com.dkhs.portfolio.ui.widget.PieGraph$1 -> com.dkhs.portfolio.ui.widget.al:
    com.dkhs.portfolio.ui.widget.PieGraph this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.widget.PieGraph$OnSliceClickedListener -> com.dkhs.portfolio.ui.widget.PieGraph$a:
com.dkhs.portfolio.ui.widget.PieSlice -> com.dkhs.portfolio.ui.widget.am:
    int color -> a
    float value -> b
    android.graphics.Path path -> c
    android.graphics.Region region -> d
    int getColor() -> a
    void setColor(int) -> a
    float getValue() -> b
    void setValue(float) -> a
    void setPath(android.graphics.Path) -> a
    void setRegion(android.graphics.Region) -> a
com.dkhs.portfolio.ui.widget.PositionItemView -> com.dkhs.portfolio.ui.widget.an:
    android.view.View contentView -> a
    void initView(android.content.Context,com.dkhs.portfolio.bean.PositionAdjustBean) -> a
    android.view.View getContentView() -> a
com.dkhs.portfolio.ui.widget.PowerImageView -> com.dkhs.portfolio.ui.widget.PowerImageView:
    android.graphics.Movie mMovie -> a
    android.graphics.Bitmap mStartButton -> b
    long mMovieStart -> c
    int mImageWidth -> d
    int mImageHeight -> e
    boolean isPlaying -> f
    boolean isAutoPlay -> g
    void onClick(android.view.View) -> onClick
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    boolean playMovie(android.graphics.Canvas) -> a
    int getResourceId(android.content.res.TypedArray,android.content.Context,android.util.AttributeSet) -> a
com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView -> com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView:
    int mHeadState -> a
    int mEndState -> b
    boolean mCanLoadMore -> c
    boolean mCanRefresh -> d
    boolean mIsAutoLoadMore -> e
    boolean mIsMoveToFirstItemAfterRefresh -> f
    boolean mIsDoRefreshOnUIChanged -> g
    android.view.LayoutInflater mInflater -> h
    android.widget.LinearLayout mHeadRootView -> i
    android.widget.TextView mTipsTextView -> j
    android.widget.TextView mLastUpdatedTextView -> k
    android.widget.ImageView mArrowImageView -> l
    android.widget.ProgressBar mProgressBar -> m
    android.view.View mEndRootView -> n
    android.widget.ProgressBar mEndLoadProgressBar -> o
    android.widget.TextView mEndLoadTipsTextView -> p
    android.view.animation.RotateAnimation mArrowAnim -> q
    android.view.animation.RotateAnimation mArrowReverseAnim -> r
    boolean mIsRecored -> s
    int mHeadViewWidth -> t
    int mHeadViewHeight -> u
    int mStartY -> v
    boolean mIsBack -> w
    int mFirstItemIndex -> x
    int mLastItemIndex -> y
    int mCount -> z
    boolean mEnoughCount -> A
    com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$OnRefreshListener mRefreshListener -> B
    com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$OnLoadMoreListener mLoadMoreListener -> C
    java.lang.String mLabel -> D
    void setCanLoadMore(boolean) -> setCanLoadMore
    void setLodaMoreText(java.lang.String) -> setLodaMoreText
    void setCanRefresh(boolean) -> setCanRefresh
    void setAutoLoadMore(boolean) -> setAutoLoadMore
    void setMoveToFirstItemAfterRefresh(boolean) -> setMoveToFirstItemAfterRefresh
    void setDoRefreshOnUIChanged(boolean) -> setDoRefreshOnUIChanged
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    void init(android.content.Context) -> a
    void addHeadView() -> c
    void addFooterView() -> d
    void initPullImageAnimation(int) -> a
    void measureView(android.view.View) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void changeEndViewByState() -> e
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void pull2RefreshManually() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeadViewByState() -> f
    void changeHeaderViewRefreshState() -> g
    void setOnRefreshListener(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$OnRefreshListener) -> setOnRefreshListener
    void setOnLoadListener(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$OnLoadMoreListener) -> setOnLoadListener
    void onRefresh() -> h
    void onLoadMore() -> i
    void onLoadMoreComplete() -> b
    void setAdapter(android.widget.BaseAdapter) -> setAdapter
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    boolean access$000(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView) -> a
    boolean access$100(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView) -> b
    int access$200(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView) -> c
    int access$300(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView) -> d
    int access$202(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView,int) -> a
    void access$400(com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView) -> e
com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$1 -> com.dkhs.portfolio.ui.widget.ao:
    com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$OnLoadMoreListener -> com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$a:
    void onLoadMore() -> a
com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$OnRefreshListener -> com.dkhs.portfolio.ui.widget.PullToRefreshExpanelListView$b:
    void onRefresh() -> a
com.dkhs.portfolio.ui.widget.PullToRefreshListView -> com.dkhs.portfolio.ui.widget.PullToRefreshListView:
    int mHeadState -> a
    int mEndState -> b
    boolean mCanLoadMore -> c
    boolean mCanRefresh -> d
    boolean mIsAutoLoadMore -> e
    boolean mIsMoveToFirstItemAfterRefresh -> f
    boolean mIsDoRefreshOnUIChanged -> g
    android.view.LayoutInflater mInflater -> h
    android.widget.LinearLayout mHeadRootView -> i
    android.widget.TextView mTipsTextView -> j
    android.widget.TextView mLastUpdatedTextView -> k
    android.widget.ImageView mArrowImageView -> l
    android.widget.ProgressBar mProgressBar -> m
    android.view.View mEndRootView -> n
    android.widget.ProgressBar mEndLoadProgressBar -> o
    android.widget.TextView mEndLoadTipsTextView -> p
    android.view.animation.RotateAnimation mArrowAnim -> q
    android.view.animation.RotateAnimation mArrowReverseAnim -> r
    boolean mIsRecored -> s
    int mHeadViewWidth -> t
    int mHeadViewHeight -> u
    int mStartY -> v
    boolean mIsBack -> w
    int mFirstItemIndex -> x
    int mLastItemIndex -> y
    int mCount -> z
    boolean mEnoughCount -> A
    com.dkhs.portfolio.ui.widget.PullToRefreshListView$OnRefreshListener mRefreshListener -> B
    com.dkhs.portfolio.ui.widget.PullToRefreshListView$OnLoadMoreListener mLoadMoreListener -> C
    java.lang.String mLabel -> D
    android.widget.AbsListView$OnScrollListener onScrollListener -> E
    void setCanLoadMore(boolean) -> setCanLoadMore
    void setLodaMoreText(java.lang.String) -> setLodaMoreText
    void setCanRefresh(boolean) -> setCanRefresh
    void setAutoLoadMore(boolean) -> setAutoLoadMore
    void setMoveToFirstItemAfterRefresh(boolean) -> setMoveToFirstItemAfterRefresh
    void setDoRefreshOnUIChanged(boolean) -> setDoRefreshOnUIChanged
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    void init(android.content.Context) -> a
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void addHeadView() -> c
    void addFooterView() -> d
    void initPullImageAnimation(int) -> a
    void measureView(android.view.View) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void changeEndViewByState() -> e
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void pull2RefreshManually() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeadViewByState() -> f
    void changeHeaderViewRefreshState() -> g
    void setOnRefreshListener(com.dkhs.portfolio.ui.widget.PullToRefreshListView$OnRefreshListener) -> setOnRefreshListener
    void setOnLoadListener(com.dkhs.portfolio.ui.widget.PullToRefreshListView$OnLoadMoreListener) -> setOnLoadListener
    void onRefresh() -> h
    void onLoadMore() -> i
    void onLoadMoreComplete() -> b
    void setAdapter(android.widget.BaseAdapter) -> setAdapter
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    boolean access$000(com.dkhs.portfolio.ui.widget.PullToRefreshListView) -> a
    boolean access$100(com.dkhs.portfolio.ui.widget.PullToRefreshListView) -> b
    int access$200(com.dkhs.portfolio.ui.widget.PullToRefreshListView) -> c
    int access$300(com.dkhs.portfolio.ui.widget.PullToRefreshListView) -> d
    int access$202(com.dkhs.portfolio.ui.widget.PullToRefreshListView,int) -> a
    void access$400(com.dkhs.portfolio.ui.widget.PullToRefreshListView) -> e
com.dkhs.portfolio.ui.widget.PullToRefreshListView$1 -> com.dkhs.portfolio.ui.widget.ap:
    com.dkhs.portfolio.ui.widget.PullToRefreshListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.PullToRefreshListView$OnLoadMoreListener -> com.dkhs.portfolio.ui.widget.PullToRefreshListView$a:
    void onLoadMore() -> a_
com.dkhs.portfolio.ui.widget.PullToRefreshListView$OnRefreshListener -> com.dkhs.portfolio.ui.widget.PullToRefreshListView$b:
    void onRefresh() -> a
com.dkhs.portfolio.ui.widget.PullToRefreshPageListView -> com.dkhs.portfolio.ui.widget.PullToRefreshPageListView:
    int mHeadState -> a
    int mEndState -> b
    boolean mCanLoadMore -> c
    boolean mCanRefresh -> d
    boolean mIsAutoLoadMore -> e
    boolean mIsMoveToFirstItemAfterRefresh -> f
    boolean mIsDoRefreshOnUIChanged -> g
    boolean isLoadPageView -> h
    android.view.LayoutInflater mInflater -> i
    android.widget.LinearLayout mHeadRootView -> j
    android.widget.TextView mTipsTextView -> k
    android.widget.TextView mLastUpdatedTextView -> l
    android.widget.ImageView mArrowImageView -> m
    android.widget.ProgressBar mProgressBar -> n
    android.widget.TextView mBootTipsTextView -> o
    android.widget.TextView mBootLastUpdatedTextView -> p
    android.widget.ImageView mBootArrowImageView -> q
    android.widget.ProgressBar mBootProgressBar -> r
    android.view.View mEndRootView -> s
    android.view.animation.RotateAnimation mArrowAnim -> t
    android.view.animation.RotateAnimation mArrowReverseAnim -> u
    boolean mIsRecored -> v
    int mHeadViewWidth -> w
    int mHeadViewHeight -> x
    int mStartY -> y
    boolean mIsBack -> z
    int mFirstItemIndex -> A
    int mLastItemIndex -> B
    int mCount -> C
    boolean mEnoughCount -> D
    com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$OnRefreshListener mRefreshListener -> E
    com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$OnLoadMoreListener mLoadMoreListener -> F
    java.lang.String mLabel -> G
    int mCurrentPage -> H
    int mTotalPage -> I
    void setCanLoadMore(boolean) -> setCanLoadMore
    void setLodaMoreText(java.lang.String) -> setLodaMoreText
    void setCanRefresh(boolean) -> setCanRefresh
    void setAutoLoadMore(boolean) -> setAutoLoadMore
    void setMoveToFirstItemAfterRefresh(boolean) -> setMoveToFirstItemAfterRefresh
    void setDoRefreshOnUIChanged(boolean) -> setDoRefreshOnUIChanged
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    void init(android.content.Context) -> a
    void addHeadView() -> d
    void addFooterView() -> e
    void initPullImageAnimation(int) -> a
    void measureView(android.view.View) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void changeEndViewByState() -> f
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void pull2RefreshManually() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeadViewByState() -> g
    void changeHeaderViewRefreshState() -> h
    void setOnRefreshListener(com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$OnRefreshListener) -> setOnRefreshListener
    void setOnLoadListener(com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$OnLoadMoreListener) -> setOnLoadListener
    void onRefresh() -> i
    void onRefreshComplete() -> b
    void onLoadMore() -> j
    void onLoadMoreComplete() -> c
    void setAdapter(android.widget.BaseAdapter) -> setAdapter
    void setPageViewText() -> k
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setLoadPageView(boolean) -> setLoadPageView
    int getTotalPage() -> getTotalPage
    void setTotalPage(int) -> setTotalPage
    int getCurrentPage() -> getCurrentPage
    void setCurrentPage(int) -> setCurrentPage
com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$OnLoadMoreListener -> com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$a:
    void onLoadMore() -> d
com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$OnRefreshListener -> com.dkhs.portfolio.ui.widget.PullToRefreshPageListView$b:
    void onRefresh() -> a
com.dkhs.portfolio.ui.widget.RatioLayout -> com.dkhs.portfolio.ui.widget.RatioLayout:
    float mWidthRatio -> a
    float mHeightRatio -> b
    void init(android.content.Context,android.util.AttributeSet) -> a
    void onMeasure(int,int) -> onMeasure
com.dkhs.portfolio.ui.widget.ScrollViewPager -> com.dkhs.portfolio.ui.widget.ScrollViewPager:
    boolean isCanScroll -> a
    void setCanScroll(boolean) -> setCanScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onMeasure(int,int) -> onMeasure
    void scrollTo(int,int) -> scrollTo
com.dkhs.portfolio.ui.widget.StockViewCallBack -> com.dkhs.portfolio.ui.widget.aq:
    void landViewFadeOut() -> n
    void stockMarkShow() -> o
com.dkhs.portfolio.ui.widget.TabPageIndicator -> com.dkhs.portfolio.ui.widget.TabPageIndicator:
    java.lang.CharSequence EMPTY_TITLE -> a
    java.lang.Runnable mTabSelector -> b
    android.view.View$OnClickListener mTabClickListener -> c
    com.dkhs.portfolio.ui.widget.IcsLinearLayout mTabLayout -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mMaxTabWidth -> g
    int mSelectedTabIndex -> h
    com.dkhs.portfolio.ui.widget.TabPageIndicator$OnTabReselectedListener mTabReselectedListener -> i
    void setOnTabReselectedListener(com.dkhs.portfolio.ui.widget.TabPageIndicator$OnTabReselectedListener) -> setOnTabReselectedListener
    void onMeasure(int,int) -> onMeasure
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addTab(int,java.lang.CharSequence,int) -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void notifyDataSetChanged() -> a
    void setViewPager(android.support.v4.view.ViewPager,int) -> setViewPager
    void setCurrentItem(int) -> setCurrentItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager access$000(com.dkhs.portfolio.ui.widget.TabPageIndicator) -> a
    com.dkhs.portfolio.ui.widget.TabPageIndicator$OnTabReselectedListener access$100(com.dkhs.portfolio.ui.widget.TabPageIndicator) -> b
    java.lang.Runnable access$202(com.dkhs.portfolio.ui.widget.TabPageIndicator,java.lang.Runnable) -> a
    int access$400(com.dkhs.portfolio.ui.widget.TabPageIndicator) -> c
com.dkhs.portfolio.ui.widget.TabPageIndicator$1 -> com.dkhs.portfolio.ui.widget.ar:
    com.dkhs.portfolio.ui.widget.TabPageIndicator this$0 -> a
    void onClick(android.view.View) -> onClick
com.dkhs.portfolio.ui.widget.TabPageIndicator$2 -> com.dkhs.portfolio.ui.widget.as:
    android.view.View val$tabView -> a
    com.dkhs.portfolio.ui.widget.TabPageIndicator this$0 -> b
    void run() -> run
com.dkhs.portfolio.ui.widget.TabPageIndicator$OnTabReselectedListener -> com.dkhs.portfolio.ui.widget.TabPageIndicator$a:
    void onTabReselected(int) -> a
com.dkhs.portfolio.ui.widget.TabPageIndicator$TabView -> com.dkhs.portfolio.ui.widget.TabPageIndicator$b:
    int mIndex -> b
    com.dkhs.portfolio.ui.widget.TabPageIndicator this$0 -> a
    void onMeasure(int,int) -> onMeasure
    int getIndex() -> a
    int access$302(com.dkhs.portfolio.ui.widget.TabPageIndicator$TabView,int) -> a
com.dkhs.portfolio.ui.widget.TabWidget -> com.dkhs.portfolio.ui.widget.at:
    android.widget.Button mBtntitletableft -> a
    android.widget.Button mBtntitletabcenter -> b
    android.widget.Button mBtntitletabright -> c
    android.view.View view -> d
    com.dkhs.portfolio.ui.widget.TabWidget$OnSelectListener onSelectListener -> e
    void onClick(android.view.View) -> onClick
    void setOnSelectListener(com.dkhs.portfolio.ui.widget.TabWidget$OnSelectListener) -> a
    void setSelection(int) -> a
com.dkhs.portfolio.ui.widget.TabWidget$OnSelectListener -> com.dkhs.portfolio.ui.widget.at$a:
    void onSelect(int) -> a
com.dkhs.portfolio.ui.widget.TextImageButton -> com.dkhs.portfolio.ui.widget.TextImageButton:
    android.widget.ImageView imageView -> a
    android.widget.TextView textView -> b
    void setText(java.lang.CharSequence) -> setText
    void setText(int) -> setText
    void setImageResource(int) -> setImageResource
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
com.dkhs.portfolio.ui.widget.TimesharingplanChart -> com.dkhs.portfolio.ui.widget.TimesharingplanChart:
    float LEFTMARGIN -> a
    float LINEMARGIN -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawTimesSharingChart(android.graphics.Canvas) -> a
    void drawVolBorder(android.graphics.Canvas) -> k
    void drawVolChart(android.graphics.Canvas) -> l
    float getmGridLineHeight() -> getmGridLineHeight
    float getVolHight() -> getVolHight
com.dkhs.portfolio.ui.widget.TrendChart -> com.dkhs.portfolio.ui.widget.TrendChart:
    java.util.List lineData -> c
    int maxPointNum -> a
    float minValue -> b
    float maxValue -> x
    boolean dashLongitude -> y
    android.graphics.PathEffect dashEffect -> z
    float pointLineLength -> A
    android.graphics.Paint mLinePaint -> B
    android.graphics.Paint fillPaint -> C
    android.graphics.Paint defPaint -> D
    float startPointX -> E
    float endY -> F
    int lineStrokeWidth -> G
    float clickPostX -> H
    float clickPostY -> I
    boolean isFromCompare -> J
    int dashLinePointSize -> K
    boolean isDrawTimesharingplanChart -> L
    boolean isDrawTrendChart -> M
    int mCounter -> N
    boolean isReleased -> O
    java.lang.Runnable mLongPressRunnable -> P
    boolean moves -> Q
    android.content.Context context -> R
    com.dkhs.portfolio.ui.widget.StockViewCallBack callBack -> S
    int textMargin -> T
    android.graphics.Paint selectPaint -> U
    android.graphics.Paint textPaint -> V
    android.graphics.PointF touchPoint -> W
    float timeX -> d
    float timeY -> e
    boolean isTouch -> aa
    long firstClick -> ab
    long lastClick -> ac
    int count -> ad
    boolean isTrendChartMeasure -> ae
    float midPointx -> af
    int mFloatViewWidth -> ag
    int mFloatViewHeight -> ah
    int mFloatViewMargin -> ai
    float startX -> aj
    float mFloatViewMarginTop -> ak
    android.graphics.Paint fingerPaint -> al
    float lineHeight -> am
    android.graphics.Path fillPath -> an
    int dashLineLenght -> ao
    boolean isFill -> ap
    int fillLineIndex -> aq
    java.util.List pointTitleList -> ar
    float borderEnd -> as
    int floatTextHeight -> at
    boolean isFundTrendCompare -> au
    com.dkhs.portfolio.ui.widget.OnDoubleClickListener mDoubleClicklistener -> av
    void init() -> c
    void initPaint() -> d
    void setSmallLine() -> setSmallLine
    void setBoldLine() -> setBoldLine
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawTimesSharingChart(android.graphics.Canvas) -> a
    void drawFingerTouch(android.graphics.Canvas) -> b
    void drawWithFingerClick(android.graphics.Canvas,int) -> a
    void drawLines(android.graphics.Canvas) -> c
    void setDashLineLenght(int) -> setDashLineLenght
    void getTouchPointData(android.graphics.Canvas) -> k
    void drawTimesharingInfo(android.graphics.Canvas,int) -> c
    void drawTrendChartInfo(android.graphics.Canvas,int) -> d
    void refreshClear() -> a
    void setPointTitleList(java.util.List) -> setPointTitleList
    void drawFloatView(android.graphics.Canvas) -> l
    void drawSingleDataView(android.graphics.Canvas,int) -> e
    void setIsFundTrendCompare(boolean) -> setIsFundTrendCompare
    void drawDataView(android.graphics.Canvas,int) -> b
    java.util.List getLineData() -> getLineData
    void setLineData(java.util.List) -> setLineData
    int getMaxPointNum() -> getMaxPointNum
    void setMaxPointNum(int) -> setMaxPointNum
    float getMinValue() -> getMinValue
    void setMinValue(float) -> setMinValue
    float getMaxValue() -> getMaxValue
    void setMaxValue(float) -> setMaxValue
    void setFill(boolean) -> setFill
    int getFillLineIndex() -> getFillLineIndex
    void setFillLineIndex(int) -> setFillLineIndex
    android.graphics.PointF getTouchPoint() -> getTouchPoint
    void setTouchPoint(android.graphics.PointF) -> setTouchPoint
    void setTouch(boolean) -> setTouch
    int getDashLinePointSize() -> getDashLinePointSize
    void setDashLinePointSize(int) -> setDashLinePointSize
    void setDrawFirstLineInfo(boolean) -> setDrawFirstLineInfo
    int getLineStrokeWidth() -> getLineStrokeWidth
    void setLineStrokeWidth(int) -> setLineStrokeWidth
    void setFromCompare(boolean) -> setFromCompare
    void setDrawTrendChart(boolean) -> setDrawTrendChart
    void setContext(android.content.Context) -> setContext
    com.dkhs.portfolio.ui.widget.OnDoubleClickListener getDoubleClicklistener() -> getDoubleClicklistener
    void setDoubleClicklistener(com.dkhs.portfolio.ui.widget.OnDoubleClickListener) -> setDoubleClicklistener
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.dkhs.portfolio.ui.widget.StockViewCallBack getCallBack() -> getCallBack
    void setCallBack(com.dkhs.portfolio.ui.widget.StockViewCallBack) -> setCallBack
    int access$000(com.dkhs.portfolio.ui.widget.TrendChart) -> a
    boolean access$100(com.dkhs.portfolio.ui.widget.TrendChart) -> b
    int access$010(com.dkhs.portfolio.ui.widget.TrendChart) -> c
    boolean access$202(com.dkhs.portfolio.ui.widget.TrendChart,boolean) -> a
    boolean access$300(com.dkhs.portfolio.ui.widget.TrendChart) -> d
    int access$008(com.dkhs.portfolio.ui.widget.TrendChart) -> e
    boolean access$302(com.dkhs.portfolio.ui.widget.TrendChart,boolean) -> b
com.dkhs.portfolio.ui.widget.TrendChart$1 -> com.dkhs.portfolio.ui.widget.au:
    com.dkhs.portfolio.ui.widget.TrendChart this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.widget.TrendChart$2 -> com.dkhs.portfolio.ui.widget.av:
    com.dkhs.portfolio.ui.widget.TrendChart this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.widget.TrendGridChart -> com.dkhs.portfolio.ui.widget.TrendGridChart:
    boolean DEFAULT_DISPLAY_LONGTITUDE -> f
    boolean DEFAULT_DASH_LONGTITUDE -> g
    boolean DEFAULT_DISPLAY_LATITUDE -> h
    boolean DEFAULT_DASH_LATITUDE -> i
    boolean DEFAULT_DISPLAY_AXIS_X_TITLE -> j
    boolean DEFAULT_DISPLAY_AXIS_Y_TITLE -> k
    boolean DEFAULT_DISPLAY_BORDER -> l
    int DEFAULT_LONGTITUDE_FONT_COLOR -> a
    int DEFAULT_LONGTITUDE_FONT_COLOR_UP -> b
    int DEFAULT_LONGTITUDE_FONT_COLOR_MID -> c
    int DEFAULT_LONGTITUDE_FONT_COLOR_DOWN -> d
    int DEFAULT_LONGTITUDE_FONT_SIZE -> e
    int DEFAULT_LATITUDE_FONT_COLOR -> x
    int DEFAULT_LATITUDE_FONT_SIZE -> y
    int DEFAULT_AXIS_Y_MAX_TITLE_LENGTH -> z
    android.graphics.PathEffect DEFAULT_DASH_EFFECT -> m
    int backgroudColor -> A
    int axisXColor -> B
    int axisYColor -> C
    int longitudeColor -> D
    int latitudeColor -> E
    float axisMarginLeft -> n
    float axisMarginBottom -> o
    float axisMarginTop -> p
    float axisMarginRight -> q
    boolean displayAxisXTitle -> F
    boolean displayAxisYTitle -> G
    boolean displayAxisYTitleColor -> H
    boolean displayLongitude -> I
    boolean dashLongitude -> J
    boolean displayLatitude -> K
    boolean dashLatitude -> L
    android.graphics.PathEffect dashEffect -> M
    boolean displayBorder -> N
    int borderColor -> O
    int longtitudeFontColor -> P
    int longtitudeFontSize -> Q
    int latitudeFontColor -> R
    int latitudeFontSize -> S
    java.util.List axisXTitles -> T
    java.util.List axisYTitles -> U
    java.util.List axisRightYTitles -> V
    int axisYMaxTitleLength -> W
    boolean displayCrossXOnTouch -> aa
    boolean displayCrossYOnTouch -> ab
    boolean isDrawXBorke -> ac
    boolean isDrawRightYTitle -> ad
    int xLineCounts -> ae
    int yLineCounts -> af
    android.graphics.Paint mTextPaint -> ag
    int xTitleTextHeight -> r
    float mGridLineHeight -> s
    float mGridLineLenght -> t
    float mStartLineYpoint -> u
    float mStartLineXpoint -> v
    float volHight -> w
    boolean isMeasure -> ah
    int mHightWeight -> ai
    int mWidthWeight -> aj
    void init(android.content.Context,android.util.AttributeSet) -> a
    void onMeasure(int,int) -> onMeasure
    void resetLayoutWeight(int,int) -> a
    int measureWidth(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void reDrawYtitleText(android.graphics.Canvas) -> d
    void drawYtitleText(android.graphics.Canvas) -> e
    void drawRightYtitleText(android.graphics.Canvas) -> f
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void drawXtitleText(android.graphics.Canvas) -> a
    int getYTitlePaintFont(int,int) -> b
    void drawBorder(android.graphics.Canvas) -> g
    void drawXAxis(android.graphics.Canvas) -> h
    void drawAxisGridX(android.graphics.Canvas) -> i
    void drawAxisGridY(android.graphics.Canvas) -> j
    int getBackgroudColor() -> getBackgroudColor
    void setBackgroudColor(int) -> setBackgroudColor
    int getAxisXColor() -> getAxisXColor
    void setAxisXColor(int) -> setAxisXColor
    int getAxisYColor() -> getAxisYColor
    void setAxisYColor(int) -> setAxisYColor
    int getLongitudeColor() -> getLongitudeColor
    void setLongitudeColor(int) -> setLongitudeColor
    int getLatitudeColor() -> getLatitudeColor
    void setLatitudeColor(int) -> setLatitudeColor
    float getAxisMarginLeft() -> getAxisMarginLeft
    void setAxisMarginLeft(float) -> setAxisMarginLeft
    float getAxisMarginBottom() -> getAxisMarginBottom
    void setAxisMarginBottom(float) -> setAxisMarginBottom
    float getAxisMarginTop() -> getAxisMarginTop
    void setAxisMarginTop(float) -> setAxisMarginTop
    float getAxisMarginRight() -> getAxisMarginRight
    void setAxisMarginRight(float) -> setAxisMarginRight
    java.util.List getAxisXTitles() -> getAxisXTitles
    void setAxisXTitles(java.util.List) -> setAxisXTitles
    java.util.List getAxisYTitles() -> getAxisYTitles
    void setAxisYTitles(java.util.List) -> setAxisYTitles
    void setDisplayLongitude(boolean) -> setDisplayLongitude
    void setDashLongitude(boolean) -> setDashLongitude
    void setDisplayLatitude(boolean) -> setDisplayLatitude
    void setDashLatitude(boolean) -> setDashLatitude
    android.graphics.PathEffect getDashEffect() -> getDashEffect
    void setDashEffect(android.graphics.PathEffect) -> setDashEffect
    void setDisplayAxisXTitle(boolean) -> setDisplayAxisXTitle
    boolean isDisplayAxisYTitle() -> b
    void setDisplayAxisYTitleColor(boolean) -> setDisplayAxisYTitleColor
    void setDisplayAxisYTitle(boolean) -> setDisplayAxisYTitle
    void setDisplayBorder(boolean) -> setDisplayBorder
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getLongtitudeFontColor() -> getLongtitudeFontColor
    void setLongtitudeFontColor(int) -> setLongtitudeFontColor
    int getLongtitudeFontSize() -> getLongtitudeFontSize
    void setLongtitudeFontSize(int) -> setLongtitudeFontSize
    int getLatitudeFontColor() -> getLatitudeFontColor
    void setLatitudeFontColor(int) -> setLatitudeFontColor
    int getLatitudeFontSize() -> getLatitudeFontSize
    void setLatitudeFontSize(int) -> setLatitudeFontSize
    int getAxisYMaxTitleLength() -> getAxisYMaxTitleLength
    void setAxisYMaxTitleLength(int) -> setAxisYMaxTitleLength
    void setDisplayCrossXOnTouch(boolean) -> setDisplayCrossXOnTouch
    void setDisplayCrossYOnTouch(boolean) -> setDisplayCrossYOnTouch
    void setDrawXBorke(boolean) -> setDrawXBorke
    void setDrawRightYTitle(boolean) -> setDrawRightYTitle
    java.util.List getAxisRightYTitles() -> getAxisRightYTitles
    void setAxisRightYTitles(java.util.List) -> setAxisRightYTitles
    float getmGridLineHeight() -> getmGridLineHeight
    void setmGridLineHeight(float) -> setmGridLineHeight
    float getmGridLineLenght() -> getmGridLineLenght
    void setmGridLineLenght(float) -> setmGridLineLenght
    float getVolHight() -> getVolHight
    void setVolHight(float) -> setVolHight
    int getxLineCounts() -> getxLineCounts
    android.graphics.Paint getmTextPaint() -> getmTextPaint
    int getyLineCounts() -> getyLineCounts
    void setYlineCounts(int) -> setYlineCounts
com.dkhs.portfolio.ui.widget.chart.GridChart -> com.dkhs.portfolio.ui.widget.chart.GridChart:
    int PADDING_LEFT -> a
    boolean DEFAULT_DISPLAY_LONGTITUDE -> b
    boolean DEFAULT_DASH_LONGTITUDE -> c
    boolean DEFAULT_DISPLAY_LATITUDE -> d
    boolean DEFAULT_DASH_LATITUDE -> e
    boolean DEFAULT_DISPLAY_AXIS_X_TITLE -> f
    boolean DEFAULT_DISPLAY_AXIS_Y_TITLE -> g
    boolean DEFAULT_DISPLAY_BORDER -> h
    int DEFAULT_LONGTITUDE_FONT_COLOR -> q
    int DEFAULT_LONGTITUDE_FONT_SIZE -> r
    int DEFAULT_AXIS_TITLE_SIZE -> i
    int DEFAULT_LATITUDE_FONT_COLOR -> s
    int DEFAULT_LATITUDE_FONT_SIZE -> t
    int DEFAULT_AXIS_Y_MAX_TITLE_LENGTH -> u
    android.graphics.PathEffect DEFAULT_DASH_EFFECT -> j
    int backgroudColor -> v
    int axisXColor -> w
    int axisYColor -> x
    int longitudeColor -> y
    int latitudeColor -> z
    float axisMarginLeft -> A
    float axisMarginBottom -> B
    float axisMarginTop -> C
    float axisMarginRight -> D
    boolean displayAxisXTitle -> E
    boolean displayAxisYTitle -> F
    boolean displayLongitude -> G
    boolean dashLongitude -> H
    boolean displayLatitude -> I
    boolean dashLatitude -> J
    android.graphics.PathEffect dashEffect -> K
    boolean displayBorder -> L
    int borderColor -> M
    int longtitudeFontColor -> N
    int longtitudeFontSize -> O
    int latitudeFontColor -> P
    int latitudeFontSize -> Q
    java.util.List axisXTitles -> R
    java.util.List axisYTitles -> S
    int axisYMaxTitleLength -> T
    boolean displayCrossXOnTouch -> U
    boolean displayCrossYOnTouch -> V
    float clickPostX -> k
    float clickPostY -> l
    java.util.List notifyList -> W
    android.graphics.PointF touchPoint -> aa
    float mTitleHeight -> m
    boolean ismove -> n
    float titalWid -> o
    int checkType -> p
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> a
    int measureHeight(int) -> b
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onSet(android.view.MotionEvent,boolean) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    java.lang.String getAxisXGraduate(java.lang.Object) -> a
    void drawWithFingerClick(android.graphics.Canvas) -> a
    void drawBorder(android.graphics.Canvas) -> b
    void drawXAxis(android.graphics.Canvas) -> c
    void drawYAxis(android.graphics.Canvas) -> d
    void drawAxisGridX(android.graphics.Canvas) -> e
    void drawAxisGridY(android.graphics.Canvas) -> f
    void notifyEvent(com.dkhs.portfolio.ui.widget.chart.GridChart) -> a
    void notifyEventAll(com.dkhs.portfolio.ui.widget.chart.GridChart) -> b
    int getBackgroudColor() -> getBackgroudColor
    void setBackgroudColor(int) -> setBackgroudColor
    int getAxisXColor() -> getAxisXColor
    void setAxisXColor(int) -> setAxisXColor
    int getAxisYColor() -> getAxisYColor
    void setAxisYColor(int) -> setAxisYColor
    int getLongitudeColor() -> getLongitudeColor
    void setLongitudeColor(int) -> setLongitudeColor
    int getLatitudeColor() -> getLatitudeColor
    void setLatitudeColor(int) -> setLatitudeColor
    float getAxisMarginLeft() -> getAxisMarginLeft
    void setAxisMarginLeft(float) -> setAxisMarginLeft
    float getAxisMarginBottom() -> getAxisMarginBottom
    void setAxisMarginBottom(float) -> setAxisMarginBottom
    float getAxisMarginTop() -> getAxisMarginTop
    void setAxisMarginTop(float) -> setAxisMarginTop
    float getAxisMarginRight() -> getAxisMarginRight
    void setAxisMarginRight(float) -> setAxisMarginRight
    java.util.List getAxisXTitles() -> getAxisXTitles
    void setAxisXTitles(java.util.List) -> setAxisXTitles
    java.util.List getAxisYTitles() -> getAxisYTitles
    void setAxisYTitles(java.util.List) -> setAxisYTitles
    void setDisplayLongitude(boolean) -> setDisplayLongitude
    void setDashLongitude(boolean) -> setDashLongitude
    void setDisplayLatitude(boolean) -> setDisplayLatitude
    void setDashLatitude(boolean) -> setDashLatitude
    android.graphics.PathEffect getDashEffect() -> getDashEffect
    void setDashEffect(android.graphics.PathEffect) -> setDashEffect
    void setDisplayAxisXTitle(boolean) -> setDisplayAxisXTitle
    void setDisplayAxisYTitle(boolean) -> setDisplayAxisYTitle
    void setDisplayBorder(boolean) -> setDisplayBorder
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getLongtitudeFontColor() -> getLongtitudeFontColor
    void setLongtitudeFontColor(int) -> setLongtitudeFontColor
    int getLongtitudeFontSize() -> getLongtitudeFontSize
    void setLongtitudeFontSize(int) -> setLongtitudeFontSize
    int getLatitudeFontColor() -> getLatitudeFontColor
    void setLatitudeFontColor(int) -> setLatitudeFontColor
    int getLatitudeFontSize() -> getLatitudeFontSize
    void setLatitudeFontSize(int) -> setLatitudeFontSize
    int getAxisYMaxTitleLength() -> getAxisYMaxTitleLength
    void setAxisYMaxTitleLength(int) -> setAxisYMaxTitleLength
    boolean isDisplayCrossXOnTouch() -> b
    void setDisplayCrossXOnTouch(boolean) -> setDisplayCrossXOnTouch
    boolean isDisplayCrossYOnTouch() -> c
    void setDisplayCrossYOnTouch(boolean) -> setDisplayCrossYOnTouch
    android.graphics.PointF getTouchPoint() -> getTouchPoint
    void setTouchPoint(android.graphics.PointF) -> setTouchPoint
    float getmTitleHeight() -> getmTitleHeight
    void setmTitleHeight(float) -> setmTitleHeight
    int getCheckType() -> getCheckType
    void setCheckType(int) -> setCheckType
com.dkhs.portfolio.ui.widget.chart.ITouchEventResponse -> com.dkhs.portfolio.ui.widget.chart.a:
    void notifyEvent(com.dkhs.portfolio.ui.widget.chart.GridChart) -> a
com.dkhs.portfolio.ui.widget.chart.StickChart -> com.dkhs.portfolio.ui.widget.chart.StickChart:
    int stickBorderColor -> t
    int stickFillColorUp -> u
    int stickFillColorDown -> v
    int latitudeNum -> w
    int longtitudeNum -> x
    java.util.ArrayList StickData -> y
    int maxStickDataNum -> z
    float maxValue -> q
    float minValue -> r
    int currentIndex -> A
    int mShowDate -> B
    double dragValue -> C
    boolean isTouch -> D
    int index -> s
    int getmShowDate() -> getmShowDate
    void setmShowDate(int) -> setmShowDate
    int getCurrentIndex() -> getCurrentIndex
    void setCurrentIndex(int) -> setCurrentIndex
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void setMaxValue() -> setMaxValue
    float getMaxData(com.dkhs.portfolio.ui.widget.kline.OHLCEntity) -> a
    void setMACDMaxValue() -> setMACDMaxValue
    java.lang.String getAxisXGraduate(java.lang.Object) -> a
    void notifyEvent(com.dkhs.portfolio.ui.widget.chart.GridChart) -> a
    void initAxisX() -> d
    int getSelectedIndex() -> getSelectedIndex
    void initAxisY() -> e
    void initMACDY() -> f
    void drawSticks(android.graphics.Canvas) -> g
    void drawMADC(android.graphics.Canvas) -> h
    void drawDiff(android.graphics.Canvas) -> i
    void drawMA(android.graphics.Canvas) -> j
    void flushFirstData(com.dkhs.portfolio.ui.widget.kline.OHLCEntity) -> b
    void addData(java.util.ArrayList,int) -> a
    java.util.List getStickData() -> getStickData
    void setStickData(java.util.ArrayList,int) -> setStickData
    void setStickData(java.util.ArrayList) -> setStickData
    int getLatitudeNum() -> getLatitudeNum
    void setLatitudeNum(int) -> setLatitudeNum
    int getMaxStickDataNum() -> getMaxStickDataNum
    void setMaxStickDataNum(int) -> setMaxStickDataNum
    float getMaxValue() -> getMaxValue
    void setMaxValue(float) -> setMaxValue
    float getMinValue() -> getMinValue
    void setMinValue(float) -> setMinValue
    int getStickBorderColor() -> getStickBorderColor
    void setStickBorderColor(int) -> setStickBorderColor
    int getLongtitudeNum() -> getLongtitudeNum
    void setLongtitudeNum(int) -> setLongtitudeNum
    double getDragValue() -> getDragValue
    void setDragValue(double) -> setDragValue
    void setTouch(boolean) -> setTouch
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
com.dkhs.portfolio.ui.widget.kline.DisplayUtil -> com.dkhs.portfolio.ui.widget.kline.DisplayUtil:
    android.app.Activity mActivity -> mActivity
    void initDisplayUtil(android.app.Activity) -> initDisplayUtil
    android.graphics.Point getWindowSizePoint() -> getWindowSizePoint
    int px2dip(android.content.Context,float) -> px2dip
    int dip2px(android.content.Context,float) -> dip2px
    int px2sp(android.content.Context,float) -> px2sp
    int sp2px(android.content.Context,float) -> sp2px
com.dkhs.portfolio.ui.widget.kline.GridChart -> com.dkhs.portfolio.ui.widget.kline.GridChart:
    int CANDLE_PADDING -> CANDLE_PADDING
    int DEFAULT_BACKGROUD -> DEFAULT_BACKGROUD
    int DEFAULT_AXIS_TITLE_SIZE -> DEFAULT_AXIS_TITLE_SIZE
    int DEFAULT_AXIS_COLOR -> DEFAULT_AXIS_COLOR
    int DEFAULT_LONGI_LAITUDE_COLOR -> DEFAULT_LONGI_LAITUDE_COLOR
    int DEFAULT_UPER_LATITUDE_NUM -> DEFAULT_UPER_LATITUDE_NUM
    int DEFAULT_LOWER_LATITUDE_NUM -> DEFAULT_LOWER_LATITUDE_NUM
    int DEFAULT_LOGITUDE_NUM -> DEFAULT_LOGITUDE_NUM
    int PADDING_LEFT -> PADDING_LEFT
    int DEFAULT_BORDER_COLOR -> DEFAULT_BORDER_COLOR
    android.graphics.PathEffect DEFAULT_DASH_EFFECT -> DEFAULT_DASH_EFFECT
    float LOWER_CHART_TOP -> LOWER_CHART_TOP
    float UPER_CHART_BOTTOM -> UPER_CHART_BOTTOM
    int mBackGround -> mBackGround
    int mAxisColor -> mAxisColor
    int mLongiLatitudeColor -> mLongiLatitudeColor
    android.graphics.PathEffect mDashEffect -> mDashEffect
    int mBorderColor -> mBorderColor
    float mUperChartHeight -> mUperChartHeight
    boolean showLowerChartTabs -> showLowerChartTabs
    boolean showTopTitles -> showTopTitles
    float topTitleHeight -> topTitleHeight
    java.lang.String[] mLowerChartTabTitles -> mLowerChartTabTitles
    float mTabWidth -> mTabWidth
    float mTabHight -> mTabHight
    int mTabIndex -> mTabIndex
    float mLowerChartHeight -> mLowerChartHeight
    float longitudeSpacing -> longitudeSpacing
    float latitudeSpacing -> latitudeSpacing
    int upperLatitudeNum -> upperLatitudeNum
    int lowerLatitudeNum -> lowerLatitudeNum
    boolean displayLongitude -> displayLongitude
    boolean displayLatitude -> displayLatitude
    boolean displayAxisXTitle -> displayAxisXTitle
    boolean displayAxisYTitle -> displayAxisYTitle
    com.dkhs.portfolio.ui.widget.kline.GridChart$OnTabClickListener mOnTabClickListener -> mOnTabClickListener
    void init() -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnTabClickListener(com.dkhs.portfolio.ui.widget.kline.GridChart$OnTabClickListener) -> setOnTabClickListener
    void drawBorders(android.graphics.Canvas,int,int) -> drawBorders
    void drawLongitudes(android.graphics.Canvas,int,float) -> drawLongitudes
    void drawLatitudes(android.graphics.Canvas,int,int,float) -> drawLatitudes
    void drawRegions(android.graphics.Canvas,int,int) -> drawRegions
    int getBackGround() -> getBackGround
    void setBackGround(int) -> setBackGround
    int getAxisColor() -> getAxisColor
    void setAxisColor(int) -> setAxisColor
    int getLongiLatitudeColor() -> getLongiLatitudeColor
    void setLongiLatitudeColor(int) -> setLongiLatitudeColor
    android.graphics.PathEffect getDashEffect() -> getDashEffect
    void setDashEffect(android.graphics.PathEffect) -> setDashEffect
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    float getUperChartHeight() -> getUperChartHeight
    void setUperChartHeight(float) -> setUperChartHeight
    boolean isShowLowerChartTabs() -> isShowLowerChartTabs
    void setShowLowerChartTabs(boolean) -> setShowLowerChartTabs
    float getLowerChartHeight() -> getLowerChartHeight
    void setLowerChartHeight(float) -> setLowerChartHeight
    java.lang.String[] getLowerChartTabTitles() -> getLowerChartTabTitles
    void setLowerChartTabTitles(java.lang.String[]) -> setLowerChartTabTitles
    float getLongitudeSpacing() -> getLongitudeSpacing
    void setLongitudeSpacing(float) -> setLongitudeSpacing
    float getLatitudeSpacing() -> getLatitudeSpacing
    void setLatitudeSpacing(float) -> setLatitudeSpacing
    void setShowTopTitles(boolean) -> setShowTopTitles
    float getTopTitleHeight() -> getTopTitleHeight
    int getUpperLatitudeNum() -> getUpperLatitudeNum
    void setUpperLatitudeNum(int) -> setUpperLatitudeNum
    int getLowerLatitudeNum() -> getLowerLatitudeNum
    void setLowerLatitudeNum(int) -> setLowerLatitudeNum
    boolean isDisplayLongitude() -> isDisplayLongitude
    void setDisplayLongitude(boolean) -> setDisplayLongitude
    boolean isDisplayLatitude() -> isDisplayLatitude
    void setDisplayLatitude(boolean) -> setDisplayLatitude
    boolean isDisplayAxisXTitle() -> isDisplayAxisXTitle
    void setDisplayAxisXTitle(boolean) -> setDisplayAxisXTitle
    boolean isDisplayAxisYTitle() -> isDisplayAxisYTitle
    void setDisplayAxisYTitle(boolean) -> setDisplayAxisYTitle
com.dkhs.portfolio.ui.widget.kline.GridChart$OnTabClickListener -> com.dkhs.portfolio.ui.widget.kline.GridChart$OnTabClickListener:
    void onTabClick(int) -> onTabClick
com.dkhs.portfolio.ui.widget.kline.KChartsLandView -> com.dkhs.portfolio.ui.widget.kline.KChartsLandView:
    int TOUCH_MODE -> TOUCH_MODE
    int NONE -> NONE
    int DOWN -> DOWN
    int MOVE -> MOVE
    int ZOOM -> ZOOM
    int DEFAULT_AXIS_Y_TITLE_COLOR -> DEFAULT_AXIS_Y_TITLE_COLOR
    int DEFAULT_AXIS_X_TITLE_COLOR -> DEFAULT_AXIS_X_TITLE_COLOR
    int MIN_CANDLE_NUM -> MIN_CANDLE_NUM
    int DEFAULT_CANDLE_NUM -> DEFAULT_CANDLE_NUM
    int MAX_CANDLE_NUM -> MAX_CANDLE_NUM
    int MIN_MOVE_DISTANCE -> MIN_MOVE_DISTANCE
    java.lang.String TAG -> TAG
    float mCandleWidth -> mCandleWidth
    float mStartX -> mStartX
    float mStartY -> mStartY
    java.util.List mOHLCData -> mOHLCData
    int mDataStartIndext -> mDataStartIndext
    int mShowDataNum -> mShowDataNum
    boolean showDetails -> showDetails
    double mMaxPrice -> mMaxPrice
    double mMinPrice -> mMinPrice
    java.util.List MALineData -> MALineData
    java.lang.String textforFlush -> textforFlush
    java.lang.String mTabTitle -> mTabTitle
    com.dkhs.portfolio.ui.widget.chart.StickChart mVolumnChartView -> mVolumnChartView
    com.dkhs.portfolio.ui.widget.kline.MACDEntity mMACDData -> mMACDData
    com.dkhs.portfolio.ui.widget.kline.KDJEntity mKDJData -> mKDJData
    com.dkhs.portfolio.ui.widget.kline.RSIEntity mRSIData -> mRSIData
    android.view.MotionEvent e -> e
    boolean ismove -> ismove
    int zoomNum -> zoomNum
    long currentTime -> currentTime
    boolean go -> go
    boolean firsttime -> firsttime
    java.lang.String symbolType -> symbolType
    java.lang.String symbol -> symbol
    double dragValue -> dragValue
    double hisDrag -> hisDrag
    android.content.Context context -> context
    boolean isLoadMore -> isLoadMore
    boolean loadAble -> loadAble
    android.graphics.Paint textPaint -> textPaint
    android.graphics.Paint defPaint -> defPaint
    android.graphics.Paint redPaint -> redPaint
    android.graphics.Paint greenPaint -> greenPaint
    android.graphics.Paint grayPaint -> grayPaint
    android.graphics.Paint whitePaint -> whitePaint
    android.graphics.Paint yellowPaint -> yellowPaint
    android.graphics.Paint magentaPaint -> magentaPaint
    android.graphics.Paint merchPaint -> merchPaint
    float timeX -> timeX
    float timeY -> timeY
    int currentDate -> currentDate
    boolean twoFingle -> twoFingle
    int currentShow -> currentShow
    float longs -> longs
    long firstClick -> firstClick
    long lastClick -> lastClick
    int count -> count
    com.dkhs.portfolio.ui.widget.KChartsLandCallBack mKCallBack -> mKCallBack
    void init() -> init
    void iniPaint() -> iniPaint
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCandleDetails(android.graphics.Canvas) -> drawCandleDetails
    void drawTitles(android.graphics.Canvas) -> drawTitles
    java.lang.String getYTitle(double) -> getYTitle
    void drawUpperRegion(android.graphics.Canvas) -> drawUpperRegion
    void drawLowerRegion(android.graphics.Canvas) -> drawLowerRegion
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnTouchOnce() -> setOnTouchOnce
    void setCurrentData() -> setCurrentData
    java.util.ArrayList getDisplayOHLCEntitys() -> getDisplayOHLCEntitys
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void zoomIn(int) -> zoomIn
    void zoomOut(int) -> zoomOut
    void setTouchMode(android.view.MotionEvent) -> setTouchMode
    void initMA(java.util.List) -> initMA
    java.util.List getOHLCData() -> getOHLCData
    void flushFirshData(com.dkhs.portfolio.ui.widget.kline.OHLCEntity) -> flushFirshData
    void setOHLCData(java.util.List,int) -> setOHLCData
    boolean hasMoreData(int) -> hasMoreData
    void initMALineData() -> initMALineData
    void onTabClick(int) -> onTabClick
    void setLowerChartTabTitles(java.lang.String[]) -> setLowerChartTabTitles
    void makeLager() -> makeLager
    boolean isLargest() -> isLargest
    boolean isSmallest() -> isSmallest
    boolean iscanSmoll() -> iscanSmoll
    void makeSmaller() -> makeSmaller
    int getShowDataNum() -> getShowDataNum
    void setShowDataNum(int) -> setShowDataNum
    void setStick(com.dkhs.portfolio.ui.widget.chart.StickChart) -> setStick
    java.lang.String getSymbolType() -> getSymbolType
    void setSymbolType(java.lang.String) -> setSymbolType
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    void setContext(android.content.Context) -> setContext
    boolean isLoadMore() -> isLoadMore
    void setLoadMore(boolean) -> setLoadMore
    boolean isLoadAble() -> isLoadAble
    void setLoadAble(boolean) -> setLoadAble
    void reSetdate() -> reSetdate
    com.dkhs.portfolio.ui.widget.KChartsLandCallBack getKChartsLandCallBack() -> getKChartsLandCallBack
    void setKChartsLandCallBack(com.dkhs.portfolio.ui.widget.KChartsLandCallBack) -> setKChartsLandCallBack
    double getDragValue() -> getDragValue
    void setDragValue(double) -> setDragValue
    boolean access$000(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$000
    boolean access$100(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$100
    float access$202(com.dkhs.portfolio.ui.widget.kline.KChartsLandView,float) -> access$202
    float access$300(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$300
    java.util.List access$400(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$400
    float access$502(com.dkhs.portfolio.ui.widget.kline.KChartsLandView,float) -> access$502
    boolean access$602(com.dkhs.portfolio.ui.widget.kline.KChartsLandView,boolean) -> access$602
    void access$700(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$700
    double access$800(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$800
    double access$826(com.dkhs.portfolio.ui.widget.kline.KChartsLandView,double) -> access$826
    double access$902(com.dkhs.portfolio.ui.widget.kline.KChartsLandView,double) -> access$902
    boolean access$1000(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$1000
    com.dkhs.portfolio.ui.widget.KChartsLandCallBack access$1100(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$1100
    boolean access$1002(com.dkhs.portfolio.ui.widget.kline.KChartsLandView,boolean) -> access$1002
    com.dkhs.portfolio.ui.widget.chart.StickChart access$1200(com.dkhs.portfolio.ui.widget.kline.KChartsLandView) -> access$1200
    double access$802(com.dkhs.portfolio.ui.widget.kline.KChartsLandView,double) -> access$802
com.dkhs.portfolio.ui.widget.kline.KChartsLandView$1 -> com.dkhs.portfolio.ui.widget.kline.KChartsLandView$1:
    android.view.MotionEvent val$event -> val$event
    com.dkhs.portfolio.ui.widget.kline.KChartsLandView this$0 -> this$0
    void run() -> run
com.dkhs.portfolio.ui.widget.kline.KChartsLandView$2 -> com.dkhs.portfolio.ui.widget.kline.KChartsLandView$2:
    android.graphics.Rect val$rect -> val$rect
    com.dkhs.portfolio.ui.widget.kline.KChartsLandView this$0 -> this$0
    void run() -> run
com.dkhs.portfolio.ui.widget.kline.KChartsLandView$3 -> com.dkhs.portfolio.ui.widget.kline.KChartsLandView$3:
    com.dkhs.portfolio.ui.widget.kline.KChartsLandView this$0 -> this$0
    void run() -> run
com.dkhs.portfolio.ui.widget.kline.KChartsLandView$DisplayDataChangeListener -> com.dkhs.portfolio.ui.widget.kline.KChartsLandView$DisplayDataChangeListener:
    void onDisplayDataChange(java.util.List) -> onDisplayDataChange
    void onLoadMoreDataStart() -> onLoadMoreDataStart
    void onLoadMoreDataEnd() -> onLoadMoreDataEnd
com.dkhs.portfolio.ui.widget.kline.KChartsView -> com.dkhs.portfolio.ui.widget.kline.KChartsView:
    int TOUCH_MODE -> TOUCH_MODE
    int NONE -> NONE
    int DOWN -> DOWN
    int MOVE -> MOVE
    int ZOOM -> ZOOM
    int type -> type
    int DEFAULT_AXIS_Y_TITLE_COLOR -> DEFAULT_AXIS_Y_TITLE_COLOR
    int DEFAULT_AXIS_X_TITLE_COLOR -> DEFAULT_AXIS_X_TITLE_COLOR
    int MIN_CANDLE_NUM -> MIN_CANDLE_NUM
    int DEFAULT_CANDLE_NUM -> DEFAULT_CANDLE_NUM
    int MAX_CANDLE_NUM -> MAX_CANDLE_NUM
    int MIN_MOVE_DISTANCE -> MIN_MOVE_DISTANCE
    double mCandleWidth -> mCandleWidth
    float mStartX -> mStartX
    float mStartY -> mStartY
    java.util.List mOHLCData -> mOHLCData
    int mDataStartIndext -> mDataStartIndext
    int mShowDataNum -> mShowDataNum
    boolean showDetails -> showDetails
    double mMaxPrice -> mMaxPrice
    double mMinPrice -> mMinPrice
    java.util.List MALineData -> MALineData
    java.lang.String mTabTitle -> mTabTitle
    com.dkhs.portfolio.ui.widget.chart.StickChart mVolumnChartView -> mVolumnChartView
    com.dkhs.portfolio.ui.widget.kline.MACDEntity mMACDData -> mMACDData
    com.dkhs.portfolio.ui.widget.kline.KDJEntity mKDJData -> mKDJData
    com.dkhs.portfolio.ui.widget.kline.RSIEntity mRSIData -> mRSIData
    android.view.MotionEvent e -> e
    boolean ismove -> ismove
    int zoomNum -> zoomNum
    long currentTime -> currentTime
    com.dkhs.portfolio.ui.widget.kline.KChartsView$DisplayDataChangeListener mDisplayChangeListener -> mDisplayChangeListener
    boolean goToLand -> goToLand
    boolean firsttime -> firsttime
    java.lang.String symbolType -> symbolType
    java.lang.String symbol -> symbol
    android.content.Context context -> context
    com.dkhs.portfolio.bean.SelectStockBean mStockBean -> mStockBean
    android.graphics.Paint textPaint -> textPaint
    android.graphics.Paint defPaint -> defPaint
    android.graphics.Paint redPaint -> redPaint
    android.graphics.Paint greenPaint -> greenPaint
    android.graphics.Paint grayPaint -> grayPaint
    android.graphics.Paint whitePaint -> whitePaint
    android.graphics.Paint yellowPaint -> yellowPaint
    android.graphics.Paint magentaPaint -> magentaPaint
    android.graphics.Paint merchPaint -> merchPaint
    float timeX -> timeX
    float timeY -> timeY
    com.dkhs.portfolio.ui.widget.StockViewCallBack callBack -> callBack
    void init() -> init
    void iniPaint() -> iniPaint
    void onDraw(android.graphics.Canvas) -> onDraw
    com.dkhs.portfolio.ui.widget.kline.KChartsView$DisplayDataChangeListener getDisplayChangeListener() -> getDisplayChangeListener
    void setDisplayChangeListener(com.dkhs.portfolio.ui.widget.kline.KChartsView$DisplayDataChangeListener) -> setDisplayChangeListener
    void drawCandleDetails(android.graphics.Canvas) -> drawCandleDetails
    void drawTitles(android.graphics.Canvas) -> drawTitles
    java.lang.String getYTitle(double) -> getYTitle
    void drawCandle(android.graphics.Canvas) -> drawCandle
    void drawLowerRegion(android.graphics.Canvas) -> drawLowerRegion
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnTouchOnce() -> setOnTouchOnce
    void setCurrentData() -> setCurrentData
    java.util.ArrayList getDisplayOHLCEntitys() -> getDisplayOHLCEntitys
    void zoomIn(int) -> zoomIn
    void zoomOut(int) -> zoomOut
    void setTouchMode(android.view.MotionEvent) -> setTouchMode
    java.util.List initMA(java.util.List,int) -> initMA
    java.util.List getOHLCData() -> getOHLCData
    void setOHLCData(java.util.List) -> setOHLCData
    void initMALineData() -> initMALineData
    void onTabClick(int) -> onTabClick
    void setLowerChartTabTitles(java.lang.String[]) -> setLowerChartTabTitles
    void makeLager() -> makeLager
    boolean isLargest() -> isLargest
    boolean isSmallest() -> isSmallest
    boolean iscanSmoll() -> iscanSmoll
    void makeSmaller() -> makeSmaller
    int getShowDataNum() -> getShowDataNum
    void setShowDataNum(int) -> setShowDataNum
    void setStick(com.dkhs.portfolio.ui.widget.chart.StickChart) -> setStick
    java.lang.String getSymbolType() -> getSymbolType
    void setSymbolType(java.lang.String) -> setSymbolType
    java.lang.String getSymbol() -> getSymbol
    void setSymbol(java.lang.String) -> setSymbol
    void setContext(android.content.Context) -> setContext
    com.dkhs.portfolio.bean.SelectStockBean getmStockBean() -> getmStockBean
    void setmStockBean(com.dkhs.portfolio.bean.SelectStockBean) -> setmStockBean
    int getType() -> getType
    void setType(int) -> setType
    com.dkhs.portfolio.ui.widget.StockViewCallBack getCallBack() -> getCallBack
    void setCallBack(com.dkhs.portfolio.ui.widget.StockViewCallBack) -> setCallBack
    boolean access$000(com.dkhs.portfolio.ui.widget.kline.KChartsView) -> access$000
    float access$102(com.dkhs.portfolio.ui.widget.kline.KChartsView,float) -> access$102
    double access$200(com.dkhs.portfolio.ui.widget.kline.KChartsView) -> access$200
    java.util.List access$300(com.dkhs.portfolio.ui.widget.kline.KChartsView) -> access$300
    float access$402(com.dkhs.portfolio.ui.widget.kline.KChartsView,float) -> access$402
    boolean access$502(com.dkhs.portfolio.ui.widget.kline.KChartsView,boolean) -> access$502
    void access$600(com.dkhs.portfolio.ui.widget.kline.KChartsView) -> access$600
com.dkhs.portfolio.ui.widget.kline.KChartsView$1 -> com.dkhs.portfolio.ui.widget.kline.KChartsView$1:
    android.view.MotionEvent val$event -> val$event
    com.dkhs.portfolio.ui.widget.kline.KChartsView this$0 -> this$0
    void run() -> run
com.dkhs.portfolio.ui.widget.kline.KChartsView$DisplayDataChangeListener -> com.dkhs.portfolio.ui.widget.kline.KChartsView$DisplayDataChangeListener:
    void onDisplayDataChange(java.util.List) -> onDisplayDataChange
com.dkhs.portfolio.ui.widget.kline.KDJEntity -> com.dkhs.portfolio.ui.widget.kline.KDJEntity:
    java.util.ArrayList Ks -> Ks
    java.util.ArrayList Ds -> Ds
    java.util.ArrayList Js -> Js
    java.util.ArrayList getK() -> getK
    java.util.ArrayList getD() -> getD
    java.util.ArrayList getJ() -> getJ
com.dkhs.portfolio.ui.widget.kline.MACDEntity -> com.dkhs.portfolio.ui.widget.kline.MACDEntity:
    java.util.List DEAs -> DEAs
    java.util.List DIFs -> DIFs
    java.util.List MACDs -> MACDs
    java.util.List getDEA() -> getDEA
    java.util.List getDIF() -> getDIF
    java.util.List getMACD() -> getMACD
com.dkhs.portfolio.ui.widget.kline.MALineEntity -> com.dkhs.portfolio.ui.widget.kline.MALineEntity:
    java.util.List lineData -> lineData
    java.lang.String title -> title
    int lineColor -> lineColor
    java.util.List getLineData() -> getLineData
    void setLineData(java.util.List) -> setLineData
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getLineColor() -> getLineColor
    void setLineColor(int) -> setLineColor
com.dkhs.portfolio.ui.widget.kline.OHLCEntity -> com.dkhs.portfolio.ui.widget.kline.OHLCEntity:
    double volume -> volume
    double open -> open
    double high -> high
    double low -> low
    double close -> close
    java.lang.String date -> date
    double change -> change
    double percentage -> percentage
    double macd -> macd
    double diff -> diff
    double dea -> dea
    double ma5 -> ma5
    double ma10 -> ma10
    double ma20 -> ma20
    double ma30 -> ma30
    double vol5 -> vol5
    double vol10 -> vol10
    double vol20 -> vol20
    java.lang.String info -> info
    double getChange() -> getChange
    void setChange(double) -> setChange
    double getPercentage() -> getPercentage
    void setPercentage(double) -> setPercentage
    boolean isup() -> isup
    double getOpen() -> getOpen
    void setOpen(double) -> setOpen
    double getHigh() -> getHigh
    void setHigh(double) -> setHigh
    double getLow() -> getLow
    void setLow(double) -> setLow
    double getClose() -> getClose
    void setClose(double) -> setClose
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    double getVolume() -> getVolume
    void setVolume(double) -> setVolume
    double getMacd() -> getMacd
    void setMacd(double) -> setMacd
    double getDiff() -> getDiff
    void setDiff(double) -> setDiff
    double getDea() -> getDea
    void setDea(double) -> setDea
    java.lang.String getInfo() -> getInfo
    void setInfo(java.lang.String) -> setInfo
    double getMa5() -> getMa5
    void setMa5(double) -> setMa5
    double getMa10() -> getMa10
    void setMa10(double) -> setMa10
    double getMa20() -> getMa20
    void setMa20(double) -> setMa20
    double getMa30() -> getMa30
    void setMa30(double) -> setMa30
    double getVol5() -> getVol5
    void setVol5(double) -> setVol5
    double getVol10() -> getVol10
    void setVol10(double) -> setVol10
    double getVol20() -> getVol20
    void setVol20(double) -> setVol20
com.dkhs.portfolio.ui.widget.kline.PageOHLCEntity -> com.dkhs.portfolio.ui.widget.kline.PageOHLCEntity:
    int totalCount -> totalCount
    int page -> page
    java.util.List results -> results
    int getTotalCount() -> getTotalCount
    void setTotalCount(int) -> setTotalCount
    int getPage() -> getPage
    void setPage(int) -> setPage
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
com.dkhs.portfolio.ui.widget.kline.RSIEntity -> com.dkhs.portfolio.ui.widget.kline.RSIEntity:
com.dkhs.portfolio.ui.widget.kline.TimesEntity -> com.dkhs.portfolio.ui.widget.kline.TimesEntity:
    java.lang.String time -> time
    double weightedIndex -> weightedIndex
    double nonWeightedIndex -> nonWeightedIndex
    int buy -> buy
    int sell -> sell
    int volume -> volume
    float buyRatio -> buyRatio
    float sellRatio -> sellRatio
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getWeightedIndex() -> getWeightedIndex
    void setWeightedIndex(double) -> setWeightedIndex
    double getNonWeightedIndex() -> getNonWeightedIndex
    void setNonWeightedIndex(double) -> setNonWeightedIndex
    int getBuy() -> getBuy
    void setBuy(int) -> setBuy
    int getSell() -> getSell
    void setSell(int) -> setSell
    int getVolume() -> getVolume
    void setVolume(int) -> setVolume
    float getBuyRatio() -> getBuyRatio
    void setBuyRatio(float) -> setBuyRatio
    float getSellRatio() -> getSellRatio
    void setSellRatio(float) -> setSellRatio
com.dkhs.portfolio.ui.widget.kline.TimesView -> com.dkhs.portfolio.ui.widget.kline.TimesView:
    int DATA_MAX_COUNT -> DATA_MAX_COUNT
    java.util.List timesList -> timesList
    float uperBottom -> uperBottom
    float uperHeight -> uperHeight
    float lowerBottom -> lowerBottom
    float lowerHeight -> lowerHeight
    float dataSpacing -> dataSpacing
    double initialWeightedIndex -> initialWeightedIndex
    float uperHalfHigh -> uperHalfHigh
    float lowerHigh -> lowerHigh
    float uperRate -> uperRate
    float lowerRate -> lowerRate
    boolean showDetails -> showDetails
    float touchX -> touchX
    void init() -> init
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDetails(android.graphics.Canvas) -> drawDetails
    void drawTitles(android.graphics.Canvas) -> drawTitles
    void drawLines(android.graphics.Canvas) -> drawLines
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setTimesList(java.util.List) -> setTimesList
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapter -> com.dkhs.portfolio.ui.widget.stickygridheaders.a:
    int getCountForHeader(int) -> a
    int getNumHeaders() -> a
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper:
    android.content.Context mContext -> a
    int mCount -> b
    boolean mCounted -> c
    android.database.DataSetObserver mDataSetObserver -> d
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapter mDelegate -> e
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView mGridView -> f
    android.view.View mLastHeaderViewSeen -> g
    android.view.View mLastViewSeen -> h
    int mNumColumns -> i
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void setNumColumns(int) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$FillerView getFillerView(android.view.View,android.view.ViewGroup,android.view.View) -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$HeaderFillerView getHeaderFillerView(int,android.view.View,android.view.ViewGroup) -> b
    int unFilledSpacesInHeaderGroup(int) -> d
    long getHeaderId(int) -> b
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$Position translatePosition(int) -> c
    void updateCount() -> a
    boolean access$002(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper,boolean) -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView access$100(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper) -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$1 -> com.dkhs.portfolio.ui.widget.stickygridheaders.b:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$FillerView -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$FillerView:
    android.view.View mMeasureTarget -> b
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper this$0 -> a
    void setMeasureTarget(android.view.View) -> setMeasureTarget
    void onMeasure(int,int) -> onMeasure
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$HeaderFillerView -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$HeaderFillerView:
    int mHeaderId -> b
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper this$0 -> a
    int getHeaderId() -> getHeaderId
    void setHeaderId(int) -> setHeaderId
    android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onMeasure(int,int) -> onMeasure
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$Position -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$a:
    int mHeader -> a
    int mPosition -> b
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper this$0 -> c
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView:
    java.lang.String ERROR_PLATFORM -> i
    java.lang.String TAG -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$CheckForHeaderLongPress mPendingCheckForLongPress -> b
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$CheckForHeaderTap mPendingCheckForTap -> c
    boolean mAreHeadersSticky -> j
    android.graphics.Rect mClippingRect -> k
    boolean mClippingToPadding -> l
    boolean mClipToPaddingHasBeenSet -> m
    int mColumnWidth -> n
    long mCurrentHeaderId -> o
    android.database.DataSetObserver mDataSetObserver -> p
    int mHeaderBottomPosition -> q
    boolean mHeadersIgnorePadding -> r
    int mHorizontalSpacing -> s
    boolean mMaskStickyHeaderRegion -> t
    float mMotionY -> u
    int mNumColumns -> v
    boolean mNumColumnsSet -> w
    int mNumMeasuredColumns -> x
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$OnHeaderClickListener mOnHeaderClickListener -> y
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$OnHeaderLongClickListener mOnHeaderLongClickListener -> z
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> A
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> B
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> C
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$PerformHeaderClick mPerformHeaderClick -> D
    android.widget.AbsListView$OnScrollListener mScrollListener -> E
    int mScrollState -> F
    android.view.View mStickiedHeader -> G
    java.lang.Runnable mTouchModeReset -> H
    int mTouchSlop -> I
    int mVerticalSpacing -> J
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper mAdapter -> d
    boolean mDataChanged -> e
    int mMotionHeaderPosition -> f
    int mTouchMode -> g
    boolean mHeaderChildBeingPressed -> h
    android.view.MotionEvent$PointerCoords[] getPointerCoords(android.view.MotionEvent) -> a
    int[] getPointerIds(android.view.MotionEvent) -> b
    android.view.View getHeaderAt(int) -> a
    android.view.View getStickiedHeader() -> getStickiedHeader
    boolean getStickyHeaderIsTranscluent() -> getStickyHeaderIsTranscluent
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performHeaderClick(android.view.View,long) -> a
    boolean performHeaderLongPress(android.view.View,long) -> b
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setAreHeadersSticky(boolean) -> setAreHeadersSticky
    void setClipToPadding(boolean) -> setClipToPadding
    void setColumnWidth(int) -> setColumnWidth
    void setHeadersIgnorePadding(boolean) -> setHeadersIgnorePadding
    void setHorizontalSpacing(int) -> setHorizontalSpacing
    void setNumColumns(int) -> setNumColumns
    void setOnHeaderClickListener(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$OnHeaderClickListener) -> setOnHeaderClickListener
    void setOnHeaderLongClickListener(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$OnHeaderLongClickListener) -> setOnHeaderLongClickListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setStickyHeaderIsTranscluent(boolean) -> setStickyHeaderIsTranscluent
    void setVerticalSpacing(int) -> setVerticalSpacing
    int findMotionHeader(float) -> a
    int getHeaderHeight() -> getHeaderHeight
    long headerViewPositionToId(int) -> b
    void measureHeader() -> b
    void reset() -> c
    void scrollChanged(int) -> c
    void swapStickiedHeader(android.view.View) -> c
    android.view.MotionEvent transformEvent(android.view.MotionEvent,int) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void attachHeader(android.view.View) -> a
    void detachHeader(android.view.View) -> b
    void setAdapter(android.widget.Adapter) -> setAdapter
    void access$000(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView) -> a
    java.lang.Runnable access$202(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView,java.lang.Runnable) -> a
    long access$400(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView,int) -> a
    int access$500(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView) -> b
    int access$600(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView) -> c
    java.lang.String access$800() -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$1 -> com.dkhs.portfolio.ui.widget.stickygridheaders.c:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$2 -> com.dkhs.portfolio.ui.widget.stickygridheaders.d:
    android.view.View val$headerHolder -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> b
    void run() -> run
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$3 -> com.dkhs.portfolio.ui.widget.stickygridheaders.e:
    android.view.View val$header -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$PerformHeaderClick val$performHeaderClick -> b
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> c
    void run() -> run
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$CheckForHeaderLongPress -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$a:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$CheckForHeaderTap -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$b:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> a
    void run() -> run
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$OnHeaderClickListener -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$c:
    void onHeaderClick(android.widget.AdapterView,android.view.View,long) -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$OnHeaderLongClickListener -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$d:
    boolean onHeaderLongClick(android.widget.AdapterView,android.view.View,long) -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$PerformHeaderClick -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$e:
    int mClickMotionPosition -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> b
    void run() -> run
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$RuntimePlatformSupportException -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$f:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$SavedState -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$SavedState:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean areHeadersSticky -> a
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$SavedState$1 -> com.dkhs.portfolio.ui.widget.stickygridheaders.f:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$SavedState createFromParcel(android.os.Parcel) -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$WindowRunnable -> com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView$g:
    int mOriginalAttachCount -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersGridView this$0 -> c
    void rememberWindowAttachCount() -> a
    boolean sameWindow() -> b
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersListAdapterWrapper -> com.dkhs.portfolio.ui.widget.stickygridheaders.g:
    android.database.DataSetObserver mDataSetObserver -> a
    android.widget.ListAdapter mDelegate -> b
    int getCount() -> getCount
    int getCountForHeader(int) -> a
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getNumHeaders() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersListAdapterWrapper$1 -> com.dkhs.portfolio.ui.widget.stickygridheaders.h:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersListAdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapter -> com.dkhs.portfolio.ui.widget.stickygridheaders.i:
    long getHeaderId(int) -> a
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper -> com.dkhs.portfolio.ui.widget.stickygridheaders.j:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapter mDelegate -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper$HeaderData[] mHeaders -> b
    int getCount() -> getCount
    int getCountForHeader(int) -> a
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getNumHeaders() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper$HeaderData[] generateHeaderList(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapter) -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper$HeaderData[] access$102(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper,com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper$HeaderData[]) -> a
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapter access$200(com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper) -> a
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper$1 -> com.dkhs.portfolio.ui.widget.stickygridheaders.j$1:
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper$DataSetObserverExtension -> com.dkhs.portfolio.ui.widget.stickygridheaders.j$a:
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper$HeaderData -> com.dkhs.portfolio.ui.widget.stickygridheaders.j$b:
    int mCount -> b
    int mRefPosition -> c
    com.dkhs.portfolio.ui.widget.stickygridheaders.StickyGridHeadersSimpleAdapterWrapper this$0 -> a
    int getCount() -> a
    int getRefPosition() -> b
    void incrementCount() -> c
com.dkhs.portfolio.utils.AnimationHelper -> com.dkhs.portfolio.d.a:
    int ANIM_DURATION -> a
    void setupCustomAnimations(android.animation.LayoutTransition,java.lang.Object) -> a
    void showScale(android.view.View) -> a
    void dismissScale(android.view.View) -> b
    void translationToTopDismiss(android.view.View,android.animation.Animator$AnimatorListener) -> a
    void translationFromTopShow(android.view.View,android.animation.Animator$AnimatorListener) -> b
    void alphaShow(android.view.View) -> c
    void alphaDismiss(android.view.View) -> d
    void expandView(android.view.View,int,boolean,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.nineoldandroids.animation.ValueAnimator expandViewAnim(android.view.View,int) -> a
    void collapseView(android.view.View,boolean,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.nineoldandroids.animation.ValueAnimator collapseAnim(android.view.View) -> e
com.dkhs.portfolio.utils.AnimationHelper$1 -> com.dkhs.portfolio.d.b:
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.dkhs.portfolio.utils.AnimationHelper$2 -> com.dkhs.portfolio.d.c:
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.dkhs.portfolio.utils.AnimationHelper$3 -> com.dkhs.portfolio.d.d:
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.dkhs.portfolio.utils.AnimationHelper$4 -> com.dkhs.portfolio.d.e:
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.dkhs.portfolio.utils.AnimationHelper$5 -> com.dkhs.portfolio.d.f:
    android.view.View val$view -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.dkhs.portfolio.utils.AnimationHelper$6 -> com.dkhs.portfolio.d.g:
    android.view.View val$view -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.dkhs.portfolio.utils.AnimationHelper$7 -> com.dkhs.portfolio.d.h:
    android.view.View val$view -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.dkhs.portfolio.utils.AnimationHelper$8 -> com.dkhs.portfolio.d.i:
    android.view.View val$v -> a
    int val$initialHeight -> b
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.dkhs.portfolio.utils.AnimationHelper$9 -> com.dkhs.portfolio.d.j:
    android.view.View val$v -> a
    int val$initialHeight -> b
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.dkhs.portfolio.utils.ChannelUtil -> com.dkhs.portfolio.d.k:
    java.lang.String mChannel -> a
    java.lang.String getChannel(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context,java.lang.String) -> a
    java.lang.String getChannelFromApk(android.content.Context,java.lang.String) -> b
    void saveChannelBySharedPreferences(android.content.Context,java.lang.String) -> c
    java.lang.String getChannelBySharedPreferences(android.content.Context) -> b
    int getVersionCode(android.content.Context) -> c
com.dkhs.portfolio.utils.ColorTemplate -> com.dkhs.portfolio.d.l:
    int[] DEFAULTCOLORS -> a
    int[] COMPARE -> b
    int MY_COMBINATION_LINE -> c
    int DEF_RED -> d
    int DEF_GREEN -> e
    int DEF_GRAY -> f
    int THEME_COLOR -> g
    int getRaddomColor() -> a
    int getDefaultColor(int) -> a
    int getDefaultColors(int) -> b
    android.content.res.ColorStateList getTextColor(float,float) -> a
    android.content.res.ColorStateList getTextColor(int) -> c
    android.content.res.ColorStateList getUpOrDrownCSL(float) -> a
    int getUpOrDrowBgColor(float) -> b
com.dkhs.portfolio.utils.DES -> com.dkhs.portfolio.d.m:
    java.security.Key key -> a
    javax.crypto.Cipher cipher -> b
    com.dkhs.portfolio.utils.DES getInstance(java.lang.String) -> a
    com.dkhs.portfolio.utils.DES getInstance(byte[]) -> a
    byte[] encrypt(byte[]) -> b
    byte[] decrypt(byte[]) -> c
    byte[] getKeyByStr(java.lang.String) -> b
    int getChrInt(char) -> a
    java.lang.String encrypt(java.lang.String,java.lang.String) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> b
com.dkhs.portfolio.utils.DataBaseUtil -> com.dkhs.portfolio.d.n:
    android.content.Context context -> b
    java.lang.String dbName -> a
    java.lang.String DATABASE_PATH -> c
    boolean checkDataBase() -> a
    void copyDataBase() -> b
com.dkhs.portfolio.utils.ImageLoaderUtils -> com.dkhs.portfolio.d.o:
    void initImageLoader(android.content.Context) -> a
    void setRoundedImage(java.lang.String,android.widget.ImageView) -> a
    void setImage(java.lang.String,android.widget.ImageView) -> b
    void setRoundedImage(java.lang.String,android.widget.ImageView,int,int) -> a
    void setHeanderImage(java.lang.String,android.widget.ImageView) -> c
com.dkhs.portfolio.utils.NetUtil -> com.dkhs.portfolio.d.p:
    android.net.Uri PREFERRED_APN_URI -> a
    boolean checkNetWork() -> a
    boolean isMOBILEConnectivity(android.content.Context) -> a
    boolean isWIFIConnectivity(android.content.Context) -> b
com.dkhs.portfolio.utils.PhoneInfo -> com.dkhs.portfolio.d.q:
    boolean hasInstallApp(android.content.Context,java.lang.String) -> a
    boolean hasInstallWechat() -> a
com.dkhs.portfolio.utils.PortfolioPreferenceManager -> com.dkhs.portfolio.d.r:
    android.content.SharedPreferences getSharePreferences() -> a
    android.content.SharedPreferences$Editor getSharePreferencesEditor() -> b
    java.lang.String getStringValue(java.lang.String) -> a
    int getIntValue(java.lang.String) -> b
    boolean getBooleanValue(java.lang.String) -> c
    void saveValue(java.lang.String,java.lang.String) -> a
    void saveValue(java.lang.String,boolean) -> a
    void saveValue(java.lang.String,int) -> a
    boolean hasLoadSearchStock() -> c
    void setLoadSearchStock() -> d
com.dkhs.portfolio.utils.PromptManager -> com.dkhs.portfolio.d.s:
    android.app.Dialog dialog -> a
    android.widget.Toast mToast -> b
    void showProgressDialog(android.content.Context,java.lang.String) -> a
    void showProgressDialog(android.content.Context,int) -> a
    void showProgressDialog(android.content.Context,java.lang.String,boolean) -> a
    void closeProgressDialog() -> a
    void showNoNetWork() -> b
    void showToast(java.lang.String,int) -> a
    void showLToast(java.lang.String) -> a
    void showShortToast(java.lang.String) -> b
    void showShortToast(int) -> a
    void showToast(int) -> b
    void showToast(java.lang.String) -> c
    void showEditSuccessToast() -> c
    void showFollowToast() -> d
    void showDelFollowToast() -> e
    void showSuccessToast(int) -> c
    void showCancelToast(int) -> d
    void showCustomToast(int,int) -> a
    com.dkhs.portfolio.ui.widget.MAlertDialog getAlertDialog(android.content.Context) -> a
com.dkhs.portfolio.utils.SIMCardInfo -> com.dkhs.portfolio.d.t:
    android.telephony.TelephonyManager telephonyManager -> a
    java.lang.String IMSI -> b
    java.lang.String getNativePhoneNumber() -> a
    java.lang.String getProvidersName() -> b
    boolean isMobileNO(java.lang.String) -> a
    boolean isEmail(java.lang.String) -> b
com.dkhs.portfolio.utils.StockUitls -> com.dkhs.portfolio.d.u:
    boolean isShangZhengB(java.lang.String) -> a
    boolean isIndexStock(java.lang.String) -> b
    boolean isDelistStock(java.lang.String) -> c
    boolean isNewStock(java.lang.String) -> d
    boolean isSepFund(int) -> a
    boolean isFundType(java.lang.String) -> e
com.dkhs.portfolio.utils.StringFromatUtils -> com.dkhs.portfolio.d.v:
    boolean isEmojiCharacter(char) -> a
    boolean isContainsEmoji(java.lang.String) -> a
    int getStringRealLength(java.lang.String) -> b
    boolean isCN(java.lang.String) -> c
    java.lang.String getPercentValue(float) -> a
    java.lang.String get2PointPercent(float) -> b
    java.lang.String get2PointPercentPlus(float) -> c
    java.lang.String get4Point(float) -> d
    java.lang.String get2Point(float) -> e
    java.lang.String get3Point(float) -> f
    java.lang.String get2PointPlus(float) -> g
    java.lang.String get3PointPlus(float) -> h
    java.lang.String convertToWan(float) -> i
    java.lang.String handleNumber(int) -> a
    java.lang.String convertToWanHand(float) -> j
    java.lang.String dateFormat(long) -> a
com.dkhs.portfolio.utils.TimeUtils -> com.dkhs.portfolio.d.w:
    java.text.SimpleDateFormat[] ACCEPTED_TIMESTAMP_FORMATS -> a
    java.text.SimpleDateFormat VALID_IFMODIFIEDSINCE_FORMAT -> b
    java.text.SimpleDateFormat DEFAULT_DATE_FORMAT -> c
    java.util.Date parseISOTime(java.lang.String) -> a
    java.lang.String getTimeString(java.lang.String) -> b
    java.lang.String getMDTimeString(java.lang.String) -> c
    java.lang.String getHourString(java.lang.String) -> d
    boolean compareTime(java.util.Calendar) -> a
    java.lang.String getTimeString(java.util.Calendar) -> b
    java.lang.String getDateString(java.lang.String) -> e
    java.lang.String getSimpleFormatTime(java.lang.String) -> f
    java.lang.String getSimpleDay(java.lang.String) -> g
    java.util.Calendar toCalendar(java.lang.String) -> h
    java.util.Calendar toCalendarAddHour(java.lang.String) -> i
    java.lang.String addHour(java.lang.String) -> j
    java.util.Calendar simpleDateToCalendar(java.lang.String) -> k
    java.util.Date toDate(java.lang.String) -> l
com.dkhs.portfolio.utils.UIUtils -> com.dkhs.portfolio.d.x:
    long sAppLoadTime -> a
    void setListViewHeightBasedOnChildren(android.widget.ListView) -> a
    android.graphics.Bitmap loadBitmap(android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap toRoundBitmap(android.graphics.Bitmap) -> a
    void drawCircleBorder(android.graphics.Canvas,float,int,float,float) -> a
    android.graphics.Bitmap compressImage(android.graphics.Bitmap) -> b
    android.util.DisplayMetrics getDisplayMetrics() -> a
    android.graphics.Bitmap getimage(java.lang.String) -> a
    boolean roundAble(com.dkhs.portfolio.bean.StockQuotesBean) -> a
    boolean roundAble(int) -> a
    java.lang.String getValue(double) -> a
    java.lang.String nongNet(java.lang.String) -> b
    java.lang.String getshou(double) -> b
    int getTextWidth(java.lang.String,int) -> a
    boolean iStartLoginActivity(android.content.Context) -> a
    void startAminationActivity(android.app.Activity,android.content.Intent) -> a
    void setOverridePendingAmin(android.app.Activity) -> a
    void setOverridePendingSlideFormBottomAmim(android.app.Activity) -> b
    void outAminationActivity(android.app.Activity) -> c
    float dip2px(android.content.Context,float) -> a
com.dkhs.portfolio.utils.UserEntityDesUtil -> com.dkhs.portfolio.d.y:
    com.dkhs.portfolio.bean.UserEntity encrypt(com.dkhs.portfolio.bean.UserEntity) -> a
    com.dkhs.portfolio.bean.UserEntity decrypt(com.dkhs.portfolio.bean.UserEntity) -> b
com.dkhs.portfolio.wxapi.WXEntryActivity -> com.dkhs.portfolio.wxapi.WXEntryActivity:
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    com.google.gson.JsonElement set(int,com.google.gson.JsonElement) -> set
    boolean remove(com.google.gson.JsonElement) -> remove
    com.google.gson.JsonElement remove(int) -> remove
    boolean contains(com.google.gson.JsonElement) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.JsonAdapter -> com.google.gson.annotations.JsonAdapter:
    java.lang.Class value() -> value
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedHashTreeMap -> com.google.gson.internal.LinkedHashTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedHashTreeMap$Node[] table -> table
    com.google.gson.internal.LinkedHashTreeMap$Node header -> header
    int size -> size
    int modCount -> modCount
    int threshold -> threshold
    com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedHashTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int secondaryHash(int) -> secondaryHash
    void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    void doubleCapacity() -> doubleCapacity
    com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> doubleCapacity
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedHashTreeMap$1 -> com.google.gson.internal.LinkedHashTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder -> com.google.gson.internal.LinkedHashTreeMap$AvlBuilder:
    com.google.gson.internal.LinkedHashTreeMap$Node stack -> stack
    int leavesToSkip -> leavesToSkip
    int leavesSkipped -> leavesSkipped
    int size -> size
    void reset(int) -> reset
    void add(com.google.gson.internal.LinkedHashTreeMap$Node) -> add
    com.google.gson.internal.LinkedHashTreeMap$Node root() -> root
com.google.gson.internal.LinkedHashTreeMap$AvlIterator -> com.google.gson.internal.LinkedHashTreeMap$AvlIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node stackTop -> stackTop
    void reset(com.google.gson.internal.LinkedHashTreeMap$Node) -> reset
    com.google.gson.internal.LinkedHashTreeMap$Node next() -> next
com.google.gson.internal.LinkedHashTreeMap$EntrySet -> com.google.gson.internal.LinkedHashTreeMap$EntrySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedHashTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedHashTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$KeySet -> com.google.gson.internal.LinkedHashTreeMap$KeySet:
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedHashTreeMap$KeySet$1 -> com.google.gson.internal.LinkedHashTreeMap$KeySet$1:
    com.google.gson.internal.LinkedHashTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedHashTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedHashTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedHashTreeMap$Node -> com.google.gson.internal.LinkedHashTreeMap$Node:
    com.google.gson.internal.LinkedHashTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedHashTreeMap$Node left -> left
    com.google.gson.internal.LinkedHashTreeMap$Node right -> right
    com.google.gson.internal.LinkedHashTreeMap$Node next -> next
    com.google.gson.internal.LinkedHashTreeMap$Node prev -> prev
    java.lang.Object key -> key
    int hash -> hash
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedHashTreeMap$Node first() -> first
    com.google.gson.internal.LinkedHashTreeMap$Node last() -> last
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    com.google.gson.TypeAdapter getFieldAdapter(com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken) -> getFieldAdapter
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
    com.google.gson.TypeAdapter access$100(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Field,com.google.gson.reflect.TypeToken) -> access$100
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    java.lang.reflect.Field val$field -> val$field
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    java.lang.String getPath() -> getPath
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.BitmapUtils -> com.lidroid.xutils.BitmapUtils:
    boolean pauseTask -> pauseTask
    boolean cancelAllTask -> cancelAllTask
    java.lang.Object pauseTaskLock -> pauseTaskLock
    android.content.Context context -> context
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig -> defaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.drawable.Drawable) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(int) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.Bitmap) -> configDefaultLoadingImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.drawable.Drawable) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(int) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.Bitmap) -> configDefaultLoadFailedImage
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(int,int) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> configDefaultBitmapMaxSize
    com.lidroid.xutils.BitmapUtils configDefaultImageLoadAnimation(android.view.animation.Animation) -> configDefaultImageLoadAnimation
    com.lidroid.xutils.BitmapUtils configDefaultAutoRotation(boolean) -> configDefaultAutoRotation
    com.lidroid.xutils.BitmapUtils configDefaultShowOriginal(boolean) -> configDefaultShowOriginal
    com.lidroid.xutils.BitmapUtils configDefaultBitmapConfig(android.graphics.Bitmap$Config) -> configDefaultBitmapConfig
    com.lidroid.xutils.BitmapUtils configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> configDefaultDisplayConfig
    com.lidroid.xutils.BitmapUtils configDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> configDownloader
    com.lidroid.xutils.BitmapUtils configDefaultCacheExpiry(long) -> configDefaultCacheExpiry
    com.lidroid.xutils.BitmapUtils configDefaultConnectTimeout(int) -> configDefaultConnectTimeout
    com.lidroid.xutils.BitmapUtils configDefaultReadTimeout(int) -> configDefaultReadTimeout
    com.lidroid.xutils.BitmapUtils configThreadPoolSize(int) -> configThreadPoolSize
    com.lidroid.xutils.BitmapUtils configMemoryCacheEnabled(boolean) -> configMemoryCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheEnabled(boolean) -> configDiskCacheEnabled
    com.lidroid.xutils.BitmapUtils configDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> configDiskCacheFileNameGenerator
    com.lidroid.xutils.BitmapUtils configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> configBitmapCacheListener
    void display(android.view.View,java.lang.String) -> display
    void displayNoEffect(android.view.View,java.lang.String) -> displayNoEffect
    void display(android.view.View,java.lang.String,int,int) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> display
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapTaskFromContainer(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> getBitmapTaskFromContainer
    boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> bitmapLoadTaskExist
    java.lang.Object access$100(com.lidroid.xutils.BitmapUtils) -> access$100
    boolean access$200(com.lidroid.xutils.BitmapUtils) -> access$200
    boolean access$300(com.lidroid.xutils.BitmapUtils) -> access$300
    com.lidroid.xutils.bitmap.BitmapGlobalConfig access$400(com.lidroid.xutils.BitmapUtils) -> access$400
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask access$500(android.view.View,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack) -> access$500
com.lidroid.xutils.BitmapUtils$BitmapLoadTask -> com.lidroid.xutils.BitmapUtils$BitmapLoadTask:
    java.lang.String uri -> uri
    java.lang.ref.WeakReference containerReference -> containerReference
    com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack callBack -> callBack
    com.lidroid.xutils.bitmap.BitmapDisplayConfig displayConfig -> displayConfig
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom from -> from
    int PROGRESS_LOAD_STARTED -> PROGRESS_LOAD_STARTED
    int PROGRESS_LOADING -> PROGRESS_LOADING
    com.lidroid.xutils.BitmapUtils this$0 -> this$0
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> doInBackground
    void updateProgress(long,long) -> updateProgress
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    android.view.View getTargetContainer() -> getTargetContainer
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$000(com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> access$000
com.lidroid.xutils.DbUtils -> com.lidroid.xutils.DbUtils:
    java.util.HashMap daoMap -> daoMap
    android.database.sqlite.SQLiteDatabase database -> database
    com.lidroid.xutils.DbUtils$DaoConfig daoConfig -> daoConfig
    boolean debug -> debug
    boolean allowTransaction -> allowTransaction
    java.util.concurrent.locks.Lock writeLock -> writeLock
    boolean writeLocked -> writeLocked
    com.lidroid.xutils.DbUtils$FindTempCache findTempCache -> findTempCache
    com.lidroid.xutils.DbUtils getInstance(com.lidroid.xutils.DbUtils$DaoConfig) -> getInstance
    com.lidroid.xutils.DbUtils create(android.content.Context) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(android.content.Context,java.lang.String,java.lang.String,int,com.lidroid.xutils.DbUtils$DbUpgradeListener) -> create
    com.lidroid.xutils.DbUtils create(com.lidroid.xutils.DbUtils$DaoConfig) -> create
    com.lidroid.xutils.DbUtils configDebug(boolean) -> configDebug
    com.lidroid.xutils.DbUtils configAllowTransaction(boolean) -> configAllowTransaction
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    com.lidroid.xutils.DbUtils$DaoConfig getDaoConfig() -> getDaoConfig
    void saveOrUpdate(java.lang.Object) -> saveOrUpdate
    void saveOrUpdateAll(java.util.List) -> saveOrUpdateAll
    void replace(java.lang.Object) -> replace
    void replaceAll(java.util.List) -> replaceAll
    void save(java.lang.Object) -> save
    void saveAll(java.util.List) -> saveAll
    boolean saveBindingId(java.lang.Object) -> saveBindingId
    void saveBindingIdAll(java.util.List) -> saveBindingIdAll
    void deleteById(java.lang.Class,java.lang.Object) -> deleteById
    void delete(java.lang.Object) -> delete
    void delete(java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> delete
    void deleteAll(java.util.List) -> deleteAll
    void deleteAll(java.lang.Class) -> deleteAll
    void update(java.lang.Object,java.lang.String[]) -> update
    void update(java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> update
    void updateAll(java.util.List,java.lang.String[]) -> updateAll
    void updateAll(java.util.List,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> updateAll
    java.lang.Object findById(java.lang.Class,java.lang.Object) -> findById
    java.lang.Object findFirst(com.lidroid.xutils.db.sqlite.Selector) -> findFirst
    java.lang.Object findFirst(java.lang.Class) -> findFirst
    java.util.List findAll(com.lidroid.xutils.db.sqlite.Selector) -> findAll
    java.util.List findAll(java.lang.Class) -> findAll
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelFirst
    com.lidroid.xutils.db.table.DbModel findDbModelFirst(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelFirst
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.SqlInfo) -> findDbModelAll
    java.util.List findDbModelAll(com.lidroid.xutils.db.sqlite.DbModelSelector) -> findDbModelAll
    long count(com.lidroid.xutils.db.sqlite.Selector) -> count
    long count(java.lang.Class) -> count
    android.database.sqlite.SQLiteDatabase createDatabase(com.lidroid.xutils.DbUtils$DaoConfig) -> createDatabase
    void saveOrUpdateWithoutTransaction(java.lang.Object) -> saveOrUpdateWithoutTransaction
    boolean saveBindingIdWithoutTransaction(java.lang.Object) -> saveBindingIdWithoutTransaction
    long getLastAutoIncrementId(java.lang.String) -> getLastAutoIncrementId
    void createTableIfNotExist(java.lang.Class) -> createTableIfNotExist
    boolean tableIsExist(java.lang.Class) -> tableIsExist
    void dropDb() -> dropDb
    void dropTable(java.lang.Class) -> dropTable
    void close() -> close
    void debugSql(java.lang.String) -> debugSql
    void beginTransaction() -> beginTransaction
    void setTransactionSuccessful() -> setTransactionSuccessful
    void endTransaction() -> endTransaction
    void execNonQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execNonQuery
    void execNonQuery(java.lang.String) -> execNonQuery
    android.database.Cursor execQuery(com.lidroid.xutils.db.sqlite.SqlInfo) -> execQuery
    android.database.Cursor execQuery(java.lang.String) -> execQuery
com.lidroid.xutils.DbUtils$1 -> com.lidroid.xutils.DbUtils$1:
com.lidroid.xutils.DbUtils$DaoConfig -> com.lidroid.xutils.DbUtils$DaoConfig:
    android.content.Context context -> context
    java.lang.String dbName -> dbName
    int dbVersion -> dbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener dbUpgradeListener -> dbUpgradeListener
    java.lang.String dbDir -> dbDir
    android.content.Context getContext() -> getContext
    java.lang.String getDbName() -> getDbName
    void setDbName(java.lang.String) -> setDbName
    int getDbVersion() -> getDbVersion
    void setDbVersion(int) -> setDbVersion
    com.lidroid.xutils.DbUtils$DbUpgradeListener getDbUpgradeListener() -> getDbUpgradeListener
    void setDbUpgradeListener(com.lidroid.xutils.DbUtils$DbUpgradeListener) -> setDbUpgradeListener
    java.lang.String getDbDir() -> getDbDir
    void setDbDir(java.lang.String) -> setDbDir
com.lidroid.xutils.DbUtils$DbUpgradeListener -> com.lidroid.xutils.DbUtils$DbUpgradeListener:
    void onUpgrade(com.lidroid.xutils.DbUtils,int,int) -> onUpgrade
com.lidroid.xutils.DbUtils$FindTempCache -> com.lidroid.xutils.DbUtils$FindTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    com.lidroid.xutils.DbUtils this$0 -> this$0
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.HttpUtils -> com.lidroid.xutils.HttpUtils:
    com.lidroid.xutils.http.HttpCache sHttpCache -> sHttpCache
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String responseTextCharset -> responseTextCharset
    long currentRequestExpiry -> currentRequestExpiry
    int DEFAULT_CONN_TIMEOUT -> DEFAULT_CONN_TIMEOUT
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> EXECUTOR
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.lidroid.xutils.HttpUtils configResponseTextCharset(java.lang.String) -> configResponseTextCharset
    com.lidroid.xutils.HttpUtils configHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> configHttpRedirectHandler
    com.lidroid.xutils.HttpUtils configHttpCacheSize(int) -> configHttpCacheSize
    com.lidroid.xutils.HttpUtils configDefaultHttpCacheExpiry(long) -> configDefaultHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCurrentHttpCacheExpiry(long) -> configCurrentHttpCacheExpiry
    com.lidroid.xutils.HttpUtils configCookieStore(org.apache.http.client.CookieStore) -> configCookieStore
    com.lidroid.xutils.HttpUtils configUserAgent(java.lang.String) -> configUserAgent
    com.lidroid.xutils.HttpUtils configTimeout(int) -> configTimeout
    com.lidroid.xutils.HttpUtils configSoTimeout(int) -> configSoTimeout
    com.lidroid.xutils.HttpUtils configRegisterScheme(org.apache.http.conn.scheme.Scheme) -> configRegisterScheme
    com.lidroid.xutils.HttpUtils configSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> configSSLSocketFactory
    com.lidroid.xutils.HttpUtils configRequestRetryCount(int) -> configRequestRetryCount
    com.lidroid.xutils.HttpUtils configRequestThreadPoolSize(int) -> configRequestThreadPoolSize
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> send
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String) -> sendSync
    com.lidroid.xutils.http.ResponseStream sendSync(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams) -> sendSync
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> download
    com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> sendRequest
    com.lidroid.xutils.http.ResponseStream sendSyncRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams) -> sendSyncRequest
com.lidroid.xutils.HttpUtils$1 -> com.lidroid.xutils.HttpUtils$1:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.lidroid.xutils.HttpUtils$2:
    com.lidroid.xutils.HttpUtils this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.ViewUtils -> com.lidroid.xutils.ViewUtils:
    void inject(android.view.View) -> inject
    void inject(android.app.Activity) -> inject
    void inject(android.preference.PreferenceActivity) -> inject
    void inject(java.lang.Object,android.view.View) -> inject
    void inject(java.lang.Object,android.app.Activity) -> inject
    void inject(java.lang.Object,android.preference.PreferenceGroup) -> inject
    void inject(java.lang.Object,android.preference.PreferenceActivity) -> inject
    void injectObject(java.lang.Object,com.lidroid.xutils.view.ViewFinder) -> injectObject
com.lidroid.xutils.bitmap.BitmapCacheListener -> com.lidroid.xutils.bitmap.BitmapCacheListener:
    void onInitMemoryCacheFinished() -> onInitMemoryCacheFinished
    void onInitDiskFinished() -> onInitDiskFinished
    void onClearCacheFinished() -> onClearCacheFinished
    void onClearMemoryCacheFinished() -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished() -> onClearDiskCacheFinished
    void onClearCacheFinished(java.lang.String) -> onClearCacheFinished
    void onClearMemoryCacheFinished(java.lang.String) -> onClearMemoryCacheFinished
    void onClearDiskCacheFinished(java.lang.String) -> onClearDiskCacheFinished
    void onFlushCacheFinished() -> onFlushCacheFinished
    void onCloseCacheFinished() -> onCloseCacheFinished
com.lidroid.xutils.bitmap.BitmapCommonUtils -> com.lidroid.xutils.bitmap.BitmapCommonUtils:
    com.lidroid.xutils.bitmap.core.BitmapSize screenSize -> screenSize
    com.lidroid.xutils.bitmap.core.BitmapSize getScreenSize(android.content.Context) -> getScreenSize
    com.lidroid.xutils.bitmap.core.BitmapSize optimizeMaxSizeByView(android.view.View,int,int) -> optimizeMaxSizeByView
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
com.lidroid.xutils.bitmap.BitmapDisplayConfig -> com.lidroid.xutils.bitmap.BitmapDisplayConfig:
    com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize -> bitmapMaxSize
    android.view.animation.Animation animation -> animation
    android.graphics.drawable.Drawable loadingDrawable -> loadingDrawable
    android.graphics.drawable.Drawable loadFailedDrawable -> loadFailedDrawable
    boolean autoRotation -> autoRotation
    boolean showOriginal -> showOriginal
    android.graphics.Bitmap$Config bitmapConfig -> bitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory bitmapFactory -> bitmapFactory
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize() -> getBitmapMaxSize
    void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize) -> setBitmapMaxSize
    android.view.animation.Animation getAnimation() -> getAnimation
    void setAnimation(android.view.animation.Animation) -> setAnimation
    android.graphics.drawable.Drawable getLoadingDrawable() -> getLoadingDrawable
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> setLoadingDrawable
    android.graphics.drawable.Drawable getLoadFailedDrawable() -> getLoadFailedDrawable
    void setLoadFailedDrawable(android.graphics.drawable.Drawable) -> setLoadFailedDrawable
    boolean isAutoRotation() -> isAutoRotation
    void setAutoRotation(boolean) -> setAutoRotation
    boolean isShowOriginal() -> isShowOriginal
    void setShowOriginal(boolean) -> setShowOriginal
    android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    void setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    com.lidroid.xutils.bitmap.factory.BitmapFactory getBitmapFactory() -> getBitmapFactory
    void setBitmapFactory(com.lidroid.xutils.bitmap.factory.BitmapFactory) -> setBitmapFactory
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String toString() -> toString
    com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew() -> cloneNew
com.lidroid.xutils.bitmap.BitmapGlobalConfig -> com.lidroid.xutils.bitmap.BitmapGlobalConfig:
    java.lang.String diskCachePath -> diskCachePath
    int MIN_MEMORY_CACHE_SIZE -> MIN_MEMORY_CACHE_SIZE
    int memoryCacheSize -> memoryCacheSize
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int diskCacheSize -> diskCacheSize
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean diskCacheEnabled -> diskCacheEnabled
    com.lidroid.xutils.bitmap.download.Downloader downloader -> downloader
    com.lidroid.xutils.bitmap.core.BitmapCache bitmapCache -> bitmapCache
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    com.lidroid.xutils.task.PriorityExecutor BITMAP_LOAD_EXECUTOR -> BITMAP_LOAD_EXECUTOR
    com.lidroid.xutils.task.PriorityExecutor DISK_CACHE_EXECUTOR -> DISK_CACHE_EXECUTOR
    long defaultCacheExpiry -> defaultCacheExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener bitmapCacheListener -> bitmapCacheListener
    android.content.Context mContext -> mContext
    java.util.HashMap configMap -> configMap
    com.lidroid.xutils.bitmap.BitmapGlobalConfig getInstance(android.content.Context,java.lang.String) -> getInstance
    void initBitmapCache() -> initBitmapCache
    java.lang.String getDiskCachePath() -> getDiskCachePath
    com.lidroid.xutils.bitmap.download.Downloader getDownloader() -> getDownloader
    void setDownloader(com.lidroid.xutils.bitmap.download.Downloader) -> setDownloader
    long getDefaultCacheExpiry() -> getDefaultCacheExpiry
    void setDefaultCacheExpiry(long) -> setDefaultCacheExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
    com.lidroid.xutils.bitmap.core.BitmapCache getBitmapCache() -> getBitmapCache
    int getMemoryCacheSize() -> getMemoryCacheSize
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setMemCacheSizePercent(float) -> setMemCacheSizePercent
    int getDiskCacheSize() -> getDiskCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    com.lidroid.xutils.task.PriorityExecutor getBitmapLoadExecutor() -> getBitmapLoadExecutor
    com.lidroid.xutils.task.PriorityExecutor getDiskCacheExecutor() -> getDiskCacheExecutor
    boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    void setMemoryCacheEnabled(boolean) -> setMemoryCacheEnabled
    boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    void setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    com.lidroid.xutils.bitmap.BitmapCacheListener getBitmapCacheListener() -> getBitmapCacheListener
    void setBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener) -> setBitmapCacheListener
    int getMemoryClass() -> getMemoryClass
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flushCache() -> flushCache
    void closeCache() -> closeCache
    com.lidroid.xutils.bitmap.BitmapCacheListener access$100(com.lidroid.xutils.bitmap.BitmapGlobalConfig) -> access$100
com.lidroid.xutils.bitmap.BitmapGlobalConfig$1 -> com.lidroid.xutils.bitmap.BitmapGlobalConfig$1:
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask -> com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask:
    int MESSAGE_INIT_MEMORY_CACHE -> MESSAGE_INIT_MEMORY_CACHE
    int MESSAGE_INIT_DISK_CACHE -> MESSAGE_INIT_DISK_CACHE
    int MESSAGE_FLUSH -> MESSAGE_FLUSH
    int MESSAGE_CLOSE -> MESSAGE_CLOSE
    int MESSAGE_CLEAR -> MESSAGE_CLEAR
    int MESSAGE_CLEAR_MEMORY -> MESSAGE_CLEAR_MEMORY
    int MESSAGE_CLEAR_DISK -> MESSAGE_CLEAR_DISK
    int MESSAGE_CLEAR_BY_KEY -> MESSAGE_CLEAR_BY_KEY
    int MESSAGE_CLEAR_MEMORY_BY_KEY -> MESSAGE_CLEAR_MEMORY_BY_KEY
    int MESSAGE_CLEAR_DISK_BY_KEY -> MESSAGE_CLEAR_DISK_BY_KEY
    com.lidroid.xutils.bitmap.BitmapGlobalConfig this$0 -> this$0
    java.lang.Object[] doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.bitmap.PauseOnScrollListener -> com.lidroid.xutils.bitmap.PauseOnScrollListener:
    com.lidroid.xutils.task.TaskHandler taskHandler -> taskHandler
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack:
    com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter -> bitmapSetter
    void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onPreLoad
    void onLoadStarted(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> onLoadStarted
    void onLoading(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,long,long) -> onLoading
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter) -> setBitmapSetter
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.BitmapLoadFrom -> com.lidroid.xutils.bitmap.callback.BitmapLoadFrom:
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom MEMORY_CACHE -> MEMORY_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom DISK_CACHE -> DISK_CACHE
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom URI -> URI
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] $VALUES -> $VALUES
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom[] values() -> values
    com.lidroid.xutils.bitmap.callback.BitmapLoadFrom valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.bitmap.callback.BitmapSetter -> com.lidroid.xutils.bitmap.callback.BitmapSetter:
    void setBitmap(android.view.View,android.graphics.Bitmap) -> setBitmap
    void setDrawable(android.view.View,android.graphics.drawable.Drawable) -> setDrawable
    android.graphics.drawable.Drawable getDrawable(android.view.View) -> getDrawable
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack -> com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack:
    void onLoadCompleted(android.view.View,java.lang.String,android.graphics.Bitmap,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadFrom) -> onLoadCompleted
    void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable) -> onLoadFailed
    void animationDisplay(android.view.View,android.view.animation.Animation) -> animationDisplay
com.lidroid.xutils.bitmap.core.AsyncDrawable -> com.lidroid.xutils.bitmap.core.AsyncDrawable:
    java.lang.ref.WeakReference bitmapLoadTaskReference -> bitmapLoadTaskReference
    android.graphics.drawable.Drawable baseDrawable -> baseDrawable
    com.lidroid.xutils.BitmapUtils$BitmapLoadTask getBitmapWorkerTask() -> getBitmapWorkerTask
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
    void setBounds(int,int,int,int) -> setBounds
    void setBounds(android.graphics.Rect) -> setBounds
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void invalidateSelf() -> invalidateSelf
    void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
com.lidroid.xutils.bitmap.core.BitmapCache -> com.lidroid.xutils.bitmap.core.BitmapCache:
    int DISK_CACHE_INDEX -> DISK_CACHE_INDEX
    com.lidroid.xutils.cache.LruDiskCache mDiskLruCache -> mDiskLruCache
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    java.lang.Object mDiskCacheLock -> mDiskCacheLock
    com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig -> globalConfig
    void initMemoryCache() -> initMemoryCache
    void initDiskCache() -> initDiskCache
    void setMemoryCacheSize(int) -> setMemoryCacheSize
    void setDiskCacheSize(int) -> setDiskCacheSize
    void setDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setDiskCacheFileNameGenerator
    android.graphics.Bitmap downloadBitmap(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadBitmap
    android.graphics.Bitmap addBitmapToMemoryCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap,long) -> addBitmapToMemoryCache
    android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromMemCache
    java.io.File getBitmapFileFromDiskCache(java.lang.String) -> getBitmapFileFromDiskCache
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> getBitmapFromDiskCache
    void clearCache() -> clearCache
    void clearMemoryCache() -> clearMemoryCache
    void clearDiskCache() -> clearDiskCache
    void clearCache(java.lang.String) -> clearCache
    void clearMemoryCache(java.lang.String) -> clearMemoryCache
    void clearDiskCache(java.lang.String) -> clearDiskCache
    void flush() -> flush
    void close() -> close
    android.graphics.Bitmap decodeBitmapMeta(com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta,com.lidroid.xutils.bitmap.BitmapDisplayConfig) -> decodeBitmapMeta
    android.graphics.Bitmap rotateBitmapIfNeeded(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,android.graphics.Bitmap) -> rotateBitmapIfNeeded
com.lidroid.xutils.bitmap.core.BitmapCache$1 -> com.lidroid.xutils.bitmap.core.BitmapCache$1:
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    int sizeOf(com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta -> com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta:
    java.io.FileInputStream inputStream -> inputStream
    byte[] data -> data
    long expiryTimestamp -> expiryTimestamp
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey -> com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey:
    java.lang.String uri -> uri
    java.lang.String subKey -> subKey
    com.lidroid.xutils.bitmap.core.BitmapCache this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.bitmap.core.BitmapDecoder -> com.lidroid.xutils.bitmap.core.BitmapDecoder:
    java.lang.Object lock -> lock
    android.graphics.Bitmap decodeSampledBitmapFromResource(android.content.res.Resources,int,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromResource
    android.graphics.Bitmap decodeSampledBitmapFromFile(java.lang.String,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromFile
    android.graphics.Bitmap decodeSampledBitmapFromDescriptor(java.io.FileDescriptor,com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromDescriptor
    android.graphics.Bitmap decodeSampledBitmapFromByteArray(byte[],com.lidroid.xutils.bitmap.core.BitmapSize,android.graphics.Bitmap$Config) -> decodeSampledBitmapFromByteArray
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int) -> decodeResource
    android.graphics.Bitmap decodeFile(java.lang.String) -> decodeFile
    android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor) -> decodeFileDescriptor
    android.graphics.Bitmap decodeByteArray(byte[]) -> decodeByteArray
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> calculateInSampleSize
com.lidroid.xutils.bitmap.core.BitmapSize -> com.lidroid.xutils.bitmap.core.BitmapSize:
    com.lidroid.xutils.bitmap.core.BitmapSize ZERO -> ZERO
    int width -> width
    int height -> height
    com.lidroid.xutils.bitmap.core.BitmapSize scaleDown(int) -> scaleDown
    com.lidroid.xutils.bitmap.core.BitmapSize scale(float) -> scale
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.lang.String toString() -> toString
com.lidroid.xutils.bitmap.download.DefaultDownloader -> com.lidroid.xutils.bitmap.download.DefaultDownloader:
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
com.lidroid.xutils.bitmap.download.Downloader -> com.lidroid.xutils.bitmap.download.Downloader:
    android.content.Context context -> context
    long defaultExpiry -> defaultExpiry
    int defaultConnectTimeout -> defaultConnectTimeout
    int defaultReadTimeout -> defaultReadTimeout
    long downloadToStream(java.lang.String,java.io.OutputStream,com.lidroid.xutils.BitmapUtils$BitmapLoadTask) -> downloadToStream
    android.content.Context getContext() -> getContext
    void setContext(android.content.Context) -> setContext
    void setDefaultExpiry(long) -> setDefaultExpiry
    long getDefaultExpiry() -> getDefaultExpiry
    int getDefaultConnectTimeout() -> getDefaultConnectTimeout
    void setDefaultConnectTimeout(int) -> setDefaultConnectTimeout
    int getDefaultReadTimeout() -> getDefaultReadTimeout
    void setDefaultReadTimeout(int) -> setDefaultReadTimeout
com.lidroid.xutils.bitmap.factory.BitmapFactory -> com.lidroid.xutils.bitmap.factory.BitmapFactory:
    com.lidroid.xutils.bitmap.factory.BitmapFactory cloneNew() -> cloneNew
    android.graphics.Bitmap createBitmap(android.graphics.Bitmap) -> createBitmap
com.lidroid.xutils.cache.FileNameGenerator -> com.lidroid.xutils.cache.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.lidroid.xutils.cache.KeyExpiryMap -> com.lidroid.xutils.cache.KeyExpiryMap:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    java.lang.Long get(java.lang.Object) -> get
    java.lang.Long put(java.lang.Object,java.lang.Long) -> put
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
com.lidroid.xutils.cache.LruDiskCache -> com.lidroid.xutils.cache.LruDiskCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION -> VERSION
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    char CLEAN -> CLEAN
    char UPDATE -> UPDATE
    char DELETE -> DELETE
    char READ -> READ
    char EXPIRY_PREFIX -> EXPIRY_PREFIX
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int valueCount -> valueCount
    long size -> size
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.lidroid.xutils.cache.FileNameGenerator fileNameGenerator -> fileNameGenerator
    com.lidroid.xutils.cache.LruDiskCache open(java.io.File,int,int,long) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    long getExpiryTimestamp(java.lang.String) -> getExpiryTimestamp
    java.io.File getCacheFile(java.lang.String,int) -> getCacheFile
    com.lidroid.xutils.cache.LruDiskCache$Snapshot get(java.lang.String) -> get
    com.lidroid.xutils.cache.LruDiskCache$Snapshot getByDiskKey(java.lang.String) -> getByDiskKey
    com.lidroid.xutils.cache.LruDiskCache$Editor edit(java.lang.String) -> edit
    com.lidroid.xutils.cache.LruDiskCache$Editor editByDiskKey(java.lang.String,long) -> editByDiskKey
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    void completeEdit(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean removeByDiskKey(java.lang.String) -> removeByDiskKey
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void delete() -> delete
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    com.lidroid.xutils.cache.FileNameGenerator getFileNameGenerator() -> getFileNameGenerator
    void setFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator) -> setFileNameGenerator
    java.io.Writer access$000(com.lidroid.xutils.cache.LruDiskCache) -> access$000
    void access$100(com.lidroid.xutils.cache.LruDiskCache) -> access$100
    boolean access$200(com.lidroid.xutils.cache.LruDiskCache) -> access$200
    void access$300(com.lidroid.xutils.cache.LruDiskCache) -> access$300
    int access$402(com.lidroid.xutils.cache.LruDiskCache,int) -> access$402
    com.lidroid.xutils.cache.LruDiskCache$Editor access$1700(com.lidroid.xutils.cache.LruDiskCache,java.lang.String,long) -> access$1700
    java.lang.String access$1800(java.io.InputStream) -> access$1800
    int access$1900(com.lidroid.xutils.cache.LruDiskCache) -> access$1900
    java.io.File access$2000(com.lidroid.xutils.cache.LruDiskCache) -> access$2000
    java.io.OutputStream access$2100() -> access$2100
    void access$2300(com.lidroid.xutils.cache.LruDiskCache,com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$2300
    boolean access$2400(com.lidroid.xutils.cache.LruDiskCache,java.lang.String) -> access$2400
com.lidroid.xutils.cache.LruDiskCache$1 -> com.lidroid.xutils.cache.LruDiskCache$1:
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.lidroid.xutils.cache.LruDiskCache$2 -> com.lidroid.xutils.cache.LruDiskCache$2:
    void write(int) -> write
com.lidroid.xutils.cache.LruDiskCache$Editor -> com.lidroid.xutils.cache.LruDiskCache$Editor:
    com.lidroid.xutils.cache.LruDiskCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void setEntryExpiryTimestamp(long) -> setEntryExpiryTimestamp
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    com.lidroid.xutils.cache.LruDiskCache$Entry access$1500(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$1500
    boolean[] access$1600(com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$1600
    boolean access$2502(com.lidroid.xutils.cache.LruDiskCache$Editor,boolean) -> access$2502
com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream -> com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream:
    com.lidroid.xutils.cache.LruDiskCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.lidroid.xutils.cache.LruDiskCache$Entry -> com.lidroid.xutils.cache.LruDiskCache$Entry:
    java.lang.String diskKey -> diskKey
    long expiryTimestamp -> expiryTimestamp
    long[] lengths -> lengths
    boolean readable -> readable
    com.lidroid.xutils.cache.LruDiskCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[],int) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$602(com.lidroid.xutils.cache.LruDiskCache$Entry,boolean) -> access$602
    com.lidroid.xutils.cache.LruDiskCache$Editor access$702(com.lidroid.xutils.cache.LruDiskCache$Entry,com.lidroid.xutils.cache.LruDiskCache$Editor) -> access$702
    long access$802(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$802
    void access$900(com.lidroid.xutils.cache.LruDiskCache$Entry,java.lang.String[],int) -> access$900
    com.lidroid.xutils.cache.LruDiskCache$Editor access$700(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$700
    long[] access$1100(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$1100
    java.lang.String access$1200(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$1200
    long access$800(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$800
    boolean access$600(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$600
    long access$1300(com.lidroid.xutils.cache.LruDiskCache$Entry) -> access$1300
    long access$1302(com.lidroid.xutils.cache.LruDiskCache$Entry,long) -> access$1302
com.lidroid.xutils.cache.LruDiskCache$Snapshot -> com.lidroid.xutils.cache.LruDiskCache$Snapshot:
    java.lang.String diskKey -> diskKey
    long sequenceNumber -> sequenceNumber
    java.io.FileInputStream[] ins -> ins
    long[] lengths -> lengths
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    com.lidroid.xutils.cache.LruDiskCache$Editor edit() -> edit
    java.io.FileInputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    com.lidroid.xutils.cache.LruDiskCache this$0 -> this$0
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$2600(com.lidroid.xutils.cache.LruDiskCache$StrictLineReader) -> access$2600
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1 -> com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1:
    com.lidroid.xutils.cache.LruDiskCache$StrictLineReader this$1 -> this$1
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.LruMemoryCache -> com.lidroid.xutils.cache.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> keyExpiryMap
    void setMaxSize(int) -> setMaxSize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
com.lidroid.xutils.cache.MD5FileNameGenerator -> com.lidroid.xutils.cache.MD5FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.lidroid.xutils.db.annotation.Check -> com.lidroid.xutils.db.annotation.Check:
    java.lang.String value() -> value
com.lidroid.xutils.db.annotation.Column -> com.lidroid.xutils.db.annotation.Column:
    java.lang.String column() -> column
    java.lang.String defaultValue() -> defaultValue
com.lidroid.xutils.db.annotation.Finder -> com.lidroid.xutils.db.annotation.Finder:
    java.lang.String valueColumn() -> valueColumn
    java.lang.String targetColumn() -> targetColumn
com.lidroid.xutils.db.annotation.Foreign -> com.lidroid.xutils.db.annotation.Foreign:
    java.lang.String column() -> column
    java.lang.String foreign() -> foreign
com.lidroid.xutils.db.annotation.Id -> com.lidroid.xutils.db.annotation.Id:
    java.lang.String column() -> column
com.lidroid.xutils.db.annotation.NoAutoIncrement -> com.lidroid.xutils.db.annotation.NoAutoIncrement:
com.lidroid.xutils.db.annotation.NotNull -> com.lidroid.xutils.db.annotation.NotNull:
com.lidroid.xutils.db.annotation.Table -> com.lidroid.xutils.db.annotation.Table:
    java.lang.String name() -> name
    java.lang.String execAfterTableCreated() -> execAfterTableCreated
com.lidroid.xutils.db.annotation.Transient -> com.lidroid.xutils.db.annotation.Transient:
com.lidroid.xutils.db.annotation.Unique -> com.lidroid.xutils.db.annotation.Unique:
com.lidroid.xutils.db.converter.BooleanColumnConverter -> com.lidroid.xutils.db.converter.BooleanColumnConverter:
    java.lang.Boolean getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Boolean getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Boolean) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteArrayColumnConverter -> com.lidroid.xutils.db.converter.ByteArrayColumnConverter:
    byte[] getFieldValue(android.database.Cursor,int) -> getFieldValue
    byte[] getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(byte[]) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ByteColumnConverter -> com.lidroid.xutils.db.converter.ByteColumnConverter:
    java.lang.Byte getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Byte getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Byte) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.CharColumnConverter -> com.lidroid.xutils.db.converter.CharColumnConverter:
    java.lang.Character getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Character getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Character) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ColumnConverter -> com.lidroid.xutils.db.converter.ColumnConverter:
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.converter.ColumnConverterFactory -> com.lidroid.xutils.db.converter.ColumnConverterFactory:
    java.util.concurrent.ConcurrentHashMap columnType_columnConverter_map -> columnType_columnConverter_map
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter(java.lang.Class) -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getDbColumnType(java.lang.Class) -> getDbColumnType
    void registerColumnConverter(java.lang.Class,com.lidroid.xutils.db.converter.ColumnConverter) -> registerColumnConverter
    boolean isSupportColumnConverter(java.lang.Class) -> isSupportColumnConverter
com.lidroid.xutils.db.converter.DateColumnConverter -> com.lidroid.xutils.db.converter.DateColumnConverter:
    java.util.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.util.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.util.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.DoubleColumnConverter -> com.lidroid.xutils.db.converter.DoubleColumnConverter:
    java.lang.Double getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Double getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Double) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.FloatColumnConverter -> com.lidroid.xutils.db.converter.FloatColumnConverter:
    java.lang.Float getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Float getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Float) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.IntegerColumnConverter -> com.lidroid.xutils.db.converter.IntegerColumnConverter:
    java.lang.Integer getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Integer getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Integer) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.LongColumnConverter -> com.lidroid.xutils.db.converter.LongColumnConverter:
    java.lang.Long getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Long getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Long) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.ShortColumnConverter -> com.lidroid.xutils.db.converter.ShortColumnConverter:
    java.lang.Short getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.Short getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.Short) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.SqlDateColumnConverter -> com.lidroid.xutils.db.converter.SqlDateColumnConverter:
    java.sql.Date getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.sql.Date getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.sql.Date) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.converter.StringColumnConverter -> com.lidroid.xutils.db.converter.StringColumnConverter:
    java.lang.String getFieldValue(android.database.Cursor,int) -> getFieldValue
    java.lang.String getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object fieldValue2ColumnValue(java.lang.String) -> fieldValue2ColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object fieldValue2ColumnValue(java.lang.Object) -> fieldValue2ColumnValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(android.database.Cursor,int) -> getFieldValue
com.lidroid.xutils.db.sqlite.ColumnDbType -> com.lidroid.xutils.db.sqlite.ColumnDbType:
    com.lidroid.xutils.db.sqlite.ColumnDbType INTEGER -> INTEGER
    com.lidroid.xutils.db.sqlite.ColumnDbType REAL -> REAL
    com.lidroid.xutils.db.sqlite.ColumnDbType TEXT -> TEXT
    com.lidroid.xutils.db.sqlite.ColumnDbType BLOB -> BLOB
    java.lang.String value -> value
    com.lidroid.xutils.db.sqlite.ColumnDbType[] $VALUES -> $VALUES
    com.lidroid.xutils.db.sqlite.ColumnDbType[] values() -> values
    com.lidroid.xutils.db.sqlite.ColumnDbType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.CursorUtils -> com.lidroid.xutils.db.sqlite.CursorUtils:
    java.lang.Object getEntity(com.lidroid.xutils.DbUtils,android.database.Cursor,java.lang.Class,long) -> getEntity
    com.lidroid.xutils.db.table.DbModel getDbModel(android.database.Cursor) -> getDbModel
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache -> com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache:
    java.util.concurrent.ConcurrentHashMap cache -> cache
    long seq -> seq
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void setSeq(long) -> setSeq
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence -> com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence:
    long seq -> seq
    java.lang.String FOREIGN_LAZY_LOADER_CLASS_NAME -> FOREIGN_LAZY_LOADER_CLASS_NAME
    java.lang.String FINDER_LAZY_LOADER_CLASS_NAME -> FINDER_LAZY_LOADER_CLASS_NAME
    long getSeq() -> getSeq
com.lidroid.xutils.db.sqlite.DbModelSelector -> com.lidroid.xutils.db.sqlite.DbModelSelector:
    java.lang.String[] columnExpressions -> columnExpressions
    java.lang.String groupByColumnName -> groupByColumnName
    com.lidroid.xutils.db.sqlite.WhereBuilder having -> having
    com.lidroid.xutils.db.sqlite.Selector selector -> selector
    com.lidroid.xutils.db.sqlite.DbModelSelector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.DbModelSelector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.DbModelSelector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.DbModelSelector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector having(com.lidroid.xutils.db.sqlite.WhereBuilder) -> having
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.DbModelSelector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.DbModelSelector offset(int) -> offset
    java.lang.Class getEntityType() -> getEntityType
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.FinderLazyLoader -> com.lidroid.xutils.db.sqlite.FinderLazyLoader:
    com.lidroid.xutils.db.table.Finder finderColumn -> finderColumn
    java.lang.Object finderValue -> finderValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
com.lidroid.xutils.db.sqlite.ForeignLazyLoader -> com.lidroid.xutils.db.sqlite.ForeignLazyLoader:
    com.lidroid.xutils.db.table.Foreign foreignColumn -> foreignColumn
    java.lang.Object columnValue -> columnValue
    java.util.List getAllFromDb() -> getAllFromDb
    java.lang.Object getFirstFromDb() -> getFirstFromDb
    void setColumnValue(java.lang.Object) -> setColumnValue
    java.lang.Object getColumnValue() -> getColumnValue
com.lidroid.xutils.db.sqlite.Selector -> com.lidroid.xutils.db.sqlite.Selector:
    java.lang.Class entityType -> entityType
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.sqlite.WhereBuilder whereBuilder -> whereBuilder
    java.util.List orderByList -> orderByList
    int limit -> limit
    int offset -> offset
    com.lidroid.xutils.db.sqlite.Selector from(java.lang.Class) -> from
    com.lidroid.xutils.db.sqlite.Selector where(com.lidroid.xutils.db.sqlite.WhereBuilder) -> where
    com.lidroid.xutils.db.sqlite.Selector where(java.lang.String,java.lang.String,java.lang.Object) -> where
    com.lidroid.xutils.db.sqlite.Selector and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.Selector and(com.lidroid.xutils.db.sqlite.WhereBuilder) -> and
    com.lidroid.xutils.db.sqlite.Selector or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.Selector or(com.lidroid.xutils.db.sqlite.WhereBuilder) -> or
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.Selector expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    com.lidroid.xutils.db.sqlite.DbModelSelector groupBy(java.lang.String) -> groupBy
    com.lidroid.xutils.db.sqlite.DbModelSelector select(java.lang.String[]) -> select
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector orderBy(java.lang.String,boolean) -> orderBy
    com.lidroid.xutils.db.sqlite.Selector limit(int) -> limit
    com.lidroid.xutils.db.sqlite.Selector offset(int) -> offset
    java.lang.String toString() -> toString
    java.lang.Class getEntityType() -> getEntityType
com.lidroid.xutils.db.sqlite.Selector$OrderBy -> com.lidroid.xutils.db.sqlite.Selector$OrderBy:
    java.lang.String columnName -> columnName
    boolean desc -> desc
    com.lidroid.xutils.db.sqlite.Selector this$0 -> this$0
    java.lang.String toString() -> toString
com.lidroid.xutils.db.sqlite.SqlInfo -> com.lidroid.xutils.db.sqlite.SqlInfo:
    java.lang.String sql -> sql
    java.util.LinkedList bindArgs -> bindArgs
    java.lang.String getSql() -> getSql
    void setSql(java.lang.String) -> setSql
    java.util.LinkedList getBindArgs() -> getBindArgs
    java.lang.Object[] getBindArgsAsArray() -> getBindArgsAsArray
    java.lang.String[] getBindArgsAsStrArray() -> getBindArgsAsStrArray
    void addBindArg(java.lang.Object) -> addBindArg
    void addBindArgWithoutConverter(java.lang.Object) -> addBindArgWithoutConverter
    void addBindArgs(java.lang.Object[]) -> addBindArgs
com.lidroid.xutils.db.sqlite.SqlInfoBuilder -> com.lidroid.xutils.db.sqlite.SqlInfoBuilder:
    com.lidroid.xutils.db.sqlite.SqlInfo buildInsertSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildInsertSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildReplaceSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildReplaceSqlInfo
    java.lang.String buildDeleteSqlByTableName(java.lang.String) -> buildDeleteSqlByTableName
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,java.lang.Object) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildDeleteSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class,com.lidroid.xutils.db.sqlite.WhereBuilder) -> buildDeleteSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildUpdateSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Object,com.lidroid.xutils.db.sqlite.WhereBuilder,java.lang.String[]) -> buildUpdateSqlInfo
    com.lidroid.xutils.db.sqlite.SqlInfo buildCreateTableSqlInfo(com.lidroid.xutils.DbUtils,java.lang.Class) -> buildCreateTableSqlInfo
    com.lidroid.xutils.db.table.KeyValue column2KeyValue(java.lang.Object,com.lidroid.xutils.db.table.Column) -> column2KeyValue
    java.util.List entity2KeyValueList(com.lidroid.xutils.DbUtils,java.lang.Object) -> entity2KeyValueList
com.lidroid.xutils.db.sqlite.WhereBuilder -> com.lidroid.xutils.db.sqlite.WhereBuilder:
    java.util.List whereItems -> whereItems
    com.lidroid.xutils.db.sqlite.WhereBuilder b() -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder b(java.lang.String,java.lang.String,java.lang.Object) -> b
    com.lidroid.xutils.db.sqlite.WhereBuilder and(java.lang.String,java.lang.String,java.lang.Object) -> and
    com.lidroid.xutils.db.sqlite.WhereBuilder or(java.lang.String,java.lang.String,java.lang.Object) -> or
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String) -> expr
    com.lidroid.xutils.db.sqlite.WhereBuilder expr(java.lang.String,java.lang.String,java.lang.Object) -> expr
    int getWhereItemSize() -> getWhereItemSize
    java.lang.String toString() -> toString
    void appendCondition(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> appendCondition
com.lidroid.xutils.db.table.Column -> com.lidroid.xutils.db.table.Column:
    com.lidroid.xutils.db.table.Table table -> table
    int index -> index
    java.lang.String columnName -> columnName
    java.lang.Object defaultValue -> defaultValue
    java.lang.reflect.Method getMethod -> getMethod
    java.lang.reflect.Method setMethod -> setMethod
    java.lang.reflect.Field columnField -> columnField
    com.lidroid.xutils.db.converter.ColumnConverter columnConverter -> columnConverter
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getFieldValue(java.lang.Object) -> getFieldValue
    com.lidroid.xutils.db.table.Table getTable() -> getTable
    void setTable(com.lidroid.xutils.db.table.Table) -> setTable
    int getIndex() -> getIndex
    java.lang.String getColumnName() -> getColumnName
    java.lang.Object getDefaultValue() -> getDefaultValue
    java.lang.reflect.Field getColumnField() -> getColumnField
    com.lidroid.xutils.db.converter.ColumnConverter getColumnConverter() -> getColumnConverter
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.ColumnUtils -> com.lidroid.xutils.db.table.ColumnUtils:
    java.util.HashSet DB_PRIMITIVE_TYPES -> DB_PRIMITIVE_TYPES
    boolean isDbPrimitiveType(java.lang.Class) -> isDbPrimitiveType
    java.lang.reflect.Method getColumnGetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnGetMethod
    java.lang.reflect.Method getColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getColumnSetMethod
    java.lang.String getColumnNameByField(java.lang.reflect.Field) -> getColumnNameByField
    java.lang.String getForeignColumnNameByField(java.lang.reflect.Field) -> getForeignColumnNameByField
    java.lang.String getColumnDefaultValue(java.lang.reflect.Field) -> getColumnDefaultValue
    boolean isTransient(java.lang.reflect.Field) -> isTransient
    boolean isForeign(java.lang.reflect.Field) -> isForeign
    boolean isFinder(java.lang.reflect.Field) -> isFinder
    boolean isUnique(java.lang.reflect.Field) -> isUnique
    boolean isNotNull(java.lang.reflect.Field) -> isNotNull
    java.lang.String getCheck(java.lang.reflect.Field) -> getCheck
    java.lang.Class getForeignEntityType(com.lidroid.xutils.db.table.Foreign) -> getForeignEntityType
    java.lang.Class getFinderTargetEntityType(com.lidroid.xutils.db.table.Finder) -> getFinderTargetEntityType
    java.lang.Object convert2DbColumnValueIfNeeded(java.lang.Object) -> convert2DbColumnValueIfNeeded
    boolean isStartWithIs(java.lang.String) -> isStartWithIs
    java.lang.reflect.Method getBooleanColumnGetMethod(java.lang.Class,java.lang.String) -> getBooleanColumnGetMethod
    java.lang.reflect.Method getBooleanColumnSetMethod(java.lang.Class,java.lang.reflect.Field) -> getBooleanColumnSetMethod
com.lidroid.xutils.db.table.DbModel -> com.lidroid.xutils.db.table.DbModel:
    java.util.HashMap dataMap -> dataMap
    java.lang.String getString(java.lang.String) -> getString
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    double getDouble(java.lang.String) -> getDouble
    float getFloat(java.lang.String) -> getFloat
    long getLong(java.lang.String) -> getLong
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    void add(java.lang.String,java.lang.String) -> add
    java.util.HashMap getDataMap() -> getDataMap
    boolean isEmpty(java.lang.String) -> isEmpty
com.lidroid.xutils.db.table.Finder -> com.lidroid.xutils.db.table.Finder:
    java.lang.String valueColumnName -> valueColumnName
    java.lang.String targetColumnName -> targetColumnName
    java.lang.Class getTargetEntityType() -> getTargetEntityType
    java.lang.String getTargetColumnName() -> getTargetColumnName
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    java.lang.Object getDefaultValue() -> getDefaultValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
com.lidroid.xutils.db.table.Foreign -> com.lidroid.xutils.db.table.Foreign:
    java.lang.String foreignColumnName -> foreignColumnName
    com.lidroid.xutils.db.converter.ColumnConverter foreignColumnConverter -> foreignColumnConverter
    java.lang.String getForeignColumnName() -> getForeignColumnName
    java.lang.Class getForeignEntityType() -> getForeignEntityType
    void setValue2Entity(java.lang.Object,android.database.Cursor,int) -> setValue2Entity
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
    com.lidroid.xutils.db.sqlite.ColumnDbType getColumnDbType() -> getColumnDbType
    java.lang.Object getDefaultValue() -> getDefaultValue
com.lidroid.xutils.db.table.Id -> com.lidroid.xutils.db.table.Id:
    java.lang.String columnFieldClassName -> columnFieldClassName
    boolean isAutoIncrementChecked -> isAutoIncrementChecked
    boolean isAutoIncrement -> isAutoIncrement
    java.util.HashSet INTEGER_TYPES -> INTEGER_TYPES
    java.util.HashSet AUTO_INCREMENT_TYPES -> AUTO_INCREMENT_TYPES
    boolean isAutoIncrement() -> isAutoIncrement
    void setAutoIncrementId(java.lang.Object,long) -> setAutoIncrementId
    java.lang.Object getColumnValue(java.lang.Object) -> getColumnValue
com.lidroid.xutils.db.table.KeyValue -> com.lidroid.xutils.db.table.KeyValue:
    java.lang.String key -> key
    java.lang.Object value -> value
com.lidroid.xutils.db.table.Table -> com.lidroid.xutils.db.table.Table:
    com.lidroid.xutils.DbUtils db -> db
    java.lang.String tableName -> tableName
    com.lidroid.xutils.db.table.Id id -> id
    java.util.HashMap columnMap -> columnMap
    java.util.HashMap finderMap -> finderMap
    java.util.HashMap tableMap -> tableMap
    boolean checkedDatabase -> checkedDatabase
    com.lidroid.xutils.db.table.Table get(com.lidroid.xutils.DbUtils,java.lang.Class) -> get
    void remove(com.lidroid.xutils.DbUtils,java.lang.Class) -> remove
    void remove(com.lidroid.xutils.DbUtils,java.lang.String) -> remove
    boolean isCheckedDatabase() -> isCheckedDatabase
    void setCheckedDatabase(boolean) -> setCheckedDatabase
com.lidroid.xutils.db.table.TableUtils -> com.lidroid.xutils.db.table.TableUtils:
    java.util.concurrent.ConcurrentHashMap entityColumnsMap -> entityColumnsMap
    java.util.concurrent.ConcurrentHashMap entityIdMap -> entityIdMap
    java.lang.String getTableName(java.lang.Class) -> getTableName
    java.lang.String getExecAfterTableCreated(java.lang.Class) -> getExecAfterTableCreated
    java.util.HashMap getColumnMap(java.lang.Class) -> getColumnMap
    void addColumns2Map(java.lang.Class,java.lang.String,java.util.HashMap) -> addColumns2Map
    com.lidroid.xutils.db.table.Column getColumnOrId(java.lang.Class,java.lang.String) -> getColumnOrId
    com.lidroid.xutils.db.table.Id getId(java.lang.Class) -> getId
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> getPrimaryKeyFieldName
    java.lang.String getPrimaryKeyColumnName(java.lang.Class) -> getPrimaryKeyColumnName
com.lidroid.xutils.exception.BaseException -> com.lidroid.xutils.exception.BaseException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.DbException -> com.lidroid.xutils.exception.DbException:
    long serialVersionUID -> serialVersionUID
com.lidroid.xutils.exception.HttpException -> com.lidroid.xutils.exception.HttpException:
    long serialVersionUID -> serialVersionUID
    int exceptionCode -> exceptionCode
    int getExceptionCode() -> getExceptionCode
com.lidroid.xutils.http.HttpCache -> com.lidroid.xutils.http.HttpCache:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> mMemoryCache
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    long DEFAULT_EXPIRY_TIME -> DEFAULT_EXPIRY_TIME
    int cacheSize -> cacheSize
    long defaultExpiryTime -> defaultExpiryTime
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> httpMethod_enabled_map
    void setCacheSize(int) -> setCacheSize
    void setDefaultExpiryTime(long) -> setDefaultExpiryTime
    long getDefaultExpiryTime() -> getDefaultExpiryTime
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.lang.String,long) -> put
    java.lang.String get(java.lang.String) -> get
    void clear() -> clear
    boolean isEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod) -> isEnabled
    boolean isEnabled(java.lang.String) -> isEnabled
    void setEnabled(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,boolean) -> setEnabled
com.lidroid.xutils.http.HttpCache$1 -> com.lidroid.xutils.http.HttpCache$1:
    com.lidroid.xutils.http.HttpCache this$0 -> this$0
    int sizeOf(java.lang.String,java.lang.String) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.lidroid.xutils.http.HttpHandler -> com.lidroid.xutils.http.HttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    org.apache.http.client.methods.HttpRequestBase request -> request
    boolean isUploading -> isUploading
    com.lidroid.xutils.http.callback.RequestCallBack callback -> callback
    int retriedCount -> retriedCount
    java.lang.String fileSavePath -> fileSavePath
    boolean isDownloadingFile -> isDownloadingFile
    boolean autoResume -> autoResume
    boolean autoRename -> autoRename
    java.lang.String charset -> charset
    com.lidroid.xutils.http.HttpHandler$State state -> state
    long expiry -> expiry
    int UPDATE_START -> UPDATE_START
    int UPDATE_LOADING -> UPDATE_LOADING
    int UPDATE_FAILURE -> UPDATE_FAILURE
    int UPDATE_SUCCESS -> UPDATE_SUCCESS
    long lastUpdateTime -> lastUpdateTime
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> notUseApacheRedirectHandler
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    com.lidroid.xutils.http.HttpHandler$State getState() -> getState
    void setExpiry(long) -> setExpiry
    void setRequestCallBack(com.lidroid.xutils.http.callback.RequestCallBack) -> setRequestCallBack
    com.lidroid.xutils.http.callback.RequestCallBack getRequestCallBack() -> getRequestCallBack
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> handleResponse
    void cancel() -> cancel
    boolean updateProgress(long,long,boolean) -> updateProgress
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.lidroid.xutils.http.HttpHandler$1 -> com.lidroid.xutils.http.HttpHandler$1:
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.lidroid.xutils.http.HttpHandler$State:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> WAITING
    com.lidroid.xutils.http.HttpHandler$State STARTED -> STARTED
    com.lidroid.xutils.http.HttpHandler$State LOADING -> LOADING
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> FAILURE
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> CANCELLED
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> SUCCESS
    int value -> value
    com.lidroid.xutils.http.HttpHandler$State[] $VALUES -> $VALUES
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
    com.lidroid.xutils.http.HttpHandler$State valueOf(int) -> valueOf
    int value() -> value
com.lidroid.xutils.http.RequestParams -> com.lidroid.xutils.http.RequestParams:
    java.lang.String charset -> charset
    java.util.List headers -> headers
    java.util.List queryStringParams -> queryStringParams
    org.apache.http.HttpEntity bodyEntity -> bodyEntity
    java.util.List bodyParams -> bodyParams
    java.util.HashMap fileParams -> fileParams
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    java.lang.String getCharset() -> getCharset
    void setContentType(java.lang.String) -> setContentType
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void addHeaders(java.util.List) -> addHeaders
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(java.util.List) -> setHeaders
    void addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    void addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    void addQueryStringParameter(java.util.List) -> addQueryStringParameter
    void addBodyParameter(java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(org.apache.http.NameValuePair) -> addBodyParameter
    void addBodyParameter(java.util.List) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String) -> addBodyParameter
    void addBodyParameter(java.lang.String,java.io.InputStream,long,java.lang.String,java.lang.String) -> addBodyParameter
    void setBodyEntity(org.apache.http.HttpEntity) -> setBodyEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.List getQueryStringParams() -> getQueryStringParams
    java.util.List getHeaders() -> getHeaders
    java.util.List getBodyParams() -> getBodyParams
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.lidroid.xutils.http.RequestParams$HeaderItem:
    boolean overwrite -> overwrite
    org.apache.http.Header header -> header
    com.lidroid.xutils.http.RequestParams this$0 -> this$0
com.lidroid.xutils.http.ResponseInfo -> com.lidroid.xutils.http.ResponseInfo:
    org.apache.http.HttpResponse response -> response
    java.lang.Object result -> result
    boolean resultFormCache -> resultFormCache
    java.util.Locale locale -> locale
    int statusCode -> statusCode
    org.apache.http.ProtocolVersion protocolVersion -> protocolVersion
    java.lang.String reasonPhrase -> reasonPhrase
    long contentLength -> contentLength
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
com.lidroid.xutils.http.ResponseStream -> com.lidroid.xutils.http.ResponseStream:
    org.apache.http.HttpResponse baseResponse -> baseResponse
    java.io.InputStream baseStream -> baseStream
    java.lang.String charset -> charset
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    long expiry -> expiry
    java.lang.String _directResult -> _directResult
    java.lang.String getRequestUrl() -> getRequestUrl
    java.lang.String getRequestMethod() -> getRequestMethod
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.io.InputStream getBaseStream() -> getBaseStream
    org.apache.http.HttpResponse getBaseResponse() -> getBaseResponse
    int getStatusCode() -> getStatusCode
    java.util.Locale getLocale() -> getLocale
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String readString() -> readString
    void readFile(java.lang.String) -> readFile
    int read() -> read
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.SyncHttpHandler -> com.lidroid.xutils.http.SyncHttpHandler:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> httpRedirectHandler
    java.lang.String requestUrl -> requestUrl
    java.lang.String requestMethod -> requestMethod
    java.lang.String charset -> charset
    int retriedTimes -> retriedTimes
    long expiry -> expiry
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> setHttpRedirectHandler
    void setExpiry(long) -> setExpiry
    com.lidroid.xutils.http.ResponseStream sendRequest(org.apache.http.client.methods.HttpRequestBase) -> sendRequest
    com.lidroid.xutils.http.ResponseStream handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.lidroid.xutils.http.callback.FileDownloadHandler:
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> handleEntity
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.lidroid.xutils.http.callback.HttpRedirectHandler:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> getDirectRequest
com.lidroid.xutils.http.callback.RequestCallBack -> com.lidroid.xutils.http.callback.RequestCallBack:
    int DEFAULT_RATE -> DEFAULT_RATE
    int MIN_RATE -> MIN_RATE
    java.lang.String requestUrl -> requestUrl
    java.lang.Object userTag -> userTag
    int rate -> rate
    int getRate() -> getRate
    void setRate(int) -> setRate
    java.lang.Object getUserTag() -> getUserTag
    void setUserTag(java.lang.Object) -> setUserTag
    java.lang.String getRequestUrl() -> getRequestUrl
    void setRequestUrl(java.lang.String) -> setRequestUrl
    void onStart() -> onStart
    void onCancelled() -> onCancelled
    void onLoading(long,long,boolean) -> onLoading
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> onSuccess
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> onFailure
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.lidroid.xutils.http.callback.RequestCallBackHandler:
    boolean updateProgress(long,long,boolean) -> updateProgress
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.lidroid.xutils.http.callback.StringDownloadHandler:
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> handleEntity
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.security.KeyStore trustStore -> trustStore
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> instance
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.lidroid.xutils.http.client.HttpRequest:
    org.apache.http.HttpEntity entity -> entity
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> method
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> uriBuilder
    java.nio.charset.Charset uriCharset -> uriCharset
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(java.lang.String,java.lang.String) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParameter(org.apache.http.NameValuePair) -> addQueryStringParameter
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> addQueryStringParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams) -> setRequestParams
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setRequestParams
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> setURI
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.lidroid.xutils.http.client.HttpRequest$HttpMethod:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> GET
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> POST
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> PUT
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> HEAD
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> MOVE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> COPY
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> DELETE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> OPTIONS
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> TRACE
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> CONNECT
    java.lang.String value -> value
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] $VALUES -> $VALUES
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.RetryHandler -> com.lidroid.xutils.http.client.RetryHandler:
    int RETRY_SLEEP_INTERVAL -> RETRY_SLEEP_INTERVAL
    java.util.HashSet exceptionWhiteList -> exceptionWhiteList
    java.util.HashSet exceptionBlackList -> exceptionBlackList
    int maxRetries -> maxRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.lidroid.xutils.http.client.entity.BodyParamsEntity:
    byte[] content -> content
    boolean dirty -> dirty
    java.lang.String charset -> charset
    java.util.List params -> params
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.entity.BodyParamsEntity addParams(java.util.List) -> addParams
    void refreshContent() -> refreshContent
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.lidroid.xutils.http.client.entity.DecompressingEntity:
    java.io.InputStream content -> content
    long uncompressedLength -> uncompressedLength
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.FileUploadEntity -> com.lidroid.xutils.http.client.entity.FileUploadEntity:
    long fileSize -> fileSize
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.lidroid.xutils.http.client.entity.GZipDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void writeTo(java.io.OutputStream) -> writeTo
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity -> com.lidroid.xutils.http.client.entity.InputStreamUploadEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    long length -> length
    long uploadedSize -> uploadedSize
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.entity.UploadEntity -> com.lidroid.xutils.http.client.entity.UploadEntity:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.lidroid.xutils.http.client.multipart.FormBodyPart:
    java.lang.String name -> name
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> header
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> body
    java.lang.String getName() -> getName
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> getBody
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentDisposition
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateContentType
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> generateTransferEncoding
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.lidroid.xutils.http.client.multipart.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> writeField
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    void setSubType(java.lang.String) -> setSubType
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> writeTo
    long getTotalLength() -> getTotalLength
com.lidroid.xutils.http.client.multipart.HttpMultipart$1 -> com.lidroid.xutils.http.client.multipart.HttpMultipart$1:
    int[] $SwitchMap$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> $SwitchMap$com$lidroid$xutils$http$client$multipart$HttpMultipartMode
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.lidroid.xutils.http.client.multipart.HttpMultipartMode:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> STRICT
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] $VALUES -> $VALUES
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.lidroid.xutils.http.client.multipart.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
com.lidroid.xutils.http.client.multipart.MinimalField -> com.lidroid.xutils.http.client.multipart.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.lidroid.xutils.http.client.multipart.MinimalFieldHeader:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> addField
    java.util.List getFields() -> getFields
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(com.lidroid.xutils.http.client.multipart.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.lidroid.xutils.http.client.multipart.MultipartEntity:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.lang.String multipartSubtype -> multipartSubtype
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> setCallBackHandler
    void setMultipartSubtype(java.lang.String) -> setMultipartSubtype
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> addPart
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody,java.lang.String) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> DEFAULT
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> callBackHandler
    long totalLength -> totalLength
    long pos -> pos
    boolean doCallBack(boolean) -> doCallBack
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.lidroid.xutils.http.client.multipart.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> callBackInfo
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody -> com.lidroid.xutils.http.client.multipart.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.lidroid.xutils.http.client.multipart.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> setCallBackInfo
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.lidroid.xutils.http.client.multipart.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
com.lidroid.xutils.http.client.multipart.content.FileBody -> com.lidroid.xutils.http.client.multipart.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
com.lidroid.xutils.http.client.multipart.content.InputStreamBody -> com.lidroid.xutils.http.client.multipart.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    long length -> length
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.lidroid.xutils.http.client.multipart.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    com.lidroid.xutils.http.client.multipart.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
com.lidroid.xutils.http.client.util.URIBuilder -> com.lidroid.xutils.http.client.util.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    void digestURI(java.net.URI) -> digestURI
    java.util.List parseQuery(java.lang.String) -> parseQuery
    java.net.URI build(java.nio.charset.Charset) -> build
    java.lang.String buildString(java.nio.charset.Charset) -> buildString
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> encodePath
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> encodeQuery
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> encodeFragment
    com.lidroid.xutils.http.client.util.URIBuilder setScheme(java.lang.String) -> setScheme
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    com.lidroid.xutils.http.client.util.URIBuilder setHost(java.lang.String) -> setHost
    com.lidroid.xutils.http.client.util.URIBuilder setPort(int) -> setPort
    com.lidroid.xutils.http.client.util.URIBuilder setPath(java.lang.String) -> setPath
    com.lidroid.xutils.http.client.util.URIBuilder setQuery(java.lang.String) -> setQuery
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    com.lidroid.xutils.http.client.util.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    com.lidroid.xutils.http.client.util.URIBuilder setFragment(java.lang.String) -> setFragment
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String normalizePath(java.lang.String) -> normalizePath
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.lidroid.xutils.http.client.util.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet FRAGMENT -> FRAGMENT
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    java.util.List parse(java.net.URI) -> parse
    void parse(java.util.List,java.util.Scanner) -> parse
    java.util.List parse(java.lang.String) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlencode
    java.lang.String urldecode(java.lang.String,java.nio.charset.Charset,boolean) -> urldecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> encFragment
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
com.lidroid.xutils.task.Node -> com.lidroid.xutils.task.Node:
    boolean valueAsT -> valueAsT
    com.lidroid.xutils.task.PriorityObject value -> value
    com.lidroid.xutils.task.Node next -> next
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
com.lidroid.xutils.task.Priority -> com.lidroid.xutils.task.Priority:
    com.lidroid.xutils.task.Priority UI_TOP -> UI_TOP
    com.lidroid.xutils.task.Priority UI_NORMAL -> UI_NORMAL
    com.lidroid.xutils.task.Priority UI_LOW -> UI_LOW
    com.lidroid.xutils.task.Priority DEFAULT -> DEFAULT
    com.lidroid.xutils.task.Priority BG_TOP -> BG_TOP
    com.lidroid.xutils.task.Priority BG_NORMAL -> BG_NORMAL
    com.lidroid.xutils.task.Priority BG_LOW -> BG_LOW
    com.lidroid.xutils.task.Priority[] $VALUES -> $VALUES
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.lidroid.xutils.task.PriorityAsyncTask:
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    boolean mExecuteInvoked -> mExecuteInvoked
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> mCancelled
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    com.lidroid.xutils.task.Priority priority -> priority
    com.lidroid.xutils.task.Priority getPriority() -> getPriority
    void setPriority(com.lidroid.xutils.task.Priority) -> setPriority
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    com.lidroid.xutils.task.PriorityAsyncTask execute(java.lang.Object[]) -> execute
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void execute(java.lang.Runnable,com.lidroid.xutils.task.Priority) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(com.lidroid.xutils.task.PriorityAsyncTask) -> access$200
    java.lang.Object access$300(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$300
    void access$400(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$400
    void access$500(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> access$500
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.lidroid.xutils.task.PriorityAsyncTask$1:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.lidroid.xutils.task.PriorityAsyncTask$2:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> this$0
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
com.lidroid.xutils.task.PriorityExecutor -> com.lidroid.xutils.task.PriorityExecutor:
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> mPoolWorkQueue
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> mThreadPoolExecutor
    int getPoolSize() -> getPoolSize
    void setPoolSize(int) -> setPoolSize
    boolean isBusy() -> isBusy
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.lidroid.xutils.task.PriorityExecutor$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.lidroid.xutils.task.PriorityObject:
    com.lidroid.xutils.task.Priority priority -> priority
    java.lang.Object obj -> obj
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.lidroid.xutils.task.PriorityObjectBlockingQueue:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    java.util.concurrent.atomic.AtomicInteger count -> count
    com.lidroid.xutils.task.Node head -> head
    com.lidroid.xutils.task.Node last -> last
    java.util.concurrent.locks.ReentrantLock takeLock -> takeLock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.ReentrantLock putLock -> putLock
    java.util.concurrent.locks.Condition notFull -> notFull
    void signalNotEmpty() -> signalNotEmpty
    void signalNotFull() -> signalNotFull
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> opQueue
    void _enqueue(com.lidroid.xutils.task.Node) -> _enqueue
    java.lang.Object _dequeue() -> _dequeue
    void fullyLock() -> fullyLock
    void fullyUnlock() -> fullyUnlock
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> unlink
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr:
    com.lidroid.xutils.task.Node current -> current
    com.lidroid.xutils.task.Node lastRet -> lastRet
    java.lang.Object currentElement -> currentElement
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> this$0
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> nextNode
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.lidroid.xutils.task.PriorityRunnable:
    void run() -> run
com.lidroid.xutils.task.TaskHandler -> com.lidroid.xutils.task.TaskHandler:
    boolean supportPause() -> supportPause
    boolean supportResume() -> supportResume
    boolean supportCancel() -> supportCancel
    void pause() -> pause
    void resume() -> resume
    void cancel() -> cancel
    boolean isPaused() -> isPaused
    boolean isCancelled() -> isCancelled
com.lidroid.xutils.util.CharsetUtils -> com.lidroid.xutils.util.CharsetUtils:
    java.lang.String DEFAULT_ENCODING_CHARSET -> DEFAULT_ENCODING_CHARSET
    java.util.List SUPPORT_CHARSET -> SUPPORT_CHARSET
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> toCharset
    java.lang.String getEncoding(java.lang.String,int) -> getEncoding
    boolean isCharset(java.lang.String,java.lang.String,int) -> isCharset
com.lidroid.xutils.util.DoubleKeyValueMap -> com.lidroid.xutils.util.DoubleKeyValueMap:
    java.util.concurrent.ConcurrentHashMap k1_k2V_map -> k1_k2V_map
    void put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    java.util.Set getFirstKeys() -> getFirstKeys
    java.util.concurrent.ConcurrentHashMap get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.util.Collection getAllValues(java.lang.Object) -> getAllValues
    java.util.Collection getAllValues() -> getAllValues
    boolean containsKey(java.lang.Object,java.lang.Object) -> containsKey
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    void remove(java.lang.Object) -> remove
    void remove(java.lang.Object,java.lang.Object) -> remove
    void clear() -> clear
com.lidroid.xutils.util.IOUtils -> com.lidroid.xutils.util.IOUtils:
    void closeQuietly(java.io.Closeable) -> closeQuietly
    void closeQuietly(android.database.Cursor) -> closeQuietly
com.lidroid.xutils.util.LogUtils -> com.lidroid.xutils.util.LogUtils:
    java.lang.String customTagPrefix -> customTagPrefix
    boolean allowD -> allowD
    boolean allowE -> allowE
    boolean allowI -> allowI
    boolean allowV -> allowV
    boolean allowW -> allowW
    boolean allowWtf -> allowWtf
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> customLogger
    java.lang.String generateTag(java.lang.StackTraceElement) -> generateTag
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.Throwable) -> w
    void wtf(java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.Throwable) -> wtf
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.lidroid.xutils.util.LogUtils$CustomLogger:
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void wtf(java.lang.String,java.lang.String) -> wtf
    void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.lidroid.xutils.util.MimeTypeUtils -> com.lidroid.xutils.util.MimeTypeUtils:
    java.lang.String getMimeType(java.lang.String) -> getMimeType
com.lidroid.xutils.util.OtherUtils -> com.lidroid.xutils.util.OtherUtils:
    int STRING_BUFFER_LENGTH -> STRING_BUFFER_LENGTH
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> sslSocketFactory
    java.lang.String getUserAgent(android.content.Context) -> getUserAgent
    java.lang.String getDiskCacheDir(android.content.Context,java.lang.String) -> getDiskCacheDir
    long getAvailableSpace(java.io.File) -> getAvailableSpace
    boolean isSupportRange(org.apache.http.HttpResponse) -> isSupportRange
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> getFileNameFromHttpResponse
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> getCharsetFromHttpRequest
    long sizeOfString(java.lang.String,java.lang.String) -> sizeOfString
    java.lang.String getSubString(java.lang.String,int,int) -> getSubString
    java.lang.StackTraceElement getCurrentStackTraceElement() -> getCurrentStackTraceElement
    java.lang.StackTraceElement getCallerStackTraceElement() -> getCallerStackTraceElement
    void trustAllHttpsURLConnection() -> trustAllHttpsURLConnection
com.lidroid.xutils.util.OtherUtils$1 -> com.lidroid.xutils.util.OtherUtils$1:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.util.PreferencesCookieStore -> com.lidroid.xutils.util.PreferencesCookieStore:
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    org.apache.http.cookie.Cookie getCookie(java.lang.String) -> getCookie
    java.lang.String encodeCookie(com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie -> com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    com.lidroid.xutils.util.PreferencesCookieStore this$0 -> this$0
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.lidroid.xutils.view.EventListenerManager -> com.lidroid.xutils.view.EventListenerManager:
    com.lidroid.xutils.util.DoubleKeyValueMap listenerCache -> listenerCache
    void addEventMethod(com.lidroid.xutils.view.ViewFinder,com.lidroid.xutils.view.ViewInjectInfo,java.lang.annotation.Annotation,java.lang.Object,java.lang.reflect.Method) -> addEventMethod
com.lidroid.xutils.view.EventListenerManager$DynamicHandler -> com.lidroid.xutils.view.EventListenerManager$DynamicHandler:
    java.lang.ref.WeakReference handlerRef -> handlerRef
    java.util.HashMap methodMap -> methodMap
    void addMethod(java.lang.String,java.lang.reflect.Method) -> addMethod
    java.lang.Object getHandler() -> getHandler
    void setHandler(java.lang.Object) -> setHandler
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.lidroid.xutils.view.ResLoader -> com.lidroid.xutils.view.ResLoader:
    java.lang.Object loadRes(com.lidroid.xutils.view.ResType,android.content.Context,int) -> loadRes
com.lidroid.xutils.view.ResLoader$1 -> com.lidroid.xutils.view.ResLoader$1:
    int[] $SwitchMap$com$lidroid$xutils$view$ResType -> $SwitchMap$com$lidroid$xutils$view$ResType
com.lidroid.xutils.view.ResType -> com.lidroid.xutils.view.ResType:
    com.lidroid.xutils.view.ResType Animation -> Animation
    com.lidroid.xutils.view.ResType Boolean -> Boolean
    com.lidroid.xutils.view.ResType Color -> Color
    com.lidroid.xutils.view.ResType ColorStateList -> ColorStateList
    com.lidroid.xutils.view.ResType Dimension -> Dimension
    com.lidroid.xutils.view.ResType DimensionPixelOffset -> DimensionPixelOffset
    com.lidroid.xutils.view.ResType DimensionPixelSize -> DimensionPixelSize
    com.lidroid.xutils.view.ResType Drawable -> Drawable
    com.lidroid.xutils.view.ResType Integer -> Integer
    com.lidroid.xutils.view.ResType IntArray -> IntArray
    com.lidroid.xutils.view.ResType Movie -> Movie
    com.lidroid.xutils.view.ResType String -> String
    com.lidroid.xutils.view.ResType StringArray -> StringArray
    com.lidroid.xutils.view.ResType Text -> Text
    com.lidroid.xutils.view.ResType TextArray -> TextArray
    com.lidroid.xutils.view.ResType Xml -> Xml
    com.lidroid.xutils.view.ResType[] $VALUES -> $VALUES
    com.lidroid.xutils.view.ResType[] values() -> values
    com.lidroid.xutils.view.ResType valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.view.ViewFinder -> com.lidroid.xutils.view.ViewFinder:
    android.view.View view -> view
    android.app.Activity activity -> activity
    android.preference.PreferenceGroup preferenceGroup -> preferenceGroup
    android.preference.PreferenceActivity preferenceActivity -> preferenceActivity
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByInfo(com.lidroid.xutils.view.ViewInjectInfo) -> findViewByInfo
    android.view.View findViewById(int,int) -> findViewById
    android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    android.content.Context getContext() -> getContext
com.lidroid.xutils.view.ViewInjectInfo -> com.lidroid.xutils.view.ViewInjectInfo:
    java.lang.Object value -> value
    int parentId -> parentId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.lidroid.xutils.view.annotation.ContentView -> com.lidroid.xutils.view.annotation.ContentView:
    int value() -> value
com.lidroid.xutils.view.annotation.PreferenceInject -> com.lidroid.xutils.view.annotation.PreferenceInject:
    java.lang.String value() -> value
com.lidroid.xutils.view.annotation.ResInject -> com.lidroid.xutils.view.annotation.ResInject:
    int id() -> id
    com.lidroid.xutils.view.ResType type() -> type
com.lidroid.xutils.view.annotation.ViewInject -> com.lidroid.xutils.view.annotation.ViewInject:
    int value() -> value
    int parentId() -> parentId
com.lidroid.xutils.view.annotation.event.EventBase -> com.lidroid.xutils.view.annotation.event.EventBase:
    java.lang.Class listenerType() -> listenerType
    java.lang.String listenerSetter() -> listenerSetter
    java.lang.String methodName() -> methodName
com.lidroid.xutils.view.annotation.event.OnChildClick -> com.lidroid.xutils.view.annotation.event.OnChildClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnClick -> com.lidroid.xutils.view.annotation.event.OnClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange -> com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnFocusChange -> com.lidroid.xutils.view.annotation.event.OnFocusChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupClick -> com.lidroid.xutils.view.annotation.event.OnGroupClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupCollapse -> com.lidroid.xutils.view.annotation.event.OnGroupCollapse:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnGroupExpand -> com.lidroid.xutils.view.annotation.event.OnGroupExpand:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemClick -> com.lidroid.xutils.view.annotation.event.OnItemClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemLongClick -> com.lidroid.xutils.view.annotation.event.OnItemLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnItemSelected -> com.lidroid.xutils.view.annotation.event.OnItemSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnKey -> com.lidroid.xutils.view.annotation.event.OnKey:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnLongClick -> com.lidroid.xutils.view.annotation.event.OnLongClick:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnNothingSelected -> com.lidroid.xutils.view.annotation.event.OnNothingSelected:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnPreferenceChange -> com.lidroid.xutils.view.annotation.event.OnPreferenceChange:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnPreferenceClick -> com.lidroid.xutils.view.annotation.event.OnPreferenceClick:
    java.lang.String[] value() -> value
com.lidroid.xutils.view.annotation.event.OnProgressChanged -> com.lidroid.xutils.view.annotation.event.OnProgressChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange -> com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScroll -> com.lidroid.xutils.view.annotation.event.OnScroll:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnScrollStateChanged -> com.lidroid.xutils.view.annotation.event.OnScrollStateChanged:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch -> com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTabChange -> com.lidroid.xutils.view.annotation.event.OnTabChange:
    int[] value() -> value
    int[] parentId() -> parentId
com.lidroid.xutils.view.annotation.event.OnTouch -> com.lidroid.xutils.view.annotation.event.OnTouch:
    int[] value() -> value
    int[] parentId() -> parentId
com.melnykov.fab.AbsListViewScrollDetector -> com.melnykov.fab.a:
    int mLastScrollY -> a
    int mPreviousFirstVisibleItem -> b
    android.widget.AbsListView mListView -> c
    int mScrollThreshold -> d
    void onScrollUp() -> a
    void onScrollDown() -> b
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setScrollThreshold(int) -> a
    void setListView(android.widget.AbsListView) -> a
    boolean isSameRow(int) -> b
    int getTopItemScrollY() -> c
com.melnykov.fab.FloatingActionView -> com.melnykov.fab.FloatingActionView:
    boolean mVisible -> a
    int mScrollThreshold -> b
    android.view.animation.Interpolator mInterpolator -> c
    void init(android.content.Context,android.util.AttributeSet) -> a
    int getMarginBottom() -> getMarginBottom
    void show() -> b
    void hide() -> c
    void show(boolean) -> a
    void hide(boolean) -> b
    void toggle(boolean,boolean,boolean) -> a
    void attachToScrollView(com.melnykov.fab.ObservableScrollView) -> a
    void attachToListView(android.widget.AbsListView,com.melnykov.fab.ScrollDirectionListener,android.widget.AbsListView$OnScrollListener) -> a
    void attachToScrollView(com.melnykov.fab.ObservableScrollView,com.melnykov.fab.ScrollDirectionListener,com.melnykov.fab.ObservableScrollView$OnScrollChangedListener) -> a
    boolean hasHoneycombApi() -> a
    void access$000(com.melnykov.fab.FloatingActionView,boolean,boolean,boolean) -> a
com.melnykov.fab.FloatingActionView$1 -> com.melnykov.fab.b:
    boolean val$visible -> a
    boolean val$animate -> b
    com.melnykov.fab.FloatingActionView this$0 -> c
    boolean onPreDraw() -> onPreDraw
com.melnykov.fab.FloatingActionView$AbsListViewScrollDetectorImpl -> com.melnykov.fab.FloatingActionView$a:
    com.melnykov.fab.ScrollDirectionListener mScrollDirectionListener -> b
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> c
    com.melnykov.fab.FloatingActionView this$0 -> a
    void setScrollDirectionListener(com.melnykov.fab.ScrollDirectionListener) -> a
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> a
    void onScrollDown() -> b
    void onScrollUp() -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void access$200(com.melnykov.fab.FloatingActionView$AbsListViewScrollDetectorImpl,com.melnykov.fab.ScrollDirectionListener) -> a
com.melnykov.fab.FloatingActionView$ScrollViewScrollDetectorImpl -> com.melnykov.fab.FloatingActionView$b:
    com.melnykov.fab.ScrollDirectionListener mScrollDirectionListener -> b
    com.melnykov.fab.ObservableScrollView$OnScrollChangedListener mOnScrollChangedListener -> c
    com.melnykov.fab.FloatingActionView this$0 -> a
    void setScrollDirectionListener(com.melnykov.fab.ScrollDirectionListener) -> a
    void setOnScrollChangedListener(com.melnykov.fab.ObservableScrollView$OnScrollChangedListener) -> a
    void onScrollDown() -> a
    void onScrollUp() -> b
    void onScrollChanged(android.widget.ScrollView,int,int,int,int) -> a
    void onScrollBottom() -> c
    void access$400(com.melnykov.fab.FloatingActionView$ScrollViewScrollDetectorImpl,com.melnykov.fab.ScrollDirectionListener) -> a
com.melnykov.fab.ObservableScrollView -> com.melnykov.fab.ObservableScrollView:
    com.melnykov.fab.ObservableScrollView$OnScrollChangedListener mOnScrollChangedListener -> a
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void setOnScrollChangedListener(com.melnykov.fab.ObservableScrollView$OnScrollChangedListener) -> setOnScrollChangedListener
com.melnykov.fab.ObservableScrollView$OnScrollChangedListener -> com.melnykov.fab.ObservableScrollView$a:
    void onScrollChanged(android.widget.ScrollView,int,int,int,int) -> a
    void onScrollBottom() -> c
com.melnykov.fab.ScrollDirectionListener -> com.melnykov.fab.c:
    void onScrollDown() -> a
    void onScrollUp() -> b
com.melnykov.fab.ScrollViewScrollDetector -> com.melnykov.fab.d:
    int mLastScrollY -> a
    int mScrollThreshold -> b
    void onScrollUp() -> b
    void onScrollDown() -> a
    void onScrollChanged(android.widget.ScrollView,int,int,int,int) -> a
    void setScrollThreshold(int) -> a
com.nineoldandroids.animation.Animator -> com.a.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    boolean isRunning() -> c
    boolean isStarted() -> d
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> b
    java.util.ArrayList getListeners() -> e
    com.nineoldandroids.animation.Animator clone() -> f
    void setTarget(java.lang.Object) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.a.a.a$a:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> d
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.a.a.b:
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
com.nineoldandroids.animation.AnimatorSet -> com.a.a.c:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    void playTogether(com.nineoldandroids.animation.Animator[]) -> a
    void setTarget(java.lang.Object) -> a
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> a
    void cancel() -> b
    boolean isRunning() -> c
    boolean isStarted() -> d
    void start() -> a
    com.nineoldandroids.animation.AnimatorSet clone() -> g
    void sortNodes() -> h
    com.nineoldandroids.animation.Animator clone() -> f
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> c
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> d
com.nineoldandroids.animation.AnimatorSet$1 -> com.a.a.d:
    boolean canceled -> a
    java.util.ArrayList val$nodesToStart -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> c
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.a.a.c$a:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
com.nineoldandroids.animation.AnimatorSet$Builder -> com.a.a.c$b:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.a.a.c$c:
    com.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.a.a.c$d:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void startIfReady(com.nineoldandroids.animation.Animator) -> e
com.nineoldandroids.animation.AnimatorSet$Node -> com.a.a.c$e:
    com.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.FloatEvaluator -> com.a.a.e:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.FloatKeyframeSet -> com.a.a.f:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.a.a.g:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.Keyframe -> com.a.a.h:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> a
    boolean hasValue() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    float getFraction() -> c
    android.view.animation.Interpolator getInterpolator() -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.a.a.h$a:
    float mValue -> d
    float getFloatValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> g
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.a.a.i:
    int mNumKeyframes -> a
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.a.a.j:
    java.util.Map PROXY_PROPERTIES -> h
    java.lang.Object mTarget -> i
    java.lang.String mPropertyName -> j
    com.nineoldandroids.util.Property mProperty -> k
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> g
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> a
    void setTarget(java.lang.Object) -> a
    void animateValue(float) -> a
    com.nineoldandroids.animation.ObjectAnimator clone() -> h
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> i
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    com.nineoldandroids.animation.Animator clone() -> f
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.a.a.k:
    com.nineoldandroids.util.Property ALPHA -> a
    com.nineoldandroids.util.Property PIVOT_X -> b
    com.nineoldandroids.util.Property PIVOT_Y -> c
    com.nineoldandroids.util.Property TRANSLATION_X -> d
    com.nineoldandroids.util.Property TRANSLATION_Y -> e
    com.nineoldandroids.util.Property ROTATION -> f
    com.nineoldandroids.util.Property ROTATION_X -> g
    com.nineoldandroids.util.Property ROTATION_Y -> h
    com.nineoldandroids.util.Property SCALE_X -> i
    com.nineoldandroids.util.Property SCALE_Y -> j
    com.nineoldandroids.util.Property SCROLL_X -> k
    com.nineoldandroids.util.Property SCROLL_Y -> l
    com.nineoldandroids.util.Property X -> m
    com.nineoldandroids.util.Property Y -> n
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.a.a.l:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.a.a.m:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.a.a.n:
    java.lang.Integer get(android.view.View) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.a.a.o:
    java.lang.Integer get(android.view.View) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.a.a.p:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.a.a.q:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.a.a.r:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.a.a.s:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.a.a.t:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.a.a.u:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.a.a.v:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.a.a.w:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.a.a.x:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.a.a.y:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PropertyValuesHolder -> com.a.a.z:
    java.lang.String mPropertyName -> a
    com.nineoldandroids.util.Property mProperty -> b
    java.lang.reflect.Method mSetter -> c
    java.lang.reflect.Method mGetter -> h
    java.lang.Class mValueType -> d
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> e
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> i
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> j
    java.lang.Class[] FLOAT_VARIANTS -> k
    java.lang.Class[] INTEGER_VARIANTS -> l
    java.lang.Class[] DOUBLE_VARIANTS -> m
    java.util.HashMap sSetterPropertyMap -> n
    java.util.HashMap sGetterPropertyMap -> o
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> f
    java.lang.Object[] mTmpValueArray -> g
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> p
    java.lang.Object mAnimatedValue -> q
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.a.a.z$1:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.a.a.z$a:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> j
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> h
    float mFloatAnimatedValue -> i
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TypeEvaluator -> com.a.a.aa:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.ValueAnimator -> com.a.a.ab:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> o
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> p
    boolean mPlayingBackwards -> q
    int mCurrentIteration -> r
    float mCurrentFraction -> s
    boolean mStartedDelay -> t
    long mDelayStartTime -> u
    int mPlayingState -> d
    boolean mRunning -> v
    boolean mStarted -> w
    boolean mInitialized -> e
    long mDuration -> x
    long mStartDelay -> y
    long sFrameDelay -> z
    int mRepeatCount -> A
    int mRepeatMode -> B
    android.view.animation.Interpolator mInterpolator -> C
    java.util.ArrayList mUpdateListeners -> D
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> g
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void setCurrentPlayTime(long) -> c
    long getCurrentPlayTime() -> j
    void setStartDelay(long) -> d
    void addUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> a
    void setInterpolator(android.view.animation.Interpolator) -> a
    void start(boolean) -> a
    void start() -> a
    void cancel() -> b
    boolean isRunning() -> c
    boolean isStarted() -> d
    void endAnimation() -> h
    void startAnimation() -> r
    boolean delayedAnimationFrame(long) -> a
    boolean animationFrame(long) -> e
    float getAnimatedFraction() -> k
    void animateValue(float) -> a
    com.nineoldandroids.animation.ValueAnimator clone() -> i
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> f
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> l
    java.lang.ThreadLocal access$100() -> m
    java.lang.ThreadLocal access$200() -> n
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> a
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$500() -> o
    java.lang.ThreadLocal access$600() -> p
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> a
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> c
    long access$1000() -> q
com.nineoldandroids.animation.ValueAnimator$1 -> com.a.a.ac:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.a.a.ad:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.a.a.ae:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.a.a.af:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.a.a.ag:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.a.a.ab$a:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.a.a.ab$b:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.util.FloatProperty -> com.a.b.a:
    void setValue(java.lang.Object,float) -> a
    void set(java.lang.Object,java.lang.Float) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.IntProperty -> com.a.b.b:
    void set(java.lang.Object,java.lang.Integer) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.Property -> com.a.b.c:
    java.lang.String mName -> a
    java.lang.Class mType -> b
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.String getName() -> a
com.nineoldandroids.view.ViewHelper -> com.a.c.a:
    void setAlpha(android.view.View,float) -> a
    void setPivotX(android.view.View,float) -> b
    void setPivotY(android.view.View,float) -> c
    void setTranslationX(android.view.View,float) -> d
    void setTranslationY(android.view.View,float) -> e
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.a.c.a$a:
    void setAlpha(android.view.View,float) -> a
    void setPivotX(android.view.View,float) -> b
    void setPivotY(android.view.View,float) -> c
    void setTranslationX(android.view.View,float) -> d
    void setTranslationY(android.view.View,float) -> e
com.nineoldandroids.view.ViewPropertyAnimator -> com.a.c.b:
    java.util.WeakHashMap ANIMATORS -> a
    com.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorHC -> com.a.c.c:
    java.lang.ref.WeakReference mView -> b
    long mDuration -> c
    boolean mDurationSet -> d
    long mStartDelay -> e
    boolean mStartDelaySet -> f
    android.view.animation.Interpolator mInterpolator -> g
    boolean mInterpolatorSet -> h
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> i
    com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener mAnimatorEventListener -> j
    java.util.ArrayList mPendingAnimations -> a
    java.lang.Runnable mAnimationStarter -> k
    java.util.HashMap mAnimatorMap -> l
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> a
    void startAnimation() -> a
    void animateProperty(int,float) -> a
    void animatePropertyBy(int,float,float) -> a
    void setValue(int,float) -> b
    float getValue(int) -> a
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> a
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> b
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> c
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorHC) -> d
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorHC,int,float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorHC$1 -> com.a.c.d:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> a
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener -> com.a.c.c$a:
    com.nineoldandroids.view.ViewPropertyAnimatorHC this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> d
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder -> com.a.c.c$b:
    int mNameConstant -> a
    float mFromValue -> b
    float mDeltaValue -> c
com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle -> com.a.c.c$c:
    int mPropertyMask -> a
    java.util.ArrayList mNameValuesHolder -> b
    boolean cancel(int) -> a
com.nineoldandroids.view.ViewPropertyAnimatorICS -> com.a.c.e:
    java.lang.ref.WeakReference mNative -> a
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorPreHC -> com.a.c.f:
    com.nineoldandroids.view.animation.AnimatorProxy mProxy -> b
    java.lang.ref.WeakReference mView -> c
    long mDuration -> d
    boolean mDurationSet -> e
    long mStartDelay -> f
    boolean mStartDelaySet -> g
    android.view.animation.Interpolator mInterpolator -> h
    boolean mInterpolatorSet -> i
    com.nineoldandroids.animation.Animator$AnimatorListener mListener -> j
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener mAnimatorEventListener -> k
    java.util.ArrayList mPendingAnimations -> a
    java.lang.Runnable mAnimationStarter -> l
    java.util.HashMap mAnimatorMap -> m
    com.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> a
    com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> a
    void startAnimation() -> a
    void animateProperty(int,float) -> a
    void animatePropertyBy(int,float,float) -> a
    void setValue(int,float) -> b
    float getValue(int) -> a
    void access$100(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> a
    com.nineoldandroids.animation.Animator$AnimatorListener access$200(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> b
    java.util.HashMap access$300(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> c
    com.nineoldandroids.animation.Animator$AnimatorListener access$202(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    java.lang.ref.WeakReference access$400(com.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> d
    void access$500(com.nineoldandroids.view.ViewPropertyAnimatorPreHC,int,float) -> a
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1 -> com.a.c.g:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> a
    void run() -> run
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener -> com.a.c.f$a:
    com.nineoldandroids.view.ViewPropertyAnimatorPreHC this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> b
    void onAnimationCancel(com.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> d
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> a
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder -> com.a.c.f$b:
    int mNameConstant -> a
    float mFromValue -> b
    float mDeltaValue -> c
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle -> com.a.c.f$c:
    int mPropertyMask -> a
    java.util.ArrayList mNameValuesHolder -> b
    boolean cancel(int) -> a
com.nineoldandroids.view.animation.AnimatorProxy -> com.a.c.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    android.graphics.Camera mCamera -> d
    boolean mHasPivot -> e
    float mAlpha -> f
    float mPivotX -> g
    float mPivotY -> h
    float mRotationX -> i
    float mRotationY -> j
    float mRotationZ -> k
    float mScaleX -> l
    float mScaleY -> m
    float mTranslationX -> n
    float mTranslationY -> o
    android.graphics.RectF mBefore -> p
    android.graphics.RectF mAfter -> q
    android.graphics.Matrix mTempMatrix -> r
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    float getPivotX() -> b
    void setPivotX(float) -> b
    float getPivotY() -> c
    void setPivotY(float) -> c
    float getRotation() -> d
    void setRotation(float) -> d
    float getRotationX() -> e
    void setRotationX(float) -> e
    float getRotationY() -> f
    void setRotationY(float) -> f
    float getScaleX() -> g
    void setScaleX(float) -> g
    float getScaleY() -> h
    void setScaleY(float) -> h
    int getScrollX() -> i
    int getScrollY() -> j
    float getTranslationX() -> k
    void setTranslationX(float) -> i
    float getTranslationY() -> l
    void setTranslationY(float) -> j
    float getX() -> m
    void setX(float) -> k
    float getY() -> n
    void setY(float) -> l
    void prepareForUpdate() -> o
    void invalidateAfterUpdate() -> p
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.b.a.a.a.a:
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.cache.disc.DiskCache -> com.b.a.a.a.b:
com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache -> com.b.a.a.a.a.a:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    java.io.File cacheDir -> b
    java.io.File reserveCacheDir -> c
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> d
    int bufferSize -> e
    android.graphics.Bitmap$CompressFormat compressFormat -> f
    int compressQuality -> g
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
    java.io.File getFile(java.lang.String) -> b
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.b.a.a.a.a.b:
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> com.b.a.a.a.a.a.a:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int maxFileCount -> i
    int valueCount -> j
    long size -> k
    int fileCount -> l
    java.io.Writer journalWriter -> m
    java.util.LinkedHashMap lruEntries -> n
    int redundantOpCount -> o
    long nextSequenceNumber -> p
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> q
    java.io.OutputStream NULL_OUTPUT_STREAM -> r
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> a
    void readJournal() -> c
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> d
    void rebuildJournal() -> e
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> b
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> a
    void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> f
    boolean remove(java.lang.String) -> c
    void checkNotClosed() -> g
    void close() -> close
    void trimToSize() -> h
    void trimToFileCount() -> i
    void delete() -> a
    void validateKey(java.lang.String) -> e
    java.io.Writer access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> a
    void access$100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> b
    void access$200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> c
    boolean access$300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> d
    void access$400(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> e
    int access$502(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> a
    int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> f
    java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> g
    java.io.OutputStream access$2100() -> b
    void access$2300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> com.b.a.a.a.a.a.b:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> com.b.a.a.a.a.a.c:
    void write(int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> com.b.a.a.a.a.a.a$a:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$1500(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> a
    boolean[] access$1600(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> b
    boolean access$2402(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> com.b.a.a.a.a.a.a$a$a:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> com.b.a.a.a.a.a.a$b:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> a
    void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> a
    long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> b
    java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> c
    boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> d
    long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> e
    long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> com.b.a.a.a.a.a.a$c:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.File[] files -> d
    java.io.InputStream[] ins -> e
    long[] lengths -> f
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> a
    java.io.File getFile(int) -> a
    void close() -> close
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache -> com.b.a.a.a.a.a.d:
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> a
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache -> b
    java.io.File reserveCacheDir -> g
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> c
    int bufferSize -> d
    android.graphics.Bitmap$CompressFormat compressFormat -> e
    int compressQuality -> f
    void initCache(java.io.File,java.io.File,long,int) -> a
    java.io.File get(java.lang.String) -> a
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> a
    boolean save(java.lang.String,android.graphics.Bitmap) -> a
    java.lang.String getKey(java.lang.String) -> b
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> com.b.a.a.a.a.a.e:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> a
    void fillBuf() -> b
    java.nio.charset.Charset access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> a
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> com.b.a.a.a.a.a.f:
    com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> com.b.a.a.a.a.a.g:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    void deleteContents(java.io.File) -> a
    void closeQuietly(java.io.Closeable) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.b.a.a.a.b.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.b.a.a.a.b.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.b.a.a.a.b.c:
    java.lang.String generate(java.lang.String) -> a
    byte[] getMD5(byte[]) -> a
com.nostra13.universalimageloader.cache.memory.MemoryCache -> com.b.a.a.b.a:
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.b.a.a.b.b:
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.b.a.a.b.a.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    android.graphics.Bitmap remove(java.lang.String) -> b
    java.util.Collection keys() -> a
    java.lang.Object remove(java.lang.Object) -> b
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.b.a.a.b.a.b:
    java.util.LinkedHashMap map -> a
    int maxSize -> b
    int size -> c
    android.graphics.Bitmap get(java.lang.String) -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    void trimToSize(int) -> a
    android.graphics.Bitmap remove(java.lang.String) -> b
    java.util.Collection keys() -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> b
    java.lang.String toString() -> toString
    java.lang.Object remove(java.lang.Object) -> b
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.b.a.b.a:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    java.util.concurrent.Executor createTaskDistributor() -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> b
    com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> a
    java.io.File createReserveDiskCacheDir(android.content.Context) -> b
    com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(int) -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> a
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> a
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> c
    java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.b.a.b.a$a:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> a
    java.lang.ThreadGroup group -> b
    java.util.concurrent.atomic.AtomicInteger threadNumber -> c
    java.lang.String namePrefix -> d
    int threadPriority -> e
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.b.a.b.b:
    android.graphics.Bitmap bitmap -> a
    java.lang.String imageUri -> b
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> c
    java.lang.String memoryCacheKey -> d
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> e
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> f
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> g
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> h
    void run() -> run
    boolean isViewWasReused() -> a
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.b.a.b.c:
    int imageResOnLoading -> a
    int imageResForEmptyUri -> b
    int imageResOnFail -> c
    android.graphics.drawable.Drawable imageOnLoading -> d
    android.graphics.drawable.Drawable imageForEmptyUri -> e
    android.graphics.drawable.Drawable imageOnFail -> f
    boolean resetViewBeforeLoading -> g
    boolean cacheInMemory -> h
    boolean cacheOnDisk -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> j
    android.graphics.BitmapFactory$Options decodingOptions -> k
    int delayBeforeLoading -> l
    boolean considerExifParams -> m
    java.lang.Object extraForDownloader -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> q
    android.os.Handler handler -> r
    boolean isSyncLoading -> s
    boolean shouldShowImageOnLoading() -> a
    boolean shouldShowImageForEmptyUri() -> b
    boolean shouldShowImageOnFail() -> c
    boolean shouldPreProcess() -> d
    boolean shouldPostProcess() -> e
    boolean shouldDelayBeforeLoading() -> f
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> a
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> b
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> c
    boolean isResetViewBeforeLoading() -> g
    boolean isCacheInMemory() -> h
    boolean isCacheOnDisk() -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> j
    android.graphics.BitmapFactory$Options getDecodingOptions() -> k
    int getDelayBeforeLoading() -> l
    boolean isConsiderExifParams() -> m
    java.lang.Object getExtraForDownloader() -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> q
    android.os.Handler getHandler() -> r
    boolean isSyncLoading() -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> t
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> b
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> c
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> d
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> e
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> f
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> g
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> h
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> j
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> k
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> l
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> m
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> q
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> r
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> s
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.b.a.b.c$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.b.a.b.c$a:
    int imageResOnLoading -> a
    int imageResForEmptyUri -> b
    int imageResOnFail -> c
    android.graphics.drawable.Drawable imageOnLoading -> d
    android.graphics.drawable.Drawable imageForEmptyUri -> e
    android.graphics.drawable.Drawable imageOnFail -> f
    boolean resetViewBeforeLoading -> g
    boolean cacheInMemory -> h
    boolean cacheOnDisk -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> j
    android.graphics.BitmapFactory$Options decodingOptions -> k
    int delayBeforeLoading -> l
    boolean considerExifParams -> m
    java.lang.Object extraForDownloader -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> q
    android.os.Handler handler -> r
    boolean isSyncLoading -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> c
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> a
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> b
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> c
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> d
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> e
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> f
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> g
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> h
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> i
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> j
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> k
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> l
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> m
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> n
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> o
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> p
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> q
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> r
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> s
com.nostra13.universalimageloader.core.ImageLoader -> com.b.a.b.d:
    java.lang.String TAG -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> b
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> c
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener emptyListener -> d
    com.nostra13.universalimageloader.core.ImageLoader instance -> e
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> a
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> a
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    void checkConfiguration() -> b
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.b.a.b.e:
    android.content.res.Resources resources -> a
    int maxImageWidthForMemoryCache -> b
    int maxImageHeightForMemoryCache -> c
    int maxImageWidthForDiskCache -> d
    int maxImageHeightForDiskCache -> e
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> f
    java.util.concurrent.Executor taskExecutor -> g
    java.util.concurrent.Executor taskExecutorForCachedImages -> h
    boolean customExecutor -> i
    boolean customExecutorForCachedImages -> j
    int threadPoolSize -> k
    int threadPriority -> l
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> m
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> n
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> o
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> p
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> q
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> r
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> s
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> t
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.b.a.b.e$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.b.a.b.e$a:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> a
    android.content.Context context -> b
    int maxImageWidthForMemoryCache -> c
    int maxImageHeightForMemoryCache -> d
    int maxImageWidthForDiskCache -> e
    int maxImageHeightForDiskCache -> f
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> g
    java.util.concurrent.Executor taskExecutor -> h
    java.util.concurrent.Executor taskExecutorForCachedImages -> i
    boolean customExecutor -> j
    boolean customExecutorForCachedImages -> k
    int threadPoolSize -> l
    int threadPriority -> m
    boolean denyCacheImageMultipleSizesInMemory -> n
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> o
    int memoryCacheSize -> p
    long diskCacheSize -> q
    int diskCacheFileCount -> r
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> s
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> t
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator diskCacheFileNameGenerator -> u
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> v
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> w
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> x
    boolean writeLogs -> y
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> b
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> b
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> c
    void initEmptyFieldsWithDefaultValues() -> d
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> a
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> b
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> c
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> d
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> e
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> f
    java.util.concurrent.Executor access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> g
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> h
    int access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> i
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> j
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> k
    com.nostra13.universalimageloader.cache.disc.DiskCache access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> l
    com.nostra13.universalimageloader.cache.memory.MemoryCache access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> m
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> n
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> o
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> p
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> q
    boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> r
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> s
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> com.b.a.b.e$b:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> com.b.a.b.e$c:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.b.a.b.f:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> a
    java.util.concurrent.Executor taskExecutor -> b
    java.util.concurrent.Executor taskExecutorForCachedImages -> c
    java.util.concurrent.Executor taskDistributor -> d
    java.util.Map cacheKeysForImageAwares -> e
    java.util.Map uriLocks -> f
    java.util.concurrent.atomic.AtomicBoolean paused -> g
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> h
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> i
    java.lang.Object pauseLock -> j
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> a
    void initExecutorsIfNeed() -> e
    java.util.concurrent.Executor createTaskExecutor() -> f
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> a
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> a
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> b
    void fireCallback(java.lang.Runnable) -> a
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> a
    java.util.concurrent.atomic.AtomicBoolean getPause() -> a
    java.lang.Object getPauseLock() -> b
    boolean isNetworkDenied() -> c
    boolean isSlowNetwork() -> d
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> a
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> b
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> c
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.b.a.b.g:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> a
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> b
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.b.a.b.h:
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> b
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> f
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> g
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> h
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.b.a.b.i:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> f
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> g
    android.os.Handler handler -> h
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> k
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> l
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> m
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> n
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> b
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> o
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> c
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> d
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> e
    boolean syncLoading -> p
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> q
    void run() -> run
    boolean waitIfPaused() -> b
    boolean delayIfNeed() -> c
    android.graphics.Bitmap tryLoadBitmap() -> d
    android.graphics.Bitmap decodeImage(java.lang.String) -> a
    boolean tryCacheImageOnDisk() -> e
    boolean downloadImage() -> f
    boolean resizeAndSaveImage(int,int) -> b
    boolean onBytesCopied(int,int) -> a
    boolean fireProgressEvent(int,int) -> c
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> a
    void fireCancelEvent() -> g
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> h
    void checkTaskNotActual() -> i
    boolean isTaskNotActual() -> j
    void checkViewCollected() -> k
    boolean isViewCollected() -> l
    void checkViewReused() -> m
    boolean isViewReused() -> n
    void checkTaskInterrupted() -> o
    boolean isTaskInterrupted() -> p
    java.lang.String getLoadingUri() -> a
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.b.a.b.j:
    int val$current -> a
    int val$total -> b
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> c
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.b.a.b.k:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> a
    java.lang.Throwable val$failCause -> b
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> c
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.b.a.b.l:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.b.a.b.i$a:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.b.a.b.m:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> a
    android.graphics.Bitmap bitmap -> b
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> c
    android.os.Handler handler -> d
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.b.a.b.a.a:
    java.io.InputStream stream -> a
    int length -> b
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> com.b.a.b.a.b:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> a
    java.lang.Throwable cause -> b
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.b.a.b.a.b$a:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> a
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> b
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> c
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> d
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> e
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> f
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.b.a.b.a.c:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.b.a.b.a.d:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> a
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE_SAFE -> b
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> d
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> e
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> g
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.b.a.b.a.e:
    int width -> a
    int height -> b
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> a
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> a
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.b.a.b.a.f:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> a
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> b
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> c
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> d
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.b.a.b.a.g:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> a
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> b
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> c
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.b.a.b.a.h:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> c
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.b.a.b.a.h$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> a
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.b.a.b.a.a.a:
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.b.a.b.a.a.b:
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.b.a.b.a.a.c:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.b.a.b.a.a.d:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> b
    int count -> d
    int capacity -> e
    java.util.concurrent.locks.ReentrantLock lock -> c
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.Condition notFull -> g
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> c
    java.lang.Object unlinkFirst() -> f
    java.lang.Object unlinkLast() -> g
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    void addLast(java.lang.Object) -> a
    boolean offerFirst(java.lang.Object) -> b
    boolean offerLast(java.lang.Object) -> c
    void putLast(java.lang.Object) -> d
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object removeFirst() -> a
    java.lang.Object pollFirst() -> b
    java.lang.Object takeFirst() -> c
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object getFirst() -> d
    java.lang.Object peekFirst() -> e
    boolean removeFirstOccurrence(java.lang.Object) -> e
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.b.a.b.a.a.d$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.b.a.b.a.a.d$a:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> a
    java.lang.Object nextItem -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> c
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    void advance() -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.b.a.b.a.a.d$b:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.b.a.b.a.a.d$c:
    java.lang.Object item -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> c
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.b.a.b.b.a:
    boolean loggingEnabled -> a
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> b
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> a
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> a
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> b
    android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> a
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.b.a.b.b.a$a:
    int rotation -> a
    boolean flipHorizontal -> b
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.b.a.b.b.a$b:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> a
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> b
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.b.a.b.b.b:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> a
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.b.a.b.b.c:
    java.lang.String imageKey -> a
    java.lang.String imageUri -> b
    java.lang.String originalImageUri -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> e
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> f
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> g
    java.lang.Object extraForDownloader -> h
    boolean considerExifParams -> i
    android.graphics.BitmapFactory$Options decodingOptions -> j
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> a
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> b
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> c
    java.lang.String getImageKey() -> a
    java.lang.String getImageUri() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> d
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> f
    java.lang.Object getExtraForDownloader() -> g
    boolean shouldConsiderExifParams() -> h
    android.graphics.BitmapFactory$Options getDecodingOptions() -> i
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.b.a.b.c.a:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.b.a.b.c.b:
    int cornerRadius -> a
    int margin -> b
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.b.a.b.c.b$a:
    float cornerRadius -> a
    int margin -> b
    android.graphics.RectF mRect -> c
    android.graphics.RectF mBitmapRect -> d
    android.graphics.BitmapShader bitmapShader -> e
    android.graphics.Paint paint -> f
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.b.a.b.c.c:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> a
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.b.a.b.d.a:
    android.content.Context context -> a
    int connectTimeout -> b
    int readTimeout -> c
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> b
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> c
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> d
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> e
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> f
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> g
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> h
    boolean isVideoUri(android.net.Uri) -> a
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.b.a.b.d.a$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> a
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.b.a.b.d.b:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.b.a.b.d.b$a:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> b
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> c
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> d
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> f
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> g
    java.lang.String scheme -> h
    java.lang.String uriPrefix -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> a
    boolean belongsTo(java.lang.String) -> d
    java.lang.String wrap(java.lang.String) -> b
    java.lang.String crop(java.lang.String) -> c
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.b.a.b.e.a:
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.view.View getWrappedView() -> d
    boolean isCollected() -> e
    int getId() -> f
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> a
    boolean setImageBitmap(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.b.a.b.e.b:
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.widget.ImageView getWrappedView() -> g
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> a
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> a
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> a
    android.view.View getWrappedView() -> d
com.nostra13.universalimageloader.core.imageaware.ViewAware -> com.b.a.b.e.c:
    java.lang.ref.Reference viewRef -> a
    boolean checkActualViewSize -> b
    int getWidth() -> a
    int getHeight() -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> c
    android.view.View getWrappedView() -> d
    boolean isCollected() -> e
    int getId() -> f
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> a
    boolean setImageBitmap(android.graphics.Bitmap) -> a
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> a
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> a
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> com.b.a.b.f.a:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> com.b.a.b.f.b:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> a
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.b.a.b.f.c:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.b.a.b.g.a:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.b.a.c.a:
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> a
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> a
    int considerMaxTextureSize(int,int,int,boolean) -> a
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> b
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.b.a.c.a$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> a
com.nostra13.universalimageloader.utils.IoUtils -> com.b.a.c.b:
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> a
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> a
    void readAndCloseStream(java.io.InputStream) -> a
    void closeSilently(java.io.Closeable) -> a
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.b.a.c.b$a:
    boolean onBytesCopied(int,int) -> a
com.nostra13.universalimageloader.utils.L -> com.b.a.c.c:
    boolean writeDebugLogs -> a
    boolean writeLogs -> b
    void writeDebugLogs(boolean) -> a
    void d(java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.Object[]) -> d
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.b.a.c.d:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.b.a.c.e:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.b.a.c.f:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getCacheDirectory(android.content.Context,boolean) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getExternalCacheDir(android.content.Context) -> c
    boolean hasExternalStoragePermission(android.content.Context) -> d
com.sina.sso.RemoteSSO -> com.sina.sso.RemoteSSO:
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
com.sina.sso.RemoteSSO$Stub -> com.sina.sso.RemoteSSO$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getActivityName -> TRANSACTION_getActivityName
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> com.sina.sso.RemoteSSO$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
com.squareup.otto.AnnotatedHandlerFinder -> com.squareup.otto.a:
    java.util.Map PRODUCERS_CACHE -> a
    java.util.Map SUBSCRIBERS_CACHE -> b
    void loadAnnotatedMethods(java.lang.Class) -> a
    java.util.Map findAllProducers(java.lang.Object) -> a
    java.util.Map findAllSubscribers(java.lang.Object) -> b
com.squareup.otto.Bus -> com.squareup.otto.b:
    java.util.concurrent.ConcurrentMap handlersByType -> a
    java.util.concurrent.ConcurrentMap producersByType -> b
    java.lang.String identifier -> c
    com.squareup.otto.ThreadEnforcer enforcer -> d
    com.squareup.otto.HandlerFinder handlerFinder -> e
    java.lang.ThreadLocal eventsToDispatch -> f
    java.lang.ThreadLocal isDispatching -> g
    java.util.Map flattenHierarchyCache -> h
    java.lang.String toString() -> toString
    void register(java.lang.Object) -> a
    void dispatchProducerResultToHandler(com.squareup.otto.EventHandler,com.squareup.otto.EventProducer) -> a
    void unregister(java.lang.Object) -> b
    void post(java.lang.Object) -> c
    void enqueueEvent(java.lang.Object,com.squareup.otto.EventHandler) -> a
    void dispatchQueuedEvents() -> a
    void dispatch(java.lang.Object,com.squareup.otto.EventHandler) -> b
    com.squareup.otto.EventProducer getProducerForEventType(java.lang.Class) -> a
    java.util.Set getHandlersForEventType(java.lang.Class) -> b
    java.util.Set flattenHierarchy(java.lang.Class) -> c
    java.util.Set getClassesFor(java.lang.Class) -> d
    void throwRuntimeException(java.lang.String,java.lang.reflect.InvocationTargetException) -> a
com.squareup.otto.Bus$1 -> com.squareup.otto.c:
    com.squareup.otto.Bus this$0 -> a
    java.util.concurrent.ConcurrentLinkedQueue initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.squareup.otto.Bus$2 -> com.squareup.otto.d:
    com.squareup.otto.Bus this$0 -> a
    java.lang.Boolean initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.squareup.otto.Bus$EventWithHandler -> com.squareup.otto.b$a:
    java.lang.Object event -> a
    com.squareup.otto.EventHandler handler -> b
com.squareup.otto.DeadEvent -> com.squareup.otto.e:
    java.lang.Object source -> a
    java.lang.Object event -> b
com.squareup.otto.EventHandler -> com.squareup.otto.f:
    java.lang.Object target -> a
    java.lang.reflect.Method method -> b
    int hashCode -> c
    boolean valid -> d
    boolean isValid() -> a
    void invalidate() -> b
    void handleEvent(java.lang.Object) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.squareup.otto.EventProducer -> com.squareup.otto.g:
    java.lang.Object target -> a
    java.lang.reflect.Method method -> b
    int hashCode -> c
    boolean valid -> d
    boolean isValid() -> a
    void invalidate() -> b
    java.lang.Object produceEvent() -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.squareup.otto.HandlerFinder -> com.squareup.otto.h:
    com.squareup.otto.HandlerFinder ANNOTATED -> a
    java.util.Map findAllProducers(java.lang.Object) -> a
    java.util.Map findAllSubscribers(java.lang.Object) -> b
com.squareup.otto.HandlerFinder$1 -> com.squareup.otto.i:
    java.util.Map findAllProducers(java.lang.Object) -> a
    java.util.Map findAllSubscribers(java.lang.Object) -> b
com.squareup.otto.Produce -> com.squareup.otto.Produce:
com.squareup.otto.Subscribe -> com.squareup.otto.Subscribe:
com.squareup.otto.ThreadEnforcer -> com.squareup.otto.j:
    com.squareup.otto.ThreadEnforcer ANY -> a
    com.squareup.otto.ThreadEnforcer MAIN -> b
    void enforce(com.squareup.otto.Bus) -> a
com.squareup.otto.ThreadEnforcer$1 -> com.squareup.otto.k:
    void enforce(com.squareup.otto.Bus) -> a
com.squareup.otto.ThreadEnforcer$2 -> com.squareup.otto.l:
    void enforce(com.squareup.otto.Bus) -> a
com.ultrapower.mcs.engine.ITransportCallback -> com.ultrapower.mcs.engine.a:
com.ultrapower.mcs.engine.ITransportListener -> com.ultrapower.mcs.engine.b:
com.ultrapower.mcs.engine.IVideoObserver -> com.ultrapower.mcs.engine.c:
com.ultrapower.mcs.engine.TransportType -> com.ultrapower.mcs.engine.d:
    com.ultrapower.mcs.engine.TransportType kUdpGernal -> a
    com.ultrapower.mcs.engine.TransportType kUdpRelay -> b
    com.ultrapower.mcs.engine.TransportType kExternal -> c
    com.ultrapower.mcs.engine.TransportType kExternalOriginal -> d
    int value -> e
    com.ultrapower.mcs.engine.TransportType[] $VALUES -> f
    com.ultrapower.mcs.engine.TransportType[] values() -> values
    com.ultrapower.mcs.engine.TransportType valueOf(java.lang.String) -> valueOf
    int getValue() -> a
com.ultrapower.mcs.engine.UMCS -> com.ultrapower.mcs.engine.UMCS:
    android.content.Context mContext -> d
    int currentCameraIndex -> e
    android.view.ViewGroup localContainer -> a
    android.view.SurfaceView localSv -> b
    com.ultrapower.mcs.engine.IVideoObserver remoteVideoObserver -> f
    com.ultrapower.mcs.engine.IVideoObserver localVideoObserver -> g
    com.ultrapower.mcs.engine.ITransportListener transportListener -> h
    com.ultrapower.mcs.engine.ITransportCallback transportCallback -> i
    int oldMode -> j
    com.ultrapower.mcs.engine.TransportType transportType -> k
    boolean localOnTop -> c
    int Init(com.ultrapower.mcs.engine.UmcsConfig) -> a
    int Init(android.content.Context,int,int,java.lang.String) -> Init
    int SetTraceFilePath(java.lang.String,int) -> SetTraceFilePath
    int Terminate() -> a
    int Fini() -> Fini
    int SetLoudSpeakerEnable(boolean) -> a
    int SetLoudSpeakerEnable(int) -> SetLoudSpeakerEnable
    int CreateLocalAudio(int) -> CreateLocalAudio
    int CreateRemoteAudio(int) -> CreateRemoteAudio
    int StartSendLocalAudio(int) -> StartSendLocalAudio
    int StopSendLocalAudio(int) -> StopSendLocalAudio
    int StartRecvRemoteAudio(int) -> StartRecvRemoteAudio
    int SetRotation(int,int) -> SetRotation
    int StartTransport(java.lang.String,int,java.lang.String,int,java.lang.Object,com.ultrapower.mcs.engine.ITransportListener) -> a
    int StartTransport(int,java.lang.String,int,java.lang.String,int,java.lang.Object) -> StartTransport
    void SetRotation(int) -> a
    void OnOrientationChanged(int) -> b
com.ultrapower.mcs.engine.UmcsConfig -> com.ultrapower.mcs.engine.e:
    com.ultrapower.mcs.engine.TransportType transportType -> a
    com.ultrapower.mcs.engine.ITransportCallback transportCallback -> b
    int traceFilter -> c
    boolean isMultiMode -> d
    com.ultrapower.mcs.engine.TransportType getTransportType() -> a
    void setTransportType(com.ultrapower.mcs.engine.TransportType) -> a
    com.ultrapower.mcs.engine.ITransportCallback getTransportCallback() -> b
    int getTraceFilter() -> c
    void setTraceFilter(int) -> a
    boolean isMultiMode() -> d
    void setMultiMode(boolean) -> a
com.ultrapower.mcs.engine.internal.UMCSInternal -> com.ultrapower.mcs.engine.internal.UMCSInternal:
    int SetECEnable(int,int) -> SetECEnable
    int SetNSEnable(int,int) -> SetNSEnable
    int SetHighPassFilterEnable(int) -> SetHighPassFilterEnable
com.ultrapower.mcs.engine.video.IOrientationChangedObserver -> com.ultrapower.mcs.engine.a.a:
    void OnOrientationChanged(int) -> b
com.ultrapower.mcs.engine.video.OrientationChangedNotify -> com.ultrapower.mcs.engine.a.b:
    com.ultrapower.mcs.engine.video.OrientationChangedNotify _self -> a
    android.view.OrientationEventListener _OrientationEventListener -> b
    int _lastOrientation -> c
    java.util.ArrayList _observers -> d
    com.ultrapower.mcs.engine.video.OrientationChangedNotify Instances() -> a
    void FireOrientationChanged(int) -> a
    void Start(android.content.Context) -> a
    void Stop() -> b
com.ultrapower.mcs.engine.video.OrientationChangedNotify$1 -> com.ultrapower.mcs.engine.a.c:
    com.ultrapower.mcs.engine.video.OrientationChangedNotify this$0 -> a
    void onOrientationChanged(int) -> onOrientationChanged
com.umeng.analytics.AnalyticsConfig -> com.c.a.a:
    java.lang.String a -> o
    java.lang.String b -> p
    java.lang.String mWrapperType -> a
    java.lang.String mWrapperVersion -> b
    int mVerticalType -> c
    java.lang.String GPU_VENDER -> d
    java.lang.String GPU_RENDERER -> e
    com.umeng.analytics.Gender sGender -> f
    int sAge -> g
    java.lang.String sId -> h
    java.lang.String sSource -> i
    double[] c -> q
    int[] d -> r
    boolean ACTIVITY_DURATION_OPEN -> j
    boolean COMPRESS_DATA -> k
    boolean ENABLE_MEMORY_BUFFER -> l
    boolean CATCH_EXCEPTION -> m
    long kContinueSessionMillis -> n
    void setChannel(java.lang.String) -> a
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    double[] getLocation() -> a
    int[] getReportPolicy(android.content.Context) -> c
com.umeng.analytics.Gender -> com.c.a.b:
    com.umeng.analytics.Gender Male -> a
    com.umeng.analytics.Gender Female -> b
    com.umeng.analytics.Gender Unknown -> c
    int value -> d
    com.umeng.analytics.Gender[] a -> e
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
    u.aly.ap transGender(com.umeng.analytics.Gender) -> a
com.umeng.analytics.Gender$1 -> com.c.a.c:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$2 -> com.c.a.d:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$3 -> com.c.a.e:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$4 -> com.c.a.b$1:
    int[] a -> a
com.umeng.analytics.MobclickAgent -> com.c.a.f:
    com.umeng.analytics.c b -> a
    void onPageStart(java.lang.String) -> a
    void onPageEnd(java.lang.String) -> b
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void onEvent(android.content.Context,java.lang.String) -> a
com.umeng.analytics.ReportPolicy -> com.c.a.g:
com.umeng.analytics.ReportPolicy$a -> com.c.a.g$a:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$b -> com.c.a.g$b:
    long a -> a
    long b -> b
    u.aly.w c -> c
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$c -> com.c.a.g$c:
    int a -> a
    u.aly.q b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$d -> com.c.a.g$d:
    long a -> a
    u.aly.w b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$e -> com.c.a.g$e:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$f -> com.c.a.g$f:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.c.a.h:
    java.lang.String[] f -> a
    java.lang.String[] g -> b
com.umeng.analytics.b -> com.c.a.i:
    void a() -> a
    void b() -> b
com.umeng.analytics.c -> com.c.a.j:
    com.umeng.analytics.onlineconfig.a a -> a
    android.content.Context b -> b
    com.umeng.analytics.b c -> c
    u.aly.m d -> d
    u.aly.z e -> e
    u.aly.v f -> f
    u.aly.n g -> g
    u.aly.k h -> h
    boolean i -> i
    void f(android.content.Context) -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(android.content.Context) -> a
    void c(android.content.Context) -> b
    void g(android.content.Context) -> d
    void h(android.content.Context) -> e
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(java.lang.Throwable) -> a
    void a(com.umeng.analytics.c,android.content.Context) -> a
    void b(com.umeng.analytics.c,android.content.Context) -> b
com.umeng.analytics.c$1 -> com.c.a.k:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    void a() -> a
com.umeng.analytics.c$2 -> com.c.a.l:
    android.content.Context a -> a
    com.umeng.analytics.c b -> b
    void a() -> a
com.umeng.analytics.d -> com.c.a.m:
    java.util.concurrent.ExecutorService a -> a
    long b -> b
    java.util.concurrent.ExecutorService c -> c
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
com.umeng.analytics.e -> com.c.a.n:
    void run() -> run
    void a() -> a
com.umeng.analytics.f -> com.c.a.o:
    com.umeng.analytics.f a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    long d -> d
    long e -> e
    com.umeng.analytics.f a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    int[] a() -> a
    byte[] b() -> b
    void a(byte[]) -> a
    void c() -> c
    byte[] d() -> d
    void b(byte[]) -> b
    void e() -> e
    boolean f() -> f
    android.content.SharedPreferences g() -> g
    java.lang.String l() -> h
    java.lang.String m() -> i
    java.lang.String n() -> j
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.c.a.a.a:
com.umeng.analytics.onlineconfig.a -> com.c.a.a.b:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener k -> d
    com.umeng.analytics.onlineconfig.c l -> e
    long m -> f
com.umeng.analytics.onlineconfig.c -> com.c.a.a.c:
de.greenrobot.dao.AbstractDao -> de.greenrobot.a.a:
    android.database.sqlite.SQLiteDatabase db -> db
    de.greenrobot.dao.internal.DaoConfig config -> config
    de.greenrobot.dao.identityscope.IdentityScope identityScope -> identityScope
    de.greenrobot.dao.identityscope.IdentityScopeLong identityScopeLong -> identityScopeLong
    de.greenrobot.dao.internal.TableStatements statements -> statements
    de.greenrobot.dao.AbstractDaoSession session -> session
    int pkOrdinal -> pkOrdinal
    de.greenrobot.dao.AbstractDaoSession getSession() -> getSession
    de.greenrobot.dao.internal.TableStatements getStatements() -> getStatements
    java.lang.String getTablename() -> getTablename
    de.greenrobot.dao.Property[] getProperties() -> getProperties
    de.greenrobot.dao.Property getPkProperty() -> getPkProperty
    java.lang.String[] getAllColumns() -> getAllColumns
    java.lang.String[] getPkColumns() -> getPkColumns
    java.lang.String[] getNonPkColumns() -> getNonPkColumns
    java.lang.Object load(java.lang.Object) -> load
    java.lang.Object loadByRowId(long) -> loadByRowId
    java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor) -> loadUniqueAndCloseCursor
    java.lang.Object loadUnique(android.database.Cursor) -> loadUnique
    java.util.List loadAll() -> loadAll
    boolean detach(java.lang.Object) -> detach
    java.util.List loadAllAndCloseCursor(android.database.Cursor) -> loadAllAndCloseCursor
    void insertInTx(java.lang.Iterable) -> insertInTx
    void insertInTx(java.lang.Object[]) -> insertInTx
    void insertInTx(java.lang.Iterable,boolean) -> insertInTx
    void insertOrReplaceInTx(java.lang.Iterable,boolean) -> insertOrReplaceInTx
    void insertOrReplaceInTx(java.lang.Iterable) -> insertOrReplaceInTx
    void insertOrReplaceInTx(java.lang.Object[]) -> insertOrReplaceInTx
    void executeInsertInTx(android.database.sqlite.SQLiteStatement,java.lang.Iterable,boolean) -> executeInsertInTx
    long insert(java.lang.Object) -> insert
    long insertWithoutSettingPk(java.lang.Object) -> insertWithoutSettingPk
    long insertOrReplace(java.lang.Object) -> insertOrReplace
    long executeInsert(java.lang.Object,android.database.sqlite.SQLiteStatement) -> executeInsert
    void updateKeyAfterInsertAndAttach(java.lang.Object,long,boolean) -> updateKeyAfterInsertAndAttach
    java.util.List loadAllFromCursor(android.database.Cursor) -> loadAllFromCursor
    java.lang.Object loadCurrent(android.database.Cursor,int,boolean) -> loadCurrent
    java.lang.Object loadCurrentOther(de.greenrobot.dao.AbstractDao,android.database.Cursor,int) -> loadCurrentOther
    java.util.List queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    de.greenrobot.dao.query.Query queryRawCreate(java.lang.String,java.lang.Object[]) -> queryRawCreate
    de.greenrobot.dao.query.Query queryRawCreateListArgs(java.lang.String,java.util.Collection) -> queryRawCreateListArgs
    void deleteAll() -> deleteAll
    void delete(java.lang.Object) -> delete
    void deleteByKey(java.lang.Object) -> deleteByKey
    void deleteByKeyInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement) -> deleteByKeyInsideSynchronized
    void deleteInTxInternal(java.lang.Iterable,java.lang.Iterable) -> deleteInTxInternal
    void deleteInTx(java.lang.Iterable) -> deleteInTx
    void deleteInTx(java.lang.Object[]) -> deleteInTx
    void deleteByKeyInTx(java.lang.Iterable) -> deleteByKeyInTx
    void deleteByKeyInTx(java.lang.Object[]) -> deleteByKeyInTx
    void refresh(java.lang.Object) -> refresh
    void update(java.lang.Object) -> update
    de.greenrobot.dao.query.QueryBuilder queryBuilder() -> queryBuilder
    void updateInsideSynchronized(java.lang.Object,android.database.sqlite.SQLiteStatement,boolean) -> updateInsideSynchronized
    void attachEntity(java.lang.Object,java.lang.Object,boolean) -> attachEntity
    void attachEntity(java.lang.Object) -> attachEntity
    void updateInTx(java.lang.Iterable) -> updateInTx
    void updateInTx(java.lang.Object[]) -> updateInTx
    void assertSinglePk() -> assertSinglePk
    long count() -> count
    java.lang.Object getKeyVerified(java.lang.Object) -> getKeyVerified
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    java.lang.Object getKey(java.lang.Object) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
de.greenrobot.dao.AbstractDaoMaster -> de.greenrobot.a.b:
    android.database.sqlite.SQLiteDatabase db -> db
    int schemaVersion -> schemaVersion
    java.util.Map daoConfigMap -> daoConfigMap
    void registerDaoClass(java.lang.Class) -> registerDaoClass
    int getSchemaVersion() -> getSchemaVersion
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    de.greenrobot.dao.AbstractDaoSession newSession() -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
de.greenrobot.dao.AbstractDaoSession -> de.greenrobot.a.c:
    android.database.sqlite.SQLiteDatabase db -> db
    java.util.Map entityToDao -> entityToDao
    void registerDao(java.lang.Class,de.greenrobot.dao.AbstractDao) -> registerDao
    long insert(java.lang.Object) -> insert
    long insertOrReplace(java.lang.Object) -> insertOrReplace
    void refresh(java.lang.Object) -> refresh
    void update(java.lang.Object) -> update
    void delete(java.lang.Object) -> delete
    void deleteAll(java.lang.Class) -> deleteAll
    java.lang.Object load(java.lang.Class,java.lang.Object) -> load
    java.util.List loadAll(java.lang.Class) -> loadAll
    java.util.List queryRaw(java.lang.Class,java.lang.String,java.lang.String[]) -> queryRaw
    de.greenrobot.dao.query.QueryBuilder queryBuilder(java.lang.Class) -> queryBuilder
    de.greenrobot.dao.AbstractDao getDao(java.lang.Class) -> getDao
    void runInTx(java.lang.Runnable) -> runInTx
    java.lang.Object callInTx(java.util.concurrent.Callable) -> callInTx
    java.lang.Object callInTxNoException(java.util.concurrent.Callable) -> callInTxNoException
    android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    de.greenrobot.dao.async.AsyncSession startAsyncSession() -> startAsyncSession
de.greenrobot.dao.DaoException -> de.greenrobot.a.d:
    void safeInitCause(java.lang.Throwable) -> a
de.greenrobot.dao.DaoLog -> de.greenrobot.a.e:
    int d(java.lang.String) -> a
    int i(java.lang.String) -> b
    int w(java.lang.String) -> c
    int w(java.lang.String,java.lang.Throwable) -> a
    int e(java.lang.String,java.lang.Throwable) -> b
de.greenrobot.dao.IQueryDaoAccess -> de.greenrobot.a.f:
    java.util.List loadAllAndCloseCursor(android.database.Cursor) -> a
    java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor) -> b
de.greenrobot.dao.IQueryDaoAccess$InternalQueryDaoAccess -> de.greenrobot.a.f$a:
    de.greenrobot.dao.AbstractDao dao -> a
    java.util.List loadAllAndCloseCursor(android.database.Cursor) -> a
    java.lang.Object loadUniqueAndCloseCursor(android.database.Cursor) -> b
    de.greenrobot.dao.internal.TableStatements getStatements(de.greenrobot.dao.AbstractDao) -> a
de.greenrobot.dao.Property -> de.greenrobot.a.g:
    int ordinal -> a
    java.lang.Class type -> b
    java.lang.String name -> c
    boolean primaryKey -> d
    java.lang.String columnName -> e
    java.lang.String tableName -> f
    java.lang.String toString() -> toString
    de.greenrobot.dao.query.WhereCondition eq(java.lang.Object) -> a
de.greenrobot.dao.async.AsyncOperation -> de.greenrobot.a.a.a:
    de.greenrobot.dao.async.AsyncOperation$OperationType type -> a
    de.greenrobot.dao.AbstractDao dao -> b
    android.database.sqlite.SQLiteDatabase database -> j
    java.lang.Object parameter -> c
    int flags -> d
    long timeStarted -> e
    long timeCompleted -> f
    boolean completed -> k
    java.lang.Throwable throwable -> g
    java.lang.Object result -> h
    int mergedOperationsCount -> i
    boolean isMergeTx() -> a
    android.database.sqlite.SQLiteDatabase getDatabase() -> b
    boolean isMergeableWith(de.greenrobot.dao.async.AsyncOperation) -> a
    boolean isFailed() -> c
    void setCompleted() -> d
    void reset() -> e
de.greenrobot.dao.async.AsyncOperation$OperationType -> de.greenrobot.a.a.a$a:
    de.greenrobot.dao.async.AsyncOperation$OperationType Insert -> a
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertInTxIterable -> b
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertInTxArray -> c
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertOrReplace -> d
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertOrReplaceInTxIterable -> e
    de.greenrobot.dao.async.AsyncOperation$OperationType InsertOrReplaceInTxArray -> f
    de.greenrobot.dao.async.AsyncOperation$OperationType Update -> g
    de.greenrobot.dao.async.AsyncOperation$OperationType UpdateInTxIterable -> h
    de.greenrobot.dao.async.AsyncOperation$OperationType UpdateInTxArray -> i
    de.greenrobot.dao.async.AsyncOperation$OperationType Delete -> j
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteInTxIterable -> k
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteInTxArray -> l
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteByKey -> m
    de.greenrobot.dao.async.AsyncOperation$OperationType DeleteAll -> n
    de.greenrobot.dao.async.AsyncOperation$OperationType TransactionRunnable -> o
    de.greenrobot.dao.async.AsyncOperation$OperationType TransactionCallable -> p
    de.greenrobot.dao.async.AsyncOperation$OperationType QueryList -> q
    de.greenrobot.dao.async.AsyncOperation$OperationType QueryUnique -> r
    de.greenrobot.dao.async.AsyncOperation$OperationType Load -> s
    de.greenrobot.dao.async.AsyncOperation$OperationType LoadAll -> t
    de.greenrobot.dao.async.AsyncOperation$OperationType Count -> u
    de.greenrobot.dao.async.AsyncOperation$OperationType Refresh -> v
    de.greenrobot.dao.async.AsyncOperation$OperationType[] $VALUES -> w
    de.greenrobot.dao.async.AsyncOperation$OperationType[] values() -> values
    de.greenrobot.dao.async.AsyncOperation$OperationType valueOf(java.lang.String) -> valueOf
de.greenrobot.dao.async.AsyncOperationExecutor -> de.greenrobot.a.a.b:
    java.util.concurrent.ExecutorService executorService -> a
    java.util.concurrent.BlockingQueue queue -> b
    boolean executorRunning -> c
    int maxOperationCountToMerge -> d
    de.greenrobot.dao.async.AsyncOperationListener listener -> e
    de.greenrobot.dao.async.AsyncOperationListener listenerMainThread -> f
    int waitForMergeMillis -> g
    int countOperationsEnqueued -> h
    int countOperationsCompleted -> i
    android.os.Handler handlerMainThread -> j
    void run() -> run
    void mergeTxAndExecute(de.greenrobot.dao.async.AsyncOperation,de.greenrobot.dao.async.AsyncOperation) -> a
    void handleOperationCompleted(de.greenrobot.dao.async.AsyncOperation) -> a
    void executeOperationAndPostCompleted(de.greenrobot.dao.async.AsyncOperation) -> b
    void executeOperation(de.greenrobot.dao.async.AsyncOperation) -> c
    void executeTransactionRunnable(de.greenrobot.dao.async.AsyncOperation) -> d
    void executeTransactionCallable(de.greenrobot.dao.async.AsyncOperation) -> e
    boolean handleMessage(android.os.Message) -> handleMessage
de.greenrobot.dao.async.AsyncOperationExecutor$1 -> de.greenrobot.a.a.b$1:
    int[] $SwitchMap$de$greenrobot$dao$async$AsyncOperation$OperationType -> a
de.greenrobot.dao.async.AsyncOperationListener -> de.greenrobot.a.a.c:
    void onAsyncOperationCompleted(de.greenrobot.dao.async.AsyncOperation) -> a
de.greenrobot.dao.async.AsyncSession -> de.greenrobot.a.a.d:
    de.greenrobot.dao.AbstractDaoSession daoSession -> a
    de.greenrobot.dao.async.AsyncOperationExecutor executor -> b
de.greenrobot.dao.identityscope.IdentityScope -> de.greenrobot.a.b.a:
    java.lang.Object get(java.lang.Object) -> a
    void put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getNoLock(java.lang.Object) -> b
    void putNoLock(java.lang.Object,java.lang.Object) -> b
    boolean detach(java.lang.Object,java.lang.Object) -> c
    void remove(java.lang.Object) -> c
    void remove(java.lang.Iterable) -> a
    void clear() -> a
    void lock() -> b
    void unlock() -> c
    void reserveRoom(int) -> a
de.greenrobot.dao.identityscope.IdentityScopeLong -> de.greenrobot.a.b.b:
    de.greenrobot.dao.internal.LongHashMap map -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.lang.Object get(java.lang.Long) -> a
    java.lang.Object getNoLock(java.lang.Long) -> b
    java.lang.Object get2(long) -> a
    java.lang.Object get2NoLock(long) -> b
    void put(java.lang.Long,java.lang.Object) -> a
    void putNoLock(java.lang.Long,java.lang.Object) -> b
    void put2(long,java.lang.Object) -> a
    void put2NoLock(long,java.lang.Object) -> b
    boolean detach(java.lang.Long,java.lang.Object) -> c
    void remove(java.lang.Long) -> c
    void remove(java.lang.Iterable) -> a
    void clear() -> a
    void lock() -> b
    void unlock() -> c
    void reserveRoom(int) -> a
    void remove(java.lang.Object) -> c
    boolean detach(java.lang.Object,java.lang.Object) -> c
    void putNoLock(java.lang.Object,java.lang.Object) -> b
    java.lang.Object getNoLock(java.lang.Object) -> b
    void put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
de.greenrobot.dao.identityscope.IdentityScopeObject -> de.greenrobot.a.b.c:
    java.util.HashMap map -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object getNoLock(java.lang.Object) -> b
    void put(java.lang.Object,java.lang.Object) -> a
    void putNoLock(java.lang.Object,java.lang.Object) -> b
    boolean detach(java.lang.Object,java.lang.Object) -> c
    void remove(java.lang.Object) -> c
    void remove(java.lang.Iterable) -> a
    void clear() -> a
    void lock() -> b
    void unlock() -> c
    void reserveRoom(int) -> a
de.greenrobot.dao.identityscope.IdentityScopeType -> de.greenrobot.a.b.d:
    de.greenrobot.dao.identityscope.IdentityScopeType Session -> a
    de.greenrobot.dao.identityscope.IdentityScopeType None -> b
    de.greenrobot.dao.identityscope.IdentityScopeType[] $VALUES -> c
    de.greenrobot.dao.identityscope.IdentityScopeType[] values() -> values
    de.greenrobot.dao.identityscope.IdentityScopeType valueOf(java.lang.String) -> valueOf
de.greenrobot.dao.internal.DaoConfig -> de.greenrobot.a.c.a:
    android.database.sqlite.SQLiteDatabase db -> a
    java.lang.String tablename -> b
    de.greenrobot.dao.Property[] properties -> c
    java.lang.String[] allColumns -> d
    java.lang.String[] pkColumns -> e
    java.lang.String[] nonPkColumns -> f
    de.greenrobot.dao.Property pkProperty -> g
    boolean keyIsNumeric -> h
    de.greenrobot.dao.internal.TableStatements statements -> i
    de.greenrobot.dao.identityscope.IdentityScope identityScope -> j
    de.greenrobot.dao.Property[] reflectProperties(java.lang.Class) -> a
    de.greenrobot.dao.internal.DaoConfig clone() -> a
    de.greenrobot.dao.identityscope.IdentityScope getIdentityScope() -> b
    void initIdentityScope(de.greenrobot.dao.identityscope.IdentityScopeType) -> a
    java.lang.Object clone() -> clone
de.greenrobot.dao.internal.FastCursor -> de.greenrobot.a.c.b:
    android.database.CursorWindow window -> a
    int position -> b
    int count -> c
    int getCount() -> getCount
    int getPosition() -> getPosition
    boolean move(int) -> move
    boolean moveToPosition(int) -> moveToPosition
    boolean moveToFirst() -> moveToFirst
    boolean moveToLast() -> moveToLast
    boolean moveToNext() -> moveToNext
    boolean moveToPrevious() -> moveToPrevious
    boolean isFirst() -> isFirst
    boolean isLast() -> isLast
    boolean isBeforeFirst() -> isBeforeFirst
    boolean isAfterLast() -> isAfterLast
    int getColumnIndex(java.lang.String) -> getColumnIndex
    int getColumnIndexOrThrow(java.lang.String) -> getColumnIndexOrThrow
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.String[] getColumnNames() -> getColumnNames
    int getColumnCount() -> getColumnCount
    byte[] getBlob(int) -> getBlob
    java.lang.String getString(int) -> getString
    void copyStringToBuffer(int,android.database.CharArrayBuffer) -> copyStringToBuffer
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    boolean isNull(int) -> isNull
    void deactivate() -> deactivate
    boolean requery() -> requery
    void close() -> close
    boolean isClosed() -> isClosed
    void registerContentObserver(android.database.ContentObserver) -> registerContentObserver
    void unregisterContentObserver(android.database.ContentObserver) -> unregisterContentObserver
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    void setNotificationUri(android.content.ContentResolver,android.net.Uri) -> setNotificationUri
    boolean getWantsAllOnMoveCalls() -> getWantsAllOnMoveCalls
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle respond(android.os.Bundle) -> respond
    int getType(int) -> getType
    android.net.Uri getNotificationUri() -> getNotificationUri
de.greenrobot.dao.internal.LongHashMap -> de.greenrobot.a.c.c:
    de.greenrobot.dao.internal.LongHashMap$Entry[] table -> a
    int capacity -> b
    int threshold -> c
    int size -> d
    java.lang.Object get(long) -> a
    java.lang.Object put(long,java.lang.Object) -> a
    java.lang.Object remove(long) -> b
    void clear() -> a
    void setCapacity(int) -> a
    void reserveRoom(int) -> b
de.greenrobot.dao.internal.LongHashMap$Entry -> de.greenrobot.a.c.c$a:
    long key -> a
    java.lang.Object value -> b
    de.greenrobot.dao.internal.LongHashMap$Entry next -> c
de.greenrobot.dao.internal.SqlUtils -> de.greenrobot.a.c.d:
    java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String) -> a
    java.lang.StringBuilder appendColumn(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String,java.lang.String[]) -> a
    java.lang.StringBuilder appendColumns(java.lang.StringBuilder,java.lang.String[]) -> a
    java.lang.StringBuilder appendPlaceholders(java.lang.StringBuilder,int) -> a
    java.lang.StringBuilder appendColumnsEqualPlaceholders(java.lang.StringBuilder,java.lang.String[]) -> b
    java.lang.StringBuilder appendColumnsEqValue(java.lang.StringBuilder,java.lang.String,java.lang.String[]) -> b
    java.lang.String createSqlInsert(java.lang.String,java.lang.String,java.lang.String[]) -> a
    java.lang.String createSqlSelect(java.lang.String,java.lang.String[]) -> a
    java.lang.String createSqlDelete(java.lang.String,java.lang.String[]) -> b
    java.lang.String createSqlUpdate(java.lang.String,java.lang.String[],java.lang.String[]) -> a
de.greenrobot.dao.internal.TableStatements -> de.greenrobot.a.c.e:
    android.database.sqlite.SQLiteDatabase db -> a
    java.lang.String tablename -> b
    java.lang.String[] allColumns -> c
    java.lang.String[] pkColumns -> d
    android.database.sqlite.SQLiteStatement insertStatement -> e
    android.database.sqlite.SQLiteStatement insertOrReplaceStatement -> f
    android.database.sqlite.SQLiteStatement updateStatement -> g
    android.database.sqlite.SQLiteStatement deleteStatement -> h
    java.lang.String selectAll -> i
    java.lang.String selectByKey -> j
    java.lang.String selectByRowId -> k
    android.database.sqlite.SQLiteStatement getInsertStatement() -> a
    android.database.sqlite.SQLiteStatement getInsertOrReplaceStatement() -> b
    android.database.sqlite.SQLiteStatement getDeleteStatement() -> c
    android.database.sqlite.SQLiteStatement getUpdateStatement() -> d
    java.lang.String getSelectAll() -> e
    java.lang.String getSelectByKey() -> f
    java.lang.String getSelectByRowId() -> g
de.greenrobot.dao.query.AbstractQuery -> de.greenrobot.a.d.a:
    de.greenrobot.dao.AbstractDao dao -> a
    de.greenrobot.dao.IQueryDaoAccess daoAccess -> b
    java.lang.String sql -> c
    java.lang.String[] parameters -> d
    java.lang.Thread ownerThread -> e
    java.lang.String[] toStringArray(java.lang.Object[]) -> a
    void checkThread() -> a
de.greenrobot.dao.query.AbstractQueryData -> de.greenrobot.a.d.b:
    java.lang.String sql -> a
    de.greenrobot.dao.AbstractDao dao -> b
    java.lang.String[] initialValues -> c
    android.util.SparseArray queriesForThreads -> d
    de.greenrobot.dao.query.AbstractQuery forCurrentThread() -> a
    de.greenrobot.dao.query.AbstractQuery createQuery() -> b
    void gc() -> c
de.greenrobot.dao.query.DeleteQuery -> de.greenrobot.a.d.c:
    de.greenrobot.dao.query.DeleteQuery$QueryData queryData -> f
    de.greenrobot.dao.query.DeleteQuery create(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[]) -> a
    void executeDeleteWithoutDetachingEntities() -> b
de.greenrobot.dao.query.DeleteQuery$1 -> de.greenrobot.a.d.c$1:
de.greenrobot.dao.query.DeleteQuery$QueryData -> de.greenrobot.a.d.c$a:
    de.greenrobot.dao.query.DeleteQuery createQuery() -> d
    de.greenrobot.dao.query.AbstractQuery createQuery() -> b
de.greenrobot.dao.query.Query -> de.greenrobot.a.d.d:
    int limitPosition -> f
    int offsetPosition -> g
    de.greenrobot.dao.query.Query$QueryData queryData -> h
    de.greenrobot.dao.query.Query internalCreate(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[]) -> a
    de.greenrobot.dao.query.Query create(de.greenrobot.dao.AbstractDao,java.lang.String,java.lang.Object[],int,int) -> a
    java.util.List list() -> b
    java.lang.Object unique() -> c
de.greenrobot.dao.query.Query$1 -> de.greenrobot.a.d.d$1:
de.greenrobot.dao.query.Query$QueryData -> de.greenrobot.a.d.d$a:
    int limitPosition -> e
    int offsetPosition -> f
    de.greenrobot.dao.query.Query createQuery() -> d
    de.greenrobot.dao.query.AbstractQuery createQuery() -> b
de.greenrobot.dao.query.QueryBuilder -> de.greenrobot.a.d.e:
    boolean LOG_SQL -> a
    boolean LOG_VALUES -> b
    java.lang.StringBuilder orderBuilder -> c
    java.lang.StringBuilder joinBuilder -> d
    java.util.List whereConditions -> e
    java.util.List values -> f
    java.util.List updateValues -> g
    de.greenrobot.dao.AbstractDao dao -> h
    java.lang.Integer limit -> i
    java.lang.Integer offset -> j
    de.greenrobot.dao.query.QueryBuilder internalCreate(de.greenrobot.dao.AbstractDao) -> a
    void checkOrderBuilder() -> e
    de.greenrobot.dao.query.QueryBuilder where(de.greenrobot.dao.query.WhereCondition,de.greenrobot.dao.query.WhereCondition[]) -> a
    void checkCondition(de.greenrobot.dao.query.WhereCondition) -> a
    de.greenrobot.dao.query.QueryBuilder orderAsc(de.greenrobot.dao.Property[]) -> a
    de.greenrobot.dao.query.QueryBuilder orderDesc(de.greenrobot.dao.Property[]) -> b
    void orderAscOrDesc(java.lang.String,de.greenrobot.dao.Property[]) -> a
    java.lang.StringBuilder append(java.lang.StringBuilder,de.greenrobot.dao.Property) -> a
    void checkProperty(de.greenrobot.dao.Property) -> a
    de.greenrobot.dao.query.QueryBuilder limit(int) -> a
    de.greenrobot.dao.query.Query build() -> a
    de.greenrobot.dao.query.DeleteQuery buildDelete() -> b
    void appendWhereClause(java.lang.StringBuilder) -> a
    java.util.List list() -> c
    java.lang.Object unique() -> d
de.greenrobot.dao.query.WhereCondition -> de.greenrobot.a.d.f:
    void appendTo(java.lang.StringBuilder) -> a
    void appendValuesTo(java.util.List) -> a
de.greenrobot.dao.query.WhereCondition$AbstractCondition -> de.greenrobot.a.d.f$a:
    boolean hasSingleValue -> a
    java.lang.Object value -> b
    java.lang.Object[] values -> c
    void appendValuesTo(java.util.List) -> a
de.greenrobot.dao.query.WhereCondition$PropertyCondition -> de.greenrobot.a.d.f$b:
    de.greenrobot.dao.Property property -> d
    java.lang.String op -> e
    java.lang.Object checkValueForType(de.greenrobot.dao.Property,java.lang.Object) -> a
    void appendTo(java.lang.StringBuilder) -> a
de.greenrobot.event.AsyncPoster -> de.greenrobot.event.a:
    de.greenrobot.event.PendingPostQueue queue -> a
    de.greenrobot.event.EventBus eventBus -> b
    void enqueue(de.greenrobot.event.Subscription,java.lang.Object) -> a
    void run() -> run
de.greenrobot.event.BackgroundPoster -> de.greenrobot.event.b:
    de.greenrobot.event.PendingPostQueue queue -> a
    de.greenrobot.event.EventBus eventBus -> b
    boolean executorRunning -> c
    void enqueue(de.greenrobot.event.Subscription,java.lang.Object) -> a
    void run() -> run
de.greenrobot.event.EventBus -> de.greenrobot.event.c:
    java.lang.String TAG -> a
    de.greenrobot.event.EventBus defaultInstance -> b
    de.greenrobot.event.EventBusBuilder DEFAULT_BUILDER -> c
    java.util.Map eventTypesCache -> d
    java.util.Map subscriptionsByEventType -> e
    java.util.Map typesBySubscriber -> f
    java.util.Map stickyEvents -> g
    java.lang.ThreadLocal currentPostingThreadState -> h
    de.greenrobot.event.HandlerPoster mainThreadPoster -> i
    de.greenrobot.event.BackgroundPoster backgroundPoster -> j
    de.greenrobot.event.AsyncPoster asyncPoster -> k
    de.greenrobot.event.SubscriberMethodFinder subscriberMethodFinder -> l
    java.util.concurrent.ExecutorService executorService -> m
    boolean throwSubscriberException -> n
    boolean logSubscriberExceptions -> o
    boolean logNoSubscriberMessages -> p
    boolean sendSubscriberExceptionEvent -> q
    boolean sendNoSubscriberEvent -> r
    boolean eventInheritance -> s
    de.greenrobot.event.EventBus getDefault() -> a
    void register(java.lang.Object) -> a
    void register(java.lang.Object,boolean,int) -> a
    void subscribe(java.lang.Object,de.greenrobot.event.SubscriberMethod,boolean,int) -> a
    void unubscribeByEventType(java.lang.Object,java.lang.Class) -> a
    void unregister(java.lang.Object) -> b
    void post(java.lang.Object) -> c
    void postSingleEvent(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState) -> a
    boolean postSingleEventForEventType(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState,java.lang.Class) -> a
    void postToSubscription(de.greenrobot.event.Subscription,java.lang.Object,boolean) -> a
    java.util.List lookupAllEventTypes(java.lang.Class) -> a
    void addInterfaces(java.util.List,java.lang.Class[]) -> a
    void invokeSubscriber(de.greenrobot.event.PendingPost) -> a
    void invokeSubscriber(de.greenrobot.event.Subscription,java.lang.Object) -> a
    void handleSubscriberException(de.greenrobot.event.Subscription,java.lang.Object,java.lang.Throwable) -> a
    java.util.concurrent.ExecutorService getExecutorService() -> b
de.greenrobot.event.EventBus$1 -> de.greenrobot.event.d:
    de.greenrobot.event.EventBus this$0 -> a
    de.greenrobot.event.EventBus$PostingThreadState initialValue() -> a
    java.lang.Object initialValue() -> initialValue
de.greenrobot.event.EventBus$2 -> de.greenrobot.event.c$1:
    int[] $SwitchMap$de$greenrobot$event$ThreadMode -> a
de.greenrobot.event.EventBus$PostingThreadState -> de.greenrobot.event.c$a:
    java.util.List eventQueue -> a
    boolean isPosting -> b
    boolean isMainThread -> c
    de.greenrobot.event.Subscription subscription -> d
    java.lang.Object event -> e
    boolean canceled -> f
de.greenrobot.event.EventBusBuilder -> de.greenrobot.event.e:
    java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE -> i
    boolean logSubscriberExceptions -> a
    boolean logNoSubscriberMessages -> b
    boolean sendSubscriberExceptionEvent -> c
    boolean sendNoSubscriberEvent -> d
    boolean throwSubscriberException -> e
    boolean eventInheritance -> f
    java.util.concurrent.ExecutorService executorService -> g
    java.util.List skipMethodVerificationForClasses -> h
de.greenrobot.event.EventBusException -> de.greenrobot.event.f:
de.greenrobot.event.HandlerPoster -> de.greenrobot.event.g:
    de.greenrobot.event.PendingPostQueue queue -> a
    int maxMillisInsideHandleMessage -> b
    de.greenrobot.event.EventBus eventBus -> c
    boolean handlerActive -> d
    void enqueue(de.greenrobot.event.Subscription,java.lang.Object) -> a
    void handleMessage(android.os.Message) -> handleMessage
de.greenrobot.event.NoSubscriberEvent -> de.greenrobot.event.h:
    de.greenrobot.event.EventBus eventBus -> a
    java.lang.Object originalEvent -> b
de.greenrobot.event.PendingPost -> de.greenrobot.event.i:
    java.util.List pendingPostPool -> d
    java.lang.Object event -> a
    de.greenrobot.event.Subscription subscription -> b
    de.greenrobot.event.PendingPost next -> c
    de.greenrobot.event.PendingPost obtainPendingPost(de.greenrobot.event.Subscription,java.lang.Object) -> a
    void releasePendingPost(de.greenrobot.event.PendingPost) -> a
de.greenrobot.event.PendingPostQueue -> de.greenrobot.event.j:
    de.greenrobot.event.PendingPost head -> a
    de.greenrobot.event.PendingPost tail -> b
    void enqueue(de.greenrobot.event.PendingPost) -> a
    de.greenrobot.event.PendingPost poll() -> a
    de.greenrobot.event.PendingPost poll(int) -> a
de.greenrobot.event.SubscriberExceptionEvent -> de.greenrobot.event.k:
    de.greenrobot.event.EventBus eventBus -> a
    java.lang.Throwable throwable -> b
    java.lang.Object causingEvent -> c
    java.lang.Object causingSubscriber -> d
de.greenrobot.event.SubscriberMethod -> de.greenrobot.event.l:
    java.lang.reflect.Method method -> a
    de.greenrobot.event.ThreadMode threadMode -> b
    java.lang.Class eventType -> c
    java.lang.String methodString -> d
    boolean equals(java.lang.Object) -> equals
    void checkMethodString() -> a
    int hashCode() -> hashCode
de.greenrobot.event.SubscriberMethodFinder -> de.greenrobot.event.m:
    java.util.Map methodCache -> a
    java.util.Map skipMethodVerificationForClasses -> b
    java.util.List findSubscriberMethods(java.lang.Class) -> a
de.greenrobot.event.Subscription -> de.greenrobot.event.n:
    java.lang.Object subscriber -> a
    de.greenrobot.event.SubscriberMethod subscriberMethod -> b
    int priority -> c
    boolean active -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
de.greenrobot.event.ThreadMode -> de.greenrobot.event.o:
    de.greenrobot.event.ThreadMode PostThread -> a
    de.greenrobot.event.ThreadMode MainThread -> b
    de.greenrobot.event.ThreadMode BackgroundThread -> c
    de.greenrobot.event.ThreadMode Async -> d
    de.greenrobot.event.ThreadMode[] $VALUES -> e
    de.greenrobot.event.ThreadMode[] values() -> values
    de.greenrobot.event.ThreadMode valueOf(java.lang.String) -> valueOf
de.greenrobot.event.util.ErrorDialogConfig -> de.greenrobot.event.util.a:
    de.greenrobot.event.EventBus eventBus -> a
    de.greenrobot.event.EventBus getEventBus() -> a
de.greenrobot.event.util.ErrorDialogFragmentFactory -> de.greenrobot.event.util.b:
    de.greenrobot.event.util.ErrorDialogConfig config -> a
de.greenrobot.event.util.ErrorDialogFragments -> de.greenrobot.event.util.ErrorDialogFragments:
    int ERROR_DIALOG_ICON -> a
    java.lang.Class EVENT_TYPE_ON_CLICK -> b
    android.app.Dialog createDialog(android.content.Context,android.os.Bundle,android.content.DialogInterface$OnClickListener) -> a
    void handleOnClick(android.content.DialogInterface,int,android.app.Activity,android.os.Bundle) -> a
de.greenrobot.event.util.ErrorDialogFragments$Honeycomb -> de.greenrobot.event.util.ErrorDialogFragments$Honeycomb:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onClick(android.content.DialogInterface,int) -> onClick
de.greenrobot.event.util.ErrorDialogFragments$Support -> de.greenrobot.event.util.ErrorDialogFragments$Support:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onClick(android.content.DialogInterface,int) -> onClick
de.greenrobot.event.util.ErrorDialogManager -> de.greenrobot.event.util.ErrorDialogManager:
    de.greenrobot.event.util.ErrorDialogFragmentFactory factory -> a
de.greenrobot.event.util.ErrorDialogManager$HoneycombManagerFragment -> de.greenrobot.event.util.ErrorDialogManager$HoneycombManagerFragment:
    de.greenrobot.event.EventBus eventBus -> a
    void onResume() -> onResume
    void onPause() -> onPause
de.greenrobot.event.util.ErrorDialogManager$SupportManagerFragment -> de.greenrobot.event.util.ErrorDialogManager$SupportManagerFragment:
    de.greenrobot.event.EventBus eventBus -> a
    boolean skipRegisterOnNextResume -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
de.keyboardsurfer.android.widget.crouton.Configuration -> de.a.a.a.a.a:
    de.keyboardsurfer.android.widget.crouton.Configuration DEFAULT -> a
    int durationInMilliseconds -> b
    int inAnimationResId -> c
    int outAnimationResId -> d
    java.lang.String toString() -> toString
de.keyboardsurfer.android.widget.crouton.Configuration$1 -> de.a.a.a.a.a$1:
de.keyboardsurfer.android.widget.crouton.Configuration$Builder -> de.a.a.a.a.a$a:
    int durationInMilliseconds -> a
    int inAnimationResId -> b
    int outAnimationResId -> c
    de.keyboardsurfer.android.widget.crouton.Configuration$Builder setDuration(int) -> a
    de.keyboardsurfer.android.widget.crouton.Configuration build() -> a
    int access$000(de.keyboardsurfer.android.widget.crouton.Configuration$Builder) -> a
    int access$100(de.keyboardsurfer.android.widget.crouton.Configuration$Builder) -> b
    int access$200(de.keyboardsurfer.android.widget.crouton.Configuration$Builder) -> c
de.keyboardsurfer.android.widget.crouton.Crouton -> de.a.a.a.a.b:
    java.lang.CharSequence text -> a
    de.keyboardsurfer.android.widget.crouton.Style style -> b
    de.keyboardsurfer.android.widget.crouton.Configuration configuration -> c
    android.view.View customView -> d
    android.view.View$OnClickListener onClickListener -> e
    android.app.Activity activity -> f
    android.view.ViewGroup viewGroup -> g
    android.widget.FrameLayout croutonView -> h
    android.view.animation.Animation inAnimation -> i
    android.view.animation.Animation outAnimation -> j
    de.keyboardsurfer.android.widget.crouton.LifecycleCallback lifecycleCallback -> k
    de.keyboardsurfer.android.widget.crouton.Crouton make(android.app.Activity,android.view.View,int,de.keyboardsurfer.android.widget.crouton.Configuration) -> a
    void cancelAllCroutons() -> a
    void show() -> b
    android.view.animation.Animation getInAnimation() -> c
    android.view.animation.Animation getOutAnimation() -> d
    java.lang.String toString() -> toString
    boolean isShowing() -> e
    boolean isCroutonViewNotNull() -> p
    boolean isCustomViewNotNull() -> q
    void detachActivity() -> f
    void detachViewGroup() -> g
    void detachLifecycleCallback() -> h
    de.keyboardsurfer.android.widget.crouton.LifecycleCallback getLifecycleCallback() -> i
    de.keyboardsurfer.android.widget.crouton.Style getStyle() -> j
    de.keyboardsurfer.android.widget.crouton.Configuration getConfiguration() -> k
    android.app.Activity getActivity() -> l
    android.view.ViewGroup getViewGroup() -> m
    java.lang.CharSequence getText() -> n
    android.view.View getView() -> o
    void measureCroutonView() -> r
    void initializeCroutonView() -> s
    android.widget.FrameLayout initializeCroutonViewGroup(android.content.res.Resources) -> a
    android.widget.RelativeLayout initializeContentView(android.content.res.Resources) -> b
    android.widget.TextView initializeTextView(android.content.res.Resources) -> c
    void setTextWithCustomFont(android.widget.TextView,java.lang.String) -> a
    void initializeTextViewShadow(android.content.res.Resources,android.widget.TextView) -> a
    android.widget.ImageView initializeImageView() -> t
de.keyboardsurfer.android.widget.crouton.DefaultAnimationsBuilder -> de.a.a.a.a.c:
    android.view.animation.Animation slideInDownAnimation -> a
    android.view.animation.Animation slideOutUpAnimation -> b
    int lastInAnimationHeight -> c
    int lastOutAnimationHeight -> d
    android.view.animation.Animation buildDefaultSlideInDownAnimation(android.view.View) -> a
    android.view.animation.Animation buildDefaultSlideOutUpAnimation(android.view.View) -> b
    boolean areLastMeasuredInAnimationHeightAndCurrentEqual(android.view.View) -> c
    boolean areLastMeasuredOutAnimationHeightAndCurrentEqual(android.view.View) -> d
    boolean areLastMeasuredAnimationHeightAndCurrentEqual(int,android.view.View) -> a
    void setLastInAnimationHeight(int) -> a
    void setLastOutAnimationHeight(int) -> b
de.keyboardsurfer.android.widget.crouton.LifecycleCallback -> de.a.a.a.a.d:
    void onDisplayed() -> a
    void onRemoved() -> b
de.keyboardsurfer.android.widget.crouton.Manager -> de.a.a.a.a.e:
    de.keyboardsurfer.android.widget.crouton.Manager INSTANCE -> a
    java.util.Queue croutonQueue -> b
    de.keyboardsurfer.android.widget.crouton.Manager getInstance() -> a
    void add(de.keyboardsurfer.android.widget.crouton.Crouton) -> a
    void displayCrouton() -> c
    long calculateCroutonDuration(de.keyboardsurfer.android.widget.crouton.Crouton) -> c
    void sendMessage(de.keyboardsurfer.android.widget.crouton.Crouton,int) -> a
    void sendMessageDelayed(de.keyboardsurfer.android.widget.crouton.Crouton,int,long) -> a
    void handleMessage(android.os.Message) -> handleMessage
    void addCroutonToView(de.keyboardsurfer.android.widget.crouton.Crouton) -> d
    boolean shouldAddViewWithoutPosition(android.view.ViewGroup) -> a
    void handleTranslucentActionBar(android.view.ViewGroup$MarginLayoutParams,android.app.Activity) -> a
    void handleActionBarOverlay(android.view.ViewGroup$MarginLayoutParams,android.app.Activity) -> b
    void setActionBarMargin(android.view.ViewGroup$MarginLayoutParams,android.app.Activity) -> c
    void removeCrouton(de.keyboardsurfer.android.widget.crouton.Crouton) -> b
    void clearCroutonQueue() -> b
    void removeCroutonFromViewParent(de.keyboardsurfer.android.widget.crouton.Crouton) -> e
    void removeAllMessages() -> d
    void announceForAccessibilityCompat(android.content.Context,java.lang.CharSequence) -> a
    java.lang.String toString() -> toString
    void access$000(de.keyboardsurfer.android.widget.crouton.Manager,de.keyboardsurfer.android.widget.crouton.Crouton,int,long) -> a
de.keyboardsurfer.android.widget.crouton.Manager$1 -> de.a.a.a.a.f:
    android.view.View val$croutonView -> a
    de.keyboardsurfer.android.widget.crouton.Crouton val$crouton -> b
    de.keyboardsurfer.android.widget.crouton.Manager this$0 -> c
    void onGlobalLayout() -> onGlobalLayout
de.keyboardsurfer.android.widget.crouton.Style -> de.a.a.a.a.g:
    de.keyboardsurfer.android.widget.crouton.Style ALERT -> a
    de.keyboardsurfer.android.widget.crouton.Style CONFIRM -> b
    de.keyboardsurfer.android.widget.crouton.Style INFO -> c
    de.keyboardsurfer.android.widget.crouton.Configuration configuration -> d
    int backgroundColorResourceId -> e
    int backgroundDrawableResourceId -> f
    int backgroundColorValue -> g
    boolean isTileEnabled -> h
    int textColorResourceId -> i
    int textColorValue -> j
    int heightInPixels -> k
    int heightDimensionResId -> l
    int widthInPixels -> m
    int widthDimensionResId -> n
    int gravity -> o
    android.graphics.drawable.Drawable imageDrawable -> p
    int imageResId -> q
    android.widget.ImageView$ScaleType imageScaleType -> r
    int textSize -> s
    int textShadowColorResId -> t
    float textShadowRadius -> u
    float textShadowDy -> v
    float textShadowDx -> w
    int textAppearanceResId -> x
    int paddingInPixels -> y
    int paddingDimensionResId -> z
    java.lang.String fontName -> A
    int fontNameResId -> B
    java.lang.String toString() -> toString
de.keyboardsurfer.android.widget.crouton.Style$1 -> de.a.a.a.a.g$1:
de.keyboardsurfer.android.widget.crouton.Style$Builder -> de.a.a.a.a.g$a:
    de.keyboardsurfer.android.widget.crouton.Configuration configuration -> a
    int backgroundColorValue -> b
    int backgroundColorResourceId -> c
    int backgroundDrawableResourceId -> d
    boolean isTileEnabled -> e
    int textColorResourceId -> f
    int textColorValue -> g
    int heightInPixels -> h
    int heightDimensionResId -> i
    int widthInPixels -> j
    int widthDimensionResId -> k
    int gravity -> l
    android.graphics.drawable.Drawable imageDrawable -> m
    int textSize -> n
    int textShadowColorResId -> o
    float textShadowRadius -> p
    float textShadowDx -> q
    float textShadowDy -> r
    int textAppearanceResId -> s
    int imageResId -> t
    android.widget.ImageView$ScaleType imageScaleType -> u
    int paddingInPixels -> v
    int paddingDimensionResId -> w
    java.lang.String fontName -> x
    int fontNameResId -> y
    de.keyboardsurfer.android.widget.crouton.Style$Builder setBackgroundColorValue(int) -> a
    de.keyboardsurfer.android.widget.crouton.Style build() -> a
    de.keyboardsurfer.android.widget.crouton.Configuration access$000(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> a
    int access$100(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> b
    int access$200(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> c
    boolean access$300(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> d
    int access$400(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> e
    int access$500(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> f
    int access$600(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> g
    int access$700(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> h
    int access$800(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> i
    int access$900(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> j
    int access$1000(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> k
    android.graphics.drawable.Drawable access$1100(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> l
    int access$1200(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> m
    int access$1300(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> n
    float access$1400(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> o
    float access$1500(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> p
    float access$1600(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> q
    int access$1700(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> r
    int access$1800(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> s
    android.widget.ImageView$ScaleType access$1900(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> t
    int access$2000(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> u
    int access$2100(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> v
    int access$2200(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> w
    java.lang.String access$2300(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> x
    int access$2400(de.keyboardsurfer.android.widget.crouton.Style$Builder) -> y
de.keyboardsurfer.android.widget.crouton.TypefaceSpan -> de.a.a.a.a.h:
    android.support.v4.util.LruCache sTypefaceCache -> a
    android.graphics.Typeface mTypeface -> b
    void updateMeasureState(android.text.TextPaint) -> updateMeasureState
    void updateDrawState(android.text.TextPaint) -> updateDrawState
io.rong.common.JsonEntityParser -> io.rong.common.JsonEntityParser:
    void onHeaderParsed(org.apache.http.Header[]) -> onHeaderParsed
    org.json.JSONObject parse(org.apache.http.HttpEntity) -> parse
    org.json.JSONObject parse(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parse
    org.json.JSONObject parseGzip(org.apache.http.HttpEntity) -> parseGzip
    org.json.JSONObject parseGzip(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parseGzip
    java.lang.Object parseGzip(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parseGzip
    java.lang.Object parseGzip(org.apache.http.HttpEntity) -> parseGzip
    java.lang.Object parse(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parse
    java.lang.Object parse(org.apache.http.HttpEntity) -> parse
io.rong.common.RLog -> io.rong.common.RLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int v(java.lang.Object,java.lang.String,java.lang.String) -> v
    int v(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.Object,java.lang.String,java.lang.String) -> d
    int d(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.Object,java.lang.String,java.lang.String) -> i
    int i(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.Object,java.lang.String,java.lang.String) -> w
    int w(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.Object,java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.Object,java.lang.String,java.lang.String) -> e
    int e(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> e
    int wtf(java.lang.Object,java.lang.String,java.lang.String) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.Throwable) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
io.rong.common.ResourceUtils -> io.rong.common.ResourceUtils:
    java.lang.String packageName -> packageName
    android.content.res.Resources resources -> resources
    java.lang.String anim -> anim
    java.lang.String animator -> animator
    java.lang.String interpolator -> interpolator
    java.lang.String menu -> menu
    java.lang.String mipmap -> mipmap
    java.lang.String array -> array
    java.lang.String bool -> bool
    java.lang.String stringArray -> stringArray
    java.lang.String attr -> attr
    java.lang.String color -> color
    java.lang.String dimen -> dimen
    java.lang.String drawable -> drawable
    java.lang.String id -> id
    java.lang.String layout -> layout
    java.lang.String raw -> raw
    java.lang.String string -> string
    java.lang.String style -> style
    java.lang.String xml -> xml
    java.lang.String styleable -> styleable
    void init(android.content.Context) -> init
    int getResDrawableID(java.lang.String) -> getResDrawableID
    int getResLayoutID(java.lang.String) -> getResLayoutID
    int getResAnimID(java.lang.String) -> getResAnimID
    int getResAnimatorID(java.lang.String) -> getResAnimatorID
    int getResAttrID(java.lang.String) -> getResAttrID
    int getResColorID(java.lang.String) -> getResColorID
    int getResDimenID(java.lang.String) -> getResDimenID
    int getResIdID(java.lang.String) -> getResIdID
    int getResRawID(java.lang.String) -> getResRawID
    int getResStringID(java.lang.String) -> getResStringID
    int getResStyleID(java.lang.String) -> getResStyleID
    int getResStyleableID(java.lang.String) -> getResStyleableID
    int getResXmlID(java.lang.String) -> getResXmlID
    int getResInterpolatorID(java.lang.String) -> getResInterpolatorID
    int getResMenuID(java.lang.String) -> getResMenuID
    int getResMipmapID(java.lang.String) -> getResMipmapID
    int getResArrayID(java.lang.String) -> getResArrayID
    int getResBoolID(java.lang.String) -> getResBoolID
    int getResStringArrayID(java.lang.String) -> getResStringArrayID
io.rong.common.RongVersionDatabase -> io.rong.common.RongVersionDatabase:
    io.rong.database.VersionDao mVersionDao -> mVersionDao
    void init(android.content.Context) -> init
    void release(android.content.Context) -> release
    io.rong.database.VersionDao getVersionDao() -> getVersionDao
io.rong.common.Utils -> io.rong.common.Utils:
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
io.rong.common.WakeLockService -> io.rong.common.WakeLockService:
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    void acquireWakeLock() -> acquireWakeLock
    void acquireWakeLock(long) -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
io.rong.database.ConversationDatabase -> io.rong.database.ConversationDatabase:
    io.rong.database.DraftDao mDraftDao -> mDraftDao
    void init(android.content.Context) -> init
    io.rong.database.DraftDao getDraftDao() -> getDraftDao
io.rong.database.ConversationMaster -> io.rong.database.ConversationMaster:
    int SCHEMA_VERSION -> SCHEMA_VERSION
    void createAllTables(android.database.sqlite.SQLiteDatabase,boolean) -> createAllTables
    void dropAllTables(android.database.sqlite.SQLiteDatabase,boolean) -> dropAllTables
    io.rong.database.ConversationSession newSession() -> newSession
    io.rong.database.ConversationSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession() -> newSession
io.rong.database.ConversationMaster$DevOpenHelper -> io.rong.database.ConversationMaster$DevOpenHelper:
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
io.rong.database.ConversationMaster$OpenHelper -> io.rong.database.ConversationMaster$OpenHelper:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
io.rong.database.ConversationSession -> io.rong.database.ConversationSession:
    de.greenrobot.dao.internal.DaoConfig draftDaoConfig -> draftDaoConfig
    io.rong.database.DraftDao draftDao -> draftDao
    void clear() -> clear
    io.rong.database.DraftDao getDraftDao() -> getDraftDao
io.rong.database.Draft -> io.rong.database.Draft:
    java.lang.String id -> id
    java.lang.Integer type -> type
    java.lang.String content -> content
    byte[] ext -> ext
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.Integer getType() -> getType
    void setType(java.lang.Integer) -> setType
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    byte[] getExt() -> getExt
    void setExt(byte[]) -> setExt
io.rong.database.DraftDao -> io.rong.database.DraftDao:
    java.lang.String TABLENAME -> TABLENAME
    void createTable(android.database.sqlite.SQLiteDatabase,boolean) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,boolean) -> dropTable
    void bindValues(android.database.sqlite.SQLiteStatement,io.rong.database.Draft) -> bindValues
    java.lang.Void readKey(android.database.Cursor,int) -> readKey
    io.rong.database.Draft readEntity(android.database.Cursor,int) -> readEntity
    void readEntity(android.database.Cursor,io.rong.database.Draft,int) -> readEntity
    java.lang.Void updateKeyAfterInsert(io.rong.database.Draft,long) -> updateKeyAfterInsert
    java.lang.Void getKey(io.rong.database.Draft) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
io.rong.database.DraftDao$Properties -> io.rong.database.DraftDao$Properties:
    de.greenrobot.dao.Property Id -> Id
    de.greenrobot.dao.Property Type -> Type
    de.greenrobot.dao.Property Content -> Content
    de.greenrobot.dao.Property Ext -> Ext
io.rong.database.RongMaster -> io.rong.database.RongMaster:
    int SCHEMA_VERSION -> SCHEMA_VERSION
    void createAllTables(android.database.sqlite.SQLiteDatabase,boolean) -> createAllTables
    void dropAllTables(android.database.sqlite.SQLiteDatabase,boolean) -> dropAllTables
    io.rong.database.RongSession newSession() -> newSession
    io.rong.database.RongSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession(de.greenrobot.dao.identityscope.IdentityScopeType) -> newSession
    de.greenrobot.dao.AbstractDaoSession newSession() -> newSession
io.rong.database.RongMaster$DevOpenHelper -> io.rong.database.RongMaster$DevOpenHelper:
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
io.rong.database.RongMaster$OpenHelper -> io.rong.database.RongMaster$OpenHelper:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
io.rong.database.RongSession -> io.rong.database.RongSession:
    de.greenrobot.dao.internal.DaoConfig versionDaoConfig -> versionDaoConfig
    io.rong.database.VersionDao versionDao -> versionDao
    void clear() -> clear
    io.rong.database.VersionDao getVersionDao() -> getVersionDao
io.rong.database.Version -> io.rong.database.Version:
    java.lang.String AppId -> AppId
    java.lang.String AppKey -> AppKey
    int AppVersionCode -> AppVersionCode
    int SDKVersionCode -> SDKVersionCode
    int PushVersionCode -> PushVersionCode
    java.lang.String getAppId() -> getAppId
    void setAppId(java.lang.String) -> setAppId
    java.lang.String getAppKey() -> getAppKey
    void setAppKey(java.lang.String) -> setAppKey
    int getAppVersionCode() -> getAppVersionCode
    void setAppVersionCode(int) -> setAppVersionCode
    int getSDKVersionCode() -> getSDKVersionCode
    void setSDKVersionCode(int) -> setSDKVersionCode
    int getPushVersionCode() -> getPushVersionCode
    void setPushVersionCode(int) -> setPushVersionCode
io.rong.database.VersionDao -> io.rong.database.VersionDao:
    java.lang.String TABLENAME -> TABLENAME
    void createTable(android.database.sqlite.SQLiteDatabase,boolean) -> createTable
    void dropTable(android.database.sqlite.SQLiteDatabase,boolean) -> dropTable
    void bindValues(android.database.sqlite.SQLiteStatement,io.rong.database.Version) -> bindValues
    java.lang.String readKey(android.database.Cursor,int) -> readKey
    io.rong.database.Version readEntity(android.database.Cursor,int) -> readEntity
    void readEntity(android.database.Cursor,io.rong.database.Version,int) -> readEntity
    java.lang.String updateKeyAfterInsert(io.rong.database.Version,long) -> updateKeyAfterInsert
    java.lang.String getKey(io.rong.database.Version) -> getKey
    boolean isEntityUpdateable() -> isEntityUpdateable
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object updateKeyAfterInsert(java.lang.Object,long) -> updateKeyAfterInsert
    void bindValues(android.database.sqlite.SQLiteStatement,java.lang.Object) -> bindValues
    void readEntity(android.database.Cursor,java.lang.Object,int) -> readEntity
    java.lang.Object readKey(android.database.Cursor,int) -> readKey
    java.lang.Object readEntity(android.database.Cursor,int) -> readEntity
io.rong.database.VersionDao$Properties -> io.rong.database.VersionDao$Properties:
    de.greenrobot.dao.Property AppId -> AppId
    de.greenrobot.dao.Property AppKey -> AppKey
    de.greenrobot.dao.Property AppVersionCode -> AppVersionCode
    de.greenrobot.dao.Property SDKVersionCode -> SDKVersionCode
    de.greenrobot.dao.Property PushVersionCode -> PushVersionCode
io.rong.imkit.BuildConfig -> io.rong.imkit.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
io.rong.imkit.ConversationConst -> io.rong.imkit.ConversationConst:
io.rong.imkit.ConversationConst$CONFIG -> io.rong.imkit.ConversationConst$CONFIG:
    int DEF_LIST_COUNT -> DEF_LIST_COUNT
    io.rong.imkit.ConversationConst this$0 -> this$0
io.rong.imkit.ConversationContext -> io.rong.imkit.ConversationContext:
    io.rong.imkit.RongContext mRongContext -> mRongContext
    io.rong.imkit.ConversationContext sS -> sS
    void init(io.rong.imkit.RongContext) -> init
    io.rong.imkit.ConversationContext getInstance() -> getInstance
io.rong.imkit.PushNotificationManager -> io.rong.imkit.PushNotificationManager:
    io.rong.imkit.PushNotificationManager sS -> sS
    io.rong.imlib.model.Conversation$ConversationNotificationStatus conversationNotificationStatus -> conversationNotificationStatus
    java.util.concurrent.ConcurrentHashMap messageMap -> messageMap
    void init(io.rong.imkit.RongContext) -> init
    io.rong.imkit.PushNotificationManager getInstance() -> getInstance
    void onReceiveMessageFromApp(io.rong.imlib.model.Message) -> onReceiveMessageFromApp
    void onRemoveNotification() -> onRemoveNotification
    void onEventMainThread(io.rong.imlib.model.UserInfo) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.Group) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.Discussion) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.PublicServiceInfo) -> onEventMainThread
io.rong.imkit.R -> io.rong.imkit.R:
io.rong.imkit.R$array -> io.rong.imkit.R$array:
    int emoji_code -> emoji_code
    int emoji_res -> emoji_res
io.rong.imkit.R$attr -> io.rong.imkit.R$attr:
    int activeColor -> activeColor
    int activeType -> activeType
    int centered -> centered
    int defDrawable -> defDrawable
    int fadeOut -> fadeOut
    int inactiveColor -> inactiveColor
    int inactiveType -> inactiveType
    int maxContainSize -> maxContainSize
    int perLoadCount -> perLoadCount
    int radius -> radius
    int rcheaderLayout -> rcheaderLayout
    int shape -> shape
    int sidebuffer -> sidebuffer
    int snap -> snap
    int spacing -> spacing
    int style -> style
io.rong.imkit.R$color -> io.rong.imkit.R$color:
    int rc_conversation_top_bg -> rc_conversation_top_bg
    int rc_draft_color -> rc_draft_color
    int rc_input_bg -> rc_input_bg
    int rc_message_user_name -> rc_message_user_name
    int rc_normal_bg -> rc_normal_bg
    int rc_notice_normal -> rc_notice_normal
    int rc_notice_text -> rc_notice_text
    int rc_notice_warning -> rc_notice_warning
    int rc_notification_bg -> rc_notification_bg
    int rc_plugins_bg -> rc_plugins_bg
    int rc_text_color_primary -> rc_text_color_primary
    int rc_text_color_primary_inverse -> rc_text_color_primary_inverse
    int rc_text_color_secondary -> rc_text_color_secondary
    int rc_text_color_tertiary -> rc_text_color_tertiary
    int rc_text_voice -> rc_text_voice
    int rc_voice_color -> rc_voice_color
    int theme_gray -> theme_gray
    int white -> white
io.rong.imkit.R$dimen -> io.rong.imkit.R$dimen:
    int rc_conversation_item_data_size -> rc_conversation_item_data_size
    int rc_conversation_item_name_size -> rc_conversation_item_name_size
    int rc_message_send_status_image_size -> rc_message_send_status_image_size
io.rong.imkit.R$drawable -> io.rong.imkit.R$drawable:
    int lv_white_selector -> lv_white_selector
    int rc_add_people -> rc_add_people
    int rc_an_voice_receive -> rc_an_voice_receive
    int rc_an_voice_sent -> rc_an_voice_sent
    int rc_bar_back -> rc_bar_back
    int rc_bar_logo -> rc_bar_logo
    int rc_bar_more -> rc_bar_more
    int rc_bg_albums_spinner -> rc_bg_albums_spinner
    int rc_bg_editinput -> rc_bg_editinput
    int rc_bg_item -> rc_bg_item
    int rc_bg_text_hover -> rc_bg_text_hover
    int rc_bg_text_normal -> rc_bg_text_normal
    int rc_bg_voice_popup -> rc_bg_voice_popup
    int rc_btn_answer_selector -> rc_btn_answer_selector
    int rc_btn_finish_selector -> rc_btn_finish_selector
    int rc_btn_hands_free_selector -> rc_btn_hands_free_selector
    int rc_btn_input -> rc_btn_input
    int rc_btn_over_selector -> rc_btn_over_selector
    int rc_btn_pub_service_enter_hover -> rc_btn_pub_service_enter_hover
    int rc_btn_pub_service_enter_normal -> rc_btn_pub_service_enter_normal
    int rc_btn_pub_service_follow_hover -> rc_btn_pub_service_follow_hover
    int rc_btn_pub_service_follow_normal -> rc_btn_pub_service_follow_normal
    int rc_btn_public_service_enter_selector -> rc_btn_public_service_enter_selector
    int rc_btn_public_service_unfollow_selector -> rc_btn_public_service_unfollow_selector
    int rc_btn_refuse_selector -> rc_btn_refuse_selector
    int rc_btn_send -> rc_btn_send
    int rc_btn_send_hover -> rc_btn_send_hover
    int rc_btn_send_normal -> rc_btn_send_normal
    int rc_btn_sound_off_selector -> rc_btn_sound_off_selector
    int rc_btn_voice -> rc_btn_voice
    int rc_btn_voice_hover -> rc_btn_voice_hover
    int rc_btn_voice_normal -> rc_btn_voice_normal
    int rc_call_answer -> rc_call_answer
    int rc_call_answer_down -> rc_call_answer_down
    int rc_call_over -> rc_call_over
    int rc_call_over_down -> rc_call_over_down
    int rc_call_refuse -> rc_call_refuse
    int rc_call_refuse_down -> rc_call_refuse_down
    int rc_checkbox_normal -> rc_checkbox_normal
    int rc_checkbox_pressed -> rc_checkbox_pressed
    int rc_conversation_list_msg_send_failure -> rc_conversation_list_msg_send_failure
    int rc_conversation_list_msg_sending -> rc_conversation_list_msg_sending
    int rc_default_portrait -> rc_default_portrait
    int rc_ed_pub_service_search_hover -> rc_ed_pub_service_search_hover
    int rc_ed_pub_service_search_normal -> rc_ed_pub_service_search_normal
    int rc_ed_public_service_search_selector -> rc_ed_public_service_search_selector
    int rc_group_default_portrait -> rc_group_default_portrait
    int rc_hands_free -> rc_hands_free
    int rc_hands_free_disable -> rc_hands_free_disable
    int rc_hands_free_down -> rc_hands_free_down
    int rc_ic_albums_checked -> rc_ic_albums_checked
    int rc_ic_albums_normal -> rc_ic_albums_normal
    int rc_ic_bubble_left -> rc_ic_bubble_left
    int rc_ic_bubble_no_left -> rc_ic_bubble_no_left
    int rc_ic_bubble_no_right -> rc_ic_bubble_no_right
    int rc_ic_bubble_right -> rc_ic_bubble_right
    int rc_ic_bubble_white -> rc_ic_bubble_white
    int rc_ic_camera -> rc_ic_camera
    int rc_ic_def_coversation_portrait -> rc_ic_def_coversation_portrait
    int rc_ic_def_msg_portrait -> rc_ic_def_msg_portrait
    int rc_ic_def_rich_content -> rc_ic_def_rich_content
    int rc_ic_delete -> rc_ic_delete
    int rc_ic_emoji_block -> rc_ic_emoji_block
    int rc_ic_extend -> rc_ic_extend
    int rc_ic_extend_normal -> rc_ic_extend_normal
    int rc_ic_extend_selected -> rc_ic_extend_selected
    int rc_ic_keyboard -> rc_ic_keyboard
    int rc_ic_keyboard_normal -> rc_ic_keyboard_normal
    int rc_ic_keyboard_selected -> rc_ic_keyboard_selected
    int rc_ic_location -> rc_ic_location
    int rc_ic_location_item_default -> rc_ic_location_item_default
    int rc_ic_message_block -> rc_ic_message_block
    int rc_ic_notice -> rc_ic_notice
    int rc_ic_notice_loading -> rc_ic_notice_loading
    int rc_ic_notice_point -> rc_ic_notice_point
    int rc_ic_notice_wraning -> rc_ic_notice_wraning
    int rc_ic_phone -> rc_ic_phone
    int rc_ic_picture -> rc_ic_picture
    int rc_ic_portrait_voip -> rc_ic_portrait_voip
    int rc_ic_setting_friends_add -> rc_ic_setting_friends_add
    int rc_ic_setting_friends_delete -> rc_ic_setting_friends_delete
    int rc_ic_smiley -> rc_ic_smiley
    int rc_ic_smiley_normal -> rc_ic_smiley_normal
    int rc_ic_smiley_selected -> rc_ic_smiley_selected
    int rc_ic_voice -> rc_ic_voice
    int rc_ic_voice_normal -> rc_ic_voice_normal
    int rc_ic_voice_receive -> rc_ic_voice_receive
    int rc_ic_voice_receive_play1 -> rc_ic_voice_receive_play1
    int rc_ic_voice_receive_play2 -> rc_ic_voice_receive_play2
    int rc_ic_voice_receive_play3 -> rc_ic_voice_receive_play3
    int rc_ic_voice_selected -> rc_ic_voice_selected
    int rc_ic_voice_sent -> rc_ic_voice_sent
    int rc_ic_voice_sent_play1 -> rc_ic_voice_sent_play1
    int rc_ic_voice_sent_play2 -> rc_ic_voice_sent_play2
    int rc_ic_voice_sent_play3 -> rc_ic_voice_sent_play3
    int rc_ic_volume_1 -> rc_ic_volume_1
    int rc_ic_volume_2 -> rc_ic_volume_2
    int rc_ic_volume_3 -> rc_ic_volume_3
    int rc_ic_volume_4 -> rc_ic_volume_4
    int rc_ic_volume_5 -> rc_ic_volume_5
    int rc_ic_volume_6 -> rc_ic_volume_6
    int rc_ic_volume_7 -> rc_ic_volume_7
    int rc_ic_volume_8 -> rc_ic_volume_8
    int rc_ic_volume_cancel -> rc_ic_volume_cancel
    int rc_ic_volume_wraning -> rc_ic_volume_wraning
    int rc_ic_warning -> rc_ic_warning
    int rc_img_camera -> rc_img_camera
    int rc_mebmer_delete -> rc_mebmer_delete
    int rc_photo_checkbox -> rc_photo_checkbox
    int rc_precheckbox_normal -> rc_precheckbox_normal
    int rc_precheckbox_pressed -> rc_precheckbox_pressed
    int rc_preview_checkbox -> rc_preview_checkbox
    int rc_radio_button_off -> rc_radio_button_off
    int rc_radio_button_on -> rc_radio_button_on
    int rc_receive_voice_one -> rc_receive_voice_one
    int rc_receive_voice_three -> rc_receive_voice_three
    int rc_receive_voice_two -> rc_receive_voice_two
    int rc_send_voice_one -> rc_send_voice_one
    int rc_send_voice_three -> rc_send_voice_three
    int rc_send_voice_two -> rc_send_voice_two
    int rc_sound_off -> rc_sound_off
    int rc_sound_off_disable -> rc_sound_off_disable
    int rc_sound_off_down -> rc_sound_off_down
    int rc_switch_btn -> rc_switch_btn
    int rc_unread_count_bg -> rc_unread_count_bg
    int rc_voice_icon_left -> rc_voice_icon_left
    int rc_voice_icon_right -> rc_voice_icon_right
    int rc_voide_message_unread -> rc_voide_message_unread
    int rc_volume_four -> rc_volume_four
    int rc_volume_one -> rc_volume_one
    int rc_volume_three -> rc_volume_three
    int rc_volume_two -> rc_volume_two
    int rc_volume_zero -> rc_volume_zero
    int u1f004 -> u1f004
    int u1f30f -> u1f30f
    int u1f319 -> u1f319
    int u1f332 -> u1f332
    int u1f339 -> u1f339
    int u1f33b -> u1f33b
    int u1f349 -> u1f349
    int u1f356 -> u1f356
    int u1f35a -> u1f35a
    int u1f366 -> u1f366
    int u1f36b -> u1f36b
    int u1f377 -> u1f377
    int u1f37b -> u1f37b
    int u1f381 -> u1f381
    int u1f382 -> u1f382
    int u1f384 -> u1f384
    int u1f389 -> u1f389
    int u1f393 -> u1f393
    int u1f3a4 -> u1f3a4
    int u1f3b2 -> u1f3b2
    int u1f3b5 -> u1f3b5
    int u1f3c0 -> u1f3c0
    int u1f3c2 -> u1f3c2
    int u1f3e1 -> u1f3e1
    int u1f434 -> u1f434
    int u1f436 -> u1f436
    int u1f437 -> u1f437
    int u1f44a -> u1f44a
    int u1f44c -> u1f44c
    int u1f44d -> u1f44d
    int u1f44e -> u1f44e
    int u1f44f -> u1f44f
    int u1f451 -> u1f451
    int u1f46a -> u1f46a
    int u1f46b -> u1f46b
    int u1f47b -> u1f47b
    int u1f47c -> u1f47c
    int u1f47d -> u1f47d
    int u1f47f -> u1f47f
    int u1f484 -> u1f484
    int u1f48a -> u1f48a
    int u1f48b -> u1f48b
    int u1f48d -> u1f48d
    int u1f494 -> u1f494
    int u1f4a1 -> u1f4a1
    int u1f4a2 -> u1f4a2
    int u1f4a3 -> u1f4a3
    int u1f4a4 -> u1f4a4
    int u1f4a9 -> u1f4a9
    int u1f4aa -> u1f4aa
    int u1f4b0 -> u1f4b0
    int u1f4da -> u1f4da
    int u1f4de -> u1f4de
    int u1f4e2 -> u1f4e2
    int u1f525 -> u1f525
    int u1f52b -> u1f52b
    int u1f556 -> u1f556
    int u1f600 -> u1f600
    int u1f601 -> u1f601
    int u1f602 -> u1f602
    int u1f603 -> u1f603
    int u1f605 -> u1f605
    int u1f606 -> u1f606
    int u1f607 -> u1f607
    int u1f608 -> u1f608
    int u1f609 -> u1f609
    int u1f60a -> u1f60a
    int u1f60b -> u1f60b
    int u1f60c -> u1f60c
    int u1f60d -> u1f60d
    int u1f60e -> u1f60e
    int u1f60f -> u1f60f
    int u1f611 -> u1f611
    int u1f612 -> u1f612
    int u1f613 -> u1f613
    int u1f614 -> u1f614
    int u1f615 -> u1f615
    int u1f616 -> u1f616
    int u1f618 -> u1f618
    int u1f61a -> u1f61a
    int u1f61c -> u1f61c
    int u1f61d -> u1f61d
    int u1f61e -> u1f61e
    int u1f61f -> u1f61f
    int u1f621 -> u1f621
    int u1f622 -> u1f622
    int u1f623 -> u1f623
    int u1f624 -> u1f624
    int u1f628 -> u1f628
    int u1f629 -> u1f629
    int u1f62a -> u1f62a
    int u1f62b -> u1f62b
    int u1f62c -> u1f62c
    int u1f62d -> u1f62d
    int u1f62e -> u1f62e
    int u1f62f -> u1f62f
    int u1f630 -> u1f630
    int u1f631 -> u1f631
    int u1f632 -> u1f632
    int u1f633 -> u1f633
    int u1f634 -> u1f634
    int u1f635 -> u1f635
    int u1f636 -> u1f636
    int u1f637 -> u1f637
    int u1f648 -> u1f648
    int u1f649 -> u1f649
    int u1f64a -> u1f64a
    int u1f64f -> u1f64f
    int u1f680 -> u1f680
    int u1f6ab -> u1f6ab
    int u1f6b2 -> u1f6b2
    int u1f6bf -> u1f6bf
    int u23f0 -> u23f0
    int u23f3 -> u23f3
    int u2600 -> u2600
    int u2601 -> u2601
    int u2614 -> u2614
    int u2615 -> u2615
    int u261d -> u261d
    int u263a -> u263a
    int u26a1 -> u26a1
    int u26bd -> u26bd
    int u26c4 -> u26c4
    int u26c5 -> u26c5
    int u270a -> u270a
    int u270b -> u270b
    int u270c -> u270c
    int u270f -> u270f
    int u2744 -> u2744
    int u2b50 -> u2b50
io.rong.imkit.R$id -> io.rong.imkit.R$id:
    int C -> C
    int CE -> CE
    int CS -> CS
    int CSE -> CSE
    int EC -> EC
    int ECS -> ECS
    int ESC -> ESC
    int SC -> SC
    int SCE -> SCE
    int account -> account
    int answer_id -> answer_id
    int btn_cancel -> btn_cancel
    int btn_isOK -> btn_isOK
    int button1 -> button1
    int call_finish -> call_finish
    int calling_state -> calling_state
    int circle -> circle
    int container -> container
    int description -> description
    int enter -> enter
    int fill -> fill
    int follow -> follow
    int func -> func
    int hands_off_id -> hands_off_id
    int introduction -> introduction
    int linearLayout -> linearLayout
    int mask_layout -> mask_layout
    int name -> name
    int portrait -> portrait
    int rc_actionbar -> rc_actionbar
    int rc_back -> rc_back
    int rc_btn_cancel -> rc_btn_cancel
    int rc_btn_ok -> rc_btn_ok
    int rc_chebox_pictrue -> rc_chebox_pictrue
    int rc_checkbox -> rc_checkbox
    int rc_content -> rc_content
    int rc_conversation_content -> rc_conversation_content
    int rc_conversation_msg_block -> rc_conversation_msg_block
    int rc_conversation_time -> rc_conversation_time
    int rc_conversation_title -> rc_conversation_title
    int rc_currentpage -> rc_currentpage
    int rc_ext -> rc_ext
    int rc_flow -> rc_flow
    int rc_fragment -> rc_fragment
    int rc_frame -> rc_frame
    int rc_icon -> rc_icon
    int rc_img -> rc_img
    int rc_indicator -> rc_indicator
    int rc_input -> rc_input
    int rc_input_extend -> rc_input_extend
    int rc_input_main -> rc_input_main
    int rc_input_switch -> rc_input_switch
    int rc_item0 -> rc_item0
    int rc_item1 -> rc_item1
    int rc_item2 -> rc_item2
    int rc_item3 -> rc_item3
    int rc_item4 -> rc_item4
    int rc_item5 -> rc_item5
    int rc_item6 -> rc_item6
    int rc_item7 -> rc_item7
    int rc_item8 -> rc_item8
    int rc_item9 -> rc_item9
    int rc_item_conversation -> rc_item_conversation
    int rc_layout -> rc_layout
    int rc_left -> rc_left
    int rc_list -> rc_list
    int rc_logo -> rc_logo
    int rc_message_send_failed -> rc_message_send_failed
    int rc_msg -> rc_msg
    int rc_new -> rc_new
    int rc_plugins -> rc_plugins
    int rc_portrait -> rc_portrait
    int rc_portrait_right -> rc_portrait_right
    int rc_progress -> rc_progress
    int rc_right -> rc_right
    int rc_search_btn -> rc_search_btn
    int rc_search_ed -> rc_search_ed
    int rc_search_list -> rc_search_list
    int rc_send -> rc_send
    int rc_setting_item -> rc_setting_item
    int rc_time -> rc_time
    int rc_title -> rc_title
    int rc_title_layout -> rc_title_layout
    int rc_txt -> rc_txt
    int rc_unread_message -> rc_unread_message
    int rc_unread_message_right -> rc_unread_message_right
    int rc_viewpager -> rc_viewpager
    int rc_voip_called_layout -> rc_voip_called_layout
    int rc_warning -> rc_warning
    int rc_webview -> rc_webview
    int refuse_id -> refuse_id
    int rel_group_intro -> rel_group_intro
    int show_pictrue -> show_pictrue
    int shownumber -> shownumber
    int sound_off_container_id -> sound_off_container_id
    int sound_off_id -> sound_off_id
    int square -> square
    int stroke -> stroke
    int unfollow -> unfollow
    int user_name -> user_name
    int user_photo -> user_photo
    int user_photo_container -> user_photo_container
    int vioce_control_container -> vioce_control_container
    int volume_animation -> volume_animation
io.rong.imkit.R$layout -> io.rong.imkit.R$layout:
    int rc_ac_albums -> rc_ac_albums
    int rc_ac_camera -> rc_ac_camera
    int rc_ac_preview -> rc_ac_preview
    int rc_ac_selected_pictrue -> rc_ac_selected_pictrue
    int rc_ac_webview -> rc_ac_webview
    int rc_activity -> rc_activity
    int rc_calledside_layout -> rc_calledside_layout
    int rc_callside_layout -> rc_callside_layout
    int rc_fr_conversation -> rc_fr_conversation
    int rc_fr_conversation_member_list -> rc_fr_conversation_member_list
    int rc_fr_conversationlist -> rc_fr_conversationlist
    int rc_fr_dialog_alter -> rc_fr_dialog_alter
    int rc_fr_messageinput -> rc_fr_messageinput
    int rc_fr_messagelist -> rc_fr_messagelist
    int rc_fr_photo -> rc_fr_photo
    int rc_fr_photo2 -> rc_fr_photo2
    int rc_fr_public_service_inf -> rc_fr_public_service_inf
    int rc_fr_public_service_search -> rc_fr_public_service_search
    int rc_fr_public_service_sub_list -> rc_fr_public_service_sub_list
    int rc_fr_test -> rc_fr_test
    int rc_fragment_base_setting -> rc_fragment_base_setting
    int rc_item_albums -> rc_item_albums
    int rc_item_appservice_conversation -> rc_item_appservice_conversation
    int rc_item_conversation -> rc_item_conversation
    int rc_item_conversation_member -> rc_item_conversation_member
    int rc_item_discussion_conversation -> rc_item_discussion_conversation
    int rc_item_discussion_notification_message -> rc_item_discussion_notification_message
    int rc_item_group_conversation -> rc_item_group_conversation
    int rc_item_imgmsg -> rc_item_imgmsg
    int rc_item_information_notification_message -> rc_item_information_notification_message
    int rc_item_lbsmsg -> rc_item_lbsmsg
    int rc_item_location_msg -> rc_item_location_msg
    int rc_item_message -> rc_item_message
    int rc_item_preview_fragment -> rc_item_preview_fragment
    int rc_item_private_conversation -> rc_item_private_conversation
    int rc_item_progress -> rc_item_progress
    int rc_item_public_service_list -> rc_item_public_service_list
    int rc_item_public_service_search -> rc_item_public_service_search
    int rc_item_publicservice_conversation -> rc_item_publicservice_conversation
    int rc_item_richcontentmsg -> rc_item_richcontentmsg
    int rc_item_system_conversation -> rc_item_system_conversation
    int rc_item_txtmsg -> rc_item_txtmsg
    int rc_item_voicemsg -> rc_item_voicemsg
    int rc_public_service_msg_item -> rc_public_service_msg_item
    int rc_public_service_multi_rich_content_msg -> rc_public_service_multi_rich_content_msg
    int rc_public_service_rich_content_msg -> rc_public_service_rich_content_msg
    int rc_ui_voice_cover -> rc_ui_voice_cover
    int rc_wi_block -> rc_wi_block
    int rc_wi_block_popup -> rc_wi_block_popup
    int rc_wi_emoji_grid -> rc_wi_emoji_grid
    int rc_wi_emoji_txt -> rc_wi_emoji_txt
    int rc_wi_ext_pager -> rc_wi_ext_pager
    int rc_wi_input -> rc_wi_input
    int rc_wi_notice -> rc_wi_notice
    int rc_wi_notification_loading -> rc_wi_notification_loading
    int rc_wi_plugins -> rc_wi_plugins
    int rc_wi_text_btn -> rc_wi_text_btn
    int rc_wi_txt_provider -> rc_wi_txt_provider
    int rc_wi_vo_popup -> rc_wi_vo_popup
    int rc_wi_vo_provider -> rc_wi_vo_provider
io.rong.imkit.R$string -> io.rong.imkit.R$string:
    int rc_dialog_cancel -> rc_dialog_cancel
    int rc_dialog_item_message_copy -> rc_dialog_item_message_copy
    int rc_dialog_item_message_delete -> rc_dialog_item_message_delete
    int rc_dialog_ok -> rc_dialog_ok
    int rc_discussion_nt_msg_for_add -> rc_discussion_nt_msg_for_add
    int rc_discussion_nt_msg_for_added -> rc_discussion_nt_msg_for_added
    int rc_discussion_nt_msg_for_exit -> rc_discussion_nt_msg_for_exit
    int rc_discussion_nt_msg_for_is_open_invite_close -> rc_discussion_nt_msg_for_is_open_invite_close
    int rc_discussion_nt_msg_for_is_open_invite_open -> rc_discussion_nt_msg_for_is_open_invite_open
    int rc_discussion_nt_msg_for_removed -> rc_discussion_nt_msg_for_removed
    int rc_discussion_nt_msg_for_rename -> rc_discussion_nt_msg_for_rename
    int rc_discussion_nt_msg_for_who_removed -> rc_discussion_nt_msg_for_who_removed
    int rc_discussion_nt_msg_for_you -> rc_discussion_nt_msg_for_you
    int rc_group_List_operation_failure -> rc_group_List_operation_failure
    int rc_group_list_default_discussion_name -> rc_group_list_default_discussion_name
    int rc_group_list_dialog_cancel_top -> rc_group_list_dialog_cancel_top
    int rc_group_list_dialog_remove -> rc_group_list_dialog_remove
    int rc_group_list_dialog_set_top -> rc_group_list_dialog_set_top
    int rc_group_list_empty_prompt -> rc_group_list_empty_prompt
    int rc_group_list_my_chatroom -> rc_group_list_my_chatroom
    int rc_group_list_my_customer_service -> rc_group_list_my_customer_service
    int rc_group_list_my_discussion -> rc_group_list_my_discussion
    int rc_group_list_my_group -> rc_group_list_my_group
    int rc_group_list_my_private_conversation -> rc_group_list_my_private_conversation
    int rc_group_list_popup_cancel_top -> rc_group_list_popup_cancel_top
    int rc_group_list_popup_set_top -> rc_group_list_popup_set_top
    int rc_group_list_system_conversation -> rc_group_list_system_conversation
    int rc_input_send -> rc_input_send
    int rc_input_voice -> rc_input_voice
    int rc_message_content_draft -> rc_message_content_draft
    int rc_message_content_image -> rc_message_content_image
    int rc_message_content_location -> rc_message_content_location
    int rc_message_content_rich_text -> rc_message_content_rich_text
    int rc_message_content_video -> rc_message_content_video
    int rc_message_content_voice -> rc_message_content_voice
    int rc_message_unknow -> rc_message_unknow
    int rc_message_unread_count -> rc_message_unread_count
    int rc_name -> rc_name
    int rc_notice_connecting -> rc_notice_connecting
    int rc_notice_create_discussion -> rc_notice_create_discussion
    int rc_notice_disconnect -> rc_notice_disconnect
    int rc_notice_enter_chatroom -> rc_notice_enter_chatroom
    int rc_notice_input_conversation_error -> rc_notice_input_conversation_error
    int rc_notice_tick -> rc_notice_tick
    int rc_notification_contact -> rc_notification_contact
    int rc_notification_msg -> rc_notification_msg
    int rc_notification_send -> rc_notification_send
    int rc_notification_ticker_text -> rc_notification_ticker_text
    int rc_plugins_camera -> rc_plugins_camera
    int rc_plugins_image -> rc_plugins_image
    int rc_plugins_location -> rc_plugins_location
    int rc_plugins_voip -> rc_plugins_voip
    int rc_pub_service_info_account -> rc_pub_service_info_account
    int rc_pub_service_info_enter -> rc_pub_service_info_enter
    int rc_pub_service_info_follow -> rc_pub_service_info_follow
    int rc_pub_service_info_func -> rc_pub_service_info_func
    int rc_pub_service_info_unfollow -> rc_pub_service_info_unfollow
    int rc_setting_clear_msg_fail -> rc_setting_clear_msg_fail
    int rc_setting_clear_msg_name -> rc_setting_clear_msg_name
    int rc_setting_clear_msg_prompt -> rc_setting_clear_msg_prompt
    int rc_setting_clear_msg_success -> rc_setting_clear_msg_success
    int rc_setting_conversation_notify -> rc_setting_conversation_notify
    int rc_setting_conversation_notify_fail -> rc_setting_conversation_notify_fail
    int rc_setting_get_conversation_notify_fail -> rc_setting_get_conversation_notify_fail
    int rc_setting_name -> rc_setting_name
    int rc_setting_set_top -> rc_setting_set_top
    int rc_setting_set_top_fail -> rc_setting_set_top_fail
    int rc_voice_cancel -> rc_voice_cancel
    int rc_voice_dialog_cancel_send -> rc_voice_dialog_cancel_send
    int rc_voice_dialog_collect -> rc_voice_dialog_collect
    int rc_voice_dialog_time_short -> rc_voice_dialog_time_short
    int rc_voice_rec -> rc_voice_rec
    int rc_voice_short -> rc_voice_short
io.rong.imkit.R$style -> io.rong.imkit.R$style:
    int RCTheme -> RCTheme
    int RCTheme_Message_RichContent_TextView -> RCTheme_Message_RichContent_TextView
    int RCTheme_Message_TextView -> RCTheme_Message_TextView
    int RCTheme_Message_Username_TextView -> RCTheme_Message_Username_TextView
    int RCTheme_Notification -> RCTheme_Notification
    int RCTheme_TextView -> RCTheme_TextView
    int RCTheme_TextView_Large -> RCTheme_TextView_Large
    int RCTheme_TextView_Large_Inverse -> RCTheme_TextView_Large_Inverse
    int RCTheme_TextView_Medium -> RCTheme_TextView_Medium
    int RCTheme_TextView_New -> RCTheme_TextView_New
    int RCTheme_TextView_Small -> RCTheme_TextView_Small
    int RcDialog -> RcDialog
    int custom_checkbox -> custom_checkbox
    int preview_checkbox -> preview_checkbox
io.rong.imkit.R$styleable -> io.rong.imkit.R$styleable:
    int[] AsyncImageView -> AsyncImageView
    int AsyncImageView_defDrawable -> AsyncImageView_defDrawable
    int AsyncImageView_shape -> AsyncImageView_shape
    int[] AutoLoadListView -> AutoLoadListView
    int AutoLoadListView_perLoadCount -> AutoLoadListView_perLoadCount
    int AutoLoadListView_rcheaderLayout -> AutoLoadListView_rcheaderLayout
    int[] CircleFlowIndicator -> CircleFlowIndicator
    int CircleFlowIndicator_activeColor -> CircleFlowIndicator_activeColor
    int CircleFlowIndicator_activeType -> CircleFlowIndicator_activeType
    int CircleFlowIndicator_centered -> CircleFlowIndicator_centered
    int CircleFlowIndicator_fadeOut -> CircleFlowIndicator_fadeOut
    int CircleFlowIndicator_inactiveColor -> CircleFlowIndicator_inactiveColor
    int CircleFlowIndicator_inactiveType -> CircleFlowIndicator_inactiveType
    int CircleFlowIndicator_radius -> CircleFlowIndicator_radius
    int CircleFlowIndicator_snap -> CircleFlowIndicator_snap
    int CircleFlowIndicator_spacing -> CircleFlowIndicator_spacing
    int[] InputView -> InputView
    int InputView_style -> InputView_style
    int[] MessageProviderContainerView -> MessageProviderContainerView
    int MessageProviderContainerView_maxContainSize -> MessageProviderContainerView_maxContainSize
    int[] ViewFlow -> ViewFlow
    int ViewFlow_sidebuffer -> ViewFlow_sidebuffer
io.rong.imkit.RLog -> io.rong.imkit.RLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int v(java.lang.Object,java.lang.String,java.lang.String) -> v
    int v(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.Object,java.lang.String,java.lang.String) -> d
    int d(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.Object,java.lang.String,java.lang.String) -> i
    int i(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.Object,java.lang.String,java.lang.String) -> w
    int w(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.Object,java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.Object,java.lang.String,java.lang.String) -> e
    int e(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> e
    int wtf(java.lang.Object,java.lang.String,java.lang.String) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.Throwable) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
io.rong.imkit.RongActivity -> io.rong.imkit.RongActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onDestroy() -> onDestroy
    void onBackPressed() -> onBackPressed
io.rong.imkit.RongContext -> io.rong.imkit.RongContext:
    io.rong.imkit.RongContext sContext -> sContext
    de.greenrobot.event.EventBus mBus -> mBus
    java.util.concurrent.ThreadPoolExecutor mExecutor -> mExecutor
    io.rong.imkit.RongIM$ConversationBehaviorListener mConversationBehaviorListener -> mConversationBehaviorListener
    io.rong.imkit.RongIM$PublicServiceBehaviorListener mPublicServiceBehaviorListener -> mPublicServiceBehaviorListener
    io.rong.imkit.RongIM$OnMemberSelectListener mMemberSelectListener -> mMemberSelectListener
    io.rong.imkit.RongIM$GetUserInfoProvider mUserInfoProvider -> mUserInfoProvider
    io.rong.imkit.RongIM$GetGroupInfoProvider mGroupProvider -> mGroupProvider
    io.rong.imkit.RongIM$GetNewMessageSoundProvider mNewMessageSoundProvider -> mNewMessageSoundProvider
    java.util.Map mTemplateMap -> mTemplateMap
    io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider mDefaultTemplate -> mDefaultTemplate
    java.util.Map mProviderMap -> mProviderMap
    java.util.Map mConversationProviderMap -> mConversationProviderMap
    java.util.Map mConversationTagMap -> mConversationTagMap
    java.util.Map mConversationTypeStateMap -> mConversationTypeStateMap
    io.rong.imkit.cache.RongCache mUserInfoCache -> mUserInfoCache
    io.rong.imkit.cache.RongCache mGroupCache -> mGroupCache
    io.rong.imkit.cache.RongCache mDiscussionCache -> mDiscussionCache
    io.rong.imkit.cache.RongCache mPublicServiceInfoCache -> mPublicServiceInfoCache
    io.rong.imkit.cache.RongCache mNotificationCache -> mNotificationCache
    java.util.List mExtendProviderList -> mExtendProviderList
    io.rong.imkit.widget.provider.InputExtendProvider$MainProvider mMainProvider -> mMainProvider
    io.rong.imkit.widget.provider.InputExtendProvider$MainProvider mSlaveProvider -> mSlaveProvider
    io.rong.imkit.RongIM$LocationProvider mLocationProvider -> mLocationProvider
    io.rong.imkit.logic.MessageCounterLogic mCounterLogic -> mCounterLogic
    java.util.List mCurrentConversationList -> mCurrentConversationList
    android.os.Handler mHandler -> mHandler
    java.util.concurrent.ConcurrentHashMap mNotifyStatusCache -> mNotifyStatusCache
    io.rong.imkit.model.ProviderTag mDefaultProviderTag -> mDefaultProviderTag
    void init(android.content.Context) -> init
    io.rong.imkit.RongContext getInstance() -> getInstance
    void initRegister() -> initRegister
    void initCache() -> initCache
    io.rong.imkit.cache.RongCache getUserInfoCache() -> getUserInfoCache
    io.rong.imkit.cache.RongCache getGroupInfoCache() -> getGroupInfoCache
    io.rong.imkit.cache.RongCache getDiscussionCache() -> getDiscussionCache
    io.rong.imkit.cache.RongCache getPublicAccountInfoCache() -> getPublicAccountInfoCache
    java.util.List getCurrentConversationList() -> getCurrentConversationList
    de.greenrobot.event.EventBus getEventBus() -> getEventBus
    io.rong.imkit.logic.MessageCounterLogic getMessageCounterLogic() -> getMessageCounterLogic
    io.rong.imkit.PushNotificationManager getPushNotificationMng() -> getPushNotificationMng
    void saveToken(java.lang.String) -> saveToken
    void registerConversationTemplate(io.rong.imkit.widget.provider.IContainerItemProvider$ConversationProvider) -> registerConversationTemplate
    io.rong.imkit.widget.provider.IContainerItemProvider$ConversationProvider getConversationTemplate(java.lang.String) -> getConversationTemplate
    io.rong.imkit.model.ConversationProviderTag getConversationProviderTag(java.lang.String) -> getConversationProviderTag
    void registerDefaultConversationGatherState() -> registerDefaultConversationGatherState
    void setConversationGatherState(java.lang.String,java.lang.Boolean) -> setConversationGatherState
    java.lang.Boolean getConversationGatherState(java.lang.String) -> getConversationGatherState
    void registerMessageTemplate(io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider) -> registerMessageTemplate
    io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider getMessageTemplate(java.lang.Class) -> getMessageTemplate
    void setDefaultMessageTemplate(io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider) -> setDefaultMessageTemplate
    io.rong.imkit.model.ProviderTag getMessageProviderTag(java.lang.Class) -> getMessageProviderTag
    void executorBackground(java.lang.Runnable) -> executorBackground
    void executorBackground(me.add1.common.PriorityRunnable) -> executorBackground
    io.rong.imlib.model.UserInfo getUserInfoFromCache(java.lang.String) -> getUserInfoFromCache
    io.rong.imlib.model.Group getGroupInfoFromCache(java.lang.String) -> getGroupInfoFromCache
    io.rong.imlib.model.Discussion getDiscussionInfoFromCache(java.lang.String) -> getDiscussionInfoFromCache
    io.rong.imlib.model.PublicServiceInfo getPublicAccountInfoFromCache(io.rong.imkit.model.MessageKey) -> getPublicAccountInfoFromCache
    io.rong.imlib.model.Conversation$ConversationNotificationStatus getConversationNotificationStatus(io.rong.imkit.model.MessageKey) -> getConversationNotificationStatus
    io.rong.imkit.RongIM$ConversationBehaviorListener getConversationBehaviorListener() -> getConversationBehaviorListener
    void setConversationBehaviorListener(io.rong.imkit.RongIM$ConversationBehaviorListener) -> setConversationBehaviorListener
    io.rong.imkit.RongIM$PublicServiceBehaviorListener getPublicServiceBehaviorListener() -> getPublicServiceBehaviorListener
    void setPublicServiceBehaviorListener(io.rong.imkit.RongIM$PublicServiceBehaviorListener) -> setPublicServiceBehaviorListener
    void setOnMemberSelectListener(io.rong.imkit.RongIM$OnMemberSelectListener) -> setOnMemberSelectListener
    io.rong.imkit.RongIM$OnMemberSelectListener getMemberSelectListener() -> getMemberSelectListener
    void setGetUserInfoProvider(io.rong.imkit.RongIM$GetUserInfoProvider) -> setGetUserInfoProvider
    void setGetGroupInfoProvider(io.rong.imkit.RongIM$GetGroupInfoProvider) -> setGetGroupInfoProvider
    io.rong.imkit.RongIM$GetUserInfoProvider getUserInfoProvider() -> getUserInfoProvider
    io.rong.imkit.RongIM$GetGroupInfoProvider getGroupInfoProvider() -> getGroupInfoProvider
    io.rong.imkit.RongIM$GetNewMessageSoundProvider getNewMessageSoundProvider() -> getNewMessageSoundProvider
    void setNewMessageSoundProvider(io.rong.imkit.RongIM$GetNewMessageSoundProvider) -> setNewMessageSoundProvider
    void registerInputExtendProvider(io.rong.imkit.widget.provider.InputExtendProvider) -> registerInputExtendProvider
    void setMainInputProvider(io.rong.imkit.widget.provider.InputExtendProvider$MainProvider) -> setMainInputProvider
    void setSlaveInputProvider(io.rong.imkit.widget.provider.InputExtendProvider$MainProvider) -> setSlaveInputProvider
    io.rong.imkit.widget.provider.InputExtendProvider$MainProvider getSlaveInputProvider() -> getSlaveInputProvider
    java.util.List getRegisteredExtendProviderList() -> getRegisteredExtendProviderList
    io.rong.imkit.widget.provider.InputExtendProvider$MainProvider getMainInputProvider() -> getMainInputProvider
    void registerConversationInfo(io.rong.imkit.model.ConversationInfo) -> registerConversationInfo
    void unregisterConversationInfo(io.rong.imkit.model.ConversationInfo) -> unregisterConversationInfo
    io.rong.imkit.RongIM$LocationProvider getLocationProvider() -> getLocationProvider
    void setLocationProvider(io.rong.imkit.RongIM$LocationProvider) -> setLocationProvider
    void setNotifyStatusToCache(io.rong.imkit.model.ConversationKey,io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> setNotifyStatusToCache
    io.rong.imlib.model.Conversation$ConversationNotificationStatus getNotifyStatusByCache(io.rong.imkit.model.ConversationKey) -> getNotifyStatusByCache
    io.rong.imkit.RongContext access$000() -> access$000
io.rong.imkit.RongContext$1 -> io.rong.imkit.RongContext$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    io.rong.imkit.RongContext this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.rong.imkit.RongContext$1$1 -> io.rong.imkit.RongContext$1$1:
    java.lang.Runnable val$r -> val$r
    io.rong.imkit.RongContext$1 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongContext$2 -> io.rong.imkit.RongContext$2:
    io.rong.imkit.RongContext this$0 -> this$0
    void run() -> run
io.rong.imkit.RongContext$3 -> io.rong.imkit.RongContext$3:
    java.util.Vector mRequests -> mRequests
    io.rong.imkit.RongContext this$0 -> this$0
    io.rong.imlib.model.UserInfo obtainValue(java.lang.String) -> obtainValue
    java.lang.Object obtainValue(java.lang.Object) -> obtainValue
io.rong.imkit.RongContext$4 -> io.rong.imkit.RongContext$4:
    java.util.Vector mRequests -> mRequests
    io.rong.imkit.RongContext this$0 -> this$0
    io.rong.imlib.model.Group obtainValue(java.lang.String) -> obtainValue
    java.lang.Object obtainValue(java.lang.Object) -> obtainValue
io.rong.imkit.RongContext$5 -> io.rong.imkit.RongContext$5:
    java.util.Vector mRequests -> mRequests
    io.rong.imkit.RongContext this$0 -> this$0
    io.rong.imlib.model.Discussion obtainValue(java.lang.String) -> obtainValue
    java.lang.Object obtainValue(java.lang.Object) -> obtainValue
    io.rong.imkit.RongContext access$100(io.rong.imkit.RongContext$5) -> access$100
io.rong.imkit.RongContext$5$1 -> io.rong.imkit.RongContext$5$1:
    java.lang.String val$key -> val$key
    io.rong.imkit.RongContext$5 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongContext$5$1$1 -> io.rong.imkit.RongContext$5$1$1:
    io.rong.imkit.RongContext$5$1 this$2 -> this$2
    void onSuccess(io.rong.imlib.model.Discussion) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongContext$6 -> io.rong.imkit.RongContext$6:
    java.util.Vector mRequests -> mRequests
    io.rong.imkit.RongContext this$0 -> this$0
    io.rong.imlib.model.PublicServiceInfo obtainValue(io.rong.imkit.model.MessageKey) -> obtainValue
    java.lang.Object obtainValue(java.lang.Object) -> obtainValue
    io.rong.imkit.RongContext access$200(io.rong.imkit.RongContext$6) -> access$200
io.rong.imkit.RongContext$6$1 -> io.rong.imkit.RongContext$6$1:
    io.rong.imkit.model.MessageKey val$key -> val$key
    io.rong.imkit.RongContext$6 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongContext$6$1$1 -> io.rong.imkit.RongContext$6$1$1:
    io.rong.imkit.RongContext$6$1 this$2 -> this$2
    void onSuccess(io.rong.imlib.model.PublicServiceInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongContext$7 -> io.rong.imkit.RongContext$7:
    java.util.Vector mRequests -> mRequests
    io.rong.imlib.model.Conversation$ConversationNotificationStatus notificationStatus -> notificationStatus
    io.rong.imkit.RongContext this$0 -> this$0
    io.rong.imlib.model.Conversation$ConversationNotificationStatus obtainValue(io.rong.imkit.model.MessageKey) -> obtainValue
    java.lang.Object obtainValue(java.lang.Object) -> obtainValue
io.rong.imkit.RongContext$7$1 -> io.rong.imkit.RongContext$7$1:
    io.rong.imkit.model.MessageKey val$key -> val$key
    io.rong.imkit.RongContext$7 this$1 -> this$1
    void run() -> run
io.rong.imkit.RongContext$7$1$1 -> io.rong.imkit.RongContext$7$1$1:
    io.rong.imkit.RongContext$7$1 this$2 -> this$2
    void onSuccess(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongContext$8 -> io.rong.imkit.RongContext$8:
    java.lang.Runnable val$runnable -> val$runnable
    io.rong.imkit.RongContext this$0 -> this$0
    void run() -> run
io.rong.imkit.RongIM -> io.rong.imkit.RongIM:
    java.lang.String TAG -> TAG
    io.rong.imkit.RongIM sRongIM -> sRongIM
    android.content.Context mContext -> mContext
    java.lang.String mCurrentProcessName -> mCurrentProcessName
    java.lang.String mMainProcessName -> mMainProcessName
    io.rong.imkit.RongIMClientWrapper mClientWrapper -> mClientWrapper
    boolean isUserInfoAttached -> isUserInfoAttached
    io.rong.imlib.model.UserInfo mCurrentUserInfo -> mCurrentUserInfo
    io.rong.imkit.RongIM$OnSendMessageListener mOnSendMessageListener -> mOnSendMessageListener
    void saveToken(java.lang.String) -> saveToken
    void init(android.content.Context) -> init
    void registerMessageType(java.lang.Class) -> registerMessageType
    void registerMessageTemplate(io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider) -> registerMessageTemplate
    io.rong.imkit.RongIM connect(java.lang.String,io.rong.imlib.RongIMClient$ConnectCallback) -> connect
    io.rong.imkit.RongIMClientWrapper getRongClient() -> getRongClient
    void disconnect(boolean) -> disconnect
    void setLocationProvider(io.rong.imkit.RongIM$LocationProvider) -> setLocationProvider
    void disconnect() -> disconnect
    io.rong.imkit.RongIM getInstance() -> getInstance
    void startConversationList(android.content.Context) -> startConversationList
    void startSubConversationList(android.content.Context,io.rong.imlib.model.Conversation$ConversationType) -> startSubConversationList
    void setConversationBehaviorListener(io.rong.imkit.RongIM$ConversationBehaviorListener) -> setConversationBehaviorListener
    void setPublicServiceBehaviorListener(io.rong.imkit.RongIM$PublicServiceBehaviorListener) -> setPublicServiceBehaviorListener
    void setOnMemberSelectListener(io.rong.imkit.RongIM$OnMemberSelectListener) -> setOnMemberSelectListener
    void startPrivateChat(android.content.Context,java.lang.String,java.lang.String) -> startPrivateChat
    void startConversation(android.content.Context,io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String) -> startConversation
    void createDiscussionChat(android.content.Context,java.util.List,java.lang.String) -> createDiscussionChat
    void startDiscussionChat(android.content.Context,java.lang.String,java.lang.String) -> startDiscussionChat
    void startDiscussionMemberSelect(android.content.Context,java.lang.String,java.util.List) -> startDiscussionMemberSelect
    void startGroupChat(android.content.Context,java.lang.String,java.lang.String) -> startGroupChat
    void startConversationSetting(android.content.Context,io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> startConversationSetting
    void startCustomerServiceChat(android.content.Context,java.lang.String,java.lang.String) -> startCustomerServiceChat
    void refreshUserInfo(io.rong.imlib.model.UserInfo) -> refreshUserInfo
    void setGetUserInfoProvider(io.rong.imkit.RongIM$GetUserInfoProvider,boolean) -> setGetUserInfoProvider
    void setGetGroupInfoProvider(io.rong.imkit.RongIM$GetGroupInfoProvider) -> setGetGroupInfoProvider
    void setSendMessageListener(io.rong.imkit.RongIM$OnSendMessageListener) -> setSendMessageListener
    void setGetNewMessageSoundProvider(io.rong.imkit.RongIM$GetNewMessageSoundProvider) -> setGetNewMessageSoundProvider
    void setCurrentUserInfo(io.rong.imlib.model.UserInfo) -> setCurrentUserInfo
    io.rong.imlib.model.UserInfo getCurrentUserInfo() -> getCurrentUserInfo
    void setUserInfoAttachedState(boolean) -> setUserInfoAttachedState
    boolean getUserInfoAttachedState() -> getUserInfoAttachedState
    void setOnReceiveUnreadMessageCountListener(io.rong.imkit.RongIM$OnReceiveUnreadMessageCountListener,io.rong.imlib.model.Conversation$ConversationType[]) -> setOnReceiveUnreadMessageCountListener
    void startPublicAccountInfo(android.content.Context,io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> startPublicAccountInfo
    void setPushMessageBehaviorListener(io.rong.imlib.RongIMClient$PushMessageBehaviorListener) -> setPushMessageBehaviorListener
io.rong.imkit.RongIM$1 -> io.rong.imkit.RongIM$1:
    io.rong.imkit.RongIM$OnReceiveUnreadMessageCountListener val$listener -> val$listener
    io.rong.imkit.RongIM this$0 -> this$0
    void onMessageIncreased(int) -> onMessageIncreased
io.rong.imkit.RongIM$ConversationBehaviorListener -> io.rong.imkit.RongIM$ConversationBehaviorListener:
    boolean onUserPortraitClick(android.content.Context,io.rong.imlib.model.Conversation$ConversationType,io.rong.imlib.model.UserInfo) -> onUserPortraitClick
    boolean onMessageClick(android.content.Context,io.rong.imlib.model.Message) -> onMessageClick
    boolean onMessageLongClick(android.content.Context,io.rong.imlib.model.Message) -> onMessageLongClick
    boolean onConversationLongClick(android.content.Context,io.rong.imkit.UiConversation) -> onConversationLongClick
    boolean onConversationItemClick(android.content.Context,io.rong.imkit.UiConversation) -> onConversationItemClick
io.rong.imkit.RongIM$GetGroupInfoProvider -> io.rong.imkit.RongIM$GetGroupInfoProvider:
    io.rong.imlib.model.Group getGroupInfo(java.lang.String) -> getGroupInfo
io.rong.imkit.RongIM$GetNewMessageSoundProvider -> io.rong.imkit.RongIM$GetNewMessageSoundProvider:
    android.net.Uri getSoundSource() -> getSoundSource
io.rong.imkit.RongIM$GetUserInfoProvider -> io.rong.imkit.RongIM$GetUserInfoProvider:
    io.rong.imlib.model.UserInfo getUserInfo(java.lang.String) -> getUserInfo
io.rong.imkit.RongIM$LocationProvider -> io.rong.imkit.RongIM$LocationProvider:
    void onStartLocation(android.content.Context,io.rong.imkit.RongIM$LocationProvider$LocationCallback) -> onStartLocation
io.rong.imkit.RongIM$LocationProvider$LocationCallback -> io.rong.imkit.RongIM$LocationProvider$LocationCallback:
    void onSuccess(io.rong.message.LocationMessage) -> onSuccess
    void onFailure(java.lang.String) -> onFailure
io.rong.imkit.RongIM$OnMemberSelectListener -> io.rong.imkit.RongIM$OnMemberSelectListener:
    void startMemberSelect(android.content.Context,io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> startMemberSelect
io.rong.imkit.RongIM$OnReceiveUnreadMessageCountListener -> io.rong.imkit.RongIM$OnReceiveUnreadMessageCountListener:
    void onMessageIncreased(int) -> onMessageIncreased
io.rong.imkit.RongIM$OnSendMessageListener -> io.rong.imkit.RongIM$OnSendMessageListener:
    io.rong.imlib.model.Message onSent(io.rong.imlib.model.Message) -> onSent
io.rong.imkit.RongIM$PublicServiceBehaviorListener -> io.rong.imkit.RongIM$PublicServiceBehaviorListener:
    boolean onFollowClick(android.content.Context,io.rong.imlib.model.PublicServiceInfo) -> onFollowClick
    boolean onUnFollowClick(android.content.Context,io.rong.imlib.model.PublicServiceInfo) -> onUnFollowClick
    boolean onEnterConversationClick(android.content.Context,io.rong.imlib.model.PublicServiceInfo) -> onEnterConversationClick
io.rong.imkit.RongIMClientWrapper -> io.rong.imkit.RongIMClientWrapper:
    io.rong.imlib.RongIMClient mClient -> mClient
    io.rong.imkit.RongContext mContext -> mContext
    io.rong.imlib.RongIMClient$ConnectionStatusListener mConnectionStatusListener -> mConnectionStatusListener
    io.rong.imlib.RongIMClient$OnReceiveMessageListener mReceiveMessageListener -> mReceiveMessageListener
    io.rong.imkit.RongIM$OnMemberSelectListener mMemberSelectListener -> mMemberSelectListener
    io.rong.imkit.RongIMClientWrapper sS -> sS
    java.util.List mRegCache -> mRegCache
    void init(android.content.Context,io.rong.imkit.RongContext) -> init
    io.rong.imkit.RongIMClientWrapper connect(java.lang.String,io.rong.imlib.RongIMClient$ConnectCallback) -> connect
    void initConnectedData(io.rong.imlib.RongIMClient) -> initConnectedData
    void setConnectionStatusListener(io.rong.imlib.RongIMClient$ConnectionStatusListener) -> setConnectionStatusListener
    void registerMessageType(java.lang.Class) -> registerMessageType
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus getCurrentConnectionStatus() -> getCurrentConnectionStatus
    void reconnect(io.rong.imlib.RongIMClient$ConnectCallback) -> reconnect
    void disconnect() -> disconnect
    void disconnect(boolean) -> disconnect
    void setOnReceiveMessageListener(io.rong.imlib.RongIMClient$OnReceiveMessageListener) -> setOnReceiveMessageListener
    void setPushMessageBehaviorListener(io.rong.imlib.RongIMClient$PushMessageBehaviorListener) -> setPushMessageBehaviorListener
    void getConversationList(io.rong.imlib.RongIMClient$ResultCallback) -> getConversationList
    java.util.List getConversationList() -> getConversationList
    void getConversationList(io.rong.imlib.RongIMClient$ResultCallback,io.rong.imlib.model.Conversation$ConversationType[]) -> getConversationList
    void getConversationList(int[],io.rong.imlib.RongIMClient$ResultCallback) -> getConversationList
    java.util.List getConversationList(io.rong.imlib.model.Conversation$ConversationType[]) -> getConversationList
    java.util.List getConversationList(int[]) -> getConversationList
    void getConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> getConversation
    io.rong.imlib.model.Conversation getConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getConversation
    void removeConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> removeConversation
    boolean removeConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> removeConversation
    void setConversationToTop(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,boolean,io.rong.imlib.RongIMClient$ResultCallback) -> setConversationToTop
    boolean setConversationToTop(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,boolean) -> setConversationToTop
    void getTotalUnreadCount(io.rong.imlib.RongIMClient$ResultCallback) -> getTotalUnreadCount
    int getTotalUnreadCount() -> getTotalUnreadCount
    void getUnreadCount(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> getUnreadCount
    int getUnreadCount(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getUnreadCount
    void getUnreadCount(io.rong.imlib.RongIMClient$ResultCallback,io.rong.imlib.model.Conversation$ConversationType[]) -> getUnreadCount
    int getUnreadCount(io.rong.imlib.model.Conversation$ConversationType[]) -> getUnreadCount
    void getUnreadCount(io.rong.imlib.model.Conversation$ConversationType[],io.rong.imlib.RongIMClient$ResultCallback) -> getUnreadCount
    java.util.List getLatestMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int) -> getLatestMessages
    void getLatestMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,io.rong.imlib.RongIMClient$ResultCallback) -> getLatestMessages
    java.util.List getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,int) -> getHistoryMessages
    java.util.List getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,int,int) -> getHistoryMessages
    void getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,int,int,io.rong.imlib.RongIMClient$ResultCallback) -> getHistoryMessages
    void getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,int,io.rong.imlib.RongIMClient$ResultCallback) -> getHistoryMessages
    boolean deleteMessages(int[]) -> deleteMessages
    void deleteMessages(int[],io.rong.imlib.RongIMClient$ResultCallback) -> deleteMessages
    boolean clearMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearMessages
    void clearMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> clearMessages
    boolean clearMessagesUnreadStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearMessagesUnreadStatus
    void clearMessagesUnreadStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> clearMessagesUnreadStatus
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    void setMessageExtra(int,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> setMessageExtra
    boolean setMessageReceivedStatus(int,io.rong.imlib.model.Message$ReceivedStatus) -> setMessageReceivedStatus
    void setMessageReceivedStatus(int,io.rong.imlib.model.Message$ReceivedStatus,io.rong.imlib.RongIMClient$ResultCallback) -> setMessageReceivedStatus
    boolean setMessageSentStatus(int,io.rong.imlib.model.Message$SentStatus) -> setMessageSentStatus
    void setMessageSentStatus(int,io.rong.imlib.model.Message$SentStatus,io.rong.imlib.RongIMClient$ResultCallback) -> setMessageSentStatus
    java.lang.String getTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getTextMessageDraft
    boolean saveTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String) -> saveTextMessageDraft
    boolean clearTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearTextMessageDraft
    void getTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> getTextMessageDraft
    void saveTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> saveTextMessageDraft
    void clearTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> clearTextMessageDraft
    void getDiscussion(java.lang.String,io.rong.imlib.RongIMClient$GetDiscussionCallback) -> getDiscussion
    void setDiscussionName(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> setDiscussionName
    void createDiscussion(java.lang.String,java.util.List,io.rong.imlib.RongIMClient$CreateDiscussionCallback) -> createDiscussion
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imlib.RongIMClient$OperationCallback) -> addMemberToDiscussion
    void removeMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> removeMemberFromDiscussion
    void quitDiscussion(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitDiscussion
    void insertMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> insertMessage
    io.rong.imlib.model.Message insertMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String) -> insertMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    void sendMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback,io.rong.imlib.RongIMClient$ResultCallback) -> sendMessage
    void sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback,io.rong.imlib.RongIMClient$ResultCallback) -> sendMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    void uploadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.io.InputStream,io.rong.imlib.RongIMClient$UploadMediaCallback) -> uploadMedia
    void uploadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,android.net.Uri,io.rong.imlib.RongIMClient$UploadMediaCallback) -> uploadMedia
    void downloadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$MediaType,java.lang.String,io.rong.imlib.RongIMClient$DownloadMediaCallback) -> downloadMedia
    void getConversationNotificationStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback) -> getConversationNotificationStatus
    void setConversationNotificationStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.Conversation$ConversationNotificationStatus,io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback) -> setConversationNotificationStatus
    void setDiscussionInviteStatus(java.lang.String,io.rong.imlib.RongIMClient$DiscussionInviteStatus,io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback) -> setDiscussionInviteStatus
    void syncGroup(java.util.List,io.rong.imlib.RongIMClient$OperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitGroup
    java.lang.String getCurrentUserId() -> getCurrentUserId
    long getDeltaTime() -> getDeltaTime
    void joinChatRoom(java.lang.String,int,io.rong.imlib.RongIMClient$OperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitChatRoom
    void clearConversations(io.rong.imlib.RongIMClient$ResultCallback,io.rong.imlib.model.Conversation$ConversationType[]) -> clearConversations
    boolean clearConversations(io.rong.imlib.model.Conversation$ConversationType[]) -> clearConversations
    void addToBlacklist(java.lang.String,io.rong.imlib.RongIMClient$AddToBlackCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback) -> removeFromBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imlib.RongIMClient$GetUserBlacklistCallback) -> getBlacklistStatus
    void getBlacklist(io.rong.imlib.RongIMClient$GetBlacklistCallback) -> getBlacklist
    void setConversationNotificationQuietHours(java.lang.String,int,io.rong.imlib.RongIMClient$OperationCallback) -> setConversationNotificationQuietHours
    void removeConversationNotificationQuietHours(io.rong.imlib.RongIMClient$OperationCallback) -> removeConversationNotificationQuietHours
    void getConversationNotificationQuietHours(io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback) -> getConversationNotificationQuietHours
    void getPublicAccountInfo(java.lang.String,io.rong.imlib.model.Conversation$ConversationType,io.rong.imlib.RongIMClient$ResultCallback) -> getPublicAccountInfo
    void searchPublicAccount(java.lang.String,int,int,io.rong.imlib.RongIMClient$SearchPublicAccountCallback) -> searchPublicAccount
    void subscribePublicAccount(java.lang.String,io.rong.imlib.model.Conversation$ConversationType,boolean,io.rong.imlib.RongIMClient$OperationCallback) -> subscribePublicAccount
    void getPublicAccountInfoList(io.rong.imlib.RongIMClient$ResultCallback) -> getPublicAccountInfoList
io.rong.imkit.RongIMClientWrapper$1 -> io.rong.imkit.RongIMClientWrapper$1:
    boolean onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.imkit.RongIMClientWrapper$1$1 -> io.rong.imkit.RongIMClientWrapper$1$1:
    io.rong.imlib.model.Message val$message -> val$message
    io.rong.imkit.RongIMClientWrapper$1 this$0 -> this$0
    void onComplete(boolean) -> onComplete
io.rong.imkit.RongIMClientWrapper$10 -> io.rong.imkit.RongIMClientWrapper$10:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$discussionId -> val$discussionId
    java.lang.String val$name -> val$name
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess() -> onSuccess
io.rong.imkit.RongIMClientWrapper$11 -> io.rong.imkit.RongIMClientWrapper$11:
    java.lang.String val$name -> val$name
    java.util.List val$userIdList -> val$userIdList
    io.rong.imlib.RongIMClient$CreateDiscussionCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$12 -> io.rong.imkit.RongIMClientWrapper$12:
    java.lang.String val$discussionId -> val$discussionId
    java.util.List val$userIdList -> val$userIdList
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$13 -> io.rong.imkit.RongIMClientWrapper$13:
    java.lang.String val$discussionId -> val$discussionId
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$14 -> io.rong.imkit.RongIMClientWrapper$14:
    java.lang.String val$discussionId -> val$discussionId
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$15 -> io.rong.imkit.RongIMClientWrapper$15:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$16 -> io.rong.imkit.RongIMClientWrapper$16:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$17 -> io.rong.imkit.RongIMClientWrapper$17:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$18 -> io.rong.imkit.RongIMClientWrapper$18:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    io.rong.imlib.RongIMClient$ResultCallback val$resultCallback -> val$resultCallback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$19 -> io.rong.imkit.RongIMClientWrapper$19:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$2 -> io.rong.imkit.RongIMClientWrapper$2:
    void onChanged(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onChanged
io.rong.imkit.RongIMClientWrapper$20 -> io.rong.imkit.RongIMClientWrapper$20:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    io.rong.imlib.RongIMClient$ResultCallback val$resultCallback -> val$resultCallback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$21 -> io.rong.imkit.RongIMClientWrapper$21:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$22 -> io.rong.imkit.RongIMClientWrapper$22:
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$23 -> io.rong.imkit.RongIMClientWrapper$23:
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback val$callback -> val$callback
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    io.rong.imlib.model.Conversation$ConversationNotificationStatus val$notificationStatus -> val$notificationStatus
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> onSuccess
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$24 -> io.rong.imkit.RongIMClientWrapper$24:
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$DiscussionInviteStatus val$status -> val$status
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$25 -> io.rong.imkit.RongIMClientWrapper$25:
    java.util.List val$groups -> val$groups
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$26 -> io.rong.imkit.RongIMClientWrapper$26:
    java.lang.String val$groupId -> val$groupId
    java.lang.String val$groupName -> val$groupName
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$27 -> io.rong.imkit.RongIMClientWrapper$27:
    java.lang.String val$groupId -> val$groupId
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$28 -> io.rong.imkit.RongIMClientWrapper$28:
    java.lang.String val$id -> val$id
    int val$defMessageCount -> val$defMessageCount
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$29 -> io.rong.imkit.RongIMClientWrapper$29:
    java.lang.String val$id -> val$id
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$3 -> io.rong.imkit.RongIMClientWrapper$3:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$type -> val$type
    java.lang.String val$targetId -> val$targetId
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$30 -> io.rong.imkit.RongIMClientWrapper$30:
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient$AddToBlackCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$31 -> io.rong.imkit.RongIMClientWrapper$31:
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$32 -> io.rong.imkit.RongIMClientWrapper$32:
    java.lang.String val$startTime -> val$startTime
    int val$spanMinutes -> val$spanMinutes
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$33 -> io.rong.imkit.RongIMClientWrapper$33:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$34 -> io.rong.imkit.RongIMClientWrapper$34:
    io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.String,int) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.RongIMClientWrapper$4 -> io.rong.imkit.RongIMClientWrapper$4:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$type -> val$type
    java.lang.String val$id -> val$id
    boolean val$isTop -> val$isTop
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$5 -> io.rong.imkit.RongIMClientWrapper$5:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$6 -> io.rong.imkit.RongIMClientWrapper$6:
    int[] val$messageIds -> val$messageIds
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$7 -> io.rong.imkit.RongIMClientWrapper$7:
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$8 -> io.rong.imkit.RongIMClientWrapper$8:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongIMClientWrapper$9 -> io.rong.imkit.RongIMClientWrapper$9:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int val$messageId -> val$messageId
    io.rong.imlib.model.Message$SentStatus val$sentStatus -> val$sentStatus
    io.rong.imkit.RongIMClientWrapper this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.RongSingleActivity -> io.rong.imkit.RongSingleActivity:
    void onCreate(android.os.Bundle) -> onCreate
io.rong.imkit.TestActivity -> io.rong.imkit.TestActivity:
io.rong.imkit.UiConversation -> io.rong.imkit.UiConversation:
    java.lang.String conversationTitle -> conversationTitle
    android.net.Uri uri -> uri
    android.text.Spannable conversationContent -> conversationContent
    io.rong.imlib.model.MessageContent messageContent -> messageContent
    long conversationTime -> conversationTime
    int unReadMessageCount -> unReadMessageCount
    boolean isTop -> isTop
    io.rong.imlib.model.Conversation$ConversationType conversationType -> conversationType
    io.rong.imlib.model.Message$SentStatus sentStatus -> sentStatus
    java.lang.String targetId -> targetId
    java.lang.String senderId -> senderId
    boolean isGathered -> isGathered
    boolean notificationBlockStatus -> notificationBlockStatus
    java.lang.String draft -> draft
    boolean isShowDraft -> isShowDraft
    int latestMessageId -> latestMessageId
    void setUiConversationTitle(java.lang.String) -> setUiConversationTitle
    java.lang.String getUiConversationTitle() -> getUiConversationTitle
    void setIconUrl(android.net.Uri) -> setIconUrl
    android.net.Uri getIconUrl() -> getIconUrl
    void setConversationContent(android.text.Spannable) -> setConversationContent
    android.text.Spannable getConversationContent() -> getConversationContent
    void setMessageContent(io.rong.imlib.model.MessageContent) -> setMessageContent
    io.rong.imlib.model.MessageContent getMessageContent() -> getMessageContent
    void setUiConversationTime(long) -> setUiConversationTime
    long getUiConversationTime() -> getUiConversationTime
    void setUnReadMessageCount(int) -> setUnReadMessageCount
    int getUnReadMessageCount() -> getUnReadMessageCount
    void setTop(boolean) -> setTop
    boolean isTop() -> isTop
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    void setSentStatus(io.rong.imlib.model.Message$SentStatus) -> setSentStatus
    io.rong.imlib.model.Message$SentStatus getSentStatus() -> getSentStatus
    void setConversationTargetId(java.lang.String) -> setConversationTargetId
    java.lang.String getConversationTargetId() -> getConversationTargetId
    void setConversationSenderId(java.lang.String) -> setConversationSenderId
    java.lang.String getConversationSenderId() -> getConversationSenderId
    void setConversationGatherState(boolean) -> setConversationGatherState
    boolean getConversationGatherState() -> getConversationGatherState
    void setNotificationBlockStatus(boolean) -> setNotificationBlockStatus
    boolean getNotificationBlockStatus() -> getNotificationBlockStatus
    void setDraft(java.lang.String) -> setDraft
    java.lang.String getDraft() -> getDraft
    void setShowDraftFlag(boolean) -> setShowDraftFlag
    boolean getShowDraftFlag() -> getShowDraftFlag
    void setLatestMessageId(int) -> setLatestMessageId
    int getLatestMessageId() -> getLatestMessageId
    io.rong.imkit.UiConversation obtain(io.rong.imlib.model.Conversation,boolean) -> obtain
    io.rong.imkit.UiConversation obtain(io.rong.imlib.model.Message) -> obtain
    android.text.SpannableStringBuilder buildConversationContent(io.rong.imkit.UiConversation) -> buildConversationContent
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imkit.cache.RongCache -> io.rong.imkit.cache.RongCache:
    java.util.LinkedHashMap map -> map
    java.util.concurrent.LinkedBlockingQueue queue -> queue
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
io.rong.imkit.cache.RongCacheWrap -> io.rong.imkit.cache.RongCacheWrap:
    io.rong.imkit.RongContext mContext -> mContext
    boolean mIsSync -> mIsSync
    boolean isIsSync() -> isIsSync
    void setIsSync(boolean) -> setIsSync
    java.lang.Object create(java.lang.Object) -> create
    io.rong.imkit.RongContext getContext() -> getContext
    void executeCacheProvider(java.lang.Object) -> executeCacheProvider
    java.lang.Object obtainValue(java.lang.Object) -> obtainValue
io.rong.imkit.cache.RongCacheWrap$1 -> io.rong.imkit.cache.RongCacheWrap$1:
    java.lang.Object val$key -> val$key
    io.rong.imkit.cache.RongCacheWrap this$0 -> this$0
    void run() -> run
io.rong.imkit.common.RongConst -> io.rong.imkit.common.RongConst:
    java.lang.String RES_DIC -> RES_DIC
    int WORK_QUEUE_MAX_COUNT -> WORK_QUEUE_MAX_COUNT
    int DEF_THREAD_WORKER_COUNT -> DEF_THREAD_WORKER_COUNT
    int MAX_THREAD_WORKER_COUNT -> MAX_THREAD_WORKER_COUNT
    int CREATE_THREAD_TIME_SPAN -> CREATE_THREAD_TIME_SPAN
io.rong.imkit.common.RongConst$API -> io.rong.imkit.common.RongConst$API:
    java.lang.String HOST -> HOST
io.rong.imkit.common.RongConst$Cache -> io.rong.imkit.common.RongConst$Cache:
    int USER_CACHE_MAX_COUNT -> USER_CACHE_MAX_COUNT
    int PUBLIC_ACCOUNT_CACHE_MAX_COUNT -> PUBLIC_ACCOUNT_CACHE_MAX_COUNT
    int GROUP_CACHE_MAX_COUNT -> GROUP_CACHE_MAX_COUNT
    int DISCUSSION_CACHE_MAX_COUNT -> DISCUSSION_CACHE_MAX_COUNT
    int NOTIFICATION_CACHE_MAX_COUNT -> NOTIFICATION_CACHE_MAX_COUNT
io.rong.imkit.common.RongConst$EXTRA -> io.rong.imkit.common.RongConst$EXTRA:
    java.lang.String CONTENT -> CONTENT
    java.lang.String USERS -> USERS
    java.lang.String USER -> USER
    java.lang.String CONVERSATION -> CONVERSATION
    java.lang.String KEY -> KEY
    java.lang.String RES -> RES
io.rong.imkit.fragment.BaseFragment -> io.rong.imkit.fragment.BaseFragment:
    android.os.Handler mHandler -> mHandler
    java.lang.Thread mThread -> mThread
    android.view.LayoutInflater mInflater -> mInflater
    de.keyboardsurfer.android.widget.crouton.Configuration CONFIGURATION_INFINITE -> CONFIGURATION_INFINITE
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View findViewById(android.view.View,int) -> findViewById
    android.os.Handler getHandler() -> getHandler
    boolean onBackPressed() -> onBackPressed
    void showNotification(java.lang.CharSequence) -> showNotification
    void showNotification(int,int,java.lang.CharSequence) -> showNotification
    void showNotification(int,android.graphics.drawable.Drawable,java.lang.CharSequence) -> showNotification
    android.view.View obtainView(android.view.LayoutInflater,int,android.graphics.drawable.Drawable,java.lang.CharSequence) -> obtainView
    android.view.View obtainView(android.view.LayoutInflater,int,int,java.lang.CharSequence) -> obtainView
    void hiddenNotification() -> hiddenNotification
io.rong.imkit.fragment.BaseSettingFragment -> io.rong.imkit.fragment.BaseSettingFragment:
    android.widget.TextView mTextView -> mTextView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.RelativeLayout mSettingItem -> mSettingItem
    java.lang.String mTargetId -> mTargetId
    io.rong.imlib.model.Conversation$ConversationType mConversationType -> mConversationType
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    java.lang.String getTargetId() -> getTargetId
    java.lang.String setTitle() -> setTitle
    boolean setSwitchButtonEnabled() -> setSwitchButtonEnabled
    int setSwitchBtnVisibility() -> setSwitchBtnVisibility
    void onSettingItemClick(android.view.View) -> onSettingItemClick
    void toggleSwitch(boolean) -> toggleSwitch
    void initData() -> initData
    void setSwitchBtnStatus(boolean) -> setSwitchBtnStatus
    boolean getSwitchBtnStatus() -> getSwitchBtnStatus
    boolean onBackPressed() -> onBackPressed
io.rong.imkit.fragment.ClearConversationMsgFragment -> io.rong.imkit.fragment.ClearConversationMsgFragment:
    io.rong.imlib.model.Conversation conversation -> conversation
    void initData() -> initData
    java.lang.String setTitle() -> setTitle
    boolean setSwitchButtonEnabled() -> setSwitchButtonEnabled
    int setSwitchBtnVisibility() -> setSwitchBtnVisibility
    void onSettingItemClick(android.view.View) -> onSettingItemClick
    void onDialogNegativeClick(io.rong.imkit.widget.AlterDialogFragment) -> onDialogNegativeClick
    void onDialogPositiveClick(io.rong.imkit.widget.AlterDialogFragment) -> onDialogPositiveClick
    void toggleSwitch(boolean) -> toggleSwitch
    boolean handleMessage(android.os.Message) -> handleMessage
    io.rong.imlib.model.Conversation access$000(io.rong.imkit.fragment.ClearConversationMsgFragment) -> access$000
io.rong.imkit.fragment.ClearConversationMsgFragment$1 -> io.rong.imkit.fragment.ClearConversationMsgFragment$1:
    io.rong.imkit.fragment.ClearConversationMsgFragment this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationAddMemberFragment -> io.rong.imkit.fragment.ConversationAddMemberFragment:
    int PREPARE_LIST -> PREPARE_LIST
    int REMOVE_ITEM -> REMOVE_ITEM
    int SHOW_TOAST -> SHOW_TOAST
    io.rong.imlib.model.Conversation$ConversationType mConversationType -> mConversationType
    java.lang.String mTargetId -> mTargetId
    java.lang.String mDiscussionCreatorId -> mDiscussionCreatorId
    io.rong.imkit.widget.adapter.ConversationAddMemberAdapter mAdapter -> mAdapter
    java.util.List mIdList -> mIdList
    java.util.ArrayList mMembers -> mMembers
    android.widget.GridView mGridList -> mGridList
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initData() -> initData
    void onEventMainThread(io.rong.imlib.model.UserInfo) -> onEventMainThread
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onDeleteIconClick(android.view.View,int) -> onDeleteIconClick
    boolean handleMessage(android.os.Message) -> handleMessage
    boolean onBackPressed() -> onBackPressed
    io.rong.imkit.widget.adapter.ConversationAddMemberAdapter access$000(io.rong.imkit.fragment.ConversationAddMemberFragment) -> access$000
    java.lang.String access$100(io.rong.imkit.fragment.ConversationAddMemberFragment) -> access$100
    io.rong.imlib.model.Conversation$ConversationType access$200(io.rong.imkit.fragment.ConversationAddMemberFragment) -> access$200
    java.util.List access$302(io.rong.imkit.fragment.ConversationAddMemberFragment,java.util.List) -> access$302
    java.lang.String access$102(io.rong.imkit.fragment.ConversationAddMemberFragment,java.lang.String) -> access$102
    java.util.List access$300(io.rong.imkit.fragment.ConversationAddMemberFragment) -> access$300
io.rong.imkit.fragment.ConversationAddMemberFragment$1 -> io.rong.imkit.fragment.ConversationAddMemberFragment$1:
    io.rong.imkit.fragment.ConversationAddMemberFragment this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.rong.imkit.fragment.ConversationAddMemberFragment$2 -> io.rong.imkit.fragment.ConversationAddMemberFragment$2:
    io.rong.imkit.fragment.ConversationAddMemberFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Discussion) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationAddMemberFragment$3 -> io.rong.imkit.fragment.ConversationAddMemberFragment$3:
    int val$position -> val$position
    io.rong.imkit.fragment.ConversationAddMemberFragment this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.fragment.ConversationFragment -> io.rong.imkit.fragment.ConversationFragment:
    io.rong.imkit.fragment.UriFragment mListFragment -> mListFragment
    io.rong.imkit.fragment.UriFragment mInputFragment -> mInputFragment
    io.rong.imlib.model.Conversation$ConversationType mConversationType -> mConversationType
    java.lang.String mTargetId -> mTargetId
    io.rong.imkit.model.ConversationInfo mCurrentConversationInfo -> mCurrentConversationInfo
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void initFragment(android.net.Uri) -> initFragment
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    boolean onBackPressed() -> onBackPressed
    boolean handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.fragment.ConversationFragment$1 -> io.rong.imkit.fragment.ConversationFragment$1:
    android.net.Uri val$uri -> val$uri
    java.util.List val$list -> val$list
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$1$1 -> io.rong.imkit.fragment.ConversationFragment$1$1:
    io.rong.imkit.fragment.ConversationFragment$1 this$1 -> this$1
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationFragment$2 -> io.rong.imkit.fragment.ConversationFragment$2:
    java.lang.String val$targetId -> val$targetId
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$2$1 -> io.rong.imkit.fragment.ConversationFragment$2$1:
    io.rong.imkit.fragment.ConversationFragment$2 this$1 -> this$1
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.fragment.ConversationFragment$3 -> io.rong.imkit.fragment.ConversationFragment$3:
    io.rong.imkit.fragment.ConversationFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationFragment$3$1 -> io.rong.imkit.fragment.ConversationFragment$3$1:
    io.rong.imkit.fragment.ConversationFragment$3 this$1 -> this$1
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.fragment.ConversationListFragment -> io.rong.imkit.fragment.ConversationListFragment:
    int REORDER_LIST -> REORDER_LIST
    int REFRESH_LIST -> REFRESH_LIST
    int REFRESH_ITEM -> REFRESH_ITEM
    int REFRESH_GROUP -> REFRESH_GROUP
    int REFRESH_MSG -> REFRESH_MSG
    io.rong.imkit.widget.adapter.ConversationListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    java.lang.Boolean mListFinished -> mListFinished
    java.util.ArrayList supportConversationList -> supportConversationList
    io.rong.imlib.RongIMClient$ResultCallback mCallback -> mCallback
    io.rong.imkit.fragment.ConversationListFragment getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    void initFragment(android.net.Uri) -> initFragment
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View obtainView(android.view.LayoutInflater) -> obtainView
    void onResume() -> onResume
    void onEventBackgroundThread(io.rong.imkit.model.Event$OnReceiveMessageEvent) -> onEventBackgroundThread
    void onEventBackgroundThread(io.rong.imlib.model.Message) -> onEventBackgroundThread
    void onEventBackgroundThread(io.rong.imlib.model.MessageContent) -> onEventBackgroundThread
    void onEvent(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onEvent
    void onEventBackgroundThread(io.rong.imkit.model.Event$CreateDiscussionEvent) -> onEventBackgroundThread
    void onEventMainThread(io.rong.database.Draft) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.Group) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.Discussion) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.UserInfo) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.PublicServiceInfo) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$PublicAccountIsFollowEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationUnreadEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationTopEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationRemoveEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$MessageDeleteEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationNotificationEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$MessagesClearEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$OnMessageSendErrorEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$QuitDiscussionEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$QuitGroupEvent) -> onEventMainThread
    boolean handleMessage(android.os.Message) -> handleMessage
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void buildMultiDialog(io.rong.imkit.UiConversation,int) -> buildMultiDialog
    void buildSingleDialog(io.rong.imkit.UiConversation,int) -> buildSingleDialog
    java.util.List reConfigConversationList(java.util.List,android.content.Context) -> reConfigConversationList
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    boolean onBackPressed() -> onBackPressed
io.rong.imkit.fragment.ConversationListFragment$1 -> io.rong.imkit.fragment.ConversationListFragment$1:
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationListFragment$2 -> io.rong.imkit.fragment.ConversationListFragment$2:
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus val$status -> val$status
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.ConversationListFragment$3 -> io.rong.imkit.fragment.ConversationListFragment$3:
    io.rong.imkit.UiConversation val$temp -> val$temp
    int val$targetIndex -> val$targetIndex
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationListFragment$4 -> io.rong.imkit.fragment.ConversationListFragment$4:
    int val$originalIndex -> val$originalIndex
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationListFragment$5 -> io.rong.imkit.fragment.ConversationListFragment$5:
    int val$index -> val$index
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationListFragment$6 -> io.rong.imkit.fragment.ConversationListFragment$6:
    int val$index -> val$index
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationListFragment$7 -> io.rong.imkit.fragment.ConversationListFragment$7:
    int val$index -> val$index
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationListFragment$8 -> io.rong.imkit.fragment.ConversationListFragment$8:
    io.rong.imkit.UiConversation val$uiConversation -> val$uiConversation
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void OnArraysDialogItemClick(android.content.DialogInterface,int) -> OnArraysDialogItemClick
io.rong.imkit.fragment.ConversationListFragment$9 -> io.rong.imkit.fragment.ConversationListFragment$9:
    int val$index -> val$index
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void OnArraysDialogItemClick(android.content.DialogInterface,int) -> OnArraysDialogItemClick
io.rong.imkit.fragment.ConversationListFragment$9$1 -> io.rong.imkit.fragment.ConversationListFragment$9$1:
    io.rong.imkit.fragment.ConversationListFragment$9 this$1 -> this$1
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.ConversationListFragment$getDraftRunnable -> io.rong.imkit.fragment.ConversationListFragment$getDraftRunnable:
    io.rong.imkit.UiConversation conversation -> conversation
    int index -> index
    io.rong.imkit.fragment.ConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.DispatchResultFragment -> io.rong.imkit.fragment.DispatchResultFragment:
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivityForResult(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityForResult
    int getFragmentOffset(int,android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> getFragmentOffset
    android.support.v4.app.Fragment getOffsetFragment(int,android.support.v4.app.Fragment) -> getOffsetFragment
io.rong.imkit.fragment.MessageInputFragment -> io.rong.imkit.fragment.MessageInputFragment:
    io.rong.imlib.model.Conversation mConversation -> mConversation
    io.rong.imkit.widget.InputView mInput -> mInput
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setCurrentConversation(io.rong.imlib.model.Conversation) -> setCurrentConversation
    void initFragment(android.net.Uri) -> initFragment
    void onClick(android.view.View) -> onClick
    void onDestroyView() -> onDestroyView
    boolean onBackPressed() -> onBackPressed
    io.rong.imkit.fragment.DispatchResultFragment getDispatchFragment(android.support.v4.app.Fragment) -> getDispatchFragment
    boolean handleMessage(android.os.Message) -> handleMessage
    void startActivityFromProvider(io.rong.imkit.widget.provider.InputExtendProvider,android.content.Intent,int) -> startActivityFromProvider
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
io.rong.imkit.fragment.MessageListFragment -> io.rong.imkit.fragment.MessageListFragment:
    io.rong.imkit.widget.adapter.MessageListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    io.rong.imlib.model.Conversation mConversation -> mConversation
    int REQ_LIST -> REQ_LIST
    int RENDER_LIST -> RENDER_LIST
    int RENDER_HISTORY -> RENDER_HISTORY
    int NOTIFY_LIST -> NOTIFY_LIST
    int REFRESH_LIST -> REFRESH_LIST
    int SET_LAST -> SET_LAST
    int REFRESH_ITEM -> REFRESH_ITEM
    int REQ_HISTORY -> REQ_HISTORY
    int SET_SMOOTH_SCROLL -> SET_SMOOTH_SCROLL
    android.view.View mHeaderView -> mHeaderView
    io.rong.imkit.model.ConversationTypeFilter mFilter -> mFilter
    boolean mIsLoading -> mIsLoading
    boolean mHasMore -> mHasMore
    void onCreate(android.os.Bundle) -> onCreate
    void initFragment(android.net.Uri) -> initFragment
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onBackPressed() -> onBackPressed
    boolean handleMessage(android.os.Message) -> handleMessage
    void onEventBackgroundThread(io.rong.imlib.model.Message) -> onEventBackgroundThread
    void onEventBackgroundThread(io.rong.imkit.model.Event$OnReceiveMessageEvent) -> onEventBackgroundThread
    void onEventMainThread(io.rong.imlib.model.MessageContent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.widget.InputView$Event) -> onEventMainThread
    void onEvent(io.rong.imlib.model.UserInfo) -> onEvent
    void onPause() -> onPause
    void onResume() -> onResume
    void onEvent(io.rong.imkit.logic.LibException) -> onEvent
    void onEvent(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onEvent
    void onEventMainThread(io.rong.imkit.model.Event$MessagesClearEvent) -> onEventMainThread
    void onEventBackgroundThread(io.rong.imkit.model.Event$MessageDeleteEvent) -> onEventBackgroundThread
    void onEventBackgroundThread(io.rong.imkit.model.Event$MessagesClearEvent) -> onEventBackgroundThread
    void onDestroy() -> onDestroy
io.rong.imkit.fragment.MessageListFragment$1 -> io.rong.imkit.fragment.MessageListFragment$1:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.MessageListFragment$10 -> io.rong.imkit.fragment.MessageListFragment$10:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.MessageListFragment$2 -> io.rong.imkit.fragment.MessageListFragment$2:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void onWarningViewClick(int,io.rong.imlib.model.Message,android.view.View) -> onWarningViewClick
io.rong.imkit.fragment.MessageListFragment$3 -> io.rong.imkit.fragment.MessageListFragment$3:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.rong.imkit.fragment.MessageListFragment$4 -> io.rong.imkit.fragment.MessageListFragment$4:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
io.rong.imkit.fragment.MessageListFragment$5 -> io.rong.imkit.fragment.MessageListFragment$5:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.MessageListFragment$6 -> io.rong.imkit.fragment.MessageListFragment$6:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.MessageListFragment$7 -> io.rong.imkit.fragment.MessageListFragment$7:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.MessageListFragment$8 -> io.rong.imkit.fragment.MessageListFragment$8:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.MessageListFragment$9 -> io.rong.imkit.fragment.MessageListFragment$9:
    io.rong.imkit.fragment.MessageListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.MessageListFragment$Builder -> io.rong.imkit.fragment.MessageListFragment$Builder:
    io.rong.imlib.model.Conversation$ConversationType conversationType -> conversationType
    java.lang.String targetId -> targetId
    android.net.Uri uri -> uri
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
io.rong.imkit.fragment.PublicServiceInfoFragment -> io.rong.imkit.fragment.PublicServiceInfoFragment:
    java.lang.String AGS_PUBLIC_ACCOUNT_INFO -> AGS_PUBLIC_ACCOUNT_INFO
    io.rong.imlib.model.PublicServiceInfo mPublicAccountInfo -> mPublicAccountInfo
    io.rong.imkit.widget.AsyncImageView mPortraitIV -> mPortraitIV
    android.widget.TextView mNameTV -> mNameTV
    android.widget.TextView mAccountTV -> mAccountTV
    android.widget.TextView mDescriptionTV -> mDescriptionTV
    android.widget.Button mEnterBtn -> mEnterBtn
    android.widget.Button mFollowBtn -> mFollowBtn
    android.widget.Button mUnfollowBtn -> mUnfollowBtn
    java.lang.String mTargetId -> mTargetId
    io.rong.imlib.model.Conversation$ConversationType mConversationType -> mConversationType
    java.lang.String name -> name
    io.rong.imkit.widget.LoadingDialogFragment mLoadingDialogFragment -> mLoadingDialogFragment
    void initFragment(android.net.Uri) -> initFragment
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void initData(io.rong.imlib.model.PublicServiceInfo) -> initData
    boolean handleMessage(android.os.Message) -> handleMessage
    void access$000(io.rong.imkit.fragment.PublicServiceInfoFragment,io.rong.imlib.model.PublicServiceInfo) -> access$000
    android.widget.Button access$100(io.rong.imkit.fragment.PublicServiceInfoFragment) -> access$100
    android.widget.Button access$200(io.rong.imkit.fragment.PublicServiceInfoFragment) -> access$200
    android.widget.Button access$300(io.rong.imkit.fragment.PublicServiceInfoFragment) -> access$300
    io.rong.imkit.widget.LoadingDialogFragment access$400(io.rong.imkit.fragment.PublicServiceInfoFragment) -> access$400
io.rong.imkit.fragment.PublicServiceInfoFragment$1 -> io.rong.imkit.fragment.PublicServiceInfoFragment$1:
    io.rong.imkit.fragment.PublicServiceInfoFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.PublicServiceInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.PublicServiceInfoFragment$2 -> io.rong.imkit.fragment.PublicServiceInfoFragment$2:
    io.rong.imlib.model.PublicServiceInfo val$info -> val$info
    io.rong.imkit.fragment.PublicServiceInfoFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.PublicServiceInfoFragment$3 -> io.rong.imkit.fragment.PublicServiceInfoFragment$3:
    io.rong.imlib.model.PublicServiceInfo val$info -> val$info
    io.rong.imkit.fragment.PublicServiceInfoFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.PublicServiceInfoFragment$3$1 -> io.rong.imkit.fragment.PublicServiceInfoFragment$3$1:
    android.view.View val$v -> val$v
    io.rong.imkit.fragment.PublicServiceInfoFragment$3 this$1 -> this$1
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.fragment.PublicServiceInfoFragment$4 -> io.rong.imkit.fragment.PublicServiceInfoFragment$4:
    io.rong.imlib.model.PublicServiceInfo val$info -> val$info
    io.rong.imkit.fragment.PublicServiceInfoFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.PublicServiceInfoFragment$4$1 -> io.rong.imkit.fragment.PublicServiceInfoFragment$4$1:
    android.view.View val$v -> val$v
    io.rong.imkit.fragment.PublicServiceInfoFragment$4 this$1 -> this$1
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.fragment.PublicServiceSearchFragment -> io.rong.imkit.fragment.PublicServiceSearchFragment:
    android.widget.EditText mEditText -> mEditText
    android.widget.Button mSearchBtn -> mSearchBtn
    android.widget.ListView mListView -> mListView
    io.rong.imkit.fragment.PublicServiceSearchFragment$PublicServiceListAdapter mAdapter -> mAdapter
    io.rong.imkit.widget.LoadingDialogFragment mLoadingDialogFragment -> mLoadingDialogFragment
    void initFragment(android.net.Uri) -> initFragment
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    boolean handleMessage(android.os.Message) -> handleMessage
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.widget.EditText access$000(io.rong.imkit.fragment.PublicServiceSearchFragment) -> access$000
    io.rong.imkit.fragment.PublicServiceSearchFragment$PublicServiceListAdapter access$100(io.rong.imkit.fragment.PublicServiceSearchFragment) -> access$100
io.rong.imkit.fragment.PublicServiceSearchFragment$1 -> io.rong.imkit.fragment.PublicServiceSearchFragment$1:
    io.rong.imkit.fragment.PublicServiceSearchFragment this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.fragment.PublicServiceSearchFragment$1$1 -> io.rong.imkit.fragment.PublicServiceSearchFragment$1$1:
    io.rong.imkit.fragment.PublicServiceSearchFragment$1 this$1 -> this$1
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(io.rong.imlib.model.PublicServiceInfoList) -> onSuccess
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.PublicServiceSearchFragment$2 -> io.rong.imkit.fragment.PublicServiceSearchFragment$2:
    io.rong.imkit.fragment.PublicServiceSearchFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
io.rong.imkit.fragment.PublicServiceSearchFragment$PublicServiceListAdapter -> io.rong.imkit.fragment.PublicServiceSearchFragment$PublicServiceListAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    io.rong.imkit.fragment.PublicServiceSearchFragment this$0 -> this$0
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imlib.model.PublicServiceInfo) -> bindView
    int getCount() -> getCount
    io.rong.imlib.model.PublicServiceInfo getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void bindView(android.view.View,int,java.lang.Object) -> bindView
    java.lang.Object getItem(int) -> getItem
io.rong.imkit.fragment.PublicServiceSearchFragment$PublicServiceListAdapter$ViewHolder -> io.rong.imkit.fragment.PublicServiceSearchFragment$PublicServiceListAdapter$ViewHolder:
    io.rong.imkit.widget.AsyncImageView portrait -> portrait
    android.widget.TextView name -> name
    io.rong.imkit.fragment.PublicServiceSearchFragment$PublicServiceListAdapter this$1 -> this$1
io.rong.imkit.fragment.PublicServiceSubscribeListFragment -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment:
    android.widget.ListView mListView -> mListView
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment$PublicServiceListAdapter mAdapter -> mAdapter
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void getDBData() -> getDBData
    void initFragment(android.net.Uri) -> initFragment
    boolean handleMessage(android.os.Message) -> handleMessage
    void onEvent(io.rong.imkit.model.Event$PublicAccountIsFollowEvent) -> onEvent
    void onDestroyView() -> onDestroyView
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment$PublicServiceListAdapter access$000(io.rong.imkit.fragment.PublicServiceSubscribeListFragment) -> access$000
io.rong.imkit.fragment.PublicServiceSubscribeListFragment$1 -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment$1:
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2 -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2:
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment this$0 -> this$0
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2$1 -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2$1:
    io.rong.imlib.model.PublicServiceInfo val$info -> val$info
    int val$position -> val$position
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2 this$1 -> this$1
    void OnArraysDialogItemClick(android.content.DialogInterface,int) -> OnArraysDialogItemClick
io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2$1$1 -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2$1$1:
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment$2$1 this$2 -> this$2
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imkit.fragment.PublicServiceSubscribeListFragment$3 -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment$3:
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.PublicServiceInfoList) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.PublicServiceSubscribeListFragment$PublicServiceListAdapter -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment$PublicServiceListAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment this$0 -> this$0
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imlib.model.PublicServiceInfo) -> bindView
    int getCount() -> getCount
    io.rong.imlib.model.PublicServiceInfo getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void bindView(android.view.View,int,java.lang.Object) -> bindView
    java.lang.Object getItem(int) -> getItem
io.rong.imkit.fragment.PublicServiceSubscribeListFragment$PublicServiceListAdapter$ViewHolder -> io.rong.imkit.fragment.PublicServiceSubscribeListFragment$PublicServiceListAdapter$ViewHolder:
    io.rong.imkit.widget.AsyncImageView portrait -> portrait
    android.widget.TextView name -> name
    android.widget.TextView introduction -> introduction
    io.rong.imkit.fragment.PublicServiceSubscribeListFragment$PublicServiceListAdapter this$1 -> this$1
io.rong.imkit.fragment.SetConversationNotificationFragment -> io.rong.imkit.fragment.SetConversationNotificationFragment:
    io.rong.imkit.fragment.SetConversationNotificationFragment newInstance() -> newInstance
    void initData() -> initData
    boolean setSwitchButtonEnabled() -> setSwitchButtonEnabled
    java.lang.String setTitle() -> setTitle
    boolean handleMessage(android.os.Message) -> handleMessage
    void onSettingItemClick(android.view.View) -> onSettingItemClick
    int setSwitchBtnVisibility() -> setSwitchBtnVisibility
    void toggleSwitch(boolean) -> toggleSwitch
    void onEventMainThread(io.rong.imkit.model.Event$ConversationNotificationEvent) -> onEventMainThread
    void onDestroy() -> onDestroy
io.rong.imkit.fragment.SetConversationNotificationFragment$1 -> io.rong.imkit.fragment.SetConversationNotificationFragment$1:
    io.rong.imkit.fragment.SetConversationNotificationFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.SetConversationNotificationFragment$2 -> io.rong.imkit.fragment.SetConversationNotificationFragment$2:
    io.rong.imkit.fragment.SetConversationNotificationFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.SetConversationToTopFragment -> io.rong.imkit.fragment.SetConversationToTopFragment:
    java.lang.String TAG -> TAG
    void initData() -> initData
    boolean setSwitchButtonEnabled() -> setSwitchButtonEnabled
    java.lang.String setTitle() -> setTitle
    boolean handleMessage(android.os.Message) -> handleMessage
    void onSettingItemClick(android.view.View) -> onSettingItemClick
    int setSwitchBtnVisibility() -> setSwitchBtnVisibility
    void toggleSwitch(boolean) -> toggleSwitch
    void onEventMainThread(io.rong.imkit.model.Event$ConversationTopEvent) -> onEventMainThread
    void onDestroy() -> onDestroy
io.rong.imkit.fragment.SetConversationToTopFragment$1 -> io.rong.imkit.fragment.SetConversationToTopFragment$1:
    io.rong.imkit.fragment.SetConversationToTopFragment this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.SubConversationListFragment -> io.rong.imkit.fragment.SubConversationListFragment:
    int REQ_LIST -> REQ_LIST
    int REORDER_LIST -> REORDER_LIST
    int REFRESH_LIST -> REFRESH_LIST
    int REFRESH_ITEM -> REFRESH_ITEM
    int REFRESH_MSG -> REFRESH_MSG
    io.rong.imkit.widget.adapter.SubConversationListAdapter mAdapter -> mAdapter
    io.rong.imlib.model.Conversation$ConversationType currentType -> currentType
    android.widget.ListView mList -> mList
    io.rong.imlib.RongIMClient$ResultCallback mCallback -> mCallback
    io.rong.imkit.fragment.ConversationListFragment getInstance() -> getInstance
    void onCreate(android.os.Bundle) -> onCreate
    void initFragment(android.net.Uri) -> initFragment
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    int findPositionForNewConversation(io.rong.imkit.UiConversation) -> findPositionForNewConversation
    void onEventBackgroundThread(io.rong.imlib.model.Message) -> onEventBackgroundThread
    void onEventBackgroundThread(io.rong.imkit.model.Event$OnReceiveMessageEvent) -> onEventBackgroundThread
    void onEventBackgroundThread(io.rong.imlib.model.MessageContent) -> onEventBackgroundThread
    void onEventMainThread(io.rong.database.Draft) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.Group) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.UserInfo) -> onEventMainThread
    void onEvent(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onEvent
    void onEventMainThread(io.rong.imlib.model.Discussion) -> onEventMainThread
    void onEventMainThread(io.rong.imlib.model.PublicServiceInfo) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationUnreadEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationTopEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationRemoveEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$ConversationNotificationEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$MessagesClearEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$MessageDeleteEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$OnMessageSendErrorEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$QuitDiscussionEvent) -> onEventMainThread
    void onEventMainThread(io.rong.imkit.model.Event$QuitGroupEvent) -> onEventMainThread
    boolean handleMessage(android.os.Message) -> handleMessage
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void buildMultiDiaglog(io.rong.imkit.UiConversation,int) -> buildMultiDiaglog
    int findPositionForSetTop(io.rong.imkit.UiConversation) -> findPositionForSetTop
    int findPositionForCancleTop(int) -> findPositionForCancleTop
    boolean onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onPause() -> onPause
io.rong.imkit.fragment.SubConversationListFragment$1 -> io.rong.imkit.fragment.SubConversationListFragment$1:
    io.rong.imkit.fragment.SubConversationListFragment this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.fragment.SubConversationListFragment$2 -> io.rong.imkit.fragment.SubConversationListFragment$2:
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus val$status -> val$status
    io.rong.imkit.fragment.SubConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.SubConversationListFragment$3 -> io.rong.imkit.fragment.SubConversationListFragment$3:
    int val$index -> val$index
    io.rong.imkit.fragment.SubConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.SubConversationListFragment$4 -> io.rong.imkit.fragment.SubConversationListFragment$4:
    io.rong.imkit.UiConversation val$uiConversation -> val$uiConversation
    io.rong.imkit.fragment.SubConversationListFragment this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.imkit.fragment.SubConversationListFragment$getDraftRunnable -> io.rong.imkit.fragment.SubConversationListFragment$getDraftRunnable:
    io.rong.imkit.UiConversation conversation -> conversation
    int index -> index
    io.rong.imkit.fragment.SubConversationListFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.fragment.TestFragment -> io.rong.imkit.fragment.TestFragment:
    android.widget.Button mButton1 -> mButton1
    android.widget.Button mButton2 -> mButton2
    android.widget.Button mButton3 -> mButton3
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onBackPressed() -> onBackPressed
    void onClick(android.view.View) -> onClick
    boolean handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.fragment.UriFragment -> io.rong.imkit.fragment.UriFragment:
    android.net.Uri mUri -> mUri
    java.lang.String RONG_URI -> RONG_URI
    io.rong.imkit.fragment.UriFragment$IActionBarHandler mBarHandler -> mBarHandler
    android.os.Bundle obtainUriBundle(android.net.Uri) -> obtainUriBundle
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void onPause() -> onPause
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setActionBarHandler(io.rong.imkit.fragment.UriFragment$IActionBarHandler) -> setActionBarHandler
    io.rong.imkit.fragment.UriFragment$IActionBarHandler getActionBarHandler() -> getActionBarHandler
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    void initFragment(android.net.Uri) -> initFragment
    boolean onBackPressed() -> onBackPressed
io.rong.imkit.fragment.UriFragment$IActionBarHandler -> io.rong.imkit.fragment.UriFragment$IActionBarHandler:
    void onTitleChange(java.lang.CharSequence) -> onTitleChange
    void onUnReadCountChange(int) -> onUnReadCountChange
io.rong.imkit.logic.ConversationNotifyLogic -> io.rong.imkit.logic.ConversationNotifyLogic:
    void isNotify(android.content.Context,io.rong.imlib.model.Message,io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback) -> isNotify
    boolean isRunningInBackground(android.content.Context,io.rong.imlib.model.Message) -> isRunningInBackground
io.rong.imkit.logic.ConversationNotifyLogic$1 -> io.rong.imkit.logic.ConversationNotifyLogic$1:
    io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback val$callback -> val$callback
    void onComplete(boolean) -> onComplete
io.rong.imkit.logic.ConversationNotifyLogic$AppIsBackground -> io.rong.imkit.logic.ConversationNotifyLogic$AppIsBackground:
    boolean isNotify() -> isNotify
    boolean isAppInBackground() -> isAppInBackground
    boolean isRunningInBackground() -> isRunningInBackground
    void isNotify(io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback) -> isNotify
io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback -> io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback:
    void onComplete(boolean) -> onComplete
io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyStatus -> io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyStatus:
    boolean isNotify() -> isNotify
    void isNotify(io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback) -> isNotify
io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyStatus$1 -> io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyStatus$1:
    io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback val$callback -> val$callback
    io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyStatus this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.logic.ConversationNotifyLogic$ConversationQuietHours -> io.rong.imkit.logic.ConversationNotifyLogic$ConversationQuietHours:
    boolean isNotify() -> isNotify
    boolean isQuietHours(android.content.Context) -> isQuietHours
    void isNotify(io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback) -> isNotify
io.rong.imkit.logic.ConversationNotifyLogic$Notification -> io.rong.imkit.logic.ConversationNotifyLogic$Notification:
    io.rong.imlib.model.Message mMessage -> mMessage
    android.content.Context mContext -> mContext
    boolean isNotify() -> isNotify
    void isNotify(io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback) -> isNotify
io.rong.imkit.logic.ConversationNotifyLogic$NotifyComposite -> io.rong.imkit.logic.ConversationNotifyLogic$NotifyComposite:
    java.util.List mNotifications -> mNotifications
    boolean isNotify() -> isNotify
    void isNotify(io.rong.imkit.logic.ConversationNotifyLogic$ConversationNotifyCallback) -> isNotify
io.rong.imkit.logic.LibException -> io.rong.imkit.logic.LibException:
    io.rong.imkit.logic.LibException$ErrorCode errorCode -> errorCode
    io.rong.imkit.logic.LibException$ErrorCode getErrorCode() -> getErrorCode
    void setErrorCode(io.rong.imkit.logic.LibException$ErrorCode) -> setErrorCode
io.rong.imkit.logic.LibException$ErrorCode -> io.rong.imkit.logic.LibException$ErrorCode:
    io.rong.imkit.logic.LibException$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imkit.logic.LibException$ErrorCode TIMEOUT -> TIMEOUT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imkit.logic.LibException$ErrorCode[] $VALUES -> $VALUES
    io.rong.imkit.logic.LibException$ErrorCode[] values() -> values
    io.rong.imkit.logic.LibException$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imkit.logic.LibException$ErrorCode setValue(int) -> setValue
io.rong.imkit.logic.MessageCounterLogic -> io.rong.imkit.logic.MessageCounterLogic:
    io.rong.imkit.RongContext mContext -> mContext
    java.util.List mCounters -> mCounters
    android.os.Handler mHandler -> mHandler
    void registerMessageCounter(io.rong.imkit.logic.MessageCounterLogic$MessageCounter) -> registerMessageCounter
    void unregisterMessageCounter(io.rong.imkit.logic.MessageCounterLogic$MessageCounter) -> unregisterMessageCounter
    void onEventBackgroundThread(io.rong.imkit.model.Event$OnReceiveMessageEvent) -> onEventBackgroundThread
    void onEvent(io.rong.imkit.model.Event$ConversationRemoveEvent) -> onEvent
    void onEvent(io.rong.imkit.model.Event$ConversationUnreadEvent) -> onEvent
io.rong.imkit.logic.MessageCounterLogic$1 -> io.rong.imkit.logic.MessageCounterLogic$1:
    io.rong.imkit.logic.MessageCounterLogic$MessageCounter val$counter -> val$counter
    io.rong.imkit.logic.MessageCounterLogic this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.logic.MessageCounterLogic$2 -> io.rong.imkit.logic.MessageCounterLogic$2:
    io.rong.imkit.logic.MessageCounterLogic$MessageCounter val$counter -> val$counter
    io.rong.imkit.logic.MessageCounterLogic this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.logic.MessageCounterLogic$3 -> io.rong.imkit.logic.MessageCounterLogic$3:
    io.rong.imkit.logic.MessageCounterLogic$MessageCounter val$counter -> val$counter
    io.rong.imkit.logic.MessageCounterLogic this$0 -> this$0
    void run() -> run
io.rong.imkit.logic.MessageCounterLogic$4 -> io.rong.imkit.logic.MessageCounterLogic$4:
    io.rong.imkit.logic.MessageCounterLogic$MessageCounter val$counter -> val$counter
    io.rong.imkit.logic.MessageCounterLogic this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.logic.MessageCounterLogic$5 -> io.rong.imkit.logic.MessageCounterLogic$5:
    io.rong.imkit.logic.MessageCounterLogic$MessageCounter val$counter -> val$counter
    io.rong.imkit.logic.MessageCounterLogic this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.logic.MessageCounterLogic$MessageCounter -> io.rong.imkit.logic.MessageCounterLogic$MessageCounter:
    io.rong.imkit.model.ConversationTypeFilter mFilter -> mFilter
    int mCount -> mCount
    void onIncreased() -> onIncreased
    void onMessageIncreased(int) -> onMessageIncreased
    io.rong.imkit.model.ConversationTypeFilter getFilter() -> getFilter
    boolean isCount(io.rong.imlib.model.Message) -> isCount
io.rong.imkit.logic.MessageSoundLogic -> io.rong.imkit.logic.MessageSoundLogic:
    android.content.Context mContext -> mContext
    io.rong.imkit.logic.MessageSoundLogic mRoundMgr -> mRoundMgr
    android.os.Handler mHandler -> mHandler
    io.rong.imkit.logic.MessageSoundLogic$NewMessageReminderRunnable mLastReminderRunnable -> mLastReminderRunnable
    void init(android.content.Context) -> init
    io.rong.imkit.logic.MessageSoundLogic getInstance() -> getInstance
    void messageReminder() -> messageReminder
    int getMobileRingerMode() -> getMobileRingerMode
    void playSound(android.net.Uri) -> playSound
    android.content.Context access$000() -> access$000
    void access$100(io.rong.imkit.logic.MessageSoundLogic,android.net.Uri) -> access$100
io.rong.imkit.logic.MessageSoundLogic$1 -> io.rong.imkit.logic.MessageSoundLogic$1:
    io.rong.imkit.logic.MessageSoundLogic this$0 -> this$0
    void onPrepared(android.media.MediaPlayer) -> onPrepared
io.rong.imkit.logic.MessageSoundLogic$2 -> io.rong.imkit.logic.MessageSoundLogic$2:
    io.rong.imkit.logic.MessageSoundLogic this$0 -> this$0
    void onCompletion(android.media.MediaPlayer) -> onCompletion
io.rong.imkit.logic.MessageSoundLogic$NewMessageReminderRunnable -> io.rong.imkit.logic.MessageSoundLogic$NewMessageReminderRunnable:
    io.rong.imkit.logic.MessageSoundLogic this$0 -> this$0
    void run() -> run
io.rong.imkit.model.ConversationInfo -> io.rong.imkit.model.ConversationInfo:
    io.rong.imlib.model.Conversation$ConversationType conversationType -> conversationType
    java.lang.String targetId -> targetId
    io.rong.imkit.model.ConversationInfo obtain(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> obtain
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    java.lang.String getTargetId() -> getTargetId
io.rong.imkit.model.ConversationKey -> io.rong.imkit.model.ConversationKey:
    java.lang.String key -> key
    java.lang.String targetId -> targetId
    io.rong.imlib.model.Conversation$ConversationType type -> type
    io.rong.imkit.model.ConversationKey obtain(java.lang.String,io.rong.imlib.model.Conversation$ConversationType) -> obtain
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    io.rong.imlib.model.Conversation$ConversationType getType() -> getType
    void setType(io.rong.imlib.model.Conversation$ConversationType) -> setType
io.rong.imkit.model.ConversationProviderTag -> io.rong.imkit.model.ConversationProviderTag:
    int portraitPosition() -> portraitPosition
    boolean centerInHorizontal() -> centerInHorizontal
    java.lang.String conversationType() -> conversationType
io.rong.imkit.model.ConversationTypeFilter -> io.rong.imkit.model.ConversationTypeFilter:
    io.rong.imkit.model.ConversationTypeFilter$Level mLevel -> mLevel
    java.util.List mTypes -> mTypes
    io.rong.imkit.model.ConversationTypeFilter obtain(io.rong.imlib.model.Conversation$ConversationType[]) -> obtain
    io.rong.imkit.model.ConversationTypeFilter obtain(io.rong.imkit.model.ConversationTypeFilter$Level) -> obtain
    io.rong.imkit.model.ConversationTypeFilter obtain() -> obtain
    io.rong.imkit.model.ConversationTypeFilter$Level getLevel() -> getLevel
    java.util.List getConversationTypeList() -> getConversationTypeList
    boolean hasFilter(io.rong.imlib.model.Message) -> hasFilter
io.rong.imkit.model.ConversationTypeFilter$Level -> io.rong.imkit.model.ConversationTypeFilter$Level:
    io.rong.imkit.model.ConversationTypeFilter$Level ALL -> ALL
    io.rong.imkit.model.ConversationTypeFilter$Level CONVERSATION_TYPE -> CONVERSATION_TYPE
    io.rong.imkit.model.ConversationTypeFilter$Level NONE -> NONE
    io.rong.imkit.model.ConversationTypeFilter$Level[] $VALUES -> $VALUES
    io.rong.imkit.model.ConversationTypeFilter$Level[] values() -> values
    io.rong.imkit.model.ConversationTypeFilter$Level valueOf(java.lang.String) -> valueOf
io.rong.imkit.model.DraftMessage -> io.rong.imkit.model.DraftMessage:
    java.lang.String content -> content
    io.rong.imlib.model.Conversation$ConversationType conversationType -> conversationType
    java.lang.String targetId -> targetId
    io.rong.imkit.model.DraftMessage obtain(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String) -> obtain
    void setContent(java.lang.String) -> setContent
    java.lang.String getContent() -> getContent
    void setTargetId(java.lang.String) -> setTargetId
    java.lang.String getTargetId() -> getTargetId
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
io.rong.imkit.model.Emoji -> io.rong.imkit.model.Emoji:
    int code -> code
    int res -> res
    int getCode() -> getCode
    void setCode(int) -> setCode
    int getRes() -> getRes
    void setRes(int) -> setRes
io.rong.imkit.model.Event -> io.rong.imkit.model.Event:
io.rong.imkit.model.Event$AddMemberToDiscussionEvent -> io.rong.imkit.model.Event$AddMemberToDiscussionEvent:
    java.lang.String discussionId -> discussionId
    java.util.List userIdList -> userIdList
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    java.util.List getUserIdList() -> getUserIdList
    void setUserIdList(java.util.List) -> setUserIdList
io.rong.imkit.model.Event$AddToBlacklistEvent -> io.rong.imkit.model.Event$AddToBlacklistEvent:
    java.lang.String userId -> userId
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
io.rong.imkit.model.Event$BaseConversationEvent -> io.rong.imkit.model.Event$BaseConversationEvent:
    io.rong.imlib.model.Conversation$ConversationType mConversationType -> mConversationType
    java.lang.String mTargetId -> mTargetId
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
io.rong.imkit.model.Event$ConversationNotificationEvent -> io.rong.imkit.model.Event$ConversationNotificationEvent:
    io.rong.imlib.model.Conversation$ConversationNotificationStatus mStatus -> mStatus
    io.rong.imkit.model.Event$ConversationNotificationEvent obtain(java.lang.String,io.rong.imlib.model.Conversation$ConversationType,io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> obtain
    io.rong.imlib.model.Conversation$ConversationNotificationStatus getStatus() -> getStatus
    void setStatus(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> setStatus
    void setTargetId(java.lang.String) -> setTargetId
    java.lang.String getTargetId() -> getTargetId
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
io.rong.imkit.model.Event$ConversationRemoveEvent -> io.rong.imkit.model.Event$ConversationRemoveEvent:
    io.rong.imlib.model.Conversation$ConversationType type -> type
    java.lang.String targetId -> targetId
    io.rong.imlib.model.Conversation$ConversationType getType() -> getType
    void setType(io.rong.imlib.model.Conversation$ConversationType) -> setType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
io.rong.imkit.model.Event$ConversationTopEvent -> io.rong.imkit.model.Event$ConversationTopEvent:
    boolean isTop -> isTop
    boolean isTop() -> isTop
    void setTop(boolean) -> setTop
    void setTargetId(java.lang.String) -> setTargetId
    java.lang.String getTargetId() -> getTargetId
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
io.rong.imkit.model.Event$ConversationUnreadEvent -> io.rong.imkit.model.Event$ConversationUnreadEvent:
    io.rong.imlib.model.Conversation$ConversationType type -> type
    java.lang.String targetId -> targetId
    io.rong.imlib.model.Conversation$ConversationType getType() -> getType
    void setType(io.rong.imlib.model.Conversation$ConversationType) -> setType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
io.rong.imkit.model.Event$CreateDiscussionEvent -> io.rong.imkit.model.Event$CreateDiscussionEvent:
    java.lang.String discussionId -> discussionId
    java.lang.String discussionName -> discussionName
    java.util.List userIdList -> userIdList
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    java.lang.String getDiscussionName() -> getDiscussionName
    void setDiscussionName(java.lang.String) -> setDiscussionName
    java.util.List getUserIdList() -> getUserIdList
    void setUserIdList(java.util.List) -> setUserIdList
io.rong.imkit.model.Event$DiscussionInviteStatusEvent -> io.rong.imkit.model.Event$DiscussionInviteStatusEvent:
    java.lang.String discussionId -> discussionId
    io.rong.imlib.RongIMClient$DiscussionInviteStatus status -> status
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    io.rong.imlib.RongIMClient$DiscussionInviteStatus getStatus() -> getStatus
    void setStatus(io.rong.imlib.RongIMClient$DiscussionInviteStatus) -> setStatus
io.rong.imkit.model.Event$JoinChatRoomEvent -> io.rong.imkit.model.Event$JoinChatRoomEvent:
    java.lang.String chatRoomId -> chatRoomId
    int defMessageCount -> defMessageCount
    java.lang.String getChatRoomId() -> getChatRoomId
    void setChatRoomId(java.lang.String) -> setChatRoomId
    int getDefMessageCount() -> getDefMessageCount
    void setDefMessageCount(int) -> setDefMessageCount
io.rong.imkit.model.Event$JoinGroupEvent -> io.rong.imkit.model.Event$JoinGroupEvent:
    java.lang.String groupId -> groupId
    java.lang.String groupName -> groupName
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getGroupName() -> getGroupName
    void setGroupName(java.lang.String) -> setGroupName
io.rong.imkit.model.Event$MessageDeleteEvent -> io.rong.imkit.model.Event$MessageDeleteEvent:
    java.util.List messageIds -> messageIds
    java.util.List getMessageIds() -> getMessageIds
    void setMessageIds(java.util.List) -> setMessageIds
io.rong.imkit.model.Event$MessageSentStatusEvent -> io.rong.imkit.model.Event$MessageSentStatusEvent:
    int messageId -> messageId
    io.rong.imlib.model.Message$SentStatus sentStatus -> sentStatus
    int getMessageId() -> getMessageId
    void setMessageId(int) -> setMessageId
    io.rong.imlib.model.Message$SentStatus getSentStatus() -> getSentStatus
    void setSentStatus(io.rong.imlib.model.Message$SentStatus) -> setSentStatus
io.rong.imkit.model.Event$MessagesClearEvent -> io.rong.imkit.model.Event$MessagesClearEvent:
    io.rong.imlib.model.Conversation$ConversationType type -> type
    java.lang.String targetId -> targetId
    io.rong.imlib.model.Conversation$ConversationType getType() -> getType
    void setType(io.rong.imlib.model.Conversation$ConversationType) -> setType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
io.rong.imkit.model.Event$OnMessageSendErrorEvent -> io.rong.imkit.model.Event$OnMessageSendErrorEvent:
    io.rong.imlib.model.Message message -> message
    io.rong.imlib.RongIMClient$ErrorCode errorCode -> errorCode
    io.rong.imlib.model.Message getMessage() -> getMessage
    void setMessage(io.rong.imlib.model.Message) -> setMessage
    io.rong.imlib.RongIMClient$ErrorCode getErrorCode() -> getErrorCode
    void setErrorCode(io.rong.imlib.RongIMClient$ErrorCode) -> setErrorCode
io.rong.imkit.model.Event$OnReceiveMessageEvent -> io.rong.imkit.model.Event$OnReceiveMessageEvent:
    io.rong.imlib.model.Message message -> message
    int left -> left
    io.rong.imlib.model.Message getMessage() -> getMessage
    void setMessage(io.rong.imlib.model.Message) -> setMessage
    int getLeft() -> getLeft
    void setLeft(int) -> setLeft
io.rong.imkit.model.Event$OnReceiveVoIPMessageEvent -> io.rong.imkit.model.Event$OnReceiveVoIPMessageEvent:
io.rong.imkit.model.Event$PublicAccountIsFollowEvent -> io.rong.imkit.model.Event$PublicAccountIsFollowEvent:
    boolean isFollow -> isFollow
    io.rong.imkit.model.Event$PublicAccountIsFollowEvent obtain(java.lang.String,io.rong.imlib.model.Conversation$ConversationType,boolean) -> obtain
    boolean isFollow() -> isFollow
    void setIsFollow(boolean) -> setIsFollow
    void setTargetId(java.lang.String) -> setTargetId
    java.lang.String getTargetId() -> getTargetId
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
io.rong.imkit.model.Event$QuitChatRoomEvent -> io.rong.imkit.model.Event$QuitChatRoomEvent:
    java.lang.String chatRoomId -> chatRoomId
    java.lang.String getChatRoomId() -> getChatRoomId
    void setChatRoomId(java.lang.String) -> setChatRoomId
io.rong.imkit.model.Event$QuitDiscussionEvent -> io.rong.imkit.model.Event$QuitDiscussionEvent:
    java.lang.String discussionId -> discussionId
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
io.rong.imkit.model.Event$QuitGroupEvent -> io.rong.imkit.model.Event$QuitGroupEvent:
    java.lang.String groupId -> groupId
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
io.rong.imkit.model.Event$RemoveFromBlacklistEvent -> io.rong.imkit.model.Event$RemoveFromBlacklistEvent:
    java.lang.String userId -> userId
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
io.rong.imkit.model.Event$RemoveMemberFromDiscussionEvent -> io.rong.imkit.model.Event$RemoveMemberFromDiscussionEvent:
    java.lang.String discussionId -> discussionId
    java.lang.String userId -> userId
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
io.rong.imkit.model.Event$SyncGroupEvent -> io.rong.imkit.model.Event$SyncGroupEvent:
    java.util.List groups -> groups
    java.util.List getGroups() -> getGroups
    void setGroups(java.util.List) -> setGroups
io.rong.imkit.model.MessageKey -> io.rong.imkit.model.MessageKey:
    io.rong.imlib.model.Conversation$ConversationType type -> type
    java.lang.String id -> id
    java.util.concurrent.ConcurrentHashMap map -> map
    io.rong.imkit.model.MessageKey getMessageKey(java.lang.String,io.rong.imlib.model.Conversation$ConversationType) -> getMessageKey
    void setType(io.rong.imlib.model.Conversation$ConversationType) -> setType
    void setId(java.lang.String) -> setId
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    java.lang.String getId() -> getId
io.rong.imkit.model.ProviderTag -> io.rong.imkit.model.ProviderTag:
    boolean showPortrait() -> showPortrait
    boolean centerInHorizontal() -> centerInHorizontal
    boolean hide() -> hide
    boolean showProgress() -> showProgress
    boolean showSummaryWithName() -> showSummaryWithName
    java.lang.Class messageContent() -> messageContent
io.rong.imkit.model.RongGridView -> io.rong.imkit.model.RongGridView:
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onMeasure(int,int) -> onMeasure
io.rong.imkit.tools.PhotoFragment -> io.rong.imkit.tools.PhotoFragment:
    uk.co.senab.photoview.PhotoView mPhotoView -> mPhotoView
    android.net.Uri mUri -> mUri
    io.rong.imkit.tools.PhotoFragment$ImageProcess mProcess -> mProcess
    int SHOW_PHOTO -> SHOW_PHOTO
    int GET_PHOTO -> GET_PHOTO
    int REQ_PHOTO -> REQ_PHOTO
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onBackPressed() -> onBackPressed
    boolean handleMessage(android.os.Message) -> handleMessage
    void initPhoto(android.net.Uri) -> initPhoto
    android.os.Handler access$000(io.rong.imkit.tools.PhotoFragment) -> access$000
    android.os.Handler access$100(io.rong.imkit.tools.PhotoFragment) -> access$100
    android.os.Handler access$200(io.rong.imkit.tools.PhotoFragment) -> access$200
io.rong.imkit.tools.PhotoFragment$1 -> io.rong.imkit.tools.PhotoFragment$1:
    io.rong.imkit.tools.PhotoFragment this$0 -> this$0
    void onComplete(me.add1.network.AbstractHttpRequest,java.io.File) -> onComplete
    void onFailure(me.add1.network.AbstractHttpRequest,me.add1.exception.BaseException) -> onFailure
    void onComplete(me.add1.network.AbstractHttpRequest,java.lang.Object) -> onComplete
io.rong.imkit.tools.PhotoFragment$2 -> io.rong.imkit.tools.PhotoFragment$2:
    io.rong.imkit.tools.PhotoFragment this$0 -> this$0
    void statusCallback(me.add1.network.StoreStatusCallback$StoreStatus) -> statusCallback
    void statusCallback(java.lang.Object) -> statusCallback
io.rong.imkit.tools.PhotoFragment$3 -> io.rong.imkit.tools.PhotoFragment$3:
    io.rong.imkit.tools.PhotoFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.tools.PhotoFragment$ImageProcess -> io.rong.imkit.tools.PhotoFragment$ImageProcess:
    io.rong.imkit.tools.PhotoFragment this$0 -> this$0
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.rong.imkit.tools.PictureFragment -> io.rong.imkit.tools.PictureFragment:
    uk.co.senab.photoview.PhotoView mPhotoView -> mPhotoView
    android.net.Uri mUri -> mUri
    io.rong.imkit.tools.PictureFragment$ImageProcess mProcess -> mProcess
    int SHOW_PHOTO -> SHOW_PHOTO
    int GET_PHOTO -> GET_PHOTO
    int REQ_PHOTO -> REQ_PHOTO
    android.net.Uri uri -> uri
    android.content.Context context -> context
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onBackPressed() -> onBackPressed
    boolean handleMessage(android.os.Message) -> handleMessage
    void initPhoto(android.net.Uri) -> initPhoto
    android.os.Handler access$000(io.rong.imkit.tools.PictureFragment) -> access$000
    android.os.Handler access$100(io.rong.imkit.tools.PictureFragment) -> access$100
    android.os.Handler access$200(io.rong.imkit.tools.PictureFragment) -> access$200
io.rong.imkit.tools.PictureFragment$1 -> io.rong.imkit.tools.PictureFragment$1:
    io.rong.imkit.tools.PictureFragment this$0 -> this$0
    void onComplete(me.add1.network.AbstractHttpRequest,java.io.File) -> onComplete
    void onFailure(me.add1.network.AbstractHttpRequest,me.add1.exception.BaseException) -> onFailure
    void onComplete(me.add1.network.AbstractHttpRequest,java.lang.Object) -> onComplete
io.rong.imkit.tools.PictureFragment$2 -> io.rong.imkit.tools.PictureFragment$2:
    io.rong.imkit.tools.PictureFragment this$0 -> this$0
    void statusCallback(me.add1.network.StoreStatusCallback$StoreStatus) -> statusCallback
    void statusCallback(java.lang.Object) -> statusCallback
io.rong.imkit.tools.PictureFragment$3 -> io.rong.imkit.tools.PictureFragment$3:
    io.rong.imkit.tools.PictureFragment this$0 -> this$0
    void run() -> run
io.rong.imkit.tools.PictureFragment$ImageProcess -> io.rong.imkit.tools.PictureFragment$ImageProcess:
    io.rong.imkit.tools.PictureFragment this$0 -> this$0
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
io.rong.imkit.tools.PreviewPictureActivity -> io.rong.imkit.tools.PreviewPictureActivity:
    android.widget.Button mButtonBack -> mButtonBack
    android.widget.Button mButtonSend -> mButtonSend
    android.widget.TextView mCurrentPage -> mCurrentPage
    android.support.v4.view.ViewPager mViewPager -> mViewPager
    android.widget.CheckBox mCheckBox -> mCheckBox
    java.util.ArrayList selectedPicture -> selectedPicture
    io.rong.imkit.tools.PreviewPictureActivity$MyAdapter mMyAdapter -> mMyAdapter
    java.util.ArrayList mArrayList -> mArrayList
    java.lang.Boolean flag -> flag
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    android.widget.Button access$000(io.rong.imkit.tools.PreviewPictureActivity) -> access$000
    java.util.ArrayList access$100(io.rong.imkit.tools.PreviewPictureActivity) -> access$100
    java.lang.Boolean access$202(io.rong.imkit.tools.PreviewPictureActivity,java.lang.Boolean) -> access$202
    java.util.ArrayList access$300(io.rong.imkit.tools.PreviewPictureActivity) -> access$300
io.rong.imkit.tools.PreviewPictureActivity$1 -> io.rong.imkit.tools.PreviewPictureActivity$1:
    io.rong.imkit.tools.PreviewPictureActivity this$0 -> this$0
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
io.rong.imkit.tools.PreviewPictureActivity$2 -> io.rong.imkit.tools.PreviewPictureActivity$2:
    io.rong.imkit.tools.PreviewPictureActivity this$0 -> this$0
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
io.rong.imkit.tools.PreviewPictureActivity$3 -> io.rong.imkit.tools.PreviewPictureActivity$3:
    int val$i -> val$i
    io.rong.imkit.tools.PreviewPictureActivity this$0 -> this$0
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
io.rong.imkit.tools.PreviewPictureActivity$MyAdapter -> io.rong.imkit.tools.PreviewPictureActivity$MyAdapter:
    java.util.ArrayList selectedPicture -> selectedPicture
    io.rong.imkit.tools.PreviewPictureActivity this$0 -> this$0
    android.support.v4.app.Fragment getItem(int) -> getItem
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    int getCount() -> getCount
io.rong.imkit.tools.PreviewPictureActivity$SaveSelectState -> io.rong.imkit.tools.PreviewPictureActivity$SaveSelectState:
    android.net.Uri mUri -> mUri
    java.lang.Boolean isSelect -> isSelect
    io.rong.imkit.tools.PreviewPictureActivity this$0 -> this$0
    android.net.Uri getmUri() -> getmUri
    void setmUri(android.net.Uri) -> setmUri
    java.lang.Boolean getIsSelect() -> getIsSelect
    void setIsSelect(java.lang.Boolean) -> setIsSelect
io.rong.imkit.tools.RongWebviewActivity -> io.rong.imkit.tools.RongWebviewActivity:
    android.webkit.WebView mWebView -> mWebView
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
io.rong.imkit.tools.RongWebviewActivity$1 -> io.rong.imkit.tools.RongWebviewActivity$1:
io.rong.imkit.tools.RongWebviewActivity$RongWebviewClient -> io.rong.imkit.tools.RongWebviewActivity$RongWebviewClient:
    io.rong.imkit.tools.RongWebviewActivity this$0 -> this$0
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
io.rong.imkit.tools.SelectPictureActivity -> io.rong.imkit.tools.SelectPictureActivity:
    android.widget.GridView mGridView -> mGridView
    io.rong.imkit.tools.SelectPictureActivity$PictureAdapter adapter -> adapter
    android.widget.Button mButOK -> mButOK
    android.widget.Button mButPreview -> mButPreview
    int MAX_NUM -> MAX_NUM
    int TAKE_PICTURE -> TAKE_PICTURE
    java.lang.String INTENT_MAX_NUM -> INTENT_MAX_NUM
    java.lang.String INTENT_SELECTED_PICTURE -> INTENT_SELECTED_PICTURE
    java.util.ArrayList selectedPicture -> selectedPicture
    java.lang.String cameraPath -> cameraPath
    java.util.List pictures -> pictures
    int PREVIEWSEND -> PREVIEWSEND
    android.os.Handler mHandler -> mHandler
    java.util.ArrayList resultPreviewList -> resultPreviewList
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    java.util.List getThumb() -> getThumb
    void back(android.view.View) -> back
    java.util.ArrayList access$002(io.rong.imkit.tools.SelectPictureActivity,java.util.ArrayList) -> access$002
    java.util.ArrayList access$000(io.rong.imkit.tools.SelectPictureActivity) -> access$000
    java.util.List access$100(io.rong.imkit.tools.SelectPictureActivity) -> access$100
    java.util.ArrayList access$200(io.rong.imkit.tools.SelectPictureActivity) -> access$200
    android.widget.Button access$300(io.rong.imkit.tools.SelectPictureActivity) -> access$300
io.rong.imkit.tools.SelectPictureActivity$1 -> io.rong.imkit.tools.SelectPictureActivity$1:
    io.rong.imkit.tools.SelectPictureActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.tools.SelectPictureActivity$PictureAdapter -> io.rong.imkit.tools.SelectPictureActivity$PictureAdapter:
    java.util.HashMap state -> state
    io.rong.imkit.tools.SelectPictureActivity this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
io.rong.imkit.tools.SelectPictureActivity$PictureAdapter$1 -> io.rong.imkit.tools.SelectPictureActivity$PictureAdapter$1:
    int val$position -> val$position
    io.rong.imkit.tools.SelectPictureActivity$PictureAdapter this$1 -> this$1
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
io.rong.imkit.tools.SelectPictureActivity$ViewHolder -> io.rong.imkit.tools.SelectPictureActivity$ViewHolder:
    io.rong.imkit.widget.AsyncImageView icon -> icon
    android.widget.CheckBox checkBox -> checkBox
    io.rong.imkit.tools.SelectPictureActivity this$0 -> this$0
io.rong.imkit.util.AndroidEmoji -> io.rong.imkit.util.AndroidEmoji:
    android.content.res.Resources sResources -> sResources
    java.util.Map sEmojiMap -> sEmojiMap
    java.util.List sEmojiList -> sEmojiList
    void init(android.content.Context) -> init
    java.util.List getEmojiList() -> getEmojiList
    int getEmojiCount(java.lang.String) -> getEmojiCount
    java.lang.CharSequence ensure(java.lang.String) -> ensure
    java.util.Map access$000() -> access$000
io.rong.imkit.util.AndroidEmoji$1 -> io.rong.imkit.util.AndroidEmoji$1:
io.rong.imkit.util.AndroidEmoji$EmojiImageSpan -> io.rong.imkit.util.AndroidEmoji$EmojiImageSpan:
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    android.graphics.drawable.Drawable getDrawable() -> getDrawable
io.rong.imkit.util.ConversationListUtils -> io.rong.imkit.util.ConversationListUtils:
    io.rong.imkit.util.ConversationListUtils self -> self
    io.rong.imkit.util.ConversationListUtils getInstance() -> getInstance
    void initConversationGatherState(android.net.Uri) -> initConversationGatherState
    java.lang.String setGatheredConversationTitle(io.rong.imlib.model.Conversation$ConversationType,android.content.Context) -> setGatheredConversationTitle
    int findPositionForNewConversation(io.rong.imkit.UiConversation,io.rong.imkit.widget.adapter.ConversationListAdapter) -> findPositionForNewConversation
    int findPositionForSetTop(io.rong.imkit.UiConversation,io.rong.imkit.widget.adapter.ConversationListAdapter) -> findPositionForSetTop
    int findPositionForCancleTop(int,io.rong.imkit.widget.adapter.ConversationListAdapter) -> findPositionForCancleTop
io.rong.imkit.util.ConversationListUtils$1 -> io.rong.imkit.util.ConversationListUtils$1:
    int[] $SwitchMap$io$rong$imlib$model$Conversation$ConversationType -> $SwitchMap$io$rong$imlib$model$Conversation$ConversationType
io.rong.imkit.util.IVoiceHandler -> io.rong.imkit.util.IVoiceHandler:
    void setPlayListener(io.rong.imkit.util.IVoiceHandler$OnPlayListener) -> setPlayListener
    void play(android.content.Context,android.net.Uri) -> play
    void stop() -> stop
    android.net.Uri getCurrentPlayUri() -> getCurrentPlayUri
io.rong.imkit.util.IVoiceHandler$OnPlayListener -> io.rong.imkit.util.IVoiceHandler$OnPlayListener:
    void onPlay(android.content.Context) -> onPlay
    void onCover(boolean) -> onCover
    void onStop() -> onStop
io.rong.imkit.util.IVoiceHandler$VoiceException -> io.rong.imkit.util.IVoiceHandler$VoiceException:
io.rong.imkit.util.IVoiceHandler$VoiceHandler -> io.rong.imkit.util.IVoiceHandler$VoiceHandler:
    android.media.AudioManager mAudioManager -> mAudioManager
    android.hardware.SensorManager mSensorManager -> mSensorManager
    android.os.PowerManager mPowerManager -> mPowerManager
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.hardware.Sensor mSensor -> mSensor
    android.os.PowerManager$WakeLock mLock -> mLock
    io.rong.imkit.util.IVoiceHandler$OnPlayListener mPlayListener -> mPlayListener
    float mLastEventValue -> mLastEventValue
    android.net.Uri mCurrentUri -> mCurrentUri
    void setPlayListener(io.rong.imkit.util.IVoiceHandler$OnPlayListener) -> setPlayListener
    void play(android.content.Context,android.net.Uri) -> play
    void stop() -> stop
    android.net.Uri getCurrentPlayUri() -> getCurrentPlayUri
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onEvent(io.rong.imkit.widget.InputView$Event) -> onEvent
    android.os.PowerManager$WakeLock access$000(io.rong.imkit.util.IVoiceHandler$VoiceHandler) -> access$000
    io.rong.imkit.util.IVoiceHandler$OnPlayListener access$100(io.rong.imkit.util.IVoiceHandler$VoiceHandler) -> access$100
    android.hardware.Sensor access$200(io.rong.imkit.util.IVoiceHandler$VoiceHandler) -> access$200
    android.hardware.SensorManager access$300(io.rong.imkit.util.IVoiceHandler$VoiceHandler) -> access$300
    android.media.AudioManager access$400(io.rong.imkit.util.IVoiceHandler$VoiceHandler) -> access$400
io.rong.imkit.util.IVoiceHandler$VoiceHandler$1 -> io.rong.imkit.util.IVoiceHandler$VoiceHandler$1:
    android.content.Context val$context -> val$context
    io.rong.imkit.util.IVoiceHandler$VoiceHandler this$0 -> this$0
    void onPrepared(android.media.MediaPlayer) -> onPrepared
io.rong.imkit.util.MessageProviderUserInfoHelper -> io.rong.imkit.util.MessageProviderUserInfoHelper:
    java.util.concurrent.ConcurrentHashMap mMessageIdUserIdsMap -> mMessageIdUserIdsMap
    io.rong.imkit.util.MessageProviderUserInfoHelper mHelper -> mHelper
    java.util.ArrayList cacheUserIds -> cacheUserIds
    android.os.HandlerThread mWorkThread -> mWorkThread
    android.os.Handler mUserInfoHandler -> mUserInfoHandler
    io.rong.imkit.util.MessageProviderUserInfoHelper getInstance() -> getInstance
    void setCacheUserId(java.lang.String) -> setCacheUserId
    void removeCacheUserId(java.lang.String) -> removeCacheUserId
    boolean isCacheUserId(java.lang.String) -> isCacheUserId
    void registerMessageUserInfo(io.rong.imlib.model.MessageContent,java.lang.String) -> registerMessageUserInfo
    void notifyMessageUpdate(java.lang.String) -> notifyMessageUpdate
    boolean isRequestGetUserInfo() -> isRequestGetUserInfo
io.rong.imkit.util.MessageProviderUserInfoHelper$1 -> io.rong.imkit.util.MessageProviderUserInfoHelper$1:
    java.lang.String val$userId -> val$userId
    io.rong.imkit.util.MessageProviderUserInfoHelper this$0 -> this$0
    void run() -> run
io.rong.imkit.util.RongDateUtils -> io.rong.imkit.util.RongDateUtils:
    int OTHER -> OTHER
    int TODAY -> TODAY
    int YESTERDAY -> YESTERDAY
    int judgeDate(java.util.Date) -> judgeDate
    java.lang.String getConversationListFormatDate(java.util.Date) -> getConversationListFormatDate
    java.lang.String getConversationFormatDate(java.util.Date) -> getConversationFormatDate
    boolean isShowChatTime(long,long) -> isShowChatTime
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
io.rong.imkit.util.TimeUtils -> io.rong.imkit.util.TimeUtils:
    java.lang.String formatData(long) -> formatData
    java.lang.String formatTime(long) -> formatTime
    java.lang.String fromatDate(long,java.lang.String) -> fromatDate
io.rong.imkit.utils.BitmapUtil -> io.rong.imkit.utils.BitmapUtil:
    java.lang.String TAG -> TAG
    java.lang.String getBase64FromBitmap(android.graphics.Bitmap) -> getBase64FromBitmap
    android.graphics.Bitmap getBitmapFromBase64(java.lang.String) -> getBitmapFromBase64
    android.graphics.Bitmap getResizedBitmap(android.content.Context,android.net.Uri,int,int) -> getResizedBitmap
    android.graphics.Bitmap getRotateBitmap(float,android.graphics.Bitmap) -> getRotateBitmap
    android.graphics.BitmapFactory$Options decodeBitmapOptionsInfo(android.content.Context,android.net.Uri) -> decodeBitmapOptionsInfo
    android.graphics.Bitmap rotateBitMap(java.lang.String,android.graphics.Bitmap) -> rotateBitMap
io.rong.imkit.utils.FileUtil -> io.rong.imkit.utils.FileUtil:
    java.io.InputStream getFileInputStream(java.lang.String) -> getFileInputStream
    byte[] getByteFromUri(android.net.Uri) -> getByteFromUri
    void writeByte(android.net.Uri,byte[]) -> writeByte
io.rong.imkit.utils.SystemUtils -> io.rong.imkit.utils.SystemUtils:
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
io.rong.imkit.utils.UriUtils -> io.rong.imkit.utils.UriUtils:
    android.net.Uri obtainThumImageUri(android.content.Context,io.rong.imlib.model.Message) -> obtainThumImageUri
    android.net.Uri obtainVoiceUri(android.content.Context,io.rong.imlib.model.Message) -> obtainVoiceUri
io.rong.imkit.utils.Utils -> io.rong.imkit.utils.Utils:
    void saveNotificationQuietHours(android.content.Context,java.lang.String,int) -> saveNotificationQuietHours
    java.lang.String getNotificationQuietHoursForStartTime(android.content.Context) -> getNotificationQuietHoursForStartTime
    int getNotificationQuietHoursForSpanMinutes(android.content.Context) -> getNotificationQuietHoursForSpanMinutes
io.rong.imkit.widget.AlterDialogFragment -> io.rong.imkit.widget.AlterDialogFragment:
    java.lang.String ARGS_TITLE -> ARGS_TITLE
    java.lang.String ARGS_MESSAGE -> ARGS_MESSAGE
    java.lang.String ARGS_CANCEL_BTN_TXT -> ARGS_CANCEL_BTN_TXT
    java.lang.String ARGS_OK_BTN_TXT -> ARGS_OK_BTN_TXT
    io.rong.imkit.widget.AlterDialogFragment$AlterDialogBtnListener mAlterDialogBtnListener -> mAlterDialogBtnListener
    io.rong.imkit.widget.AlterDialogFragment newInstance(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> newInstance
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void show(android.support.v4.app.FragmentManager) -> show
    void setOnAlterDialogBtnListener(io.rong.imkit.widget.AlterDialogFragment$AlterDialogBtnListener) -> setOnAlterDialogBtnListener
    io.rong.imkit.widget.AlterDialogFragment$AlterDialogBtnListener access$000(io.rong.imkit.widget.AlterDialogFragment) -> access$000
io.rong.imkit.widget.AlterDialogFragment$1 -> io.rong.imkit.widget.AlterDialogFragment$1:
    io.rong.imkit.widget.AlterDialogFragment this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.imkit.widget.AlterDialogFragment$2 -> io.rong.imkit.widget.AlterDialogFragment$2:
    io.rong.imkit.widget.AlterDialogFragment this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.imkit.widget.AlterDialogFragment$AlterDialogBtnListener -> io.rong.imkit.widget.AlterDialogFragment$AlterDialogBtnListener:
    void onDialogPositiveClick(io.rong.imkit.widget.AlterDialogFragment) -> onDialogPositiveClick
    void onDialogNegativeClick(io.rong.imkit.widget.AlterDialogFragment) -> onDialogNegativeClick
io.rong.imkit.widget.ArraysDialogFragment -> io.rong.imkit.widget.ArraysDialogFragment:
    java.lang.String ARGS_TITLE -> ARGS_TITLE
    java.lang.String ARGS_ARRAYS -> ARGS_ARRAYS
    io.rong.imkit.widget.ArraysDialogFragment$OnArraysDialogItemListener mItemListener -> mItemListener
    int count -> count
    io.rong.imkit.widget.ArraysDialogFragment newInstance(java.lang.String,java.lang.String[]) -> newInstance
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    int getCount() -> getCount
    void setCount(int) -> setCount
    io.rong.imkit.widget.ArraysDialogFragment setArraysDialogItemListener(io.rong.imkit.widget.ArraysDialogFragment$OnArraysDialogItemListener) -> setArraysDialogItemListener
    void show(android.support.v4.app.FragmentManager) -> show
    io.rong.imkit.widget.ArraysDialogFragment$OnArraysDialogItemListener access$000(io.rong.imkit.widget.ArraysDialogFragment) -> access$000
io.rong.imkit.widget.ArraysDialogFragment$1 -> io.rong.imkit.widget.ArraysDialogFragment$1:
    io.rong.imkit.widget.ArraysDialogFragment this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.imkit.widget.ArraysDialogFragment$OnArraysDialogItemListener -> io.rong.imkit.widget.ArraysDialogFragment$OnArraysDialogItemListener:
    void OnArraysDialogItemClick(android.content.DialogInterface,int) -> OnArraysDialogItemClick
io.rong.imkit.widget.AsyncImageView -> io.rong.imkit.widget.AsyncImageView:
    java.util.concurrent.ExecutorService mMultiThreadExecutor -> mMultiThreadExecutor
    boolean DEBUG -> DEBUG
    me.add1.resource.Resource mResource -> mResource
    java.util.concurrent.Future mCurrentRunnable -> mCurrentRunnable
    android.graphics.drawable.Drawable mDefaultDrawable -> mDefaultDrawable
    java.lang.Runnable mAttachedRunnable -> mAttachedRunnable
    int STATUS_DISPLAY -> STATUS_DISPLAY
    int STATUS_EMPTY -> STATUS_EMPTY
    boolean isAttached -> isAttached
    boolean isCircle -> isCircle
    int status -> status
    void update(java.util.Observable,java.lang.Object) -> update
    me.add1.resource.Resource getResource() -> getResource
    void setDefaultDrawable(android.graphics.drawable.Drawable) -> setDefaultDrawable
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void clean() -> clean
    void setResource(me.add1.resource.Resource) -> setResource
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void cancelRequest() -> cancelRequest
    void refreshResouce() -> refreshResouce
    int access$000(io.rong.imkit.widget.AsyncImageView) -> access$000
    boolean access$200(io.rong.imkit.widget.AsyncImageView) -> access$200
    int access$002(io.rong.imkit.widget.AsyncImageView,int) -> access$002
io.rong.imkit.widget.AsyncImageView$1 -> io.rong.imkit.widget.AsyncImageView$1:
    io.rong.imkit.widget.AsyncImageView this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable -> io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable:
    java.lang.ref.WeakReference mImageView -> mImageView
    me.add1.resource.ResourceHandler mHandler -> mHandler
    me.add1.resource.Resource mResource -> mResource
    void runImpl() -> runImpl
    me.add1.resource.Resource access$100(io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable) -> access$100
io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$1 -> io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$1:
    io.rong.imkit.widget.AsyncImageView val$imageView -> val$imageView
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$2 -> io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$2:
    io.rong.imkit.widget.AsyncImageView val$imageView -> val$imageView
    android.graphics.drawable.BitmapDrawable val$drawable -> val$drawable
    io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$3 -> io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$3:
    io.rong.imkit.widget.AsyncImageView val$imageView -> val$imageView
    io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$4 -> io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable$4:
    io.rong.imkit.widget.AsyncImageView val$imageView -> val$imageView
    io.rong.imkit.widget.AsyncImageView$PhotoLoadRunnable this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.AsyncImageView$PhotoThreadFactory -> io.rong.imkit.widget.AsyncImageView$PhotoThreadFactory:
    java.lang.String mThreadName -> mThreadName
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.rong.imkit.widget.AutoGridLayout -> io.rong.imkit.widget.AutoGridLayout:
    int mLastOrientation -> mLastOrientation
    android.view.ViewTreeObserver$OnGlobalLayoutListener orientationChangeListener -> orientationChangeListener
    int mCurrentItemWidth -> mCurrentItemWidth
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    io.rong.imkit.widget.AutoGridLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewTreeObserver$OnGlobalLayoutListener access$000(io.rong.imkit.widget.AutoGridLayout) -> access$000
io.rong.imkit.widget.AutoGridLayout$1 -> io.rong.imkit.widget.AutoGridLayout$1:
    io.rong.imkit.widget.AutoGridLayout this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
io.rong.imkit.widget.AutoGridLayout$LayoutParams -> io.rong.imkit.widget.AutoGridLayout$LayoutParams:
io.rong.imkit.widget.BaseDialogFragment -> io.rong.imkit.widget.BaseDialogFragment:
    android.view.View getView(android.view.View,int) -> getView
io.rong.imkit.widget.CircleFlowIndicator -> io.rong.imkit.widget.CircleFlowIndicator:
    int STYLE_STROKE -> STYLE_STROKE
    int STYLE_FILL -> STYLE_FILL
    float mRadius -> mRadius
    float mRadiusInactive -> mRadiusInactive
    float mRadiusActive -> mRadiusActive
    float spacing -> spacing
    int fadeOutTime -> fadeOutTime
    android.graphics.Paint mPaintInactive -> mPaintInactive
    android.graphics.Paint mPaintActive -> mPaintActive
    io.rong.imkit.widget.ViewFlow viewFlow -> viewFlow
    int currentScroll -> currentScroll
    int currentPosition -> currentPosition
    int flowWidth -> flowWidth
    io.rong.imkit.widget.CircleFlowIndicator$FadeTimer timer -> timer
    android.view.animation.Animation$AnimationListener animationListener -> animationListener
    android.view.animation.Animation animation -> animation
    boolean mCentered -> mCentered
    boolean mSnap -> mSnap
    void initColors(int,int,int,int) -> initColors
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSwitched(android.view.View,int) -> onSwitched
    void setViewFlow(io.rong.imkit.widget.ViewFlow) -> setViewFlow
    void onScrolled(int,int,int,int) -> onScrolled
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void setFillColor(int) -> setFillColor
    void setStrokeColor(int) -> setStrokeColor
    void resetTimer() -> resetTimer
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    int access$200(io.rong.imkit.widget.CircleFlowIndicator) -> access$200
    android.view.animation.Animation access$302(io.rong.imkit.widget.CircleFlowIndicator,android.view.animation.Animation) -> access$302
    android.view.animation.Animation access$300(io.rong.imkit.widget.CircleFlowIndicator) -> access$300
io.rong.imkit.widget.CircleFlowIndicator$1 -> io.rong.imkit.widget.CircleFlowIndicator$1:
io.rong.imkit.widget.CircleFlowIndicator$FadeTimer -> io.rong.imkit.widget.CircleFlowIndicator$FadeTimer:
    int timer -> timer
    boolean _run -> _run
    io.rong.imkit.widget.CircleFlowIndicator this$0 -> this$0
    void resetTimer() -> resetTimer
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    boolean access$000(io.rong.imkit.widget.CircleFlowIndicator$FadeTimer) -> access$000
io.rong.imkit.widget.FlowIndicator -> io.rong.imkit.widget.FlowIndicator:
    void setViewFlow(io.rong.imkit.widget.ViewFlow) -> setViewFlow
    void onScrolled(int,int,int,int) -> onScrolled
io.rong.imkit.widget.InputView -> io.rong.imkit.widget.InputView:
    io.rong.imkit.widget.provider.InputExtendProvider$MainProvider mMainProvider -> mMainProvider
    io.rong.imkit.widget.provider.InputExtendProvider$MainProvider mSlaveProvider -> mSlaveProvider
    java.util.List mProviderList -> mProviderList
    int mStyle -> mStyle
    android.widget.RelativeLayout mInputLayout -> mInputLayout
    android.widget.FrameLayout mCustomLayout -> mCustomLayout
    android.widget.FrameLayout mWidgetLayout -> mWidgetLayout
    android.widget.FrameLayout mExtendLayout -> mExtendLayout
    android.widget.FrameLayout mToggleLayout -> mToggleLayout
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.GridView mPluginsLayout -> mPluginsLayout
    int left -> left
    int center -> center
    int right -> right
    void setPluginsLayoutVisibility(int) -> setPluginsLayoutVisibility
    void setExtendLayoutVisibility(int) -> setExtendLayoutVisibility
    void setWidgetLayoutVisibility(int) -> setWidgetLayoutVisibility
    void changeMainProvider(android.view.View,io.rong.imkit.widget.provider.InputExtendProvider$MainProvider,io.rong.imkit.widget.provider.InputExtendProvider$MainProvider) -> changeMainProvider
    void setSCE() -> setSCE
    void setECS() -> setECS
    void setESC() -> setESC
    void setCSE() -> setCSE
    void setSC() -> setSC
    void setCS() -> setCS
    void setEC() -> setEC
    void setCE() -> setCE
    void setC() -> setC
    void setInputProvider(io.rong.imkit.widget.provider.InputExtendProvider$MainProvider,io.rong.imkit.widget.provider.InputExtendProvider$MainProvider) -> setInputProvider
    void setExtendProvider(io.rong.imkit.widget.provider.InputExtendProvider[]) -> setExtendProvider
    void setExtendProvider(java.util.List) -> setExtendProvider
    android.view.ViewGroup getExtendLayout() -> getExtendLayout
    android.widget.FrameLayout getToggleLayout() -> getToggleLayout
    void onProviderActive(android.content.Context) -> onProviderActive
    void onProviderInactive(android.content.Context) -> onProviderInactive
    void access$000(io.rong.imkit.widget.InputView,android.view.View,io.rong.imkit.widget.provider.InputExtendProvider$MainProvider,io.rong.imkit.widget.provider.InputExtendProvider$MainProvider) -> access$000
io.rong.imkit.widget.InputView$1 -> io.rong.imkit.widget.InputView$1:
    io.rong.imkit.widget.InputView this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.InputView$Event -> io.rong.imkit.widget.InputView$Event:
    io.rong.imkit.widget.InputView$Event ACTION -> ACTION
    io.rong.imkit.widget.InputView$Event INACTION -> INACTION
    io.rong.imkit.widget.InputView$Event[] $VALUES -> $VALUES
    io.rong.imkit.widget.InputView$Event[] values() -> values
    io.rong.imkit.widget.InputView$Event valueOf(java.lang.String) -> valueOf
io.rong.imkit.widget.InputView$ExtendClickListener -> io.rong.imkit.widget.InputView$ExtendClickListener:
    io.rong.imkit.widget.InputView this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.InputView$PluginsAdapter -> io.rong.imkit.widget.InputView$PluginsAdapter:
    io.rong.imkit.widget.InputView this$0 -> this$0
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.widget.provider.InputExtendProvider) -> bindView
    long getItemId(int) -> getItemId
    void bindView(android.view.View,int,java.lang.Object) -> bindView
io.rong.imkit.widget.InputView$PluginsAdapter$1 -> io.rong.imkit.widget.InputView$PluginsAdapter$1:
    io.rong.imkit.widget.provider.InputExtendProvider val$data -> val$data
    io.rong.imkit.widget.InputView$PluginsAdapter this$1 -> this$1
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.InputView$PluginsAdapter$ViewHolder -> io.rong.imkit.widget.InputView$PluginsAdapter$ViewHolder:
    android.widget.ImageView icon -> icon
    android.widget.TextView title -> title
    io.rong.imkit.widget.InputView$PluginsAdapter this$1 -> this$1
io.rong.imkit.widget.InputView$Style -> io.rong.imkit.widget.InputView$Style:
    io.rong.imkit.widget.InputView$Style SCE -> SCE
    io.rong.imkit.widget.InputView$Style ECS -> ECS
    io.rong.imkit.widget.InputView$Style ESC -> ESC
    io.rong.imkit.widget.InputView$Style CSE -> CSE
    io.rong.imkit.widget.InputView$Style SC -> SC
    io.rong.imkit.widget.InputView$Style CS -> CS
    io.rong.imkit.widget.InputView$Style EC -> EC
    io.rong.imkit.widget.InputView$Style CE -> CE
    io.rong.imkit.widget.InputView$Style C -> C
    int value -> value
    io.rong.imkit.widget.InputView$Style[] $VALUES -> $VALUES
    io.rong.imkit.widget.InputView$Style[] values() -> values
    io.rong.imkit.widget.InputView$Style valueOf(java.lang.String) -> valueOf
io.rong.imkit.widget.LoadingDialogFragment -> io.rong.imkit.widget.LoadingDialogFragment:
    java.lang.String ARGS_TITLE -> ARGS_TITLE
    java.lang.String ARGS_MESSAGE -> ARGS_MESSAGE
    io.rong.imkit.widget.LoadingDialogFragment newInstance(java.lang.String,java.lang.String) -> newInstance
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void show(android.support.v4.app.FragmentManager) -> show
io.rong.imkit.widget.ProviderContainerView -> io.rong.imkit.widget.ProviderContainerView:
    java.util.Map mViewCounterMap -> mViewCounterMap
    java.util.Map mContentViewMap -> mContentViewMap
    android.view.View mInflateView -> mInflateView
    int mMaxContainSize -> mMaxContainSize
    void init(android.util.AttributeSet) -> init
    android.view.View inflate(io.rong.imkit.widget.provider.IContainerItemProvider) -> inflate
    android.view.View getCurrentInflateView() -> getCurrentInflateView
    void containerViewLeft() -> containerViewLeft
    void containerViewRight() -> containerViewRight
    void containerViewCenter() -> containerViewCenter
    void recycle() -> recycle
io.rong.imkit.widget.ViewFlow -> io.rong.imkit.widget.ViewFlow:
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int INVALID_SCREEN -> INVALID_SCREEN
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    java.util.LinkedList mLoadedViews -> mLoadedViews
    java.util.LinkedList mRecycledViews -> mRecycledViews
    int mCurrentBufferIndex -> mCurrentBufferIndex
    int mCurrentAdapterIndex -> mCurrentAdapterIndex
    int mSideBuffer -> mSideBuffer
    android.widget.Scroller mScroller -> mScroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mTouchState -> mTouchState
    float mLastMotionX -> mLastMotionX
    int mTouchSlop -> mTouchSlop
    int mMaximumVelocity -> mMaximumVelocity
    int mCurrentScreen -> mCurrentScreen
    int mNextScreen -> mNextScreen
    boolean mFirstLayout -> mFirstLayout
    io.rong.imkit.widget.ViewFlow$ViewSwitchListener mViewSwitchListener -> mViewSwitchListener
    io.rong.imkit.widget.ViewFlow$ViewLazyInitializeListener mViewInitializeListener -> mViewInitializeListener
    java.util.EnumSet mLazyInit -> mLazyInit
    android.widget.Adapter mAdapter -> mAdapter
    int mLastScrollDirection -> mLastScrollDirection
    io.rong.imkit.widget.ViewFlow$AdapterDataSetObserver mDataSetObserver -> mDataSetObserver
    io.rong.imkit.widget.FlowIndicator mIndicator -> mIndicator
    int mLastOrientation -> mLastOrientation
    boolean mLastObtainedViewWasRecycled -> mLastObtainedViewWasRecycled
    android.view.ViewTreeObserver$OnGlobalLayoutListener orientationChangeListener -> orientationChangeListener
    void init() -> init
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    int getViewsCount() -> getViewsCount
    void onMeasure(int,int) -> onMeasure
    int getWidthPadding() -> getWidthPadding
    int getChildWidth() -> getChildWidth
    int getHeightPadding() -> getHeightPadding
    int getChildHeight() -> getChildHeight
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    float getLeftFadingEdgeStrength() -> getLeftFadingEdgeStrength
    float getRightFadingEdgeStrength() -> getRightFadingEdgeStrength
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void initializeView(float) -> initializeView
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void snapToDestination() -> snapToDestination
    void snapToScreen(int) -> snapToScreen
    void computeScroll() -> computeScroll
    void setVisibleView(int,boolean) -> setVisibleView
    void setOnViewSwitchListener(io.rong.imkit.widget.ViewFlow$ViewSwitchListener) -> setOnViewSwitchListener
    void setOnViewLazyInitializeListener(io.rong.imkit.widget.ViewFlow$ViewLazyInitializeListener) -> setOnViewLazyInitializeListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setAdapter(android.widget.Adapter,int) -> setAdapter
    android.view.View getSelectedView() -> getSelectedView
    int getSelectedItemPosition() -> getSelectedItemPosition
    void setFlowIndicator(io.rong.imkit.widget.FlowIndicator) -> setFlowIndicator
    void recycleViews() -> recycleViews
    void recycleView(android.view.View) -> recycleView
    android.view.View getRecycledView() -> getRecycledView
    void setSelection(int) -> setSelection
    void resetFocus() -> resetFocus
    void postViewSwitched(int) -> postViewSwitched
    void measureChild(android.view.View,int,int) -> measureChild
    android.view.View setupChild(android.view.View,boolean,boolean) -> setupChild
    android.view.View makeAndAddView(int,boolean) -> makeAndAddView
    android.view.View obtainView(int) -> obtainView
    void logBuffer() -> logBuffer
    android.view.ViewTreeObserver$OnGlobalLayoutListener access$000(io.rong.imkit.widget.ViewFlow) -> access$000
    int access$100(io.rong.imkit.widget.ViewFlow) -> access$100
    int access$200(io.rong.imkit.widget.ViewFlow) -> access$200
    void access$300(io.rong.imkit.widget.ViewFlow,int) -> access$300
    int access$400(io.rong.imkit.widget.ViewFlow) -> access$400
    android.widget.Adapter access$500(io.rong.imkit.widget.ViewFlow) -> access$500
    int access$102(io.rong.imkit.widget.ViewFlow,int) -> access$102
    void access$600(io.rong.imkit.widget.ViewFlow) -> access$600
io.rong.imkit.widget.ViewFlow$1 -> io.rong.imkit.widget.ViewFlow$1:
    io.rong.imkit.widget.ViewFlow this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
io.rong.imkit.widget.ViewFlow$2 -> io.rong.imkit.widget.ViewFlow$2:
    io.rong.imkit.widget.ViewFlow this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.ViewFlow$AdapterDataSetObserver -> io.rong.imkit.widget.ViewFlow$AdapterDataSetObserver:
    io.rong.imkit.widget.ViewFlow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
io.rong.imkit.widget.ViewFlow$LazyInit -> io.rong.imkit.widget.ViewFlow$LazyInit:
    io.rong.imkit.widget.ViewFlow$LazyInit LEFT -> LEFT
    io.rong.imkit.widget.ViewFlow$LazyInit RIGHT -> RIGHT
    io.rong.imkit.widget.ViewFlow$LazyInit[] $VALUES -> $VALUES
    io.rong.imkit.widget.ViewFlow$LazyInit[] values() -> values
    io.rong.imkit.widget.ViewFlow$LazyInit valueOf(java.lang.String) -> valueOf
io.rong.imkit.widget.ViewFlow$ViewLazyInitializeListener -> io.rong.imkit.widget.ViewFlow$ViewLazyInitializeListener:
    void onViewLazyInitialize(android.view.View,int) -> onViewLazyInitialize
io.rong.imkit.widget.ViewFlow$ViewSwitchListener -> io.rong.imkit.widget.ViewFlow$ViewSwitchListener:
    void onSwitched(android.view.View,int) -> onSwitched
io.rong.imkit.widget.adapter.BaseAdapter -> io.rong.imkit.widget.adapter.BaseAdapter:
    android.content.Context mContext -> mContext
    java.util.List mList -> mList
    android.view.View findViewById(android.view.View,int) -> findViewById
    int findPosition(java.lang.Object) -> findPosition
    int findPosition(long) -> findPosition
    void addCollection(java.util.Collection) -> addCollection
    void addCollection(java.lang.Object[]) -> addCollection
    void add(java.lang.Object) -> add
    void add(java.lang.Object,int) -> add
    void remove(int) -> remove
    void removeAll() -> removeAll
    void clear() -> clear
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,java.lang.Object) -> bindView
io.rong.imkit.widget.adapter.ConversationAddMemberAdapter -> io.rong.imkit.widget.adapter.ConversationAddMemberAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    java.lang.Boolean isDeleteState -> isDeleteState
    io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$OnDeleteIconListener mDeleteIconListener -> mDeleteIconListener
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imlib.model.UserInfo) -> bindView
    long getItemId(int) -> getItemId
    void setDeleteState(boolean) -> setDeleteState
    boolean isDeleteState() -> isDeleteState
    void setDeleteIconListener(io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$OnDeleteIconListener) -> setDeleteIconListener
    void bindView(android.view.View,int,java.lang.Object) -> bindView
    io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$OnDeleteIconListener access$000(io.rong.imkit.widget.adapter.ConversationAddMemberAdapter) -> access$000
io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$1 -> io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$1:
    int val$position -> val$position
    io.rong.imkit.widget.adapter.ConversationAddMemberAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$OnDeleteIconListener -> io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$OnDeleteIconListener:
    void onDeleteIconClick(android.view.View,int) -> onDeleteIconClick
io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$ViewHolder -> io.rong.imkit.widget.adapter.ConversationAddMemberAdapter$ViewHolder:
    io.rong.imkit.widget.AsyncImageView mMemberIcon -> mMemberIcon
    android.widget.TextView mMemberName -> mMemberName
    android.widget.ImageView mDeleteIcon -> mDeleteIcon
    android.widget.ImageView mMemberDeIcon -> mMemberDeIcon
    io.rong.imkit.widget.adapter.ConversationAddMemberAdapter this$0 -> this$0
io.rong.imkit.widget.adapter.ConversationListAdapter -> io.rong.imkit.widget.adapter.ConversationListAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    android.content.Context mContext -> mContext
    long getItemId(int) -> getItemId
    int findPosition(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> findPosition
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    void bindView(android.view.View,int,java.lang.Object) -> bindView
io.rong.imkit.widget.adapter.ConversationListAdapter$ViewHolder -> io.rong.imkit.widget.adapter.ConversationListAdapter$ViewHolder:
    android.view.View layout -> layout
    android.view.View leftImageLayout -> leftImageLayout
    android.view.View rightImageLayout -> rightImageLayout
    io.rong.imkit.widget.AsyncImageView leftImageView -> leftImageView
    android.widget.TextView unReadMsgCount -> unReadMsgCount
    io.rong.imkit.widget.AsyncImageView rightImageView -> rightImageView
    android.widget.TextView unReadMsgCountRight -> unReadMsgCountRight
    io.rong.imkit.widget.ProviderContainerView contentView -> contentView
    io.rong.imkit.widget.adapter.ConversationListAdapter this$0 -> this$0
io.rong.imkit.widget.adapter.EmojiPagerAdapter -> io.rong.imkit.widget.adapter.EmojiPagerAdapter:
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    java.util.List mEmojis -> mEmojis
    int columnWidth -> columnWidth
    int columnCount -> columnCount
    int pageEmojiCount -> pageEmojiCount
    int pageCount -> pageCount
    io.rong.imkit.widget.adapter.EmojiPagerAdapter$OnEmojiItemClickListener mEmojiItemClickListener -> mEmojiItemClickListener
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setEmojiItemClickListener(io.rong.imkit.widget.adapter.EmojiPagerAdapter$OnEmojiItemClickListener) -> setEmojiItemClickListener
io.rong.imkit.widget.adapter.EmojiPagerAdapter$EmojiAdapter -> io.rong.imkit.widget.adapter.EmojiPagerAdapter$EmojiAdapter:
    int mCount -> mCount
    java.util.List mEmojis -> mEmojis
    int mOffset -> mOffset
    io.rong.imkit.widget.adapter.EmojiPagerAdapter this$0 -> this$0
    int getCount() -> getCount
    io.rong.imkit.model.Emoji getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
io.rong.imkit.widget.adapter.EmojiPagerAdapter$OnEmojiItemClickListener -> io.rong.imkit.widget.adapter.EmojiPagerAdapter$OnEmojiItemClickListener:
io.rong.imkit.widget.adapter.MessageListAdapter -> io.rong.imkit.widget.adapter.MessageListAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    android.content.Context mContext -> mContext
    android.graphics.drawable.Drawable mDefaultDrawable -> mDefaultDrawable
    io.rong.imkit.widget.adapter.MessageListAdapter$OnItemHandlerListener mOnItemHandlerListener -> mOnItemHandlerListener
    void setOnItemHandlerListener(io.rong.imkit.widget.adapter.MessageListAdapter$OnItemHandlerListener) -> setOnItemHandlerListener
    long getItemId(int) -> getItemId
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imlib.model.Message) -> bindView
    void setGravity(android.view.View,int) -> setGravity
    void bindView(android.view.View,int,java.lang.Object) -> bindView
io.rong.imkit.widget.adapter.MessageListAdapter$1 -> io.rong.imkit.widget.adapter.MessageListAdapter$1:
    io.rong.imlib.model.Message val$data -> val$data
    io.rong.imkit.widget.adapter.MessageListAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.adapter.MessageListAdapter$2 -> io.rong.imkit.widget.adapter.MessageListAdapter$2:
    io.rong.imlib.model.Message val$data -> val$data
    io.rong.imkit.widget.adapter.MessageListAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.adapter.MessageListAdapter$3 -> io.rong.imkit.widget.adapter.MessageListAdapter$3:
    io.rong.imlib.model.Message val$data -> val$data
    int val$position -> val$position
    io.rong.imkit.widget.adapter.MessageListAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.adapter.MessageListAdapter$4 -> io.rong.imkit.widget.adapter.MessageListAdapter$4:
    io.rong.imlib.model.Message val$data -> val$data
    int val$position -> val$position
    io.rong.imkit.widget.adapter.MessageListAdapter this$0 -> this$0
    boolean onLongClick(android.view.View) -> onLongClick
io.rong.imkit.widget.adapter.MessageListAdapter$5 -> io.rong.imkit.widget.adapter.MessageListAdapter$5:
    int val$position -> val$position
    io.rong.imlib.model.Message val$data -> val$data
    io.rong.imkit.widget.adapter.MessageListAdapter this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.imkit.widget.adapter.MessageListAdapter$OnItemHandlerListener -> io.rong.imkit.widget.adapter.MessageListAdapter$OnItemHandlerListener:
    void onWarningViewClick(int,io.rong.imlib.model.Message,android.view.View) -> onWarningViewClick
io.rong.imkit.widget.adapter.MessageListAdapter$ViewHolder -> io.rong.imkit.widget.adapter.MessageListAdapter$ViewHolder:
    io.rong.imkit.widget.AsyncImageView leftIconView -> leftIconView
    io.rong.imkit.widget.AsyncImageView rightIconView -> rightIconView
    android.widget.TextView nameView -> nameView
    io.rong.imkit.widget.ProviderContainerView contentView -> contentView
    android.widget.ProgressBar progressBar -> progressBar
    android.widget.ImageView warning -> warning
    android.view.ViewGroup layout -> layout
    android.widget.TextView time -> time
    io.rong.imkit.widget.adapter.MessageListAdapter this$0 -> this$0
io.rong.imkit.widget.adapter.SubConversationListAdapter -> io.rong.imkit.widget.adapter.SubConversationListAdapter:
    android.view.LayoutInflater mInflater -> mInflater
    android.content.Context mContext -> mContext
    long getItemId(int) -> getItemId
    int findPosition(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> findPosition
    android.view.View newView(android.content.Context,int,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    void bindView(android.view.View,int,java.lang.Object) -> bindView
io.rong.imkit.widget.adapter.SubConversationListAdapter$ViewHolder -> io.rong.imkit.widget.adapter.SubConversationListAdapter$ViewHolder:
    android.view.View layout -> layout
    android.view.View leftImageLayout -> leftImageLayout
    android.view.View rightImageLayout -> rightImageLayout
    io.rong.imkit.widget.AsyncImageView leftImageView -> leftImageView
    io.rong.imkit.widget.AsyncImageView rightImageView -> rightImageView
    io.rong.imkit.widget.ProviderContainerView contentView -> contentView
    android.widget.TextView unReadMsgCount -> unReadMsgCount
    android.widget.TextView unReadMsgCountRight -> unReadMsgCountRight
    io.rong.imkit.widget.adapter.SubConversationListAdapter this$0 -> this$0
io.rong.imkit.widget.provider.AppServiceConversationProvider -> io.rong.imkit.widget.provider.AppServiceConversationProvider:
    io.rong.imkit.model.MessageKey mKey -> mKey
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    android.text.Spannable getSummary(io.rong.imkit.UiConversation) -> getSummary
    java.lang.String getTitle(java.lang.String) -> getTitle
    android.net.Uri getPortraitUri(java.lang.String) -> getPortraitUri
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
io.rong.imkit.widget.provider.AppServiceConversationProvider$ViewHolder -> io.rong.imkit.widget.provider.AppServiceConversationProvider$ViewHolder:
    android.widget.TextView title -> title
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    android.widget.ImageView notificationBlockImage -> notificationBlockImage
    io.rong.imkit.widget.provider.AppServiceConversationProvider this$0 -> this$0
io.rong.imkit.widget.provider.CameraInputProvider -> io.rong.imkit.widget.provider.CameraInputProvider:
    android.os.HandlerThread mWorkThread -> mWorkThread
    android.os.Handler mUploadHandler -> mUploadHandler
    io.rong.imlib.model.Message mCurrentMessage -> mCurrentMessage
    int mCurrentProgress -> mCurrentProgress
    android.graphics.drawable.Drawable obtainPluginDrawable(android.content.Context) -> obtainPluginDrawable
    java.lang.CharSequence obtainPluginTitle(android.content.Context) -> obtainPluginTitle
    boolean onPluginClick(android.view.View) -> onPluginClick
    void send(android.net.Uri,android.view.View) -> send
    io.rong.imlib.model.Message getCurrentMessage() -> getCurrentMessage
    int getCurrentProgress() -> getCurrentProgress
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
io.rong.imkit.widget.provider.CameraInputProvider$PublicLocationRunnable -> io.rong.imkit.widget.provider.CameraInputProvider$PublicLocationRunnable:
    android.net.Uri mUri -> mUri
    io.rong.imkit.widget.provider.CameraInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.CameraInputProvider$PublicLocationRunnable$1 -> io.rong.imkit.widget.provider.CameraInputProvider$PublicLocationRunnable$1:
    io.rong.message.ImageMessage val$content -> val$content
    io.rong.imkit.widget.provider.CameraInputProvider$PublicLocationRunnable this$1 -> this$1
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.widget.provider.CameraInputProvider$PublishRunnable -> io.rong.imkit.widget.provider.CameraInputProvider$PublishRunnable:
    android.net.Uri mUri -> mUri
    io.rong.imkit.widget.provider.CameraInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.CameraInputProvider$PublishRunnable$1 -> io.rong.imkit.widget.provider.CameraInputProvider$PublishRunnable$1:
    io.rong.message.ImageMessage val$content -> val$content
    io.rong.imkit.widget.provider.CameraInputProvider$PublishRunnable this$1 -> this$1
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.widget.provider.CameraInputProvider$UploadRunnable -> io.rong.imkit.widget.provider.CameraInputProvider$UploadRunnable:
    io.rong.imlib.model.Message message -> message
    android.net.Uri uri -> uri
    java.util.concurrent.CountDownLatch mLock -> mLock
    io.rong.imkit.widget.provider.CameraInputProvider this$0 -> this$0
    void run() -> run
    io.rong.imlib.model.Message access$000(io.rong.imkit.widget.provider.CameraInputProvider$UploadRunnable) -> access$000
    java.util.concurrent.CountDownLatch access$100(io.rong.imkit.widget.provider.CameraInputProvider$UploadRunnable) -> access$100
io.rong.imkit.widget.provider.CameraInputProvider$UploadRunnable$1 -> io.rong.imkit.widget.provider.CameraInputProvider$UploadRunnable$1:
    io.rong.imkit.widget.provider.CameraInputProvider$UploadRunnable this$1 -> this$1
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.widget.provider.DiscussionConversationProvider -> io.rong.imkit.widget.provider.DiscussionConversationProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    android.text.Spannable getSummary(io.rong.imkit.UiConversation) -> getSummary
    java.lang.String getTitle(java.lang.String) -> getTitle
    android.net.Uri getPortraitUri(java.lang.String) -> getPortraitUri
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
io.rong.imkit.widget.provider.DiscussionConversationProvider$ViewHolder -> io.rong.imkit.widget.provider.DiscussionConversationProvider$ViewHolder:
    android.widget.TextView title -> title
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    android.widget.ImageView notificationBlockImage -> notificationBlockImage
    io.rong.imkit.widget.provider.DiscussionConversationProvider this$0 -> this$0
io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider -> io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider:
    android.os.HandlerThread mWorkThread -> mWorkThread
    android.os.Handler mDownloadHandler -> mDownloadHandler
    int DISCUSSION_ADD_MEMBER -> DISCUSSION_ADD_MEMBER
    int DISCUSSION_EXIT -> DISCUSSION_EXIT
    int DISCUSSION_RENAME -> DISCUSSION_RENAME
    int DISCUSSION_REMOVE -> DISCUSSION_REMOVE
    int DISCUSSION_MEMBER_INVITE -> DISCUSSION_MEMBER_INVITE
    void bindView(android.view.View,int,io.rong.message.DiscussionNotificationMessage,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getContentSummary(io.rong.message.DiscussionNotificationMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.message.DiscussionNotificationMessage,io.rong.imlib.model.Message) -> onItemClick
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    java.lang.String getWrapContent(android.content.Context,io.rong.message.DiscussionNotificationMessage) -> getWrapContent
    void onEventBackgroundThread(io.rong.imlib.model.UserInfo) -> onEventBackgroundThread
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider$1 -> io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider$1:
    io.rong.imlib.model.UserInfo val$userInfo -> val$userInfo
    io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider$ViewHolder -> io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider$ViewHolder:
    android.widget.TextView contentTextView -> contentTextView
    io.rong.imkit.widget.provider.DiscussionNotificationMessageItemProvider this$0 -> this$0
io.rong.imkit.widget.provider.GroupConversationProvider -> io.rong.imkit.widget.provider.GroupConversationProvider:
    android.content.Context mContext -> mContext
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    android.text.Spannable getSummary(io.rong.imkit.UiConversation) -> getSummary
    java.lang.String getTitle(java.lang.String) -> getTitle
    android.net.Uri getPortraitUri(java.lang.String) -> getPortraitUri
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
io.rong.imkit.widget.provider.GroupConversationProvider$ViewHolder -> io.rong.imkit.widget.provider.GroupConversationProvider$ViewHolder:
    android.widget.TextView title -> title
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    android.widget.ImageView notificationBlockImage -> notificationBlockImage
    io.rong.imkit.widget.provider.GroupConversationProvider this$0 -> this$0
io.rong.imkit.widget.provider.HandshakeMessageItemProvider -> io.rong.imkit.widget.provider.HandshakeMessageItemProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    android.text.Spannable getContentSummary(io.rong.message.HandshakeMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.message.HandshakeMessage,io.rong.imlib.model.Message) -> onItemClick
    void bindView(android.view.View,int,io.rong.message.HandshakeMessage,io.rong.imlib.model.Message) -> bindView
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.IContainerItemProvider -> io.rong.imkit.widget.provider.IContainerItemProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
io.rong.imkit.widget.provider.IContainerItemProvider$ConversationProvider -> io.rong.imkit.widget.provider.IContainerItemProvider$ConversationProvider:
    java.lang.String getTitle(java.lang.String) -> getTitle
    android.net.Uri getPortraitUri(java.lang.String) -> getPortraitUri
io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider -> io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider:
    void bindView(android.view.View,int,io.rong.imlib.model.Message) -> bindView
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getSummary(io.rong.imlib.model.Message) -> getSummary
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    boolean onItemLongClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemLongClick
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider$1 -> io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider$1:
    int val$count -> val$count
    io.rong.imlib.model.Message val$message -> val$message
    android.view.View val$view -> val$view
    io.rong.imlib.model.MessageContent val$content -> val$content
    io.rong.imkit.widget.provider.IContainerItemProvider$MessageProvider this$0 -> this$0
    void OnArraysDialogItemClick(android.content.DialogInterface,int) -> OnArraysDialogItemClick
io.rong.imkit.widget.provider.ImageInputProvider -> io.rong.imkit.widget.provider.ImageInputProvider:
    android.os.HandlerThread mWorkThread -> mWorkThread
    android.os.Handler mUploadHandler -> mUploadHandler
    io.rong.imlib.model.Message mCurrentMessage -> mCurrentMessage
    int mCurrentProgress -> mCurrentProgress
    android.graphics.drawable.Drawable obtainPluginDrawable(android.content.Context) -> obtainPluginDrawable
    java.lang.CharSequence obtainPluginTitle(android.content.Context) -> obtainPluginTitle
    boolean onPluginClick(android.view.View) -> onPluginClick
    void send(android.net.Uri,android.view.View) -> send
    io.rong.imlib.model.Message getCurrentMessage() -> getCurrentMessage
    int getCurrentProgress() -> getCurrentProgress
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
io.rong.imkit.widget.provider.ImageInputProvider$PublishRunnable -> io.rong.imkit.widget.provider.ImageInputProvider$PublishRunnable:
    android.net.Uri mUri -> mUri
    io.rong.imkit.widget.provider.ImageInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.ImageInputProvider$PublishRunnable$1 -> io.rong.imkit.widget.provider.ImageInputProvider$PublishRunnable$1:
    io.rong.message.ImageMessage val$content -> val$content
    io.rong.imkit.widget.provider.ImageInputProvider$PublishRunnable this$1 -> this$1
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.widget.provider.ImageInputProvider$UploadRunnable -> io.rong.imkit.widget.provider.ImageInputProvider$UploadRunnable:
    io.rong.imlib.model.Message message -> message
    android.net.Uri uri -> uri
    java.util.concurrent.CountDownLatch mLock -> mLock
    io.rong.imkit.widget.provider.ImageInputProvider this$0 -> this$0
    void run() -> run
    io.rong.imlib.model.Message access$000(io.rong.imkit.widget.provider.ImageInputProvider$UploadRunnable) -> access$000
    java.util.concurrent.CountDownLatch access$100(io.rong.imkit.widget.provider.ImageInputProvider$UploadRunnable) -> access$100
io.rong.imkit.widget.provider.ImageInputProvider$UploadRunnable$1 -> io.rong.imkit.widget.provider.ImageInputProvider$UploadRunnable$1:
    io.rong.imkit.widget.provider.ImageInputProvider$UploadRunnable this$1 -> this$1
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.widget.provider.ImageMessageItemProvider -> io.rong.imkit.widget.provider.ImageMessageItemProvider:
    io.rong.imkit.widget.provider.ImageInputProvider imageInputProvider -> imageInputProvider
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void onItemClick(android.view.View,int,io.rong.message.ImageMessage,io.rong.imlib.model.Message) -> onItemClick
    void bindView(android.view.View,int,io.rong.message.ImageMessage,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getContentSummary(io.rong.message.ImageMessage) -> getContentSummary
    void renderInputProvider() -> renderInputProvider
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.ImageMessageItemProvider$ViewHolder -> io.rong.imkit.widget.provider.ImageMessageItemProvider$ViewHolder:
    io.rong.imkit.widget.AsyncImageView img -> img
    android.widget.TextView message -> message
    io.rong.imkit.widget.provider.ImageMessageItemProvider this$0 -> this$0
io.rong.imkit.widget.provider.InfoNotificationMsgItemProvider -> io.rong.imkit.widget.provider.InfoNotificationMsgItemProvider:
    void bindView(android.view.View,int,io.rong.message.InformationNotificationMessage,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getContentSummary(io.rong.message.InformationNotificationMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.message.InformationNotificationMessage,io.rong.imlib.model.Message) -> onItemClick
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.InfoNotificationMsgItemProvider$ViewHolder -> io.rong.imkit.widget.provider.InfoNotificationMsgItemProvider$ViewHolder:
    android.widget.TextView contentTextView -> contentTextView
    io.rong.imkit.widget.provider.InfoNotificationMsgItemProvider this$0 -> this$0
io.rong.imkit.widget.provider.InputExtendProvider -> io.rong.imkit.widget.provider.InputExtendProvider:
    io.rong.imkit.RongContext mContext -> mContext
    io.rong.imkit.fragment.MessageInputFragment mFragment -> mFragment
    int index -> index
    io.rong.imkit.widget.InputView mCurrentView -> mCurrentView
    io.rong.imlib.model.Conversation mCurrentConversation -> mCurrentConversation
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    io.rong.imkit.RongContext getContext() -> getContext
    void setCurrentConversation(io.rong.imlib.model.Conversation) -> setCurrentConversation
    io.rong.imlib.model.Conversation getCurrentConversation() -> getCurrentConversation
    android.graphics.drawable.Drawable obtainPluginDrawable(android.content.Context) -> obtainPluginDrawable
    java.lang.CharSequence obtainPluginTitle(android.content.Context) -> obtainPluginTitle
    boolean onPluginClick(android.view.View) -> onPluginClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    io.rong.imkit.fragment.MessageInputFragment getCurrentFragment() -> getCurrentFragment
    void publish(io.rong.imlib.model.MessageContent) -> publish
    void onAttached(io.rong.imkit.fragment.MessageInputFragment,io.rong.imkit.widget.InputView) -> onAttached
    void onDetached() -> onDetached
    io.rong.imkit.widget.InputView getInputView() -> getInputView
io.rong.imkit.widget.provider.InputExtendProvider$MainProvider -> io.rong.imkit.widget.provider.InputExtendProvider$MainProvider:
    android.graphics.drawable.Drawable obtainSwitchDrawable(android.content.Context) -> obtainSwitchDrawable
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,io.rong.imkit.widget.InputView) -> onCreateView
    void onActive(android.content.Context) -> onActive
    void onInactive(android.content.Context) -> onInactive
    void onSwitch(android.content.Context) -> onSwitch
io.rong.imkit.widget.provider.LocationInputProvider -> io.rong.imkit.widget.provider.LocationInputProvider:
    android.os.HandlerThread mWorkThread -> mWorkThread
    android.os.Handler mDownloadHandler -> mDownloadHandler
    io.rong.imlib.model.Message mCurrentMessage -> mCurrentMessage
    int mCurrentProgress -> mCurrentProgress
    android.graphics.drawable.Drawable obtainPluginDrawable(android.content.Context) -> obtainPluginDrawable
    java.lang.CharSequence obtainPluginTitle(android.content.Context) -> obtainPluginTitle
    boolean onPluginClick(android.view.View) -> onPluginClick
    io.rong.imlib.model.Message getCurrentMessage() -> getCurrentMessage
    int getCurrentProgress() -> getCurrentProgress
io.rong.imkit.widget.provider.LocationInputProvider$1 -> io.rong.imkit.widget.provider.LocationInputProvider$1:
    io.rong.imkit.widget.provider.LocationInputProvider this$0 -> this$0
    void onSuccess(io.rong.message.LocationMessage) -> onSuccess
    void onFailure(java.lang.String) -> onFailure
io.rong.imkit.widget.provider.LocationInputProvider$1$1 -> io.rong.imkit.widget.provider.LocationInputProvider$1$1:
    io.rong.message.LocationMessage val$locationMessage -> val$locationMessage
    io.rong.imkit.widget.provider.LocationInputProvider$1 this$1 -> this$1
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.widget.provider.LocationInputProvider$DownloadRunnable -> io.rong.imkit.widget.provider.LocationInputProvider$DownloadRunnable:
    io.rong.imlib.model.Message message -> message
    android.net.Uri uri -> uri
    java.util.concurrent.CountDownLatch mLock -> mLock
    io.rong.imkit.widget.provider.LocationInputProvider this$0 -> this$0
    void run() -> run
    java.util.concurrent.CountDownLatch access$000(io.rong.imkit.widget.provider.LocationInputProvider$DownloadRunnable) -> access$000
    io.rong.imlib.model.Message access$100(io.rong.imkit.widget.provider.LocationInputProvider$DownloadRunnable) -> access$100
io.rong.imkit.widget.provider.LocationInputProvider$DownloadRunnable$1 -> io.rong.imkit.widget.provider.LocationInputProvider$DownloadRunnable$1:
    io.rong.imkit.widget.provider.LocationInputProvider$DownloadRunnable this$1 -> this$1
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imkit.widget.provider.LocationMessageItemProvider -> io.rong.imkit.widget.provider.LocationMessageItemProvider:
    io.rong.imkit.widget.provider.LocationInputProvider mLocationInputProvider -> mLocationInputProvider
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void onItemClick(android.view.View,int,io.rong.message.LocationMessage,io.rong.imlib.model.Message) -> onItemClick
    void bindView(android.view.View,int,io.rong.message.LocationMessage,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getContentSummary(io.rong.message.LocationMessage) -> getContentSummary
    void renderInputProvider() -> renderInputProvider
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.LocationMessageItemProvider$ViewHolder -> io.rong.imkit.widget.provider.LocationMessageItemProvider$ViewHolder:
    io.rong.imkit.widget.AsyncImageView img -> img
    android.widget.TextView progress -> progress
    android.widget.TextView title -> title
    android.widget.RelativeLayout mLayout -> mLayout
    io.rong.imkit.widget.provider.LocationMessageItemProvider this$0 -> this$0
io.rong.imkit.widget.provider.PrivateConversationProvider -> io.rong.imkit.widget.provider.PrivateConversationProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    android.text.Spannable getSummary(io.rong.imkit.UiConversation) -> getSummary
    java.lang.String getTitle(java.lang.String) -> getTitle
    android.net.Uri getPortraitUri(java.lang.String) -> getPortraitUri
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
io.rong.imkit.widget.provider.PrivateConversationProvider$ViewHolder -> io.rong.imkit.widget.provider.PrivateConversationProvider$ViewHolder:
    android.widget.TextView title -> title
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    android.widget.ImageView notificationBlockImage -> notificationBlockImage
    io.rong.imkit.widget.provider.PrivateConversationProvider this$0 -> this$0
io.rong.imkit.widget.provider.PublicServiceConversationProvider -> io.rong.imkit.widget.provider.PublicServiceConversationProvider:
    io.rong.imkit.model.MessageKey mKey -> mKey
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    android.text.Spannable getSummary(io.rong.imkit.UiConversation) -> getSummary
    java.lang.String getTitle(java.lang.String) -> getTitle
    android.net.Uri getPortraitUri(java.lang.String) -> getPortraitUri
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
io.rong.imkit.widget.provider.PublicServiceConversationProvider$ViewHolder -> io.rong.imkit.widget.provider.PublicServiceConversationProvider$ViewHolder:
    android.widget.TextView title -> title
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    android.widget.ImageView notificationBlockImage -> notificationBlockImage
    io.rong.imkit.widget.provider.PublicServiceConversationProvider this$0 -> this$0
io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider -> io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider:
    io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$PublicAccountMsgAdapter mAdapter -> mAdapter
    android.content.Context mContext -> mContext
    void bindView(android.view.View,int,io.rong.message.PublicServiceMultiRichContentMessage,io.rong.imlib.model.Message) -> bindView
    int getListViewHeight(android.widget.ListView) -> getListViewHeight
    android.text.Spannable getSummary(io.rong.imlib.model.Message) -> getSummary
    android.text.Spannable getContentSummary(io.rong.message.PublicServiceMultiRichContentMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.message.PublicServiceMultiRichContentMessage,io.rong.imlib.model.Message) -> onItemClick
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$PublicAccountMsgAdapter access$100(io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider) -> access$100
    android.content.Context access$200(io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider) -> access$200
io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$1 -> io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$1:
    io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$PublicAccountMsgAdapter -> io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$PublicAccountMsgAdapter:
    android.view.LayoutInflater inflater -> inflater
    java.util.ArrayList itemList -> itemList
    int itemCount -> itemCount
    io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider this$0 -> this$0
    int getCount() -> getCount
    io.rong.message.RichContentItem getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$ViewHolder -> io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider$ViewHolder:
    int height -> height
    android.widget.TextView tv -> tv
    io.rong.imkit.widget.AsyncImageView iv -> iv
    android.widget.ListView lv -> lv
    io.rong.imkit.widget.provider.PublicServiceMultiRichContentMessageProvider this$0 -> this$0
io.rong.imkit.widget.provider.PublicServiceRichContentMessageProvider -> io.rong.imkit.widget.provider.PublicServiceRichContentMessageProvider:
    android.content.Context mContext -> mContext
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.message.PublicServiceRichContentMessage,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getSummary(io.rong.imlib.model.Message) -> getSummary
    android.text.Spannable getContentSummary(io.rong.message.PublicServiceRichContentMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.message.PublicServiceRichContentMessage,io.rong.imlib.model.Message) -> onItemClick
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
io.rong.imkit.widget.provider.PublicServiceRichContentMessageProvider$1 -> io.rong.imkit.widget.provider.PublicServiceRichContentMessageProvider$1:
io.rong.imkit.widget.provider.PublicServiceRichContentMessageProvider$ViewHolder -> io.rong.imkit.widget.provider.PublicServiceRichContentMessageProvider$ViewHolder:
    android.widget.TextView title -> title
    io.rong.imkit.widget.AsyncImageView picurl -> picurl
    android.widget.TextView time -> time
    android.widget.TextView description -> description
    io.rong.imkit.widget.provider.PublicServiceRichContentMessageProvider this$0 -> this$0
io.rong.imkit.widget.provider.RichContentMessageItemProvider -> io.rong.imkit.widget.provider.RichContentMessageItemProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void onItemClick(android.view.View,int,io.rong.message.RichContentMessage,io.rong.imlib.model.Message) -> onItemClick
    void bindView(android.view.View,int,io.rong.message.RichContentMessage,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getContentSummary(io.rong.message.RichContentMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.RichContentMessageItemProvider$ViewHolder -> io.rong.imkit.widget.provider.RichContentMessageItemProvider$ViewHolder:
    io.rong.imkit.widget.AsyncImageView img -> img
    android.widget.TextView title -> title
    android.widget.TextView content -> content
    android.widget.RelativeLayout mLayout -> mLayout
    io.rong.imkit.widget.provider.RichContentMessageItemProvider this$0 -> this$0
io.rong.imkit.widget.provider.SystemConversationProvider -> io.rong.imkit.widget.provider.SystemConversationProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.imkit.UiConversation) -> bindView
    android.text.Spannable getSummary(io.rong.imkit.UiConversation) -> getSummary
    java.lang.String getTitle(java.lang.String) -> getTitle
    android.net.Uri getPortraitUri(java.lang.String) -> getPortraitUri
    android.text.Spannable getSummary(android.os.Parcelable) -> getSummary
    void bindView(android.view.View,int,android.os.Parcelable) -> bindView
io.rong.imkit.widget.provider.SystemConversationProvider$ViewHolder -> io.rong.imkit.widget.provider.SystemConversationProvider$ViewHolder:
    android.widget.TextView title -> title
    android.widget.TextView time -> time
    android.widget.TextView content -> content
    android.widget.ImageView notificationBlockImage -> notificationBlockImage
    io.rong.imkit.widget.provider.SystemConversationProvider this$0 -> this$0
io.rong.imkit.widget.provider.TakingPicturesActivity -> io.rong.imkit.widget.provider.TakingPicturesActivity:
    int CALLCAMERA -> CALLCAMERA
    int SYS_CAMERA -> SYS_CAMERA
    java.lang.String ACTION_CAMERA -> ACTION_CAMERA
    android.widget.Button mButtonCancel -> mButtonCancel
    android.widget.Button mButtonSend -> mButtonSend
    java.io.File mCameraFile -> mCameraFile
    android.support.v4.app.FragmentManager fm -> fm
    android.support.v4.app.FragmentTransaction ft -> ft
    android.net.Uri uri -> uri
    android.os.Handler mHandler -> mHandler
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void gotoSysCamera() -> gotoSysCamera
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void gotoShowImage(android.net.Uri) -> gotoShowImage
    java.io.File access$000(io.rong.imkit.widget.provider.TakingPicturesActivity) -> access$000
    void access$100(io.rong.imkit.widget.provider.TakingPicturesActivity,android.net.Uri) -> access$100
io.rong.imkit.widget.provider.TakingPicturesActivity$1 -> io.rong.imkit.widget.provider.TakingPicturesActivity$1:
    io.rong.imkit.widget.provider.TakingPicturesActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.imkit.widget.provider.TakingPicturesActivity$2 -> io.rong.imkit.widget.provider.TakingPicturesActivity$2:
    io.rong.imkit.widget.provider.TakingPicturesActivity this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.TextInputProvider -> io.rong.imkit.widget.provider.TextInputProvider:
    android.widget.EditText mEdit -> mEdit
    android.widget.ImageView mSmile -> mSmile
    android.widget.Button mButton -> mButton
    io.rong.imkit.widget.InputView mInputView -> mInputView
    android.view.LayoutInflater mInflater -> mInflater
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    io.rong.imkit.widget.ViewFlow mFlow -> mFlow
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    void onAttached(io.rong.imkit.fragment.MessageInputFragment,io.rong.imkit.widget.InputView) -> onAttached
    void onDetached() -> onDetached
    android.graphics.drawable.Drawable obtainSwitchDrawable(android.content.Context) -> obtainSwitchDrawable
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,io.rong.imkit.widget.InputView) -> onCreateView
    void setCurrentConversation(io.rong.imlib.model.Conversation) -> setCurrentConversation
    void onClick(android.view.View) -> onClick
    void onActive(android.content.Context) -> onActive
    void onInactive(android.content.Context) -> onInactive
    void onSwitch(android.content.Context) -> onSwitch
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    android.graphics.drawable.Drawable obtainPluginDrawable(android.content.Context) -> obtainPluginDrawable
    boolean onPluginClick(android.view.View) -> onPluginClick
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    java.lang.CharSequence obtainPluginTitle(android.content.Context) -> obtainPluginTitle
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
io.rong.imkit.widget.provider.TextInputProvider$CleanDraftRunnable -> io.rong.imkit.widget.provider.TextInputProvider$CleanDraftRunnable:
    io.rong.imlib.model.Conversation conversation -> conversation
    io.rong.imkit.widget.provider.TextInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.TextInputProvider$DraftRenderRunnable -> io.rong.imkit.widget.provider.TextInputProvider$DraftRenderRunnable:
    io.rong.imlib.model.Conversation conversation -> conversation
    io.rong.imkit.widget.provider.TextInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.TextInputProvider$DraftRenderRunnable$1 -> io.rong.imkit.widget.provider.TextInputProvider$DraftRenderRunnable$1:
    io.rong.database.Draft val$draft -> val$draft
    io.rong.imkit.widget.provider.TextInputProvider$DraftRenderRunnable this$1 -> this$1
    void run() -> run
io.rong.imkit.widget.provider.TextInputProvider$SaveDraftRunnable -> io.rong.imkit.widget.provider.TextInputProvider$SaveDraftRunnable:
    java.lang.String content -> content
    io.rong.imlib.model.Conversation conversation -> conversation
    io.rong.imkit.widget.provider.TextInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.TextMessageItemProvider -> io.rong.imkit.widget.provider.TextMessageItemProvider:
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    android.text.Spannable getContentSummary(io.rong.message.TextMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.message.TextMessage,io.rong.imlib.model.Message) -> onItemClick
    void bindView(android.view.View,int,io.rong.message.TextMessage,io.rong.imlib.model.Message) -> bindView
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.TextMessageItemProvider$ViewHolder -> io.rong.imkit.widget.provider.TextMessageItemProvider$ViewHolder:
    android.widget.TextView message -> message
    io.rong.imkit.widget.provider.TextMessageItemProvider this$0 -> this$0
io.rong.imkit.widget.provider.UnknownMessageItemProvider -> io.rong.imkit.widget.provider.UnknownMessageItemProvider:
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
io.rong.imkit.widget.provider.UnknownMessageItemProvider$ViewHolder -> io.rong.imkit.widget.provider.UnknownMessageItemProvider$ViewHolder:
    android.widget.TextView contentTextView -> contentTextView
    io.rong.imkit.widget.provider.UnknownMessageItemProvider this$0 -> this$0
io.rong.imkit.widget.provider.VoIPInputProvider -> io.rong.imkit.widget.provider.VoIPInputProvider:
    android.os.HandlerThread mWorkThread -> mWorkThread
    android.os.Handler mVoIPInputProviderHandler -> mVoIPInputProviderHandler
    android.os.Handler handler -> handler
    long mDeltaTime -> mDeltaTime
    android.graphics.drawable.Drawable obtainPluginDrawable(android.content.Context) -> obtainPluginDrawable
    java.lang.CharSequence obtainPluginTitle(android.content.Context) -> obtainPluginTitle
    boolean onPluginClick(android.view.View) -> onPluginClick
    void onEventBackgroundThread(io.rong.imkit.model.Event$OnReceiveVoIPMessageEvent) -> onEventBackgroundThread
    void openVoIPActivity(android.content.Intent) -> openVoIPActivity
io.rong.imkit.widget.provider.VoIPInputProvider$1 -> io.rong.imkit.widget.provider.VoIPInputProvider$1:
    io.rong.imlib.model.Message val$message -> val$message
    io.rong.imkit.widget.provider.VoIPInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.VoIPInputProvider$2 -> io.rong.imkit.widget.provider.VoIPInputProvider$2:
    android.content.Intent val$intent -> val$intent
    io.rong.imkit.widget.provider.VoIPInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.VoiceInputProvider -> io.rong.imkit.widget.provider.VoiceInputProvider:
    android.widget.Button mVoiceBtn -> mVoiceBtn
    android.widget.PopupWindow mPopWindow -> mPopWindow
    android.view.LayoutInflater mInflater -> mInflater
    float lastTouchY -> lastTouchY
    float mOffsetLimit -> mOffsetLimit
    android.media.AudioManager mAudioManager -> mAudioManager
    android.net.Uri mCurrentRecUri -> mCurrentRecUri
    long mVoiceLength -> mVoiceLength
    android.widget.ImageView mIcon -> mIcon
    android.widget.TextView mText -> mText
    android.widget.TextView mMessage -> mMessage
    android.os.Handler mHandler -> mHandler
    int mStatus -> mStatus
    int MSG_NORMAL -> MSG_NORMAL
    int MSG_SEC -> MSG_SEC
    int MSG_REC -> MSG_REC
    int MSG_CANCEL -> MSG_CANCEL
    int MSG_SHORT -> MSG_SHORT
    int MSG_SAMPLING -> MSG_SAMPLING
    int MSG_COMPLETE -> MSG_COMPLETE
    int MSG_READY -> MSG_READY
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    android.media.MediaRecorder mMediaRecorder -> mMediaRecorder
    void onAttached(io.rong.imkit.fragment.MessageInputFragment,io.rong.imkit.widget.InputView) -> onAttached
    void onSwitch(android.content.Context) -> onSwitch
    void onDetached() -> onDetached
    android.graphics.drawable.Drawable obtainSwitchDrawable(android.content.Context) -> obtainSwitchDrawable
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,io.rong.imkit.widget.InputView) -> onCreateView
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.graphics.drawable.Drawable obtainPluginDrawable(android.content.Context) -> obtainPluginDrawable
    boolean onPluginClick(android.view.View) -> onPluginClick
    java.lang.CharSequence obtainPluginTitle(android.content.Context) -> obtainPluginTitle
    void onActive(android.content.Context) -> onActive
    void onInactive(android.content.Context) -> onInactive
    boolean handleMessage(android.os.Message) -> handleMessage
    int getCurrentVoiceDb() -> getCurrentVoiceDb
    void startRec() -> startRec
    void stop() -> stop
    android.net.Uri stopRec(boolean) -> stopRec
    void onEvent(io.rong.imkit.widget.InputView$Event) -> onEvent
io.rong.imkit.widget.provider.VoiceInputProvider$1 -> io.rong.imkit.widget.provider.VoiceInputProvider$1:
    io.rong.imkit.widget.provider.VoiceInputProvider this$0 -> this$0
    void run() -> run
io.rong.imkit.widget.provider.VoiceInputProvider$VoiceException -> io.rong.imkit.widget.provider.VoiceInputProvider$VoiceException:
    io.rong.imkit.widget.provider.VoiceInputProvider this$0 -> this$0
io.rong.imkit.widget.provider.VoiceMessageItemProvider -> io.rong.imkit.widget.provider.VoiceMessageItemProvider:
    io.rong.imkit.util.IVoiceHandler mVoiceHandler -> mVoiceHandler
    android.widget.PopupWindow mPopWindow -> mPopWindow
    io.rong.imlib.model.MessageContent mCurrentMessageContent -> mCurrentMessageContent
    android.view.View newView(android.content.Context,android.view.ViewGroup) -> newView
    void bindView(android.view.View,int,io.rong.message.VoiceMessage,io.rong.imlib.model.Message) -> bindView
    void onItemClick(android.view.View,int,io.rong.message.VoiceMessage,io.rong.imlib.model.Message) -> onItemClick
    void leftSet(io.rong.imkit.widget.provider.VoiceMessageItemProvider$ViewHolder,io.rong.message.VoiceMessage) -> leftSet
    void rightSet(io.rong.imkit.widget.provider.VoiceMessageItemProvider$ViewHolder,io.rong.message.VoiceMessage) -> rightSet
    android.text.Spannable getContentSummary(io.rong.message.VoiceMessage) -> getContentSummary
    void onItemClick(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> onItemClick
    android.text.Spannable getContentSummary(io.rong.imlib.model.MessageContent) -> getContentSummary
    void bindView(android.view.View,int,io.rong.imlib.model.MessageContent,io.rong.imlib.model.Message) -> bindView
io.rong.imkit.widget.provider.VoiceMessageItemProvider$PlayListener -> io.rong.imkit.widget.provider.VoiceMessageItemProvider$PlayListener:
    android.widget.PopupWindow mPopWindow -> mPopWindow
    android.view.View mParent -> mParent
    io.rong.imkit.widget.provider.VoiceMessageItemProvider this$0 -> this$0
    void onPlay(android.content.Context) -> onPlay
    void onCover(boolean) -> onCover
    void onStop() -> onStop
io.rong.imkit.widget.provider.VoiceMessageItemProvider$ViewHolder -> io.rong.imkit.widget.provider.VoiceMessageItemProvider$ViewHolder:
    android.widget.ImageView img -> img
    android.widget.TextView left -> left
    android.widget.TextView right -> right
    io.rong.imkit.widget.provider.VoiceMessageItemProvider this$0 -> this$0
io.rong.imlib.AnnotationNotFoundException -> io.rong.imlib.AnnotationNotFoundException:
    long serialVersionUID -> serialVersionUID
io.rong.imlib.FileUtil -> io.rong.imlib.FileUtil:
    java.io.InputStream getFileInputStream(java.lang.String) -> getFileInputStream
    byte[] getByteFromUri(android.net.Uri) -> getByteFromUri
    void writeByte(android.net.Uri,byte[]) -> writeByte
io.rong.imlib.HeartbeatReceiver -> io.rong.imlib.HeartbeatReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imlib.HeartbeatReceiver$1 -> io.rong.imlib.HeartbeatReceiver$1:
    io.rong.imlib.HeartbeatReceiver this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError() -> onError
io.rong.imlib.IVersionHandler -> io.rong.imlib.IVersionHandler:
    io.rong.imlib.model.AppVersion getVersion() -> getVersion
io.rong.imlib.IVersionHandler$Stub -> io.rong.imlib.IVersionHandler$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_getVersion -> TRANSACTION_getVersion
    io.rong.imlib.IVersionHandler asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.IVersionHandler$Stub$Proxy -> io.rong.imlib.IVersionHandler$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    io.rong.imlib.model.AppVersion getVersion() -> getVersion
io.rong.imlib.LibHandlerStub -> io.rong.imlib.LibHandlerStub:
    android.os.HandlerThread mCallbackThread -> mCallbackThread
    android.os.Handler mCallbackHandler -> mCallbackHandler
    io.rong.imlib.ipc.LibContext mContext -> mContext
    java.lang.String mCurrentUserId -> mCurrentUserId
    io.rong.imlib.ipc.remote.OnReceiveMessageListener mReceiverMessageListener -> mReceiverMessageListener
    void init() -> init
    void connect(java.lang.String,io.rong.imlib.ipc.remote.IStringCallback) -> connect
    void disconnect(boolean,io.rong.imlib.ipc.remote.IOperationCallback) -> disconnect
    void registerMessageType(java.lang.String) -> registerMessageType
    void setConnectionStatusListener(io.rong.imlib.ipc.remote.IConnectionStatusListener) -> setConnectionStatusListener
    int getTotalUnreadCount() -> getTotalUnreadCount
    int getUnreadCount(int[]) -> getUnreadCount
    int getUnreadCountById(int,java.lang.String) -> getUnreadCountById
    void setOnReceiveMessageListener(io.rong.imlib.ipc.remote.OnReceiveMessageListener) -> setOnReceiveMessageListener
    io.rong.imlib.model.Message insertMessage(io.rong.imlib.model.Message,java.lang.String) -> insertMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.ipc.remote.ILongCallback) -> sendMessage
    java.util.List getNewestMessages(io.rong.imlib.model.Conversation,int) -> getNewestMessages
    java.util.List getOlderMessages(io.rong.imlib.model.Conversation,long,int) -> getOlderMessages
    java.util.List getOlderMessagesByObjectName(io.rong.imlib.model.Conversation,java.lang.String,long,int) -> getOlderMessagesByObjectName
    boolean deleteMessage(int[]) -> deleteMessage
    boolean clearMessages(io.rong.imlib.model.Conversation) -> clearMessages
    boolean clearMessagesUnreadStatus(io.rong.imlib.model.Conversation) -> clearMessagesUnreadStatus
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    boolean setMessageReceivedStatus(int,int) -> setMessageReceivedStatus
    boolean setMessageSentStatus(int,int) -> setMessageSentStatus
    java.util.List getConversationList() -> getConversationList
    java.util.List getConversationListByType(int[]) -> getConversationListByType
    io.rong.imlib.model.Conversation getConversation(int,java.lang.String) -> getConversation
    boolean removeConversation(int,java.lang.String) -> removeConversation
    boolean clearConversations(int[]) -> clearConversations
    boolean saveConversationDraft(io.rong.imlib.model.Conversation,java.lang.String) -> saveConversationDraft
    java.lang.String getConversationDraft(io.rong.imlib.model.Conversation) -> getConversationDraft
    boolean cleanConversationDraft(io.rong.imlib.model.Conversation) -> cleanConversationDraft
    void getConversationNotificationStatus(int,java.lang.String,io.rong.imlib.ipc.remote.ILongCallback) -> getConversationNotificationStatus
    void setConversationNotificationStatus(int,java.lang.String,int,io.rong.imlib.ipc.remote.ILongCallback) -> setConversationNotificationStatus
    boolean setConversationTopStatus(int,java.lang.String,boolean) -> setConversationTopStatus
    int getConversationUnreadCount(io.rong.imlib.model.Conversation) -> getConversationUnreadCount
    void getDiscussion(java.lang.String,io.rong.imlib.ipc.remote.IResultCallback) -> getDiscussion
    void setDiscussionName(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> setDiscussionName
    void createDiscussion(java.lang.String,java.util.List,io.rong.imlib.ipc.remote.IResultCallback) -> createDiscussion
    void searchPublicAccount(java.lang.String,int,int,io.rong.imlib.ipc.remote.IResultCallback) -> searchPublicAccount
    void subscribePublicAccount(java.lang.String,int,boolean,io.rong.imlib.ipc.remote.IOperationCallback) -> subscribePublicAccount
    void getPublicAccountInfo(java.lang.String,int,io.rong.imlib.ipc.remote.IResultCallback) -> getPublicAccountInfo
    void getPublicAccountInfoList(io.rong.imlib.ipc.remote.IResultCallback) -> getPublicAccountInfoList
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imlib.ipc.remote.IOperationCallback) -> addMemberToDiscussion
    void removeDiscussionMember(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> removeDiscussionMember
    void quitDiscussion(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitDiscussion
    void syncGroup(java.util.List,io.rong.imlib.ipc.remote.IOperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitGroup
    void joinChatRoom(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitChatRoom
    void setConversationNotificationQuietHours(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> setConversationNotificationQuietHours
    void removeConversationNotificationQuietHours(io.rong.imlib.ipc.remote.IOperationCallback) -> removeConversationNotificationQuietHours
    void getConversationNotificationQuietHours(io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback) -> getConversationNotificationQuietHours
    boolean validateAuth(java.lang.String) -> validateAuth
    void uploadMedia(io.rong.imlib.model.Conversation,java.lang.String,io.rong.imlib.ipc.remote.IUploadCallback) -> uploadMedia
    void downloadMedia(io.rong.imlib.model.Conversation,int,java.lang.String,io.rong.imlib.ipc.remote.IDownloadMediaCallback) -> downloadMedia
    long getDeltaTime() -> getDeltaTime
    void setDiscussionInviteStatus(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> setDiscussionInviteStatus
    void addToBlacklist(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> removeFromBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imlib.ipc.remote.IIntegerCallback) -> getBlacklistStatus
    void getBlacklist(io.rong.imlib.ipc.remote.IStringCallback) -> getBlacklist
    java.lang.String getTextMessageDraft(io.rong.imlib.model.Conversation) -> getTextMessageDraft
    boolean saveTextMessageDraft(io.rong.imlib.model.Conversation,java.lang.String) -> saveTextMessageDraft
    boolean clearTextMessageDraft(io.rong.imlib.model.Conversation) -> clearTextMessageDraft
io.rong.imlib.LibHandlerStub$1 -> io.rong.imlib.LibHandlerStub$1:
    io.rong.imlib.ipc.remote.IStringCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$1$1 -> io.rong.imlib.LibHandlerStub$1$1:
    java.lang.String val$userId -> val$userId
    io.rong.imlib.LibHandlerStub$1 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$1$2 -> io.rong.imlib.LibHandlerStub$1$2:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$1 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$10 -> io.rong.imlib.LibHandlerStub$10:
    io.rong.imlib.ipc.remote.IResultCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(io.rong.imlib.model.PublicServiceInfoList) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$10$1 -> io.rong.imlib.LibHandlerStub$10$1:
    io.rong.imlib.ipc.model.RemoteModelWrap val$result -> val$result
    io.rong.imlib.LibHandlerStub$10 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$10$2 -> io.rong.imlib.LibHandlerStub$10$2:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$10 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$11 -> io.rong.imlib.LibHandlerStub$11:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$11$1 -> io.rong.imlib.LibHandlerStub$11$1:
    io.rong.imlib.LibHandlerStub$11 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$11$2 -> io.rong.imlib.LibHandlerStub$11$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$11 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$12 -> io.rong.imlib.LibHandlerStub$12:
    io.rong.imlib.ipc.remote.IResultCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(io.rong.imlib.model.PublicServiceInfo) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$12$1 -> io.rong.imlib.LibHandlerStub$12$1:
    io.rong.imlib.model.PublicServiceInfo val$info -> val$info
    io.rong.imlib.LibHandlerStub$12 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$12$2 -> io.rong.imlib.LibHandlerStub$12$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$12 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$13 -> io.rong.imlib.LibHandlerStub$13:
    io.rong.imlib.ipc.remote.IResultCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(io.rong.imlib.model.PublicServiceInfoList) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$13$1 -> io.rong.imlib.LibHandlerStub$13$1:
    io.rong.imlib.model.PublicServiceInfoList val$list -> val$list
    io.rong.imlib.LibHandlerStub$13 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$13$2 -> io.rong.imlib.LibHandlerStub$13$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$13 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$14 -> io.rong.imlib.LibHandlerStub$14:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$14$1 -> io.rong.imlib.LibHandlerStub$14$1:
    io.rong.imlib.LibHandlerStub$14 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$14$2 -> io.rong.imlib.LibHandlerStub$14$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$14 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$15 -> io.rong.imlib.LibHandlerStub$15:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$15$1 -> io.rong.imlib.LibHandlerStub$15$1:
    io.rong.imlib.LibHandlerStub$15 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$15$2 -> io.rong.imlib.LibHandlerStub$15$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$15 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$16 -> io.rong.imlib.LibHandlerStub$16:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$16$1 -> io.rong.imlib.LibHandlerStub$16$1:
    io.rong.imlib.LibHandlerStub$16 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$16$2 -> io.rong.imlib.LibHandlerStub$16$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$16 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$17 -> io.rong.imlib.LibHandlerStub$17:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onError(int) -> onError
    void onSuccess() -> onSuccess
io.rong.imlib.LibHandlerStub$17$1 -> io.rong.imlib.LibHandlerStub$17$1:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$17 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$17$2 -> io.rong.imlib.LibHandlerStub$17$2:
    io.rong.imlib.LibHandlerStub$17 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$18 -> io.rong.imlib.LibHandlerStub$18:
    io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onError(int) -> onError
    void onSuccess(java.lang.String,int) -> onSuccess
io.rong.imlib.LibHandlerStub$18$1 -> io.rong.imlib.LibHandlerStub$18$1:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$18 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$18$2 -> io.rong.imlib.LibHandlerStub$18$2:
    java.lang.String val$start -> val$start
    int val$min -> val$min
    io.rong.imlib.LibHandlerStub$18 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$19 -> io.rong.imlib.LibHandlerStub$19:
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void run() -> run
io.rong.imlib.LibHandlerStub$2 -> io.rong.imlib.LibHandlerStub$2:
    io.rong.imlib.ipc.remote.IStringCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void run() -> run
io.rong.imlib.LibHandlerStub$20 -> io.rong.imlib.LibHandlerStub$20:
    io.rong.imlib.ipc.remote.IUploadCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$20$1 -> io.rong.imlib.LibHandlerStub$20$1:
    int val$progress -> val$progress
    io.rong.imlib.LibHandlerStub$20 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$20$2 -> io.rong.imlib.LibHandlerStub$20$2:
    java.lang.String val$uri -> val$uri
    io.rong.imlib.LibHandlerStub$20 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$20$3 -> io.rong.imlib.LibHandlerStub$20$3:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$20 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$21 -> io.rong.imlib.LibHandlerStub$21:
    io.rong.imlib.ipc.remote.IDownloadMediaCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onProgress(int) -> onProgress
    void onSuccess(java.lang.String) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$21$1 -> io.rong.imlib.LibHandlerStub$21$1:
    int val$progress -> val$progress
    io.rong.imlib.LibHandlerStub$21 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$21$2 -> io.rong.imlib.LibHandlerStub$21$2:
    java.lang.String val$localMediaPath -> val$localMediaPath
    io.rong.imlib.LibHandlerStub$21 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$21$3 -> io.rong.imlib.LibHandlerStub$21$3:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$21 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$22 -> io.rong.imlib.LibHandlerStub$22:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$22$1 -> io.rong.imlib.LibHandlerStub$22$1:
    io.rong.imlib.LibHandlerStub$22 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$22$2 -> io.rong.imlib.LibHandlerStub$22$2:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$22 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$23 -> io.rong.imlib.LibHandlerStub$23:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$23$1 -> io.rong.imlib.LibHandlerStub$23$1:
    io.rong.imlib.LibHandlerStub$23 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$23$2 -> io.rong.imlib.LibHandlerStub$23$2:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$23 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$24 -> io.rong.imlib.LibHandlerStub$24:
    io.rong.imlib.ipc.remote.IOperationCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$24$1 -> io.rong.imlib.LibHandlerStub$24$1:
    io.rong.imlib.LibHandlerStub$24 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$24$2 -> io.rong.imlib.LibHandlerStub$24$2:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$24 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$25 -> io.rong.imlib.LibHandlerStub$25:
    io.rong.imlib.ipc.remote.IIntegerCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onError(int) -> onError
    void onSuccess(io.rong.imlib.NativeClient$BlacklistStatus) -> onSuccess
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$25$1 -> io.rong.imlib.LibHandlerStub$25$1:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$25 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$25$2 -> io.rong.imlib.LibHandlerStub$25$2:
    io.rong.imlib.NativeClient$BlacklistStatus val$blacklistStatus -> val$blacklistStatus
    io.rong.imlib.LibHandlerStub$25 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$26 -> io.rong.imlib.LibHandlerStub$26:
    io.rong.imlib.ipc.remote.IStringCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$26$1 -> io.rong.imlib.LibHandlerStub$26$1:
    java.lang.String val$userIds -> val$userIds
    io.rong.imlib.LibHandlerStub$26 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$26$2 -> io.rong.imlib.LibHandlerStub$26$2:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$26 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$3 -> io.rong.imlib.LibHandlerStub$3:
    io.rong.imlib.ipc.remote.IConnectionStatusListener val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onChanged(int) -> onChanged
io.rong.imlib.LibHandlerStub$4 -> io.rong.imlib.LibHandlerStub$4:
    io.rong.imlib.ipc.remote.OnReceiveMessageListener val$listener -> val$listener
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.imlib.LibHandlerStub$5 -> io.rong.imlib.LibHandlerStub$5:
    io.rong.imlib.ipc.remote.ILongCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$5$1 -> io.rong.imlib.LibHandlerStub$5$1:
    java.lang.Integer val$messageId -> val$messageId
    io.rong.imlib.LibHandlerStub$5 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$5$2 -> io.rong.imlib.LibHandlerStub$5$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$5 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$6 -> io.rong.imlib.LibHandlerStub$6:
    io.rong.imlib.ipc.remote.ILongCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$6$1 -> io.rong.imlib.LibHandlerStub$6$1:
    java.lang.Integer val$status -> val$status
    io.rong.imlib.LibHandlerStub$6 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$6$2 -> io.rong.imlib.LibHandlerStub$6$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$6 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$7 -> io.rong.imlib.LibHandlerStub$7:
    io.rong.imlib.ipc.remote.ILongCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$7$1 -> io.rong.imlib.LibHandlerStub$7$1:
    java.lang.Integer val$status -> val$status
    io.rong.imlib.LibHandlerStub$7 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$7$2 -> io.rong.imlib.LibHandlerStub$7$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$7 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$8 -> io.rong.imlib.LibHandlerStub$8:
    io.rong.imlib.ipc.remote.IResultCallback val$callback -> val$callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Discussion) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$8$1 -> io.rong.imlib.LibHandlerStub$8$1:
    io.rong.imlib.model.Discussion val$discussion -> val$discussion
    io.rong.imlib.LibHandlerStub$8 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$8$2 -> io.rong.imlib.LibHandlerStub$8$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$8 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$9 -> io.rong.imlib.LibHandlerStub$9:
    io.rong.imlib.ipc.remote.IResultCallback val$callback -> val$callback
    java.lang.String val$name -> val$name
    java.util.List val$userIds -> val$userIds
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(int) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.LibHandlerStub$9$1 -> io.rong.imlib.LibHandlerStub$9$1:
    java.lang.String val$discussionId -> val$discussionId
    io.rong.imlib.LibHandlerStub$9 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$9$2 -> io.rong.imlib.LibHandlerStub$9$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.LibHandlerStub$9 this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$OperationCallback -> io.rong.imlib.LibHandlerStub$OperationCallback:
    io.rong.imlib.ipc.remote.IOperationCallback callback -> callback
    io.rong.imlib.LibHandlerStub this$0 -> this$0
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.LibHandlerStub$OperationCallback$1 -> io.rong.imlib.LibHandlerStub$OperationCallback$1:
    io.rong.imlib.LibHandlerStub$OperationCallback this$1 -> this$1
    void run() -> run
io.rong.imlib.LibHandlerStub$OperationCallback$2 -> io.rong.imlib.LibHandlerStub$OperationCallback$2:
    int val$code -> val$code
    io.rong.imlib.LibHandlerStub$OperationCallback this$1 -> this$1
    void run() -> run
io.rong.imlib.MessageTag -> io.rong.imlib.MessageTag:
    int NONE -> NONE
    int ISPERSISTED -> ISPERSISTED
    int ISCOUNTED -> ISCOUNTED
    java.lang.String value() -> value
    int flag() -> flag
    java.lang.Class messageHandler() -> messageHandler
io.rong.imlib.NativeClient -> io.rong.imlib.NativeClient:
    io.rong.imlib.NativeClient client -> client
    java.lang.String resourcePath -> resourcePath
    android.content.Context sContext -> sContext
    io.rong.imlib.RongWakeLock mWakeLock -> mWakeLock
    io.rong.imlib.NativeObject nativeObj -> nativeObj
    java.lang.String token -> token
    java.lang.String currentUserId -> currentUserId
    java.util.HashMap constructorMap -> constructorMap
    java.util.HashMap messageHandlerMap -> messageHandlerMap
    java.util.List conversationTypeList -> conversationTypeList
    io.rong.imlib.NativeClient$ICodeListener mConnectStatusListener -> mConnectStatusListener
    io.rong.imlib.model.AppVersion mVersion -> mVersion
    io.rong.imlib.model.MessageContent renderMessageContent(java.lang.String,byte[],io.rong.imlib.model.Message) -> renderMessageContent
    java.lang.String createPath(java.io.File,java.lang.String) -> createPath
    io.rong.imlib.NativeObject getLastNativeInstance() -> getLastNativeInstance
    io.rong.imlib.model.AppVersion getVersion() -> getVersion
    void init(android.content.Context) -> init
    void getConversationType(java.lang.String) -> getConversationType
    void registerMessageType(java.lang.Class) -> registerMessageType
    io.rong.imlib.NativeClient connect(java.lang.String,io.rong.imlib.NativeClient$IResultCallback) -> connect
    void reconnect(io.rong.imlib.NativeClient$IResultCallback) -> reconnect
    void disconnect() -> disconnect
    void disconnect(boolean) -> disconnect
    java.util.List getConversationList() -> getConversationList
    java.util.List getGroupConversationList() -> getGroupConversationList
    java.util.List getConversationList(int[]) -> getConversationList
    io.rong.imlib.model.Conversation renderConversationFromJson(org.json.JSONObject) -> renderConversationFromJson
    io.rong.imlib.model.Conversation getConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getConversation
    boolean removeConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> removeConversation
    boolean setConversationToTop(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,boolean) -> setConversationToTop
    int getTotalUnreadCount() -> getTotalUnreadCount
    int getUnreadCount(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getUnreadCount
    int getUnreadCount(io.rong.imlib.model.Conversation$ConversationType[]) -> getUnreadCount
    java.util.List getLatestMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int) -> getLatestMessages
    java.util.List getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,int) -> getHistoryMessages
    java.util.List getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,int,int) -> getHistoryMessages
    boolean deleteMessages(int[]) -> deleteMessages
    boolean clearMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearMessages
    boolean clearMessagesUnreadStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearMessagesUnreadStatus
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    boolean setMessageReceivedStatus(int,io.rong.imlib.model.Message$ReceivedStatus) -> setMessageReceivedStatus
    boolean setMessageSentStatus(int,io.rong.imlib.model.Message$SentStatus) -> setMessageSentStatus
    java.lang.String getTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getTextMessageDraft
    boolean saveTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String) -> saveTextMessageDraft
    boolean clearTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearTextMessageDraft
    void getDiscussion(java.lang.String,io.rong.imlib.NativeClient$IResultCallback) -> getDiscussion
    void setDiscussionName(java.lang.String,java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> setDiscussionName
    void createDiscussion(java.lang.String,java.util.List,io.rong.imlib.NativeClient$IResultCallback) -> createDiscussion
    void searchPublicAccount(java.lang.String,int,int,io.rong.imlib.NativeClient$IResultCallback) -> searchPublicAccount
    void subscribePublicAccount(java.lang.String,int,boolean,io.rong.imlib.NativeClient$OperationCallback) -> subscribePublicAccount
    void getPublicAccountInfo(java.lang.String,int,io.rong.imlib.NativeClient$IResultCallback) -> getPublicAccountInfo
    void getPublicAccountInfoList(io.rong.imlib.NativeClient$IResultCallback) -> getPublicAccountInfoList
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imlib.NativeClient$OperationCallback) -> addMemberToDiscussion
    void removeMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> removeMemberFromDiscussion
    void quitDiscussion(java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> quitDiscussion
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String,io.rong.imlib.NativeClient$IResultCallback) -> sendMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.NativeClient$IResultCallback) -> sendMessage
    io.rong.imlib.model.Message insertMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String) -> insertMessage
    void uploadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.io.InputStream,io.rong.imlib.NativeClient$IResultProgressCallback) -> uploadMedia
    void downloadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,java.lang.String,io.rong.imlib.NativeClient$IResultProgressCallback) -> downloadMedia
    void clearCachedResources(io.rong.imlib.NativeClient$OperationCallback) -> clearCachedResources
    void getConversationNotificationStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.NativeClient$IResultCallback) -> getConversationNotificationStatus
    void setConversationNotificationStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.Conversation$ConversationNotificationStatus,io.rong.imlib.NativeClient$IResultCallback) -> setConversationNotificationStatus
    void setDiscussionInviteStatus(java.lang.String,int,io.rong.imlib.NativeClient$OperationCallback) -> setDiscussionInviteStatus
    void syncGroup(java.util.List,io.rong.imlib.NativeClient$OperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> quitGroup
    void setOnReceiveMessageListener(io.rong.imlib.NativeClient$OnReceiveMessageListener) -> setOnReceiveMessageListener
    void setConnectionStatusListener(io.rong.imlib.NativeClient$ICodeListener) -> setConnectionStatusListener
    long getDeltaTime() -> getDeltaTime
    void joinChatRoom(java.lang.String,int,io.rong.imlib.NativeClient$OperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> quitChatRoom
    boolean clearConversations(io.rong.imlib.model.Conversation$ConversationType[]) -> clearConversations
    void addToBlacklist(java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imlib.NativeClient$OperationCallback) -> removeFromBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imlib.NativeClient$IResultCallback) -> getBlacklistStatus
    void getBlacklist(io.rong.imlib.NativeClient$IResultCallback) -> getBlacklist
    void setConversationNotificationQuietHours(java.lang.String,int,io.rong.imlib.NativeClient$OperationCallback) -> setConversationNotificationQuietHours
    void removeConversationNotificationQuietHours(io.rong.imlib.NativeClient$OperationCallback) -> removeConversationNotificationQuietHours
    void getConversationNotificationQuietHours(io.rong.imlib.NativeClient$GetConversationNotificationQuietHoursCallback) -> getConversationNotificationQuietHours
    void setEnvInfo(android.content.Context) -> setEnvInfo
    io.rong.imlib.RongWakeLock access$000() -> access$000
    android.content.Context access$100() -> access$100
    io.rong.imlib.NativeClient$ICodeListener access$200() -> access$200
    io.rong.imlib.NativeClient access$300() -> access$300
    java.lang.String access$402(io.rong.imlib.NativeClient,java.lang.String) -> access$402
    io.rong.imlib.model.MessageContent access$500(java.lang.String,byte[],io.rong.imlib.model.Message) -> access$500
    java.util.HashMap access$600() -> access$600
io.rong.imlib.NativeClient$1 -> io.rong.imlib.NativeClient$1:
    void QueryWakeup(int) -> QueryWakeup
    void ReleaseWakup() -> ReleaseWakup
io.rong.imlib.NativeClient$10 -> io.rong.imlib.NativeClient$10:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$11 -> io.rong.imlib.NativeClient$11:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$12 -> io.rong.imlib.NativeClient$12:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.model.Message val$message -> val$message
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$13 -> io.rong.imlib.NativeClient$13:
    io.rong.imlib.NativeClient$IResultProgressCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void OnProgress(int) -> OnProgress
    void OnError(int,java.lang.String) -> OnError
    void OnComplete(java.lang.String) -> OnComplete
io.rong.imlib.NativeClient$14 -> io.rong.imlib.NativeClient$14:
    io.rong.imlib.NativeClient$IResultProgressCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void OnProgress(int) -> OnProgress
    void OnError(int,java.lang.String) -> OnError
    void OnComplete(java.lang.String) -> OnComplete
io.rong.imlib.NativeClient$15 -> io.rong.imlib.NativeClient$15:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.NativeClient$16 -> io.rong.imlib.NativeClient$16:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.NativeClient$17 -> io.rong.imlib.NativeClient$17:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$18 -> io.rong.imlib.NativeClient$18:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$19 -> io.rong.imlib.NativeClient$19:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$2 -> io.rong.imlib.NativeClient$2:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    void operationComplete(int,java.lang.String) -> operationComplete
io.rong.imlib.NativeClient$20 -> io.rong.imlib.NativeClient$20:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$21 -> io.rong.imlib.NativeClient$21:
    io.rong.imlib.NativeClient$OnReceiveMessageListener val$listener -> val$listener
    io.rong.imlib.NativeClient this$0 -> this$0
    void onReceived(io.rong.imlib.NativeObject$Message,int) -> onReceived
io.rong.imlib.NativeClient$22 -> io.rong.imlib.NativeClient$22:
    void onError(int,java.lang.String) -> onError
io.rong.imlib.NativeClient$23 -> io.rong.imlib.NativeClient$23:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$24 -> io.rong.imlib.NativeClient$24:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$25 -> io.rong.imlib.NativeClient$25:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$26 -> io.rong.imlib.NativeClient$26:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$27 -> io.rong.imlib.NativeClient$27:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.NativeClient$28 -> io.rong.imlib.NativeClient$28:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void OnSuccess(java.lang.String) -> OnSuccess
    void OnError(int) -> OnError
io.rong.imlib.NativeClient$3 -> io.rong.imlib.NativeClient$3:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int,java.lang.String) -> operationComplete
io.rong.imlib.NativeClient$4 -> io.rong.imlib.NativeClient$4:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void onReceived(io.rong.imlib.NativeObject$DiscussionInfo) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.NativeClient$5 -> io.rong.imlib.NativeClient$5:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$6 -> io.rong.imlib.NativeClient$6:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void OnError(int) -> OnError
    void OnSuccess(java.lang.String) -> OnSuccess
io.rong.imlib.NativeClient$7 -> io.rong.imlib.NativeClient$7:
    io.rong.imlib.NativeClient$IResultCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void onReceived(io.rong.imlib.NativeObject$AccountInfo[]) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.NativeClient$8 -> io.rong.imlib.NativeClient$8:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$9 -> io.rong.imlib.NativeClient$9:
    io.rong.imlib.NativeClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.NativeClient this$0 -> this$0
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeClient$BlacklistStatus -> io.rong.imlib.NativeClient$BlacklistStatus:
    io.rong.imlib.NativeClient$BlacklistStatus EXIT_BLACK_LIST -> EXIT_BLACK_LIST
    io.rong.imlib.NativeClient$BlacklistStatus NOT_EXIT_BLACK_LIST -> NOT_EXIT_BLACK_LIST
    int value -> value
    io.rong.imlib.NativeClient$BlacklistStatus[] $VALUES -> $VALUES
    io.rong.imlib.NativeClient$BlacklistStatus[] values() -> values
    io.rong.imlib.NativeClient$BlacklistStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.NativeClient$BlacklistStatus setValue(int) -> setValue
io.rong.imlib.NativeClient$GetConversationNotificationQuietHoursCallback -> io.rong.imlib.NativeClient$GetConversationNotificationQuietHoursCallback:
    void onSuccess(java.lang.String,int) -> onSuccess
    void onError(int) -> onError
io.rong.imlib.NativeClient$ICodeCallback -> io.rong.imlib.NativeClient$ICodeCallback:
    void onResult(int) -> onResult
io.rong.imlib.NativeClient$ICodeListener -> io.rong.imlib.NativeClient$ICodeListener:
    void onChanged(int) -> onChanged
io.rong.imlib.NativeClient$IResultCallback -> io.rong.imlib.NativeClient$IResultCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onError(int) -> onError
io.rong.imlib.NativeClient$IResultProgressCallback -> io.rong.imlib.NativeClient$IResultProgressCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onProgress(int) -> onProgress
    void onError(int) -> onError
io.rong.imlib.NativeClient$OnReceiveMessageListener -> io.rong.imlib.NativeClient$OnReceiveMessageListener:
    void onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.imlib.NativeClient$OperationCallback -> io.rong.imlib.NativeClient$OperationCallback:
    void onSuccess() -> onSuccess
    void onError(int) -> onError
io.rong.imlib.NativeObject -> io.rong.imlib.NativeObject:
    void setJNIEnv(io.rong.imlib.NativeObject) -> setJNIEnv
    int InitClient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> InitClient
    void RegisterMessageType(java.lang.String,int) -> RegisterMessageType
    void Connect(java.lang.String,io.rong.imlib.NativeObject$ConnectAckCallback) -> Connect
    void Disconnect(int) -> Disconnect
    void SendFileWithUrl(java.lang.String,int,int,byte[],int,io.rong.imlib.NativeObject$ProgressCallback) -> SendFileWithUrl
    void DownFileWithUrl(java.lang.String,int,int,java.lang.String,io.rong.imlib.NativeObject$ProgressCallback) -> DownFileWithUrl
    byte[] GetPagedMessage(java.lang.String,int,int,int) -> GetPagedMessage
    io.rong.imlib.NativeObject$Message[] GetPagedMessageEx(java.lang.String,int,int,int) -> GetPagedMessageEx
    byte[] SearchMessages(java.lang.String,int,int) -> SearchMessages
    io.rong.imlib.NativeObject$Message[] SearchMessagesEx(java.lang.String,int,int) -> SearchMessagesEx
    byte[] GetHistoryMessages(java.lang.String,int,java.lang.String,int,int) -> GetHistoryMessages
    boolean DeleteMessages(int[]) -> DeleteMessages
    boolean ClearMessages(int,java.lang.String) -> ClearMessages
    boolean ClearUnread(int,java.lang.String) -> ClearUnread
    boolean SetMessageExtra(int,java.lang.String) -> SetMessageExtra
    boolean RemoveConversation(int,java.lang.String) -> RemoveConversation
    boolean SetTextMessageDraft(int,java.lang.String,java.lang.String) -> SetTextMessageDraft
    boolean SetMessageContent(int,byte[]) -> SetMessageContent
    boolean SetMessageDisplayText(int,byte[]) -> SetMessageDisplayText
    java.lang.String GetTextMessageDraft(int,java.lang.String) -> GetTextMessageDraft
    byte[] GetRecentConversation() -> GetRecentConversation
    boolean SetIsTop(int,java.lang.String,boolean) -> SetIsTop
    int GetTotalUnreadCount() -> GetTotalUnreadCount
    long GetDeltaTime() -> GetDeltaTime
    void CreateInviteDiscussion(java.lang.String,java.lang.String[],io.rong.imlib.NativeObject$CreateDiscussionCallback) -> CreateInviteDiscussion
    void InviteMemberToDiscussion(java.lang.String,java.lang.String[],io.rong.imlib.NativeObject$PublishAckListener) -> InviteMemberToDiscussion
    void RemoveMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> RemoveMemberFromDiscussion
    void QuitDiscussion(java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> QuitDiscussion
    int SaveMessage(java.lang.String,int,java.lang.String,java.lang.String,byte[],byte[]) -> SaveMessage
    void SendMessage(java.lang.String,int,int,java.lang.String,byte[],byte[],int,io.rong.imlib.NativeObject$PublishAckListener) -> SendMessage
    void GetUserInfo(java.lang.String,io.rong.imlib.NativeObject$UserInfoOutputListener) -> GetUserInfo
    io.rong.imlib.NativeObject$UserInfo GetUserInfoSync(java.lang.String) -> GetUserInfoSync
    io.rong.imlib.NativeObject$UserInfo GetUserInfoExSync(java.lang.String,int) -> GetUserInfoExSync
    void SetMessageListener(io.rong.imlib.NativeObject$ReceiveMessageListener) -> SetMessageListener
    boolean SetReadStatus(int,int) -> SetReadStatus
    boolean SetSendStatus(int,int) -> SetSendStatus
    void SetWakeupQueryListener(io.rong.imlib.NativeObject$WakeupQueryListener) -> SetWakeupQueryListener
    void EnvironmentChangeNotify(int,byte[],int,io.rong.imlib.NativeObject$EnvironmentChangeNotifyListener) -> EnvironmentChangeNotify
    void GetDiscussionInfo(java.lang.String,io.rong.imlib.NativeObject$DiscussionInfoListener) -> GetDiscussionInfo
    io.rong.imlib.NativeObject$DiscussionInfo GetDiscussionInfoSync(java.lang.String) -> GetDiscussionInfoSync
    void SetExceptionListener(io.rong.imlib.NativeObject$ExceptionListener) -> SetExceptionListener
    void RenameDiscussion(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> RenameDiscussion
    byte[] GetConversation(java.lang.String,int) -> GetConversation
    void SetBlockPush(java.lang.String,int,boolean,io.rong.imlib.NativeObject$BizAckListener) -> SetBlockPush
    void GetBlockPush(java.lang.String,int,io.rong.imlib.NativeObject$BizAckListener) -> GetBlockPush
    int GetBlockPush(java.lang.String,int) -> GetBlockPush
    void SetInviteStatus(java.lang.String,int,io.rong.imlib.NativeObject$PublishAckListener) -> SetInviteStatus
    int GetUnreadCount(java.lang.String,int) -> GetUnreadCount
    byte[] GetConversationList(int[]) -> GetConversationList
    io.rong.imlib.NativeObject$Conversation[] GetConversationListEx(int[]) -> GetConversationListEx
    void SyncGroups(java.lang.String[],java.lang.String[],io.rong.imlib.NativeObject$PublishAckListener) -> SyncGroups
    void JoinGroup(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> JoinGroup
    void QuitGroup(java.lang.String,java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> QuitGroup
    int GetCateUnreadCount(int[]) -> GetCateUnreadCount
    void JoinChatRoom(java.lang.String,int,int,io.rong.imlib.NativeObject$PublishAckListener) -> JoinChatRoom
    void QuitChatRoom(java.lang.String,int,io.rong.imlib.NativeObject$PublishAckListener) -> QuitChatRoom
    boolean ClearConversations(int[]) -> ClearConversations
    void AddToBlacklist(java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> AddToBlacklist
    void RemoveFromBlacklist(java.lang.String,io.rong.imlib.NativeObject$PublishAckListener) -> RemoveFromBlacklist
    void GetBlacklistStatus(java.lang.String,io.rong.imlib.NativeObject$BizAckListener) -> GetBlacklistStatus
    void GetBlacklist(io.rong.imlib.NativeObject$SetBlacklistListener) -> GetBlacklist
    void GetUploadToken(int,io.rong.imlib.NativeObject$TokenListener) -> GetUploadToken
    void GetDownloadToken(int,java.lang.String,io.rong.imlib.NativeObject$TokenListener) -> GetDownloadToken
    void SubscribeAccount(java.lang.String,int,boolean,io.rong.imlib.NativeObject$PublishAckListener) -> SubscribeAccount
    void SetDeviceInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> SetDeviceInfo
    void SearchAccount(java.lang.String,int,int,io.rong.imlib.NativeObject$AccountInfoListener) -> SearchAccount
    void ping(io.rong.imlib.NativeObject$PingCallback) -> ping
    int RcCheckNetwork(boolean) -> RcCheckNetwork
    io.rong.imlib.NativeObject$AccountInfo[] LoadAccountInfo() -> LoadAccountInfo
    void AddPushSetting(java.lang.String,int,io.rong.imlib.NativeObject$PublishAckListener) -> AddPushSetting
    void RemovePushSetting(io.rong.imlib.NativeObject$PublishAckListener) -> RemovePushSetting
    void QueryPushSetting(io.rong.imlib.NativeObject$PushSettingListener) -> QueryPushSetting
io.rong.imlib.NativeObject$1 -> io.rong.imlib.NativeObject$1:
    io.rong.imlib.NativeObject$PingCallback val$callback -> val$callback
    io.rong.imlib.NativeObject this$0 -> this$0
    void Complete(int,java.lang.String) -> Complete
io.rong.imlib.NativeObject$AccountInfo -> io.rong.imlib.NativeObject$AccountInfo:
    byte[] accountId -> accountId
    byte[] accountName -> accountName
    byte[] accountUri -> accountUri
    byte[] extra -> extra
    int accountType -> accountType
    byte[] getAccountId() -> getAccountId
    void setAccountId(byte[]) -> setAccountId
    byte[] getAccountName() -> getAccountName
    void setAccountName(byte[]) -> setAccountName
    byte[] getAccountUri() -> getAccountUri
    void setAccountUri(byte[]) -> setAccountUri
    byte[] getExtra() -> getExtra
    void setExtra(byte[]) -> setExtra
    int getAccountType() -> getAccountType
    void setAccountType(int) -> setAccountType
io.rong.imlib.NativeObject$AccountInfoListener -> io.rong.imlib.NativeObject$AccountInfoListener:
    void onReceived(io.rong.imlib.NativeObject$AccountInfo[]) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$BizAckListener -> io.rong.imlib.NativeObject$BizAckListener:
    void operationComplete(int,int) -> operationComplete
io.rong.imlib.NativeObject$ConnectAckCallback -> io.rong.imlib.NativeObject$ConnectAckCallback:
    void operationComplete(int,java.lang.String) -> operationComplete
io.rong.imlib.NativeObject$Conversation -> io.rong.imlib.NativeObject$Conversation:
    int conversationType -> conversationType
    java.lang.String targetId -> targetId
    java.lang.String conversationTitle -> conversationTitle
    boolean isTop -> isTop
    java.lang.String draft -> draft
    int unreadMessageCount -> unreadMessageCount
    java.lang.String objectName -> objectName
    int messageId -> messageId
    int readStatus -> readStatus
    int receiveStatus -> receiveStatus
    int sendStatus -> sendStatus
    long receiveTime -> receiveTime
    long sendTime -> sendTime
    java.lang.String senderId -> senderId
    java.lang.String senderName -> senderName
    int messageDirection -> messageDirection
    java.lang.String messageContent -> messageContent
    boolean blockPush -> blockPush
    long lastTime -> lastTime
    java.lang.String userId -> userId
    java.lang.String userName -> userName
    java.lang.String userPortrait -> userPortrait
    byte[] content -> content
    java.lang.String extra -> extra
    int getConversationType() -> getConversationType
    void setConversationType(int) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    java.lang.String getConversationTitle() -> getConversationTitle
    void setConversationTitle(java.lang.String) -> setConversationTitle
    boolean isTop() -> isTop
    void setTop(boolean) -> setTop
    java.lang.String getDraft() -> getDraft
    void setDraft(java.lang.String) -> setDraft
    int getUnreadMessageCount() -> getUnreadMessageCount
    void setUnreadMessageCount(int) -> setUnreadMessageCount
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    int getMessageId() -> getMessageId
    void setMessageId(int) -> setMessageId
    int getReceiveStatus() -> getReceiveStatus
    void setReceiveStatus(int) -> setReceiveStatus
    int getSendStatus() -> getSendStatus
    void setSendStatus(int) -> setSendStatus
    long getReceiveTime() -> getReceiveTime
    void setReceiveTime(long) -> setReceiveTime
    long getSendTime() -> getSendTime
    void setSendTime(long) -> setSendTime
    java.lang.String getSenderId() -> getSenderId
    void setSenderId(java.lang.String) -> setSenderId
    java.lang.String getSenderName() -> getSenderName
    void setSenderName(java.lang.String) -> setSenderName
    int getMessageDirection() -> getMessageDirection
    void setMessageDirection(int) -> setMessageDirection
    java.lang.String getMessageContent() -> getMessageContent
    void setMessageContent(java.lang.String) -> setMessageContent
    boolean isBlockPush() -> isBlockPush
    void setBlockPush(boolean) -> setBlockPush
    long getLastTime() -> getLastTime
    void setLastTime(long) -> setLastTime
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getUserPortrait() -> getUserPortrait
    void setUserPortrait(java.lang.String) -> setUserPortrait
    int getReadStatus() -> getReadStatus
    void setReadStatus(int) -> setReadStatus
    byte[] getContent() -> getContent
    void setContent(byte[]) -> setContent
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
io.rong.imlib.NativeObject$CreateDiscussionCallback -> io.rong.imlib.NativeObject$CreateDiscussionCallback:
    void OnSuccess(java.lang.String) -> OnSuccess
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$DiscussionInfo -> io.rong.imlib.NativeObject$DiscussionInfo:
    java.lang.String discussionId -> discussionId
    java.lang.String discussionName -> discussionName
    java.lang.String adminId -> adminId
    java.lang.String userIds -> userIds
    int inviteStatus -> inviteStatus
    java.lang.String getDiscussionId() -> getDiscussionId
    void setDiscussionId(java.lang.String) -> setDiscussionId
    java.lang.String getDiscussionName() -> getDiscussionName
    void setDiscussionName(byte[]) -> setDiscussionName
    java.lang.String getAdminId() -> getAdminId
    void setAdminId(java.lang.String) -> setAdminId
    java.lang.String getUserIds() -> getUserIds
    void setUserIds(java.lang.String) -> setUserIds
    int getInviteStatus() -> getInviteStatus
    void setInviteStatus(int) -> setInviteStatus
io.rong.imlib.NativeObject$DiscussionInfoListener -> io.rong.imlib.NativeObject$DiscussionInfoListener:
    void onReceived(io.rong.imlib.NativeObject$DiscussionInfo) -> onReceived
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$EnvironmentChangeNotifyListener -> io.rong.imlib.NativeObject$EnvironmentChangeNotifyListener:
    void Complete(int,java.lang.String) -> Complete
io.rong.imlib.NativeObject$ExceptionListener -> io.rong.imlib.NativeObject$ExceptionListener:
    void onError(int,java.lang.String) -> onError
io.rong.imlib.NativeObject$Message -> io.rong.imlib.NativeObject$Message:
    int conversationType -> conversationType
    java.lang.String targetId -> targetId
    int messageId -> messageId
    boolean messageDirection -> messageDirection
    java.lang.String senderUserId -> senderUserId
    int readStatus -> readStatus
    int sentStatus -> sentStatus
    long receivedTime -> receivedTime
    long sentTime -> sentTime
    java.lang.String objectName -> objectName
    byte[] content -> content
    java.lang.String extra -> extra
    java.lang.String pushContent -> pushContent
    java.lang.String getPushContent() -> getPushContent
    void setPushContent(java.lang.String) -> setPushContent
    int getConversationType() -> getConversationType
    void setConversationType(int) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    int getMessageId() -> getMessageId
    void setMessageId(int) -> setMessageId
    boolean getMessageDirection() -> getMessageDirection
    void setMessageDirection(boolean) -> setMessageDirection
    int getReadStatus() -> getReadStatus
    void setReadStatus(int) -> setReadStatus
    int getSentStatus() -> getSentStatus
    void setSentStatus(int) -> setSentStatus
    long getReceivedTime() -> getReceivedTime
    void setReceivedTime(long) -> setReceivedTime
    long getSentTime() -> getSentTime
    void setSentTime(long) -> setSentTime
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    byte[] getContent() -> getContent
    void setContent(byte[]) -> setContent
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    java.lang.String getSenderUserId() -> getSenderUserId
    void setSenderUserId(java.lang.String) -> setSenderUserId
io.rong.imlib.NativeObject$PingCallback -> io.rong.imlib.NativeObject$PingCallback:
    void onSuccess() -> onSuccess
    void onError() -> onError
io.rong.imlib.NativeObject$ProgressCallback -> io.rong.imlib.NativeObject$ProgressCallback:
    void OnProgress(int) -> OnProgress
    void OnComplete(java.lang.String) -> OnComplete
    void OnError(int,java.lang.String) -> OnError
io.rong.imlib.NativeObject$PublishAckListener -> io.rong.imlib.NativeObject$PublishAckListener:
    void operationComplete(int) -> operationComplete
io.rong.imlib.NativeObject$PushSettingListener -> io.rong.imlib.NativeObject$PushSettingListener:
    void OnSuccess(java.lang.String,int) -> OnSuccess
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$ReceiveMessageListener -> io.rong.imlib.NativeObject$ReceiveMessageListener:
    void onReceived(io.rong.imlib.NativeObject$Message,int) -> onReceived
    io.rong.imlib.NativeObject$Message getNewMessage() -> getNewMessage
io.rong.imlib.NativeObject$SetBlacklistListener -> io.rong.imlib.NativeObject$SetBlacklistListener:
    void OnSuccess(java.lang.String) -> OnSuccess
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$TokenListener -> io.rong.imlib.NativeObject$TokenListener:
    void OnError(int,java.lang.String) -> OnError
io.rong.imlib.NativeObject$UserInfo -> io.rong.imlib.NativeObject$UserInfo:
    java.lang.String userId -> userId
    int categoryId -> categoryId
    java.lang.String userName -> userName
    java.lang.String url -> url
    java.lang.String accountExtra -> accountExtra
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    int getCategoryId() -> getCategoryId
    void setCategoryId(int) -> setCategoryId
    java.lang.String getUserName() -> getUserName
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAccountExtra() -> getAccountExtra
    void setAccountExtra(java.lang.String) -> setAccountExtra
io.rong.imlib.NativeObject$UserInfoOutputListener -> io.rong.imlib.NativeObject$UserInfoOutputListener:
    void onReceiveUserInfo(java.lang.String,byte[],java.lang.String) -> onReceiveUserInfo
    void OnError(int) -> OnError
io.rong.imlib.NativeObject$WakeupQueryListener -> io.rong.imlib.NativeObject$WakeupQueryListener:
    void QueryWakeup(int) -> QueryWakeup
    void ReleaseWakup() -> ReleaseWakup
io.rong.imlib.NetworkUtil -> io.rong.imlib.NetworkUtil:
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
io.rong.imlib.ReConnectService -> io.rong.imlib.ReConnectService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
io.rong.imlib.ReConnectService$1 -> io.rong.imlib.ReConnectService$1:
    android.content.Intent val$intent -> val$intent
    io.rong.imlib.ReConnectService this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient -> io.rong.imlib.RongIMClient:
    io.rong.imlib.ipc.remote.IHandler mLibHandler -> mLibHandler
    android.os.Handler mHandler -> mHandler
    boolean mIsBind -> mIsBind
    java.util.List mRegCache -> mRegCache
    android.content.Context mContext -> mContext
    io.rong.imlib.model.AppVersion mVersion -> mVersion
    io.rong.imlib.RongIMClient sS -> sS
    java.lang.String mCurrentProcessName -> mCurrentProcessName
    java.lang.String mMainProcessName -> mMainProcessName
    java.lang.String mToken -> mToken
    java.lang.String mCurrentUserId -> mCurrentUserId
    io.rong.imlib.RongIMClient$StatusListener mStatusListener -> mStatusListener
    io.rong.imlib.ipc.ConnectChangeReceiver mConnectChangeReceiver -> mConnectChangeReceiver
    io.rong.imlib.RongIMClient$ConnectRunnable mConnectRunable -> mConnectRunable
    int mNetWorkType -> mNetWorkType
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus mConnectionStatus -> mConnectionStatus
    io.rong.imlib.RongIMClient$ConnectionStatusListener sConnectionListener -> sConnectionListener
    io.rong.imlib.RongIMClient$OnReceiveMessageListener sReceiveMessageListener -> sReceiveMessageListener
    io.rong.imlib.RongIMClient$PushMessageBehaviorListener mPushMessageBehaviorListener -> mPushMessageBehaviorListener
    android.os.Handler mWorkHandler -> mWorkHandler
    android.os.HandlerThread mWorkThread -> mWorkThread
    io.rong.imlib.RongIMClient getInstance() -> getInstance
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus getCurrentConnectionStatus() -> getCurrentConnectionStatus
    void init(android.content.Context) -> init
    int getNetWorkType() -> getNetWorkType
    io.rong.imlib.RongIMClient connect(java.lang.String,io.rong.imlib.RongIMClient$ConnectCallback) -> connect
    void reconnect(io.rong.imlib.RongIMClient$ConnectCallback) -> reconnect
    void disconnect() -> disconnect
    void disconnect(boolean) -> disconnect
    void setConnectionStatusListener(io.rong.imlib.RongIMClient$ConnectionStatusListener) -> setConnectionStatusListener
    void setOnReceiveMessageListener(io.rong.imlib.RongIMClient$OnReceiveMessageListener) -> setOnReceiveMessageListener
    void registerMessageType(java.lang.Class) -> registerMessageType
    void getConversationList(io.rong.imlib.RongIMClient$ResultCallback) -> getConversationList
    java.util.List getConversationList() -> getConversationList
    void getConversationList(io.rong.imlib.RongIMClient$ResultCallback,io.rong.imlib.model.Conversation$ConversationType[]) -> getConversationList
    void getConversationList(int[],io.rong.imlib.RongIMClient$ResultCallback) -> getConversationList
    java.util.List getConversationList(io.rong.imlib.model.Conversation$ConversationType[]) -> getConversationList
    java.util.List getConversationList(int[]) -> getConversationList
    void getConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> getConversation
    io.rong.imlib.model.Conversation getConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getConversation
    void removeConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> removeConversation
    boolean removeConversation(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> removeConversation
    void setConversationToTop(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,boolean,io.rong.imlib.RongIMClient$ResultCallback) -> setConversationToTop
    boolean setConversationToTop(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,boolean) -> setConversationToTop
    void getTotalUnreadCount(io.rong.imlib.RongIMClient$ResultCallback) -> getTotalUnreadCount
    int getTotalUnreadCount() -> getTotalUnreadCount
    void getUnreadCount(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> getUnreadCount
    int getUnreadCount(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getUnreadCount
    void getUnreadCount(io.rong.imlib.RongIMClient$ResultCallback,io.rong.imlib.model.Conversation$ConversationType[]) -> getUnreadCount
    void getUnreadCount(io.rong.imlib.model.Conversation$ConversationType[],io.rong.imlib.RongIMClient$ResultCallback) -> getUnreadCount
    int getUnreadCount(io.rong.imlib.model.Conversation$ConversationType[]) -> getUnreadCount
    java.util.List getLatestMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int) -> getLatestMessages
    void getLatestMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,io.rong.imlib.RongIMClient$ResultCallback) -> getLatestMessages
    java.util.List getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,int) -> getHistoryMessages
    java.util.List getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,int,int) -> getHistoryMessages
    void getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,int,int,io.rong.imlib.RongIMClient$ResultCallback) -> getHistoryMessages
    void getHistoryMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,int,int,io.rong.imlib.RongIMClient$ResultCallback) -> getHistoryMessages
    boolean deleteMessages(int[]) -> deleteMessages
    void deleteMessages(int[],io.rong.imlib.RongIMClient$ResultCallback) -> deleteMessages
    boolean clearMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearMessages
    void clearMessages(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> clearMessages
    boolean clearMessagesUnreadStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearMessagesUnreadStatus
    void clearMessagesUnreadStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> clearMessagesUnreadStatus
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    void setMessageExtra(int,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> setMessageExtra
    boolean setMessageReceivedStatus(int,io.rong.imlib.model.Message$ReceivedStatus) -> setMessageReceivedStatus
    void setMessageReceivedStatus(int,io.rong.imlib.model.Message$ReceivedStatus,io.rong.imlib.RongIMClient$ResultCallback) -> setMessageReceivedStatus
    boolean setMessageSentStatus(int,io.rong.imlib.model.Message$SentStatus) -> setMessageSentStatus
    void setMessageSentStatus(int,io.rong.imlib.model.Message$SentStatus,io.rong.imlib.RongIMClient$ResultCallback) -> setMessageSentStatus
    java.lang.String getTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> getTextMessageDraft
    void getTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> getTextMessageDraft
    boolean saveTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String) -> saveTextMessageDraft
    void saveTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> saveTextMessageDraft
    boolean clearTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String) -> clearTextMessageDraft
    void clearTextMessageDraft(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> clearTextMessageDraft
    void getDiscussion(java.lang.String,io.rong.imlib.RongIMClient$GetDiscussionCallback) -> getDiscussion
    void setDiscussionName(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> setDiscussionName
    void createDiscussion(java.lang.String,java.util.List,io.rong.imlib.RongIMClient$CreateDiscussionCallback) -> createDiscussion
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imlib.RongIMClient$OperationCallback) -> addMemberToDiscussion
    void removeMemberFromDiscussion(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> removeMemberFromDiscussion
    void quitDiscussion(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitDiscussion
    void insertMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String,io.rong.imlib.RongIMClient$ResultCallback) -> insertMessage
    io.rong.imlib.model.Message insertMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String) -> insertMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    void sendMessage(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.MessageContent,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback,io.rong.imlib.RongIMClient$ResultCallback) -> sendMessage
    void sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback,io.rong.imlib.RongIMClient$ResultCallback) -> sendMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.RongIMClient$SendMessageCallback) -> sendMessage
    void uploadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,android.net.Uri,io.rong.imlib.RongIMClient$UploadMediaCallback) -> uploadMedia
    void uploadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.io.InputStream,io.rong.imlib.RongIMClient$UploadMediaCallback) -> uploadMedia
    void downloadMedia(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$MediaType,java.lang.String,io.rong.imlib.RongIMClient$DownloadMediaCallback) -> downloadMedia
    void getConversationNotificationStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback) -> getConversationNotificationStatus
    void setConversationNotificationStatus(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,io.rong.imlib.model.Conversation$ConversationNotificationStatus,io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback) -> setConversationNotificationStatus
    void setDiscussionInviteStatus(java.lang.String,io.rong.imlib.RongIMClient$DiscussionInviteStatus,io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback) -> setDiscussionInviteStatus
    void syncGroup(java.util.List,io.rong.imlib.RongIMClient$OperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitGroup
    java.lang.String getCurrentUserId() -> getCurrentUserId
    long getDeltaTime() -> getDeltaTime
    void joinChatRoom(java.lang.String,int,io.rong.imlib.RongIMClient$OperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imlib.RongIMClient$OperationCallback) -> quitChatRoom
    void clearConversations(io.rong.imlib.RongIMClient$ResultCallback,io.rong.imlib.model.Conversation$ConversationType[]) -> clearConversations
    boolean clearConversations(io.rong.imlib.model.Conversation$ConversationType[]) -> clearConversations
    void clearNotifications() -> clearNotifications
    void addToBlacklist(java.lang.String,io.rong.imlib.RongIMClient$AddToBlackCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback) -> removeFromBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imlib.RongIMClient$GetUserBlacklistCallback) -> getBlacklistStatus
    void getBlacklist(io.rong.imlib.RongIMClient$GetBlacklistCallback) -> getBlacklist
    void searchPublicAccount(java.lang.String,int,int,io.rong.imlib.RongIMClient$SearchPublicAccountCallback) -> searchPublicAccount
    void subscribePublicAccount(java.lang.String,io.rong.imlib.model.Conversation$ConversationType,boolean,io.rong.imlib.RongIMClient$OperationCallback) -> subscribePublicAccount
    void getPublicAccountInfo(java.lang.String,io.rong.imlib.model.Conversation$ConversationType,io.rong.imlib.RongIMClient$ResultCallback) -> getPublicAccountInfo
    io.rong.imlib.model.PublicServiceInfo getPublicAccountInfo(java.lang.String,io.rong.imlib.model.Conversation$ConversationType) -> getPublicAccountInfo
    void getPublicAccountInfoList(io.rong.imlib.RongIMClient$ResultCallback) -> getPublicAccountInfoList
    void setConversationNotificationQuietHours(java.lang.String,int,io.rong.imlib.RongIMClient$OperationCallback) -> setConversationNotificationQuietHours
    void removeConversationNotificationQuietHours(io.rong.imlib.RongIMClient$OperationCallback) -> removeConversationNotificationQuietHours
    void getConversationNotificationQuietHours(io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback) -> getConversationNotificationQuietHours
    io.rong.imlib.RongIMClient$PushMessageBehaviorListener getPushMessageBehaviorListener() -> getPushMessageBehaviorListener
    void setPushMessageBehaviorListener(io.rong.imlib.RongIMClient$PushMessageBehaviorListener) -> setPushMessageBehaviorListener
    void initConnectionStatus() -> initConnectionStatus
    void initMessageReceiver() -> initMessageReceiver
    boolean filterNatiMessageve(io.rong.imlib.model.Message) -> filterNatiMessageve
    void access$000(io.rong.imlib.RongIMClient) -> access$000
    boolean access$102(io.rong.imlib.RongIMClient,boolean) -> access$102
    io.rong.imlib.ipc.ConnectChangeReceiver access$200(io.rong.imlib.RongIMClient) -> access$200
    java.lang.String access$300(io.rong.imlib.RongIMClient) -> access$300
    io.rong.imlib.RongIMClient$ConnectRunnable access$400(io.rong.imlib.RongIMClient) -> access$400
    io.rong.imlib.RongIMClient$StatusListener access$500(io.rong.imlib.RongIMClient) -> access$500
    void access$600(io.rong.imlib.RongIMClient) -> access$600
    java.lang.String access$702(io.rong.imlib.RongIMClient,java.lang.String) -> access$702
    java.lang.String access$700(io.rong.imlib.RongIMClient) -> access$700
    io.rong.imlib.RongIMClient$ConnectionStatusListener access$800() -> access$800
    io.rong.imlib.RongIMClient$OnReceiveMessageListener access$900() -> access$900
io.rong.imlib.RongIMClient$1 -> io.rong.imlib.RongIMClient$1:
    io.rong.imlib.RongIMClient$ConnectCallback val$callback -> val$callback
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$10 -> io.rong.imlib.RongIMClient$10:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Conversation) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$11 -> io.rong.imlib.RongIMClient$11:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$type -> val$type
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$12 -> io.rong.imlib.RongIMClient$12:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$13 -> io.rong.imlib.RongIMClient$13:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$type -> val$type
    java.lang.String val$id -> val$id
    boolean val$isTop -> val$isTop
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$14 -> io.rong.imlib.RongIMClient$14:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$15 -> io.rong.imlib.RongIMClient$15:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$16 -> io.rong.imlib.RongIMClient$16:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$17 -> io.rong.imlib.RongIMClient$17:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$18 -> io.rong.imlib.RongIMClient$18:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$19 -> io.rong.imlib.RongIMClient$19:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType[] val$conversationTypes -> val$conversationTypes
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$2 -> io.rong.imlib.RongIMClient$2:
    boolean val$isReceivePush -> val$isReceivePush
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$2$1 -> io.rong.imlib.RongIMClient$2$1:
    io.rong.imlib.RongIMClient$2 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$20 -> io.rong.imlib.RongIMClient$20:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$21 -> io.rong.imlib.RongIMClient$21:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$22 -> io.rong.imlib.RongIMClient$22:
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int val$count -> val$count
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$23 -> io.rong.imlib.RongIMClient$23:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$24 -> io.rong.imlib.RongIMClient$24:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$25 -> io.rong.imlib.RongIMClient$25:
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    java.lang.String val$objectName -> val$objectName
    int val$oldestMessageId -> val$oldestMessageId
    int val$count -> val$count
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$26 -> io.rong.imlib.RongIMClient$26:
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int val$oldestMessageId -> val$oldestMessageId
    int val$count -> val$count
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$27 -> io.rong.imlib.RongIMClient$27:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$28 -> io.rong.imlib.RongIMClient$28:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int[] val$messageIds -> val$messageIds
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$29 -> io.rong.imlib.RongIMClient$29:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$3 -> io.rong.imlib.RongIMClient$3:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$30 -> io.rong.imlib.RongIMClient$30:
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$31 -> io.rong.imlib.RongIMClient$31:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$32 -> io.rong.imlib.RongIMClient$32:
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$33 -> io.rong.imlib.RongIMClient$33:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$34 -> io.rong.imlib.RongIMClient$34:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int val$messageId -> val$messageId
    java.lang.String val$value -> val$value
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$35 -> io.rong.imlib.RongIMClient$35:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$36 -> io.rong.imlib.RongIMClient$36:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int val$messageId -> val$messageId
    io.rong.imlib.model.Message$ReceivedStatus val$receivedStatus -> val$receivedStatus
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$37 -> io.rong.imlib.RongIMClient$37:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$38 -> io.rong.imlib.RongIMClient$38:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int val$messageId -> val$messageId
    io.rong.imlib.model.Message$SentStatus val$sentStatus -> val$sentStatus
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$39 -> io.rong.imlib.RongIMClient$39:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$4 -> io.rong.imlib.RongIMClient$4:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$40 -> io.rong.imlib.RongIMClient$40:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation val$conversation -> val$conversation
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$41 -> io.rong.imlib.RongIMClient$41:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$42 -> io.rong.imlib.RongIMClient$42:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation val$conversation -> val$conversation
    java.lang.String val$content -> val$content
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$43 -> io.rong.imlib.RongIMClient$43:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$44 -> io.rong.imlib.RongIMClient$44:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation val$conversation -> val$conversation
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$45 -> io.rong.imlib.RongIMClient$45:
    io.rong.imlib.RongIMClient$GetDiscussionCallback val$callback -> val$callback
    java.lang.String val$discussionId -> val$discussionId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$45$1 -> io.rong.imlib.RongIMClient$45$1:
    io.rong.imlib.RongIMClient$45 this$1 -> this$1
    void onComplete(io.rong.imlib.ipc.model.RemoteModelWrap) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$46 -> io.rong.imlib.RongIMClient$46:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$discussionId -> val$discussionId
    java.lang.String val$name -> val$name
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$46$1 -> io.rong.imlib.RongIMClient$46$1:
    io.rong.imlib.RongIMClient$46 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$47 -> io.rong.imlib.RongIMClient$47:
    io.rong.imlib.RongIMClient$CreateDiscussionCallback val$callback -> val$callback
    java.lang.String val$name -> val$name
    java.util.List val$userIdList -> val$userIdList
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$47$1 -> io.rong.imlib.RongIMClient$47$1:
    io.rong.imlib.RongIMClient$47 this$1 -> this$1
    void onComplete(io.rong.imlib.ipc.model.RemoteModelWrap) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$48 -> io.rong.imlib.RongIMClient$48:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$discussionId -> val$discussionId
    java.util.List val$userIdList -> val$userIdList
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$48$1 -> io.rong.imlib.RongIMClient$48$1:
    io.rong.imlib.RongIMClient$48 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$49 -> io.rong.imlib.RongIMClient$49:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$discussionId -> val$discussionId
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$49$1 -> io.rong.imlib.RongIMClient$49$1:
    io.rong.imlib.RongIMClient$49 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$5 -> io.rong.imlib.RongIMClient$5:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType[] val$types -> val$types
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$50 -> io.rong.imlib.RongIMClient$50:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$discussionId -> val$discussionId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$50$1 -> io.rong.imlib.RongIMClient$50$1:
    io.rong.imlib.RongIMClient$50 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$51 -> io.rong.imlib.RongIMClient$51:
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.model.Conversation$ConversationType val$type -> val$type
    io.rong.imlib.model.MessageContent val$content -> val$content
    java.lang.String val$senderUserId -> val$senderUserId
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    java.lang.String val$pushContent -> val$pushContent
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$52 -> io.rong.imlib.RongIMClient$52:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$53 -> io.rong.imlib.RongIMClient$53:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$54 -> io.rong.imlib.RongIMClient$54:
    io.rong.imlib.RongIMClient$SendMessageCallback val$callback -> val$callback
    io.rong.imlib.model.Message val$message -> val$message
    java.lang.String val$pushContent -> val$pushContent
    io.rong.imlib.RongIMClient$ResultCallback val$resultCallback -> val$resultCallback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$54$1 -> io.rong.imlib.RongIMClient$54$1:
    io.rong.imlib.RongIMClient$54 this$1 -> this$1
    void onComplete(long) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$55 -> io.rong.imlib.RongIMClient$55:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(io.rong.imlib.model.Message) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$56 -> io.rong.imlib.RongIMClient$56:
    io.rong.imlib.RongIMClient$UploadMediaCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation val$conversation -> val$conversation
    android.net.Uri val$uri -> val$uri
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$56$1 -> io.rong.imlib.RongIMClient$56$1:
    io.rong.imlib.RongIMClient$56 this$1 -> this$1
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
    void onProgress(int) -> onProgress
io.rong.imlib.RongIMClient$57 -> io.rong.imlib.RongIMClient$57:
    io.rong.imlib.RongIMClient$DownloadMediaCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation val$conversation -> val$conversation
    io.rong.imlib.RongIMClient$MediaType val$mediaType -> val$mediaType
    java.lang.String val$imageUrl -> val$imageUrl
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$57$1 -> io.rong.imlib.RongIMClient$57$1:
    io.rong.imlib.RongIMClient$57 this$1 -> this$1
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
    void onProgress(int) -> onProgress
io.rong.imlib.RongIMClient$58 -> io.rong.imlib.RongIMClient$58:
    io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$58$1 -> io.rong.imlib.RongIMClient$58$1:
    io.rong.imlib.RongIMClient$58 this$1 -> this$1
    void onComplete(long) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$59 -> io.rong.imlib.RongIMClient$59:
    io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.model.Conversation$ConversationNotificationStatus val$notificationStatus -> val$notificationStatus
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$59$1 -> io.rong.imlib.RongIMClient$59$1:
    io.rong.imlib.RongIMClient$59 this$1 -> this$1
    void onComplete(long) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$6 -> io.rong.imlib.RongIMClient$6:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    int[] val$types -> val$types
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$60 -> io.rong.imlib.RongIMClient$60:
    io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback val$callback -> val$callback
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient$DiscussionInviteStatus val$status -> val$status
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$60$1 -> io.rong.imlib.RongIMClient$60$1:
    io.rong.imlib.RongIMClient$60 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$61 -> io.rong.imlib.RongIMClient$61:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.util.List val$groups -> val$groups
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$61$1 -> io.rong.imlib.RongIMClient$61$1:
    io.rong.imlib.RongIMClient$61 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$62 -> io.rong.imlib.RongIMClient$62:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$groupId -> val$groupId
    java.lang.String val$groupName -> val$groupName
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$62$1 -> io.rong.imlib.RongIMClient$62$1:
    io.rong.imlib.RongIMClient$62 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$63 -> io.rong.imlib.RongIMClient$63:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$groupId -> val$groupId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$63$1 -> io.rong.imlib.RongIMClient$63$1:
    io.rong.imlib.RongIMClient$63 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$64 -> io.rong.imlib.RongIMClient$64:
    long[] val$deltaTime -> val$deltaTime
    java.util.concurrent.CountDownLatch val$countDownLatch -> val$countDownLatch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$65 -> io.rong.imlib.RongIMClient$65:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$id -> val$id
    int val$defMessageCount -> val$defMessageCount
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$65$1 -> io.rong.imlib.RongIMClient$65$1:
    io.rong.imlib.RongIMClient$65 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$66 -> io.rong.imlib.RongIMClient$66:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$id -> val$id
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$66$1 -> io.rong.imlib.RongIMClient$66$1:
    io.rong.imlib.RongIMClient$66 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$67 -> io.rong.imlib.RongIMClient$67:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType[] val$conversationTypes -> val$conversationTypes
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$68 -> io.rong.imlib.RongIMClient$68:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.lang.Boolean) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$69 -> io.rong.imlib.RongIMClient$69:
    io.rong.imlib.RongIMClient$AddToBlackCallback val$callback -> val$callback
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$69$1 -> io.rong.imlib.RongIMClient$69$1:
    io.rong.imlib.RongIMClient$69 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$7 -> io.rong.imlib.RongIMClient$7:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$70 -> io.rong.imlib.RongIMClient$70:
    io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback val$callback -> val$callback
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$70$1 -> io.rong.imlib.RongIMClient$70$1:
    io.rong.imlib.RongIMClient$70 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$71 -> io.rong.imlib.RongIMClient$71:
    io.rong.imlib.RongIMClient$GetUserBlacklistCallback val$callback -> val$callback
    java.lang.String val$userId -> val$userId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$71$1 -> io.rong.imlib.RongIMClient$71$1:
    io.rong.imlib.RongIMClient$71 this$1 -> this$1
    void onComplete(int) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$72 -> io.rong.imlib.RongIMClient$72:
    io.rong.imlib.RongIMClient$GetBlacklistCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$72$1 -> io.rong.imlib.RongIMClient$72$1:
    io.rong.imlib.RongIMClient$72 this$1 -> this$1
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$73 -> io.rong.imlib.RongIMClient$73:
    io.rong.imlib.RongIMClient$SearchPublicAccountCallback val$callback -> val$callback
    java.lang.String val$keyWords -> val$keyWords
    int val$businessType -> val$businessType
    int val$searchType -> val$searchType
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$73$1 -> io.rong.imlib.RongIMClient$73$1:
    io.rong.imlib.RongIMClient$73 this$1 -> this$1
    void onComplete(io.rong.imlib.ipc.model.RemoteModelWrap) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$74 -> io.rong.imlib.RongIMClient$74:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    boolean val$subscribe -> val$subscribe
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$74$1 -> io.rong.imlib.RongIMClient$74$1:
    io.rong.imlib.RongIMClient$74 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$75 -> io.rong.imlib.RongIMClient$75:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.model.Conversation$ConversationType val$conversationType -> val$conversationType
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$75$1 -> io.rong.imlib.RongIMClient$75$1:
    io.rong.imlib.RongIMClient$75 this$1 -> this$1
    void onComplete(io.rong.imlib.ipc.model.RemoteModelWrap) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$76 -> io.rong.imlib.RongIMClient$76:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(io.rong.imlib.model.PublicServiceInfo) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$77 -> io.rong.imlib.RongIMClient$77:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$77$1 -> io.rong.imlib.RongIMClient$77$1:
    io.rong.imlib.RongIMClient$77 this$1 -> this$1
    void onComplete(io.rong.imlib.ipc.model.RemoteModelWrap) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$78 -> io.rong.imlib.RongIMClient$78:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    java.lang.String val$startTime -> val$startTime
    int val$spanMinutes -> val$spanMinutes
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$78$1 -> io.rong.imlib.RongIMClient$78$1:
    io.rong.imlib.RongIMClient$78 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$79 -> io.rong.imlib.RongIMClient$79:
    io.rong.imlib.RongIMClient$OperationCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$79$1 -> io.rong.imlib.RongIMClient$79$1:
    io.rong.imlib.RongIMClient$79 this$1 -> this$1
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.RongIMClient$8 -> io.rong.imlib.RongIMClient$8:
    io.rong.imlib.RongIMClient$ResultCallback$Result val$result -> val$result
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onSuccess(java.util.List) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$80 -> io.rong.imlib.RongIMClient$80:
    io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback val$callback -> val$callback
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$80$1 -> io.rong.imlib.RongIMClient$80$1:
    io.rong.imlib.RongIMClient$80 this$1 -> this$1
    void onSuccess(java.lang.String,int) -> onSuccess
    void onError(int) -> onError
io.rong.imlib.RongIMClient$81 -> io.rong.imlib.RongIMClient$81:
    io.rong.imlib.RongIMClient this$0 -> this$0
    boolean onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.imlib.RongIMClient$9 -> io.rong.imlib.RongIMClient$9:
    io.rong.imlib.RongIMClient$ResultCallback val$callback -> val$callback
    io.rong.imlib.model.Conversation$ConversationType val$type -> val$type
    java.lang.String val$targetId -> val$targetId
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$AddToBlackCallback -> io.rong.imlib.RongIMClient$AddToBlackCallback:
io.rong.imlib.RongIMClient$AidlConnection -> io.rong.imlib.RongIMClient$AidlConnection:
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
io.rong.imlib.RongIMClient$BlacklistStatus -> io.rong.imlib.RongIMClient$BlacklistStatus:
    io.rong.imlib.RongIMClient$BlacklistStatus EXIT_BLACK_LIST -> EXIT_BLACK_LIST
    io.rong.imlib.RongIMClient$BlacklistStatus NOT_EXIT_BLACK_LIST -> NOT_EXIT_BLACK_LIST
    int value -> value
    io.rong.imlib.RongIMClient$BlacklistStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$BlacklistStatus[] values() -> values
    io.rong.imlib.RongIMClient$BlacklistStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$BlacklistStatus setValue(int) -> setValue
io.rong.imlib.RongIMClient$Callback -> io.rong.imlib.RongIMClient$Callback:
    void onCallback() -> onCallback
    void onFail(int) -> onFail
    void onFail(io.rong.imlib.RongIMClient$ErrorCode) -> onFail
    void onSuccess() -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
io.rong.imlib.RongIMClient$Callback$1 -> io.rong.imlib.RongIMClient$Callback$1:
    io.rong.imlib.RongIMClient$Callback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$Callback$2 -> io.rong.imlib.RongIMClient$Callback$2:
    int val$errorCode -> val$errorCode
    io.rong.imlib.RongIMClient$Callback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$Callback$3 -> io.rong.imlib.RongIMClient$Callback$3:
    io.rong.imlib.RongIMClient$ErrorCode val$errorCode -> val$errorCode
    io.rong.imlib.RongIMClient$Callback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$ConnectCallback -> io.rong.imlib.RongIMClient$ConnectCallback:
io.rong.imlib.RongIMClient$ConnectRunnable -> io.rong.imlib.RongIMClient$ConnectRunnable:
    java.lang.String token -> token
    io.rong.imlib.RongIMClient$ConnectCallback connectCallback -> connectCallback
    void run() -> run
io.rong.imlib.RongIMClient$ConnectionStatusListener -> io.rong.imlib.RongIMClient$ConnectionStatusListener:
    void onChanged(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onChanged
io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus -> io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus:
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus DISCONNECTED -> DISCONNECTED
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus CONNECTED -> CONNECTED
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus CONNECTING -> CONNECTING
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus NETWORK_UNAVAILABLE -> NETWORK_UNAVAILABLE
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus KICKED_OFFLINE_BY_OTHER_CLIENT -> KICKED_OFFLINE_BY_OTHER_CLIENT
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$ErrorCode errorCode -> errorCode
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus[] values() -> values
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus setValue(int) -> setValue
    io.rong.imlib.RongIMClient$ErrorCode getErrorCode() -> getErrorCode
io.rong.imlib.RongIMClient$CreateDiscussionCallback -> io.rong.imlib.RongIMClient$CreateDiscussionCallback:
io.rong.imlib.RongIMClient$DiscussionInviteStatus -> io.rong.imlib.RongIMClient$DiscussionInviteStatus:
    io.rong.imlib.RongIMClient$DiscussionInviteStatus CLOSED -> CLOSED
    io.rong.imlib.RongIMClient$DiscussionInviteStatus OPENED -> OPENED
    int value -> value
    io.rong.imlib.RongIMClient$DiscussionInviteStatus[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$DiscussionInviteStatus[] values() -> values
    io.rong.imlib.RongIMClient$DiscussionInviteStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$DiscussionInviteStatus setValue(int) -> setValue
io.rong.imlib.RongIMClient$DownloadMediaCallback -> io.rong.imlib.RongIMClient$DownloadMediaCallback:
    void onProgress(int) -> onProgress
    void onProgressCallback(int) -> onProgressCallback
io.rong.imlib.RongIMClient$DownloadMediaCallback$1 -> io.rong.imlib.RongIMClient$DownloadMediaCallback$1:
    int val$progress -> val$progress
    io.rong.imlib.RongIMClient$DownloadMediaCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$ErrorCode -> io.rong.imlib.RongIMClient$ErrorCode:
    io.rong.imlib.RongIMClient$ErrorCode IPC_DISCONNECT -> IPC_DISCONNECT
    io.rong.imlib.RongIMClient$ErrorCode UNKNOWN -> UNKNOWN
    io.rong.imlib.RongIMClient$ErrorCode RC_NET_CHANNEL_INVALID -> RC_NET_CHANNEL_INVALID
    io.rong.imlib.RongIMClient$ErrorCode RC_NET_UNAVAILABLE -> RC_NET_UNAVAILABLE
    io.rong.imlib.RongIMClient$ErrorCode RC_MSG_RESP_TIMEOUT -> RC_MSG_RESP_TIMEOUT
    io.rong.imlib.RongIMClient$ErrorCode RC_HTTP_SEND_FAIL -> RC_HTTP_SEND_FAIL
    io.rong.imlib.RongIMClient$ErrorCode RC_HTTP_REQ_TIMEOUT -> RC_HTTP_REQ_TIMEOUT
    io.rong.imlib.RongIMClient$ErrorCode RC_HTTP_RECV_FAIL -> RC_HTTP_RECV_FAIL
    io.rong.imlib.RongIMClient$ErrorCode RC_NAVI_RESOURCE_ERROR -> RC_NAVI_RESOURCE_ERROR
    io.rong.imlib.RongIMClient$ErrorCode RC_NODE_NOT_FOUND -> RC_NODE_NOT_FOUND
    io.rong.imlib.RongIMClient$ErrorCode RC_DOMAIN_NOT_RESOLVE -> RC_DOMAIN_NOT_RESOLVE
    io.rong.imlib.RongIMClient$ErrorCode RC_SOCKET_NOT_CREATED -> RC_SOCKET_NOT_CREATED
    io.rong.imlib.RongIMClient$ErrorCode RC_SOCKET_DISCONNECTED -> RC_SOCKET_DISCONNECTED
    io.rong.imlib.RongIMClient$ErrorCode RC_PING_SEND_FAIL -> RC_PING_SEND_FAIL
    io.rong.imlib.RongIMClient$ErrorCode RC_PONG_RECV_FAIL -> RC_PONG_RECV_FAIL
    io.rong.imlib.RongIMClient$ErrorCode RC_MSG_SEND_FAIL -> RC_MSG_SEND_FAIL
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_ACK_TIMEOUT -> RC_CONN_ACK_TIMEOUT
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_PROTO_VERSION_ERROR -> RC_CONN_PROTO_VERSION_ERROR
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_ID_REJECT -> RC_CONN_ID_REJECT
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_SERVER_UNAVAILABLE -> RC_CONN_SERVER_UNAVAILABLE
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_USER_OR_PASSWD_ERROR -> RC_CONN_USER_OR_PASSWD_ERROR
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_NOT_AUTHRORIZED -> RC_CONN_NOT_AUTHRORIZED
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_REDIRECTED -> RC_CONN_REDIRECTED
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_PACKAGE_NAME_INVALID -> RC_CONN_PACKAGE_NAME_INVALID
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_APP_BLOCKED_OR_DELETED -> RC_CONN_APP_BLOCKED_OR_DELETED
    io.rong.imlib.RongIMClient$ErrorCode RC_CONN_USER_BLOCKED -> RC_CONN_USER_BLOCKED
    io.rong.imlib.RongIMClient$ErrorCode RC_DISCONN_KICK -> RC_DISCONN_KICK
    io.rong.imlib.RongIMClient$ErrorCode RC_DISCONN_EXCEPTION -> RC_DISCONN_EXCEPTION
    io.rong.imlib.RongIMClient$ErrorCode RC_QUERY_ACK_NO_DATA -> RC_QUERY_ACK_NO_DATA
    io.rong.imlib.RongIMClient$ErrorCode RC_MSG_DATA_INCOMPLETE -> RC_MSG_DATA_INCOMPLETE
    io.rong.imlib.RongIMClient$ErrorCode BIZ_ERROR_CLIENT_NOT_INIT -> BIZ_ERROR_CLIENT_NOT_INIT
    io.rong.imlib.RongIMClient$ErrorCode BIZ_ERROR_DATABASE_ERROR -> BIZ_ERROR_DATABASE_ERROR
    io.rong.imlib.RongIMClient$ErrorCode BIZ_ERROR_INVALID_PARAMETER -> BIZ_ERROR_INVALID_PARAMETER
    io.rong.imlib.RongIMClient$ErrorCode BIZ_ERROR_NO_CHANNEL -> BIZ_ERROR_NO_CHANNEL
    io.rong.imlib.RongIMClient$ErrorCode BIZ_ERROR_RECONNECT_SUCCESS -> BIZ_ERROR_RECONNECT_SUCCESS
    io.rong.imlib.RongIMClient$ErrorCode BIZ_ERROR_CONNECTING -> BIZ_ERROR_CONNECTING
    int code -> code
    java.lang.String msg -> msg
    io.rong.imlib.RongIMClient$ErrorCode[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$ErrorCode[] values() -> values
    io.rong.imlib.RongIMClient$ErrorCode valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getMessage() -> getMessage
    io.rong.imlib.RongIMClient$ErrorCode setValue(int) -> setValue
io.rong.imlib.RongIMClient$GetBlacklistCallback -> io.rong.imlib.RongIMClient$GetBlacklistCallback:
io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback -> io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback:
    void onSuccess(java.lang.String,int) -> onSuccess
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onCallback(java.lang.String,int) -> onCallback
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback$1 -> io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback$1:
    java.lang.String val$startTime -> val$startTime
    int val$spanMinutes -> val$spanMinutes
    io.rong.imlib.RongIMClient$GetConversationNotificationQuietHoursCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback -> io.rong.imlib.RongIMClient$GetConversationNotificationStatusCallback:
io.rong.imlib.RongIMClient$GetDiscussionCallback -> io.rong.imlib.RongIMClient$GetDiscussionCallback:
io.rong.imlib.RongIMClient$GetUserBlacklistCallback -> io.rong.imlib.RongIMClient$GetUserBlacklistCallback:
io.rong.imlib.RongIMClient$MediaType -> io.rong.imlib.RongIMClient$MediaType:
    io.rong.imlib.RongIMClient$MediaType IMAGE -> IMAGE
    io.rong.imlib.RongIMClient$MediaType AUDIO -> AUDIO
    io.rong.imlib.RongIMClient$MediaType VIDEO -> VIDEO
    io.rong.imlib.RongIMClient$MediaType FILE -> FILE
    int value -> value
    io.rong.imlib.RongIMClient$MediaType[] $VALUES -> $VALUES
    io.rong.imlib.RongIMClient$MediaType[] values() -> values
    io.rong.imlib.RongIMClient$MediaType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.RongIMClient$MediaType setValue(int) -> setValue
io.rong.imlib.RongIMClient$OnReceiveMessageListener -> io.rong.imlib.RongIMClient$OnReceiveMessageListener:
    boolean onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.imlib.RongIMClient$OperationCallback -> io.rong.imlib.RongIMClient$OperationCallback:
io.rong.imlib.RongIMClient$PushMessageBehaviorListener -> io.rong.imlib.RongIMClient$PushMessageBehaviorListener:
    boolean onPushMessageArrive(io.rong.notification.PushNotificationMessage) -> onPushMessageArrive
io.rong.imlib.RongIMClient$RegRunnable -> io.rong.imlib.RongIMClient$RegRunnable:
    io.rong.imlib.RongIMClient this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback -> io.rong.imlib.RongIMClient$RemoveFromBlacklistCallback:
io.rong.imlib.RongIMClient$ResultCallback -> io.rong.imlib.RongIMClient$ResultCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onFail(int) -> onFail
    void onFail(io.rong.imlib.RongIMClient$ErrorCode) -> onFail
    void onCallback(java.lang.Object) -> onCallback
io.rong.imlib.RongIMClient$ResultCallback$1 -> io.rong.imlib.RongIMClient$ResultCallback$1:
    int val$errorCode -> val$errorCode
    io.rong.imlib.RongIMClient$ResultCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$ResultCallback$2 -> io.rong.imlib.RongIMClient$ResultCallback$2:
    io.rong.imlib.RongIMClient$ErrorCode val$errorCode -> val$errorCode
    io.rong.imlib.RongIMClient$ResultCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$ResultCallback$3 -> io.rong.imlib.RongIMClient$ResultCallback$3:
    java.lang.Object val$t -> val$t
    io.rong.imlib.RongIMClient$ResultCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$ResultCallback$Result -> io.rong.imlib.RongIMClient$ResultCallback$Result:
    java.lang.Object t -> t
io.rong.imlib.RongIMClient$SearchPublicAccountCallback -> io.rong.imlib.RongIMClient$SearchPublicAccountCallback:
io.rong.imlib.RongIMClient$SendMessageCallback -> io.rong.imlib.RongIMClient$SendMessageCallback:
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onFail(int) -> onFail
    void onFail(io.rong.imlib.RongIMClient$ErrorCode) -> onFail
    void onError(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onFail(java.lang.Integer,int) -> onFail
    void onFail(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onFail
io.rong.imlib.RongIMClient$SendMessageCallback$1 -> io.rong.imlib.RongIMClient$SendMessageCallback$1:
    java.lang.Integer val$messageId -> val$messageId
    int val$errorCode -> val$errorCode
    io.rong.imlib.RongIMClient$SendMessageCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$SendMessageCallback$2 -> io.rong.imlib.RongIMClient$SendMessageCallback$2:
    java.lang.Integer val$messageId -> val$messageId
    io.rong.imlib.RongIMClient$ErrorCode val$errorCode -> val$errorCode
    io.rong.imlib.RongIMClient$SendMessageCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback -> io.rong.imlib.RongIMClient$SetConversationNotificationStatusCallback:
io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback -> io.rong.imlib.RongIMClient$SetDiscussionInviteStatusCallback:
io.rong.imlib.RongIMClient$StatusListener -> io.rong.imlib.RongIMClient$StatusListener:
    io.rong.imlib.RongIMClient this$0 -> this$0
    void onChanged(int) -> onChanged
    void onStatusChange(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onStatusChange
io.rong.imlib.RongIMClient$SyncCallback -> io.rong.imlib.RongIMClient$SyncCallback:
    void onFail(int) -> onFail
    void onFail(io.rong.imlib.RongIMClient$ErrorCode) -> onFail
    void onCallback(java.lang.Object) -> onCallback
io.rong.imlib.RongIMClient$UploadMediaCallback -> io.rong.imlib.RongIMClient$UploadMediaCallback:
    void onProgress(int) -> onProgress
    void onProgressCallback(int) -> onProgressCallback
io.rong.imlib.RongIMClient$UploadMediaCallback$1 -> io.rong.imlib.RongIMClient$UploadMediaCallback$1:
    int val$progress -> val$progress
    io.rong.imlib.RongIMClient$UploadMediaCallback this$0 -> this$0
    void run() -> run
io.rong.imlib.RongWakeLock -> io.rong.imlib.RongWakeLock:
    android.os.PowerManager$WakeLock mLock -> mLock
    android.content.Context mContext -> mContext
    void acquireWakeLock(int) -> acquireWakeLock
    void acquireWakeLock(int,int) -> acquireWakeLock
    void acquireWakeLock() -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
io.rong.imlib.StringUtil -> io.rong.imlib.StringUtil:
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    boolean isEmpty(java.lang.String) -> isEmpty
    java.lang.String ClearSymbols(java.lang.String) -> ClearSymbols
io.rong.imlib.Utils -> io.rong.imlib.Utils:
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
io.rong.imlib.WakeLockUtils -> io.rong.imlib.WakeLockUtils:
    int HEARTBEAT_SPAN -> HEARTBEAT_SPAN
    void startNextHeartbeat(android.content.Context) -> startNextHeartbeat
    void cancelHeartbeat(android.content.Context) -> cancelHeartbeat
io.rong.imlib.ipc.ConnectChangeReceiver -> io.rong.imlib.ipc.ConnectChangeReceiver:
    java.lang.String RECONNECT_ACTION -> RECONNECT_ACTION
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.imlib.ipc.LibContext -> io.rong.imlib.ipc.LibContext:
    io.rong.imlib.ipc.LibContext sS -> sS
    io.rong.imlib.NativeClient mClient -> mClient
    void init(android.content.Context) -> init
    io.rong.imlib.ipc.LibContext getInstance() -> getInstance
    void setClient(io.rong.imlib.NativeClient) -> setClient
    io.rong.imlib.NativeClient getClient() -> getClient
io.rong.imlib.ipc.PushMessageReceiver -> io.rong.imlib.ipc.PushMessageReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    io.rong.imlib.model.Conversation$ConversationType findConversationTypeById(java.lang.String) -> findConversationTypeById
    boolean isValidPushMsg(android.os.Bundle) -> isValidPushMsg
    void startVoIP(android.content.Context,android.os.Bundle) -> startVoIP
io.rong.imlib.ipc.RLog -> io.rong.imlib.ipc.RLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int v(java.lang.Object,java.lang.String,java.lang.String) -> v
    int v(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.Object,java.lang.String,java.lang.String) -> d
    int d(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.Object,java.lang.String,java.lang.String) -> i
    int i(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.Object,java.lang.String,java.lang.String) -> w
    int w(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.Object,java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.Object,java.lang.String,java.lang.String) -> e
    int e(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> e
    int wtf(java.lang.Object,java.lang.String,java.lang.String) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.Throwable) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
io.rong.imlib.ipc.RongExceptionHandler -> io.rong.imlib.ipc.RongExceptionHandler:
    android.content.Context mContext -> mContext
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
io.rong.imlib.ipc.RongService -> io.rong.imlib.ipc.RongService:
    io.rong.imlib.LibHandlerStub mStub -> mStub
    java.lang.String TAG -> TAG
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
io.rong.imlib.ipc.SystemUtils -> io.rong.imlib.ipc.SystemUtils:
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
io.rong.imlib.ipc.model.RemoteModelWrap -> io.rong.imlib.ipc.model.RemoteModelWrap:
    android.os.Parcelable modle -> modle
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.os.Parcelable getContent() -> getContent
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.ipc.model.RemoteModelWrap$1 -> io.rong.imlib.ipc.model.RemoteModelWrap$1:
    io.rong.imlib.ipc.model.RemoteModelWrap createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.ipc.model.RemoteModelWrap[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.ipc.remote.IBooleanCallback -> io.rong.imlib.ipc.remote.IBooleanCallback:
    void onComplete(boolean) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IBooleanCallback$Stub -> io.rong.imlib.ipc.remote.IBooleanCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    io.rong.imlib.ipc.remote.IBooleanCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IBooleanCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IBooleanCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete(boolean) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IConnectionStatusListener -> io.rong.imlib.ipc.remote.IConnectionStatusListener:
    void onChanged(int) -> onChanged
io.rong.imlib.ipc.remote.IConnectionStatusListener$Stub -> io.rong.imlib.ipc.remote.IConnectionStatusListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onChanged -> TRANSACTION_onChanged
    io.rong.imlib.ipc.remote.IConnectionStatusListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IConnectionStatusListener$Stub$Proxy -> io.rong.imlib.ipc.remote.IConnectionStatusListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onChanged(int) -> onChanged
io.rong.imlib.ipc.remote.IDownloadMediaCallback -> io.rong.imlib.ipc.remote.IDownloadMediaCallback:
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
    void onProgress(int) -> onProgress
io.rong.imlib.ipc.remote.IDownloadMediaCallback$Stub -> io.rong.imlib.ipc.remote.IDownloadMediaCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    int TRANSACTION_onProgress -> TRANSACTION_onProgress
    io.rong.imlib.ipc.remote.IDownloadMediaCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IDownloadMediaCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IDownloadMediaCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
    void onProgress(int) -> onProgress
io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback -> io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback:
    void onSuccess(java.lang.String,int) -> onSuccess
    void onError(int) -> onError
io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback$Stub -> io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onSuccess -> TRANSACTION_onSuccess
    int TRANSACTION_onError -> TRANSACTION_onError
    io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onSuccess(java.lang.String,int) -> onSuccess
    void onError(int) -> onError
io.rong.imlib.ipc.remote.IHandler -> io.rong.imlib.ipc.remote.IHandler:
    void connect(java.lang.String,io.rong.imlib.ipc.remote.IStringCallback) -> connect
    void disconnect(boolean,io.rong.imlib.ipc.remote.IOperationCallback) -> disconnect
    void registerMessageType(java.lang.String) -> registerMessageType
    int getTotalUnreadCount() -> getTotalUnreadCount
    int getUnreadCount(int[]) -> getUnreadCount
    int getUnreadCountById(int,java.lang.String) -> getUnreadCountById
    void setOnReceiveMessageListener(io.rong.imlib.ipc.remote.OnReceiveMessageListener) -> setOnReceiveMessageListener
    void setConnectionStatusListener(io.rong.imlib.ipc.remote.IConnectionStatusListener) -> setConnectionStatusListener
    io.rong.imlib.model.Message insertMessage(io.rong.imlib.model.Message,java.lang.String) -> insertMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.ipc.remote.ILongCallback) -> sendMessage
    java.util.List getNewestMessages(io.rong.imlib.model.Conversation,int) -> getNewestMessages
    java.util.List getOlderMessages(io.rong.imlib.model.Conversation,long,int) -> getOlderMessages
    java.util.List getOlderMessagesByObjectName(io.rong.imlib.model.Conversation,java.lang.String,long,int) -> getOlderMessagesByObjectName
    boolean deleteMessage(int[]) -> deleteMessage
    boolean clearMessages(io.rong.imlib.model.Conversation) -> clearMessages
    boolean clearMessagesUnreadStatus(io.rong.imlib.model.Conversation) -> clearMessagesUnreadStatus
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    boolean setMessageReceivedStatus(int,int) -> setMessageReceivedStatus
    boolean setMessageSentStatus(int,int) -> setMessageSentStatus
    java.util.List getConversationList() -> getConversationList
    java.util.List getConversationListByType(int[]) -> getConversationListByType
    io.rong.imlib.model.Conversation getConversation(int,java.lang.String) -> getConversation
    boolean removeConversation(int,java.lang.String) -> removeConversation
    boolean saveConversationDraft(io.rong.imlib.model.Conversation,java.lang.String) -> saveConversationDraft
    java.lang.String getConversationDraft(io.rong.imlib.model.Conversation) -> getConversationDraft
    boolean cleanConversationDraft(io.rong.imlib.model.Conversation) -> cleanConversationDraft
    void getConversationNotificationStatus(int,java.lang.String,io.rong.imlib.ipc.remote.ILongCallback) -> getConversationNotificationStatus
    void setConversationNotificationStatus(int,java.lang.String,int,io.rong.imlib.ipc.remote.ILongCallback) -> setConversationNotificationStatus
    boolean setConversationTopStatus(int,java.lang.String,boolean) -> setConversationTopStatus
    int getConversationUnreadCount(io.rong.imlib.model.Conversation) -> getConversationUnreadCount
    boolean clearConversations(int[]) -> clearConversations
    void setConversationNotificationQuietHours(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> setConversationNotificationQuietHours
    void removeConversationNotificationQuietHours(io.rong.imlib.ipc.remote.IOperationCallback) -> removeConversationNotificationQuietHours
    void getConversationNotificationQuietHours(io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback) -> getConversationNotificationQuietHours
    void getDiscussion(java.lang.String,io.rong.imlib.ipc.remote.IResultCallback) -> getDiscussion
    void setDiscussionName(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> setDiscussionName
    void createDiscussion(java.lang.String,java.util.List,io.rong.imlib.ipc.remote.IResultCallback) -> createDiscussion
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imlib.ipc.remote.IOperationCallback) -> addMemberToDiscussion
    void removeDiscussionMember(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> removeDiscussionMember
    void quitDiscussion(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitDiscussion
    void syncGroup(java.util.List,io.rong.imlib.ipc.remote.IOperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitGroup
    void joinChatRoom(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitChatRoom
    void searchPublicAccount(java.lang.String,int,int,io.rong.imlib.ipc.remote.IResultCallback) -> searchPublicAccount
    void subscribePublicAccount(java.lang.String,int,boolean,io.rong.imlib.ipc.remote.IOperationCallback) -> subscribePublicAccount
    void getPublicAccountInfo(java.lang.String,int,io.rong.imlib.ipc.remote.IResultCallback) -> getPublicAccountInfo
    void getPublicAccountInfoList(io.rong.imlib.ipc.remote.IResultCallback) -> getPublicAccountInfoList
    boolean validateAuth(java.lang.String) -> validateAuth
    void uploadMedia(io.rong.imlib.model.Conversation,java.lang.String,io.rong.imlib.ipc.remote.IUploadCallback) -> uploadMedia
    void downloadMedia(io.rong.imlib.model.Conversation,int,java.lang.String,io.rong.imlib.ipc.remote.IDownloadMediaCallback) -> downloadMedia
    long getDeltaTime() -> getDeltaTime
    void setDiscussionInviteStatus(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> setDiscussionInviteStatus
    void addToBlacklist(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> removeFromBlacklist
    java.lang.String getTextMessageDraft(io.rong.imlib.model.Conversation) -> getTextMessageDraft
    boolean saveTextMessageDraft(io.rong.imlib.model.Conversation,java.lang.String) -> saveTextMessageDraft
    boolean clearTextMessageDraft(io.rong.imlib.model.Conversation) -> clearTextMessageDraft
    void getBlacklist(io.rong.imlib.ipc.remote.IStringCallback) -> getBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imlib.ipc.remote.IIntegerCallback) -> getBlacklistStatus
io.rong.imlib.ipc.remote.IHandler$Stub -> io.rong.imlib.ipc.remote.IHandler$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_connect -> TRANSACTION_connect
    int TRANSACTION_disconnect -> TRANSACTION_disconnect
    int TRANSACTION_registerMessageType -> TRANSACTION_registerMessageType
    int TRANSACTION_getTotalUnreadCount -> TRANSACTION_getTotalUnreadCount
    int TRANSACTION_getUnreadCount -> TRANSACTION_getUnreadCount
    int TRANSACTION_getUnreadCountById -> TRANSACTION_getUnreadCountById
    int TRANSACTION_setOnReceiveMessageListener -> TRANSACTION_setOnReceiveMessageListener
    int TRANSACTION_setConnectionStatusListener -> TRANSACTION_setConnectionStatusListener
    int TRANSACTION_insertMessage -> TRANSACTION_insertMessage
    int TRANSACTION_sendMessage -> TRANSACTION_sendMessage
    int TRANSACTION_getNewestMessages -> TRANSACTION_getNewestMessages
    int TRANSACTION_getOlderMessages -> TRANSACTION_getOlderMessages
    int TRANSACTION_getOlderMessagesByObjectName -> TRANSACTION_getOlderMessagesByObjectName
    int TRANSACTION_deleteMessage -> TRANSACTION_deleteMessage
    int TRANSACTION_clearMessages -> TRANSACTION_clearMessages
    int TRANSACTION_clearMessagesUnreadStatus -> TRANSACTION_clearMessagesUnreadStatus
    int TRANSACTION_setMessageExtra -> TRANSACTION_setMessageExtra
    int TRANSACTION_setMessageReceivedStatus -> TRANSACTION_setMessageReceivedStatus
    int TRANSACTION_setMessageSentStatus -> TRANSACTION_setMessageSentStatus
    int TRANSACTION_getConversationList -> TRANSACTION_getConversationList
    int TRANSACTION_getConversationListByType -> TRANSACTION_getConversationListByType
    int TRANSACTION_getConversation -> TRANSACTION_getConversation
    int TRANSACTION_removeConversation -> TRANSACTION_removeConversation
    int TRANSACTION_saveConversationDraft -> TRANSACTION_saveConversationDraft
    int TRANSACTION_getConversationDraft -> TRANSACTION_getConversationDraft
    int TRANSACTION_cleanConversationDraft -> TRANSACTION_cleanConversationDraft
    int TRANSACTION_getConversationNotificationStatus -> TRANSACTION_getConversationNotificationStatus
    int TRANSACTION_setConversationNotificationStatus -> TRANSACTION_setConversationNotificationStatus
    int TRANSACTION_setConversationTopStatus -> TRANSACTION_setConversationTopStatus
    int TRANSACTION_getConversationUnreadCount -> TRANSACTION_getConversationUnreadCount
    int TRANSACTION_clearConversations -> TRANSACTION_clearConversations
    int TRANSACTION_setConversationNotificationQuietHours -> TRANSACTION_setConversationNotificationQuietHours
    int TRANSACTION_removeConversationNotificationQuietHours -> TRANSACTION_removeConversationNotificationQuietHours
    int TRANSACTION_getConversationNotificationQuietHours -> TRANSACTION_getConversationNotificationQuietHours
    int TRANSACTION_getDiscussion -> TRANSACTION_getDiscussion
    int TRANSACTION_setDiscussionName -> TRANSACTION_setDiscussionName
    int TRANSACTION_createDiscussion -> TRANSACTION_createDiscussion
    int TRANSACTION_addMemberToDiscussion -> TRANSACTION_addMemberToDiscussion
    int TRANSACTION_removeDiscussionMember -> TRANSACTION_removeDiscussionMember
    int TRANSACTION_quitDiscussion -> TRANSACTION_quitDiscussion
    int TRANSACTION_syncGroup -> TRANSACTION_syncGroup
    int TRANSACTION_joinGroup -> TRANSACTION_joinGroup
    int TRANSACTION_quitGroup -> TRANSACTION_quitGroup
    int TRANSACTION_joinChatRoom -> TRANSACTION_joinChatRoom
    int TRANSACTION_quitChatRoom -> TRANSACTION_quitChatRoom
    int TRANSACTION_searchPublicAccount -> TRANSACTION_searchPublicAccount
    int TRANSACTION_subscribePublicAccount -> TRANSACTION_subscribePublicAccount
    int TRANSACTION_getPublicAccountInfo -> TRANSACTION_getPublicAccountInfo
    int TRANSACTION_getPublicAccountInfoList -> TRANSACTION_getPublicAccountInfoList
    int TRANSACTION_validateAuth -> TRANSACTION_validateAuth
    int TRANSACTION_uploadMedia -> TRANSACTION_uploadMedia
    int TRANSACTION_downloadMedia -> TRANSACTION_downloadMedia
    int TRANSACTION_getDeltaTime -> TRANSACTION_getDeltaTime
    int TRANSACTION_setDiscussionInviteStatus -> TRANSACTION_setDiscussionInviteStatus
    int TRANSACTION_addToBlacklist -> TRANSACTION_addToBlacklist
    int TRANSACTION_removeFromBlacklist -> TRANSACTION_removeFromBlacklist
    int TRANSACTION_getTextMessageDraft -> TRANSACTION_getTextMessageDraft
    int TRANSACTION_saveTextMessageDraft -> TRANSACTION_saveTextMessageDraft
    int TRANSACTION_clearTextMessageDraft -> TRANSACTION_clearTextMessageDraft
    int TRANSACTION_getBlacklist -> TRANSACTION_getBlacklist
    int TRANSACTION_getBlacklistStatus -> TRANSACTION_getBlacklistStatus
    io.rong.imlib.ipc.remote.IHandler asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IHandler$Stub$Proxy -> io.rong.imlib.ipc.remote.IHandler$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void connect(java.lang.String,io.rong.imlib.ipc.remote.IStringCallback) -> connect
    void disconnect(boolean,io.rong.imlib.ipc.remote.IOperationCallback) -> disconnect
    void registerMessageType(java.lang.String) -> registerMessageType
    int getTotalUnreadCount() -> getTotalUnreadCount
    int getUnreadCount(int[]) -> getUnreadCount
    int getUnreadCountById(int,java.lang.String) -> getUnreadCountById
    void setOnReceiveMessageListener(io.rong.imlib.ipc.remote.OnReceiveMessageListener) -> setOnReceiveMessageListener
    void setConnectionStatusListener(io.rong.imlib.ipc.remote.IConnectionStatusListener) -> setConnectionStatusListener
    io.rong.imlib.model.Message insertMessage(io.rong.imlib.model.Message,java.lang.String) -> insertMessage
    io.rong.imlib.model.Message sendMessage(io.rong.imlib.model.Message,java.lang.String,io.rong.imlib.ipc.remote.ILongCallback) -> sendMessage
    java.util.List getNewestMessages(io.rong.imlib.model.Conversation,int) -> getNewestMessages
    java.util.List getOlderMessages(io.rong.imlib.model.Conversation,long,int) -> getOlderMessages
    java.util.List getOlderMessagesByObjectName(io.rong.imlib.model.Conversation,java.lang.String,long,int) -> getOlderMessagesByObjectName
    boolean deleteMessage(int[]) -> deleteMessage
    boolean clearMessages(io.rong.imlib.model.Conversation) -> clearMessages
    boolean clearMessagesUnreadStatus(io.rong.imlib.model.Conversation) -> clearMessagesUnreadStatus
    boolean setMessageExtra(int,java.lang.String) -> setMessageExtra
    boolean setMessageReceivedStatus(int,int) -> setMessageReceivedStatus
    boolean setMessageSentStatus(int,int) -> setMessageSentStatus
    java.util.List getConversationList() -> getConversationList
    java.util.List getConversationListByType(int[]) -> getConversationListByType
    io.rong.imlib.model.Conversation getConversation(int,java.lang.String) -> getConversation
    boolean removeConversation(int,java.lang.String) -> removeConversation
    boolean saveConversationDraft(io.rong.imlib.model.Conversation,java.lang.String) -> saveConversationDraft
    java.lang.String getConversationDraft(io.rong.imlib.model.Conversation) -> getConversationDraft
    boolean cleanConversationDraft(io.rong.imlib.model.Conversation) -> cleanConversationDraft
    void getConversationNotificationStatus(int,java.lang.String,io.rong.imlib.ipc.remote.ILongCallback) -> getConversationNotificationStatus
    void setConversationNotificationStatus(int,java.lang.String,int,io.rong.imlib.ipc.remote.ILongCallback) -> setConversationNotificationStatus
    boolean setConversationTopStatus(int,java.lang.String,boolean) -> setConversationTopStatus
    int getConversationUnreadCount(io.rong.imlib.model.Conversation) -> getConversationUnreadCount
    boolean clearConversations(int[]) -> clearConversations
    void setConversationNotificationQuietHours(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> setConversationNotificationQuietHours
    void removeConversationNotificationQuietHours(io.rong.imlib.ipc.remote.IOperationCallback) -> removeConversationNotificationQuietHours
    void getConversationNotificationQuietHours(io.rong.imlib.ipc.remote.IGetConversationNotificationQuietHoursCallback) -> getConversationNotificationQuietHours
    void getDiscussion(java.lang.String,io.rong.imlib.ipc.remote.IResultCallback) -> getDiscussion
    void setDiscussionName(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> setDiscussionName
    void createDiscussion(java.lang.String,java.util.List,io.rong.imlib.ipc.remote.IResultCallback) -> createDiscussion
    void addMemberToDiscussion(java.lang.String,java.util.List,io.rong.imlib.ipc.remote.IOperationCallback) -> addMemberToDiscussion
    void removeDiscussionMember(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> removeDiscussionMember
    void quitDiscussion(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitDiscussion
    void syncGroup(java.util.List,io.rong.imlib.ipc.remote.IOperationCallback) -> syncGroup
    void joinGroup(java.lang.String,java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> joinGroup
    void quitGroup(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitGroup
    void joinChatRoom(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> joinChatRoom
    void quitChatRoom(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> quitChatRoom
    void searchPublicAccount(java.lang.String,int,int,io.rong.imlib.ipc.remote.IResultCallback) -> searchPublicAccount
    void subscribePublicAccount(java.lang.String,int,boolean,io.rong.imlib.ipc.remote.IOperationCallback) -> subscribePublicAccount
    void getPublicAccountInfo(java.lang.String,int,io.rong.imlib.ipc.remote.IResultCallback) -> getPublicAccountInfo
    void getPublicAccountInfoList(io.rong.imlib.ipc.remote.IResultCallback) -> getPublicAccountInfoList
    boolean validateAuth(java.lang.String) -> validateAuth
    void uploadMedia(io.rong.imlib.model.Conversation,java.lang.String,io.rong.imlib.ipc.remote.IUploadCallback) -> uploadMedia
    void downloadMedia(io.rong.imlib.model.Conversation,int,java.lang.String,io.rong.imlib.ipc.remote.IDownloadMediaCallback) -> downloadMedia
    long getDeltaTime() -> getDeltaTime
    void setDiscussionInviteStatus(java.lang.String,int,io.rong.imlib.ipc.remote.IOperationCallback) -> setDiscussionInviteStatus
    void addToBlacklist(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> addToBlacklist
    void removeFromBlacklist(java.lang.String,io.rong.imlib.ipc.remote.IOperationCallback) -> removeFromBlacklist
    java.lang.String getTextMessageDraft(io.rong.imlib.model.Conversation) -> getTextMessageDraft
    boolean saveTextMessageDraft(io.rong.imlib.model.Conversation,java.lang.String) -> saveTextMessageDraft
    boolean clearTextMessageDraft(io.rong.imlib.model.Conversation) -> clearTextMessageDraft
    void getBlacklist(io.rong.imlib.ipc.remote.IStringCallback) -> getBlacklist
    void getBlacklistStatus(java.lang.String,io.rong.imlib.ipc.remote.IIntegerCallback) -> getBlacklistStatus
io.rong.imlib.ipc.remote.IIntegerCallback -> io.rong.imlib.ipc.remote.IIntegerCallback:
    void onComplete(int) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IIntegerCallback$Stub -> io.rong.imlib.ipc.remote.IIntegerCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    io.rong.imlib.ipc.remote.IIntegerCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IIntegerCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IIntegerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete(int) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.ILongCallback -> io.rong.imlib.ipc.remote.ILongCallback:
    void onComplete(long) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.ILongCallback$Stub -> io.rong.imlib.ipc.remote.ILongCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    io.rong.imlib.ipc.remote.ILongCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.ILongCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.ILongCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete(long) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IOperationCallback -> io.rong.imlib.ipc.remote.IOperationCallback:
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IOperationCallback$Stub -> io.rong.imlib.ipc.remote.IOperationCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    io.rong.imlib.ipc.remote.IOperationCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IOperationCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IOperationCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete() -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IResultCallback -> io.rong.imlib.ipc.remote.IResultCallback:
    void onComplete(io.rong.imlib.ipc.model.RemoteModelWrap) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IResultCallback$Stub -> io.rong.imlib.ipc.remote.IResultCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    io.rong.imlib.ipc.remote.IResultCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IResultCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IResultCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete(io.rong.imlib.ipc.model.RemoteModelWrap) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IStringCallback -> io.rong.imlib.ipc.remote.IStringCallback:
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IStringCallback$Stub -> io.rong.imlib.ipc.remote.IStringCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    io.rong.imlib.ipc.remote.IStringCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IStringCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IStringCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
io.rong.imlib.ipc.remote.IUploadCallback -> io.rong.imlib.ipc.remote.IUploadCallback:
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
    void onProgress(int) -> onProgress
io.rong.imlib.ipc.remote.IUploadCallback$Stub -> io.rong.imlib.ipc.remote.IUploadCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onComplete -> TRANSACTION_onComplete
    int TRANSACTION_onFailure -> TRANSACTION_onFailure
    int TRANSACTION_onProgress -> TRANSACTION_onProgress
    io.rong.imlib.ipc.remote.IUploadCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.IUploadCallback$Stub$Proxy -> io.rong.imlib.ipc.remote.IUploadCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onComplete(java.lang.String) -> onComplete
    void onFailure(int) -> onFailure
    void onProgress(int) -> onProgress
io.rong.imlib.ipc.remote.OnReceiveMessageListener -> io.rong.imlib.ipc.remote.OnReceiveMessageListener:
    boolean onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.imlib.ipc.remote.OnReceiveMessageListener$Stub -> io.rong.imlib.ipc.remote.OnReceiveMessageListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onReceived -> TRANSACTION_onReceived
    io.rong.imlib.ipc.remote.OnReceiveMessageListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
io.rong.imlib.ipc.remote.OnReceiveMessageListener$Stub$Proxy -> io.rong.imlib.ipc.remote.OnReceiveMessageListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    boolean onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.imlib.ipc.utils.ParcelUtils -> io.rong.imlib.ipc.utils.ParcelUtils:
    int EXIST_SEPARATOR -> EXIST_SEPARATOR
    int NON_SEPARATOR -> NON_SEPARATOR
    void writeToParcel(android.os.Parcel,java.lang.String) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.lang.Long) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.lang.Integer) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.lang.Float) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.util.Map) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.util.Date) -> writeToParcel
    java.lang.Float readFloatFromParcel(android.os.Parcel) -> readFloatFromParcel
    java.util.Date readDateFromParcel(android.os.Parcel) -> readDateFromParcel
    java.lang.Integer readIntFromParcel(android.os.Parcel) -> readIntFromParcel
    java.lang.Long readLongFromParcel(android.os.Parcel) -> readLongFromParcel
    java.lang.String readFromParcel(android.os.Parcel) -> readFromParcel
    java.util.Map readMapFromParcel(android.os.Parcel) -> readMapFromParcel
    android.os.Parcelable readFromParcel(android.os.Parcel,java.lang.Class) -> readFromParcel
    void writeToParcel(android.os.Parcel,android.os.Parcelable) -> writeToParcel
    void writeToParcel(android.os.Parcel,java.util.List) -> writeToParcel
    java.util.ArrayList readListFromParcel(android.os.Parcel,java.lang.Class) -> readListFromParcel
    void writeListToParcel(android.os.Parcel,java.util.List) -> writeListToParcel
    android.os.Parcelable bytesToParcelable(byte[],java.lang.Class) -> bytesToParcelable
    byte[] parcelableToByte(android.os.Parcelable) -> parcelableToByte
    java.util.List bytesToParcelableList(byte[],java.lang.Class) -> bytesToParcelableList
    byte[] parcelableListToByte(java.util.List) -> parcelableListToByte
io.rong.imlib.model.AppVersion -> io.rong.imlib.model.AppVersion:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getVersionCode(android.content.Context) -> getVersionCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.model.AppVersion$1 -> io.rong.imlib.model.AppVersion$1:
    io.rong.imlib.model.AppVersion createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.AppVersion[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.Conversation -> io.rong.imlib.model.Conversation:
    io.rong.imlib.model.Conversation$ConversationType conversationType -> conversationType
    java.lang.String targetId -> targetId
    java.lang.String conversationTitle -> conversationTitle
    int unreadMessageCount -> unreadMessageCount
    boolean isTop -> isTop
    io.rong.imlib.model.Message$ReceivedStatus receivedStatus -> receivedStatus
    io.rong.imlib.model.Message$SentStatus sentStatus -> sentStatus
    long receivedTime -> receivedTime
    long sentTime -> sentTime
    java.lang.String objectName -> objectName
    java.lang.String senderUserId -> senderUserId
    java.lang.String senderUserName -> senderUserName
    int latestMessageId -> latestMessageId
    io.rong.imlib.model.MessageContent latestMessage -> latestMessage
    java.lang.String draft -> draft
    io.rong.imlib.model.Conversation$ConversationNotificationStatus notificationStatus -> notificationStatus
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.imlib.model.Conversation obtain(io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String) -> obtain
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    java.lang.String getConversationTitle() -> getConversationTitle
    void setConversationTitle(java.lang.String) -> setConversationTitle
    int getUnreadMessageCount() -> getUnreadMessageCount
    void setUnreadMessageCount(int) -> setUnreadMessageCount
    boolean isTop() -> isTop
    void setTop(boolean) -> setTop
    io.rong.imlib.model.Message$ReceivedStatus getReceivedStatus() -> getReceivedStatus
    void setReceivedStatus(io.rong.imlib.model.Message$ReceivedStatus) -> setReceivedStatus
    io.rong.imlib.model.Message$SentStatus getSentStatus() -> getSentStatus
    void setSentStatus(io.rong.imlib.model.Message$SentStatus) -> setSentStatus
    long getReceivedTime() -> getReceivedTime
    void setReceivedTime(long) -> setReceivedTime
    long getSentTime() -> getSentTime
    void setSentTime(long) -> setSentTime
    java.lang.String getDraft() -> getDraft
    void setDraft(java.lang.String) -> setDraft
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    int getLatestMessageId() -> getLatestMessageId
    void setLatestMessageId(int) -> setLatestMessageId
    io.rong.imlib.model.MessageContent getLatestMessage() -> getLatestMessage
    void setLatestMessage(io.rong.imlib.model.MessageContent) -> setLatestMessage
    java.lang.String getSenderUserId() -> getSenderUserId
    void setSenderUserId(java.lang.String) -> setSenderUserId
    java.lang.String getSenderUserName() -> getSenderUserName
    void setSenderUserName(java.lang.String) -> setSenderUserName
    io.rong.imlib.model.Conversation$ConversationNotificationStatus getNotificationStatus() -> getNotificationStatus
    void setNotificationStatus(io.rong.imlib.model.Conversation$ConversationNotificationStatus) -> setNotificationStatus
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.model.Conversation$1 -> io.rong.imlib.model.Conversation$1:
    io.rong.imlib.model.Conversation createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.Conversation[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.Conversation$ConversationNotificationStatus -> io.rong.imlib.model.Conversation$ConversationNotificationStatus:
    io.rong.imlib.model.Conversation$ConversationNotificationStatus DO_NOT_DISTURB -> DO_NOT_DISTURB
    io.rong.imlib.model.Conversation$ConversationNotificationStatus NOTIFY -> NOTIFY
    int value -> value
    io.rong.imlib.model.Conversation$ConversationNotificationStatus[] $VALUES -> $VALUES
    io.rong.imlib.model.Conversation$ConversationNotificationStatus[] values() -> values
    io.rong.imlib.model.Conversation$ConversationNotificationStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.model.Conversation$ConversationNotificationStatus setValue(int) -> setValue
io.rong.imlib.model.Conversation$ConversationType -> io.rong.imlib.model.Conversation$ConversationType:
    io.rong.imlib.model.Conversation$ConversationType NONE -> NONE
    io.rong.imlib.model.Conversation$ConversationType PRIVATE -> PRIVATE
    io.rong.imlib.model.Conversation$ConversationType DISCUSSION -> DISCUSSION
    io.rong.imlib.model.Conversation$ConversationType GROUP -> GROUP
    io.rong.imlib.model.Conversation$ConversationType CHATROOM -> CHATROOM
    io.rong.imlib.model.Conversation$ConversationType CUSTOMER_SERVICE -> CUSTOMER_SERVICE
    io.rong.imlib.model.Conversation$ConversationType SYSTEM -> SYSTEM
    io.rong.imlib.model.Conversation$ConversationType APPSERVICE -> APPSERVICE
    io.rong.imlib.model.Conversation$ConversationType PUBLICSERVICE -> PUBLICSERVICE
    int value -> value
    java.lang.String name -> name
    io.rong.imlib.model.Conversation$ConversationType[] $VALUES -> $VALUES
    io.rong.imlib.model.Conversation$ConversationType[] values() -> values
    io.rong.imlib.model.Conversation$ConversationType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    java.lang.String getName() -> getName
    io.rong.imlib.model.Conversation$ConversationType setValue(int) -> setValue
io.rong.imlib.model.Discussion -> io.rong.imlib.model.Discussion:
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String creatorId -> creatorId
    boolean isOpen -> isOpen
    java.util.List memberIdList -> memberIdList
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isOpen() -> isOpen
    void setOpen(boolean) -> setOpen
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getCreatorId() -> getCreatorId
    void setCreatorId(java.lang.String) -> setCreatorId
    java.util.List getMemberIdList() -> getMemberIdList
    void setMemberIdList(java.util.List) -> setMemberIdList
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.model.Discussion$1 -> io.rong.imlib.model.Discussion$1:
    io.rong.imlib.model.Discussion createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.Discussion[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.Group -> io.rong.imlib.model.Group:
    java.lang.String id -> id
    java.lang.String name -> name
    android.net.Uri portraitUri -> portraitUri
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    android.net.Uri getPortraitUri() -> getPortraitUri
    void setPortraitUri(android.net.Uri) -> setPortraitUri
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.model.Group$1 -> io.rong.imlib.model.Group$1:
    io.rong.imlib.model.Group createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.Group[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.Message -> io.rong.imlib.model.Message:
    io.rong.imlib.model.Conversation$ConversationType conversationType -> conversationType
    java.lang.String targetId -> targetId
    int messageId -> messageId
    io.rong.imlib.model.Message$MessageDirection messageDirection -> messageDirection
    java.lang.String senderUserId -> senderUserId
    io.rong.imlib.model.Message$ReceivedStatus receivedStatus -> receivedStatus
    io.rong.imlib.model.Message$SentStatus sentStatus -> sentStatus
    long receivedTime -> receivedTime
    long sentTime -> sentTime
    java.lang.String objectName -> objectName
    io.rong.imlib.model.MessageContent content -> content
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.imlib.model.Message obtain(java.lang.String,io.rong.imlib.model.Conversation$ConversationType,io.rong.imlib.model.MessageContent) -> obtain
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    int getMessageId() -> getMessageId
    void setMessageId(int) -> setMessageId
    io.rong.imlib.model.Message$MessageDirection getMessageDirection() -> getMessageDirection
    void setMessageDirection(io.rong.imlib.model.Message$MessageDirection) -> setMessageDirection
    io.rong.imlib.model.Message$ReceivedStatus getReceivedStatus() -> getReceivedStatus
    void setReceivedStatus(io.rong.imlib.model.Message$ReceivedStatus) -> setReceivedStatus
    io.rong.imlib.model.Message$SentStatus getSentStatus() -> getSentStatus
    void setSentStatus(io.rong.imlib.model.Message$SentStatus) -> setSentStatus
    long getReceivedTime() -> getReceivedTime
    void setReceivedTime(long) -> setReceivedTime
    long getSentTime() -> getSentTime
    void setSentTime(long) -> setSentTime
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    io.rong.imlib.model.MessageContent getContent() -> getContent
    void setContent(io.rong.imlib.model.MessageContent) -> setContent
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    java.lang.String getSenderUserId() -> getSenderUserId
    void setSenderUserId(java.lang.String) -> setSenderUserId
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
io.rong.imlib.model.Message$1 -> io.rong.imlib.model.Message$1:
    io.rong.imlib.model.Message createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.Message[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.Message$MessageDirection -> io.rong.imlib.model.Message$MessageDirection:
    io.rong.imlib.model.Message$MessageDirection SEND -> SEND
    io.rong.imlib.model.Message$MessageDirection RECEIVE -> RECEIVE
    int value -> value
    io.rong.imlib.model.Message$MessageDirection[] $VALUES -> $VALUES
    io.rong.imlib.model.Message$MessageDirection[] values() -> values
    io.rong.imlib.model.Message$MessageDirection valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.model.Message$MessageDirection setValue(int) -> setValue
io.rong.imlib.model.Message$ReceivedStatus -> io.rong.imlib.model.Message$ReceivedStatus:
    int READ -> READ
    int LISTENED -> LISTENED
    int DOWNLOADED -> DOWNLOADED
    int flag -> flag
    boolean isRead -> isRead
    boolean isListened -> isListened
    boolean isDownload -> isDownload
    int getFlag() -> getFlag
    boolean isRead() -> isRead
    boolean isListened() -> isListened
    void setListened() -> setListened
    boolean isDownload() -> isDownload
    void setDownload() -> setDownload
io.rong.imlib.model.Message$SentStatus -> io.rong.imlib.model.Message$SentStatus:
    io.rong.imlib.model.Message$SentStatus SENDING -> SENDING
    io.rong.imlib.model.Message$SentStatus FAILED -> FAILED
    io.rong.imlib.model.Message$SentStatus SENT -> SENT
    io.rong.imlib.model.Message$SentStatus RECEIVED -> RECEIVED
    io.rong.imlib.model.Message$SentStatus READ -> READ
    io.rong.imlib.model.Message$SentStatus DESTROYED -> DESTROYED
    int value -> value
    io.rong.imlib.model.Message$SentStatus[] $VALUES -> $VALUES
    io.rong.imlib.model.Message$SentStatus[] values() -> values
    io.rong.imlib.model.Message$SentStatus valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    io.rong.imlib.model.Message$SentStatus setValue(int) -> setValue
io.rong.imlib.model.MessageContent -> io.rong.imlib.model.MessageContent:
    io.rong.imlib.model.UserInfo userInfo -> userInfo
    io.rong.imlib.model.UserInfo getUserInfo() -> getUserInfo
    void setUserInfo(io.rong.imlib.model.UserInfo) -> setUserInfo
    org.json.JSONObject getJSONUserInfo() -> getJSONUserInfo
    io.rong.imlib.model.UserInfo parseJsonToUserInfo(org.json.JSONObject) -> parseJsonToUserInfo
    byte[] encode() -> encode
io.rong.imlib.model.MessageContent$MessageHandler -> io.rong.imlib.model.MessageContent$MessageHandler:
    android.content.Context context -> context
    void decodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> decodeMessage
    boolean encodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> encodeMessage
    android.content.Context getContext() -> getContext
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> beforeEncodeMessage
io.rong.imlib.model.MessageContent$MessageHandler$NullMessageHandler -> io.rong.imlib.model.MessageContent$MessageHandler$NullMessageHandler:
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> beforeEncodeMessage
io.rong.imlib.model.PublicServiceInfo -> io.rong.imlib.model.PublicServiceInfo:
    java.lang.String name -> name
    android.net.Uri portraitUri -> portraitUri
    java.lang.String targetId -> targetId
    io.rong.imlib.model.Conversation$ConversationType conversationType -> conversationType
    boolean isFollow -> isFollow
    java.lang.String introduction -> introduction
    boolean isGlobal -> isGlobal
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setExtra(java.lang.String) -> setExtra
    void setIsGlobal(boolean) -> setIsGlobal
    android.net.Uri getPortraitUri() -> getPortraitUri
    void setPortraitUri(android.net.Uri) -> setPortraitUri
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getTargetId() -> getTargetId
    void setTargetId(java.lang.String) -> setTargetId
    void setIntroduction(java.lang.String) -> setIntroduction
    boolean isFollow() -> isFollow
    void setIsFollow(boolean) -> setIsFollow
    io.rong.imlib.model.Conversation$ConversationType getConversationType() -> getConversationType
    void setConversationType(io.rong.imlib.model.Conversation$ConversationType) -> setConversationType
    boolean isGlobal() -> isGlobal
    java.lang.String getIntroduction() -> getIntroduction
io.rong.imlib.model.PublicServiceInfo$1 -> io.rong.imlib.model.PublicServiceInfo$1:
    io.rong.imlib.model.PublicServiceInfo createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.PublicServiceInfo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.PublicServiceInfoList -> io.rong.imlib.model.PublicServiceInfoList:
    java.util.ArrayList mList -> mList
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.ArrayList getPublicAccountData() -> getPublicAccountData
io.rong.imlib.model.PublicServiceInfoList$1 -> io.rong.imlib.model.PublicServiceInfoList$1:
    io.rong.imlib.model.PublicServiceInfoList createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.PublicServiceInfoList[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.UnknowMessage -> io.rong.imlib.model.UnknowMessage:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.model.UnknowMessage$1 -> io.rong.imlib.model.UnknowMessage$1:
    io.rong.imlib.model.UnknowMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.UnknowMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.imlib.model.UserInfo -> io.rong.imlib.model.UserInfo:
    java.lang.String id -> id
    java.lang.String name -> name
    android.net.Uri portraitUri -> portraitUri
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    android.net.Uri getPortraitUri() -> getPortraitUri
    void setPortraitUri(android.net.Uri) -> setPortraitUri
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.imlib.model.UserInfo$1 -> io.rong.imlib.model.UserInfo$1:
    io.rong.imlib.model.UserInfo createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.imlib.model.UserInfo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.CommandNotificationMessage -> io.rong.message.CommandNotificationMessage:
    java.lang.String name -> name
    java.lang.String data -> data
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    io.rong.message.CommandNotificationMessage obtain(java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.CommandNotificationMessage$1 -> io.rong.message.CommandNotificationMessage$1:
    io.rong.message.CommandNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.CommandNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.ContactNotificationMessage -> io.rong.message.ContactNotificationMessage:
    java.lang.String CONTACT_OPERATION_REQUEST -> CONTACT_OPERATION_REQUEST
    java.lang.String CONTACT_OPERATION_ACCEPT_RESPONSE -> CONTACT_OPERATION_ACCEPT_RESPONSE
    java.lang.String CONTACT_OPERATION_REJECT_RESPONSE -> CONTACT_OPERATION_REJECT_RESPONSE
    java.lang.String operation -> operation
    java.lang.String sourceUserId -> sourceUserId
    java.lang.String targetUserId -> targetUserId
    java.lang.String message -> message
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getOperation() -> getOperation
    void setOperation(java.lang.String) -> setOperation
    java.lang.String getSourceUserId() -> getSourceUserId
    void setSourceUserId(java.lang.String) -> setSourceUserId
    java.lang.String getTargetUserId() -> getTargetUserId
    void setTargetUserId(java.lang.String) -> setTargetUserId
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.ContactNotificationMessage obtain(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.ContactNotificationMessage$1 -> io.rong.message.ContactNotificationMessage$1:
    io.rong.message.ContactNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.ContactNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.DiscussionNotificationMessage -> io.rong.message.DiscussionNotificationMessage:
    int type -> type
    java.lang.String extension -> extension
    java.lang.String operator -> operator
    boolean hasReceived -> hasReceived
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean isHasReceived() -> isHasReceived
    void setHasReceived(boolean) -> setHasReceived
    byte[] encode() -> encode
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getExtension() -> getExtension
    void setExtension(java.lang.String) -> setExtension
    java.lang.String getOperator() -> getOperator
    void setOperator(java.lang.String) -> setOperator
io.rong.message.DiscussionNotificationMessage$1 -> io.rong.message.DiscussionNotificationMessage$1:
    io.rong.message.DiscussionNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.DiscussionNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.GroupNotificationMessage -> io.rong.message.GroupNotificationMessage:
    java.lang.String GROUP_OPERATION_ADD -> GROUP_OPERATION_ADD
    java.lang.String GROUP_OPERATION_QUIT -> GROUP_OPERATION_QUIT
    java.lang.String GROUP_OPERATION_KICKED -> GROUP_OPERATION_KICKED
    java.lang.String GROUP_OPERATION_RENAME -> GROUP_OPERATION_RENAME
    java.lang.String GROUP_OPERATION_BULLETIN -> GROUP_OPERATION_BULLETIN
    java.lang.String operatorUserId -> operatorUserId
    java.lang.String operation -> operation
    java.lang.String data -> data
    java.lang.String message -> message
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getOperatorUserId() -> getOperatorUserId
    void setOperatorUserId(java.lang.String) -> setOperatorUserId
    java.lang.String getOperation() -> getOperation
    void setOperation(java.lang.String) -> setOperation
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.GroupNotificationMessage obtain(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.GroupNotificationMessage$1 -> io.rong.message.GroupNotificationMessage$1:
    io.rong.message.GroupNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.GroupNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.HandshakeMessage -> io.rong.message.HandshakeMessage:
    int type -> type
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.message.HandshakeMessage obtain(java.lang.String) -> obtain
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    byte[] encode() -> encode
    int getType() -> getType
    void setType(int) -> setType
io.rong.message.HandshakeMessage$1 -> io.rong.message.HandshakeMessage$1:
    io.rong.message.HandshakeMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.HandshakeMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.HasReadNotificationMessage -> io.rong.message.HasReadNotificationMessage:
    boolean hasRead -> hasRead
    boolean hasRead() -> hasRead
    void hasRead(boolean) -> hasRead
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.HasReceivedNotificationMessage -> io.rong.message.HasReceivedNotificationMessage:
    boolean hasReceived -> hasReceived
    boolean isHasReceived() -> isHasReceived
    void setHasReceived(boolean) -> setHasReceived
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.ImageMessage -> io.rong.message.ImageMessage:
    android.net.Uri mThumUri -> mThumUri
    android.net.Uri mLocalUri -> mLocalUri
    android.net.Uri mRemoteUri -> mRemoteUri
    boolean mUpLoadExp -> mUpLoadExp
    java.lang.String mBase64 -> mBase64
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.ImageMessage obtain(android.net.Uri,android.net.Uri) -> obtain
    io.rong.message.ImageMessage obtain() -> obtain
    android.net.Uri getThumUri() -> getThumUri
    void setThumUri(android.net.Uri) -> setThumUri
    android.net.Uri getLocalUri() -> getLocalUri
    void setLocalUri(android.net.Uri) -> setLocalUri
    android.net.Uri getRemoteUri() -> getRemoteUri
    void setRemoteUri(android.net.Uri) -> setRemoteUri
    void setBase64(java.lang.String) -> setBase64
    java.lang.String getBase64() -> getBase64
    boolean isUpLoadExp() -> isUpLoadExp
    void setUpLoadExp(boolean) -> setUpLoadExp
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.ImageMessage$1 -> io.rong.message.ImageMessage$1:
    io.rong.message.ImageMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.ImageMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.ImageMessageHandler -> io.rong.message.ImageMessageHandler:
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.message.ImageMessage) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.message.ImageMessage) -> beforeEncodeMessage
    android.net.Uri obtainThumImageUri(android.content.Context,io.rong.imlib.model.Message) -> obtainThumImageUri
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> beforeEncodeMessage
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> afterDecodeMessage
io.rong.message.InformationNotificationMessage -> io.rong.message.InformationNotificationMessage:
    java.lang.String message -> message
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    io.rong.message.InformationNotificationMessage obtain(java.lang.String) -> obtain
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
io.rong.message.InformationNotificationMessage$1 -> io.rong.message.InformationNotificationMessage$1:
    io.rong.message.InformationNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.InformationNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.IsTypingStatusMessage -> io.rong.message.IsTypingStatusMessage:
    boolean isTyping -> isTyping
    boolean isTyping() -> isTyping
    void setTyping(boolean) -> setTyping
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.LocationMessage -> io.rong.message.LocationMessage:
    double mLat -> mLat
    double mLng -> mLng
    java.lang.String mPoi -> mPoi
    java.lang.String mBase64 -> mBase64
    android.net.Uri mImgUri -> mImgUri
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    byte[] encode() -> encode
    io.rong.message.LocationMessage obtain(double,double,java.lang.String,android.net.Uri) -> obtain
    double getLat() -> getLat
    void setLat(double) -> setLat
    double getLng() -> getLng
    void setLng(double) -> setLng
    java.lang.String getPoi() -> getPoi
    void setPoi(java.lang.String) -> setPoi
    java.lang.String getBase64() -> getBase64
    void setBase64(java.lang.String) -> setBase64
    android.net.Uri getImgUri() -> getImgUri
    void setImgUri(android.net.Uri) -> setImgUri
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.LocationMessage$1 -> io.rong.message.LocationMessage$1:
    io.rong.message.LocationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.LocationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.LocationMessageHandler -> io.rong.message.LocationMessageHandler:
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.message.LocationMessage) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.message.LocationMessage) -> beforeEncodeMessage
    android.net.Uri obtainLocationUri(android.content.Context,io.rong.imlib.model.Message) -> obtainLocationUri
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> beforeEncodeMessage
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> afterDecodeMessage
io.rong.message.NotificationMessage -> io.rong.message.NotificationMessage:
io.rong.message.ProfileNotificationMessage -> io.rong.message.ProfileNotificationMessage:
    java.lang.String operation -> operation
    java.lang.String data -> data
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getOperation() -> getOperation
    void setOperation(java.lang.String) -> setOperation
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.ProfileNotificationMessage obtain(java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
io.rong.message.ProfileNotificationMessage$1 -> io.rong.message.ProfileNotificationMessage$1:
    io.rong.message.ProfileNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.ProfileNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.PublicServiceMultiRichContentMessage -> io.rong.message.PublicServiceMultiRichContentMessage:
    java.util.ArrayList mRichContentItems -> mRichContentItems
    io.rong.imlib.model.UserInfo mUser -> mUser
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.ArrayList getMessages() -> getMessages
    io.rong.imlib.model.UserInfo getPublicServiceUserInfo() -> getPublicServiceUserInfo
io.rong.message.PublicServiceMultiRichContentMessage$1 -> io.rong.message.PublicServiceMultiRichContentMessage$1:
    io.rong.message.PublicServiceMultiRichContentMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.PublicServiceMultiRichContentMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.PublicServiceRichContentMessage -> io.rong.message.PublicServiceRichContentMessage:
    io.rong.message.RichContentItem mRichContentItem -> mRichContentItem
    io.rong.imlib.model.UserInfo mUser -> mUser
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.message.RichContentItem getMessage() -> getMessage
    io.rong.imlib.model.UserInfo getPublicServiceUserInfo() -> getPublicServiceUserInfo
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.PublicServiceRichContentMessage$1 -> io.rong.message.PublicServiceRichContentMessage$1:
    io.rong.message.PublicServiceRichContentMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.PublicServiceRichContentMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.RichContentItem -> io.rong.message.RichContentItem:
    java.lang.String title -> title
    java.lang.String digest -> digest
    java.lang.String imageUrl -> imageUrl
    java.lang.String url -> url
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getDigest() -> getDigest
    void setDigest(java.lang.String) -> setDigest
    java.lang.String getImageUrl() -> getImageUrl
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
io.rong.message.RichContentItem$1 -> io.rong.message.RichContentItem$1:
    io.rong.message.RichContentItem createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.RichContentItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.RichContentMessage -> io.rong.message.RichContentMessage:
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String imgUrl -> imgUrl
    java.lang.String url -> url
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.message.RichContentMessage obtain(java.lang.String,java.lang.String,java.lang.String) -> obtain
    io.rong.message.RichContentMessage obtain(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> obtain
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getExpression(java.lang.String) -> getExpression
    java.lang.String toExpressionChar(java.lang.String) -> toExpressionChar
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getImgUrl() -> getImgUrl
    void setImgUrl(java.lang.String) -> setImgUrl
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
io.rong.message.RichContentMessage$1 -> io.rong.message.RichContentMessage$1:
    io.rong.message.RichContentMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.RichContentMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.StatusMessage -> io.rong.message.StatusMessage:
io.rong.message.StickerMessage -> io.rong.message.StickerMessage:
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.SuspendMessage -> io.rong.message.SuspendMessage:
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    byte[] encode() -> encode
io.rong.message.TextMessage -> io.rong.message.TextMessage:
    java.lang.String content -> content
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    byte[] encode() -> encode
    java.lang.String getExpression(java.lang.String) -> getExpression
    io.rong.message.TextMessage obtain(java.lang.String) -> obtain
    void setContent(java.lang.String) -> setContent
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getContent() -> getContent
io.rong.message.TextMessage$1 -> io.rong.message.TextMessage$1:
    io.rong.message.TextMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.TextMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.VoiceMessage -> io.rong.message.VoiceMessage:
    android.net.Uri mUri -> mUri
    int mDuration -> mDuration
    java.lang.String mBase64 -> mBase64
    java.lang.String extra -> extra
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getExtra() -> getExtra
    void setExtra(java.lang.String) -> setExtra
    io.rong.message.VoiceMessage obtain(android.net.Uri,int) -> obtain
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.lang.String getBase64() -> getBase64
    void setBase64(java.lang.String) -> setBase64
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.message.VoiceMessage$1 -> io.rong.message.VoiceMessage$1:
    io.rong.message.VoiceMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.message.VoiceMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.message.VoiceMessageHandler -> io.rong.message.VoiceMessageHandler:
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.message.VoiceMessage) -> afterDecodeMessage
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.message.VoiceMessage) -> beforeEncodeMessage
    android.net.Uri obtainVoiceUri(android.content.Context,io.rong.imlib.model.Message) -> obtainVoiceUri
    boolean beforeEncodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> beforeEncodeMessage
    void afterDecodeMessage(io.rong.imlib.model.Message,io.rong.imlib.model.MessageContent) -> afterDecodeMessage
io.rong.message.utils.BitmapUtil -> io.rong.message.utils.BitmapUtil:
    java.lang.String TAG -> TAG
    java.lang.String getBase64FromBitmap(android.graphics.Bitmap) -> getBase64FromBitmap
    android.graphics.Bitmap getBitmapFromBase64(java.lang.String) -> getBitmapFromBase64
    android.graphics.Bitmap getResizedBitmap(android.content.Context,android.net.Uri,int,int) -> getResizedBitmap
io.rong.message.utils.RLog -> io.rong.message.utils.RLog:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int v(java.lang.Object,java.lang.String,java.lang.String) -> v
    int v(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.Object,java.lang.String,java.lang.String) -> d
    int d(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.Object,java.lang.String,java.lang.String) -> i
    int i(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.Object,java.lang.String,java.lang.String) -> w
    int w(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.Object,java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.Object,java.lang.String,java.lang.String) -> e
    int e(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> e
    int wtf(java.lang.Object,java.lang.String,java.lang.String) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.Throwable) -> wtf
    int wtf(java.lang.Object,java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
io.rong.notification.PushMessageContent -> io.rong.notification.PushMessageContent:
    java.lang.String content -> content
    byte[] encode() -> encode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void setContent(java.lang.String) -> setContent
    java.lang.String getContent() -> getContent
io.rong.notification.PushNotificationContact -> io.rong.notification.PushNotificationContact:
    java.lang.String userName -> userName
    java.lang.String userId -> userId
    java.util.List messageList -> messageList
    java.util.List getMessageList() -> getMessageList
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserId() -> getUserId
    void AddToMessageList(io.rong.notification.PushMessageContent) -> AddToMessageList
io.rong.notification.PushNotificationManager -> io.rong.notification.PushNotificationManager:
    java.lang.String TAG -> TAG
    int NEW_NOTIFICATION_LEVEL -> NEW_NOTIFICATION_LEVEL
    int notificationId -> notificationId
    java.util.ArrayList contactList -> contactList
    io.rong.notification.PushNotificationManager sS -> sS
    void init(android.content.Context) -> init
    io.rong.notification.PushNotificationManager getInstance() -> getInstance
    void onReceiveMessage(io.rong.notification.PushNotificationMessage) -> onReceiveMessage
    void onReceivePush(io.rong.notification.PushNotificationMessage) -> onReceivePush
    void onRemoveNotificationMsgFromCache() -> onRemoveNotificationMsgFromCache
    void storeMsgToCache(io.rong.notification.PushNotificationMessage) -> storeMsgToCache
    void sendNotification(io.rong.notification.PushNotificationMessage,boolean) -> sendNotification
    java.lang.String getNotificationTitle() -> getNotificationTitle
    java.lang.String getNotificationContent() -> getNotificationContent
    java.lang.String getCurrentFormatTime() -> getCurrentFormatTime
    android.graphics.Bitmap getAppIcon() -> getAppIcon
    android.app.PendingIntent buildPendingIntent(io.rong.notification.PushNotificationMessage,boolean) -> buildPendingIntent
io.rong.notification.PushNotificationMessage -> io.rong.notification.PushNotificationMessage:
    java.lang.String senderName -> senderName
    android.net.Uri senderPortraitUri -> senderPortraitUri
    java.lang.String targetUserName -> targetUserName
    android.os.Parcelable$Creator CREATOR -> CREATOR
    io.rong.notification.PushNotificationMessage obtain(io.rong.notification.PushMessageContent,io.rong.imlib.model.Conversation$ConversationType,java.lang.String,java.lang.String) -> obtain
    void setSenderName(java.lang.String) -> setSenderName
    java.lang.String getSenderName() -> getSenderName
    void setSenderPortraitUri(android.net.Uri) -> setSenderPortraitUri
    android.net.Uri getSenderPortraitUri() -> getSenderPortraitUri
    void setTargetUserName(java.lang.String) -> setTargetUserName
    java.lang.String getTargetUserName() -> getTargetUserName
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.notification.PushNotificationMessage$1 -> io.rong.notification.PushNotificationMessage$1:
    io.rong.notification.PushNotificationMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.notification.PushNotificationMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.push.CommandService -> io.rong.push.CommandService:
    io.rong.imlib.IVersionHandler$Stub mStub -> mStub
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onHandleIntent(android.content.Intent) -> onHandleIntent
io.rong.push.CommandService$1 -> io.rong.push.CommandService$1:
    io.rong.push.CommandService this$0 -> this$0
    io.rong.imlib.model.AppVersion getVersion() -> getVersion
io.rong.push.PushClient -> io.rong.push.PushClient:
    io.rong.push.PushProtocalStack$MessageInputStream in -> in
    java.net.Socket socket -> socket
    io.rong.push.PushProtocalStack$MessageOutputStream out -> out
    java.io.OutputStream os -> os
    io.rong.push.PushClient$PushReader reader -> reader
    java.util.concurrent.Semaphore connectionAckLock -> connectionAckLock
    io.rong.push.PushClient$ClientListener listener -> listener
    io.rong.push.PushProtocalStack$ConnectMessage connectMsg -> connectMsg
    io.rong.push.PushClient$ConnectStatusCallback connectCallback -> connectCallback
    io.rong.push.PushClient$PingSuccessListener mPingSuccessListener -> mPingSuccessListener
    void connect(java.lang.String,int,io.rong.push.PushClient$ConnectStatusCallback) -> connect
    void ping() -> ping
    void disconnect() -> disconnect
    void disconnectByNormal() -> disconnectByNormal
    void handleMessage(io.rong.push.PushProtocalStack$Message) -> handleMessage
    io.rong.push.PushProtocalStack$MessageInputStream access$100(io.rong.push.PushClient) -> access$100
    void access$200(io.rong.push.PushClient,io.rong.push.PushProtocalStack$Message) -> access$200
    io.rong.push.PushClient$ConnectStatusCallback access$300(io.rong.push.PushClient) -> access$300
io.rong.push.PushClient$1 -> io.rong.push.PushClient$1:
    int[] $SwitchMap$io$rong$push$PushProtocalStack$Message$Type -> $SwitchMap$io$rong$push$PushProtocalStack$Message$Type
io.rong.push.PushClient$ClientListener -> io.rong.push.PushClient$ClientListener:
    void messageArrived(io.rong.push.PushProtocalStack$PublishMessage) -> messageArrived
io.rong.push.PushClient$ConnectStatusCallback -> io.rong.push.PushClient$ConnectStatusCallback:
    void onConnected(io.rong.push.PushProtocalStack$ConnAckMessage) -> onConnected
    void onDisconnected(java.io.IOException) -> onDisconnected
io.rong.push.PushClient$PingSuccessListener -> io.rong.push.PushClient$PingSuccessListener:
    void onSuccess() -> onSuccess
    void onFailure() -> onFailure
io.rong.push.PushClient$PushReader -> io.rong.push.PushClient$PushReader:
    io.rong.push.PushClient this$0 -> this$0
    void run() -> run
io.rong.push.PushConst -> io.rong.push.PushConst:
    java.lang.String URL_PUSH_SERVER -> URL_PUSH_SERVER
    int HEARTBEAT_INTERVAL -> HEARTBEAT_INTERVAL
    java.lang.String ACTION_SYNC_VERSION -> ACTION_SYNC_VERSION
io.rong.push.PushConst$ObjectName -> io.rong.push.PushConst$ObjectName:
    java.lang.String RC_OBJECT_VOIP_CALL_MSG -> RC_OBJECT_VOIP_CALL_MSG
    java.lang.String RC_OBJECT_VOIP_FINISH_MSG -> RC_OBJECT_VOIP_FINISH_MSG
    java.lang.String RC_OBJECT_VOIP_ACCEPT_MSG -> RC_OBJECT_VOIP_ACCEPT_MSG
io.rong.push.PushConst$PushAction -> io.rong.push.PushConst$PushAction:
    java.lang.String ACTION_CONNECT -> ACTION_CONNECT
    java.lang.String ACTION_HEARTBEAT -> ACTION_HEARTBEAT
    java.lang.String ACTION_DISCONNECT -> ACTION_DISCONNECT
    java.lang.String ACTION_STOP_HEART -> ACTION_STOP_HEART
    java.lang.String ACTION_PUSH_MESSAGE_ARRIVED -> ACTION_PUSH_MESSAGE_ARRIVED
io.rong.push.PushContact -> io.rong.push.PushContact:
    java.lang.String UserName -> UserName
    java.lang.String UserId -> UserId
    java.util.List messageList -> messageList
    java.lang.String getContactId() -> getContactId
    java.util.List getMessageList() -> getMessageList
    void AddToMessageList(io.rong.push.PushContact$NotificationMsg) -> AddToMessageList
io.rong.push.PushContact$NotificationMsg -> io.rong.push.PushContact$NotificationMsg:
    java.lang.String MsgTitle -> MsgTitle
    java.lang.String MsgContent -> MsgContent
    java.lang.String MsgChannelId -> MsgChannelId
    java.lang.String MsgChannelType -> MsgChannelType
    java.lang.String MsgChannelName -> MsgChannelName
    io.rong.push.PushContact this$0 -> this$0
io.rong.push.PushContext -> io.rong.push.PushContext:
    android.os.Handler mWorkHandler -> mWorkHandler
    io.rong.push.PushContext sS -> sS
    io.rong.imlib.model.AppVersion mVersion -> mVersion
    io.rong.imlib.model.AppVersion mNewestVersion -> mNewestVersion
    me.add1.network.HttpHandler mHttpHandler -> mHttpHandler
    int mPackageValidateCode -> mPackageValidateCode
    int mVersionValidateCode -> mVersionValidateCode
    io.rong.push.PushContext getInstance() -> getInstance
    void init(android.content.Context) -> init
    me.add1.network.HttpHandler getHttpHandler() -> getHttpHandler
    void initValidateCode() -> initValidateCode
    int getPackageValidateCode() -> getPackageValidateCode
    int getVersionValidateCode() -> getVersionValidateCode
    void startPushService(android.content.Context) -> startPushService
    void startNextHeartbeat(long) -> startNextHeartbeat
    void cancelHeartbeat() -> cancelHeartbeat
    void syncVersion() -> syncVersion
    io.rong.imlib.model.AppVersion getNewestVersion() -> getNewestVersion
    boolean isNewestVersion() -> isNewestVersion
    io.rong.imlib.model.AppVersion getCurrentVersion() -> getCurrentVersion
    io.rong.imlib.model.AppVersion getRunningPushServiceVersion() -> getRunningPushServiceVersion
    boolean hasNetworkInfo() -> hasNetworkInfo
    void sendSyncVersionCommand(android.content.Context) -> sendSyncVersionCommand
    void sendConnectCommand(android.content.Context,java.lang.String) -> sendConnectCommand
    boolean validateNeedSyncVersion() -> validateNeedSyncVersion
    boolean validateNetworkEnable() -> validateNetworkEnable
io.rong.push.PushContext$1 -> io.rong.push.PushContext$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    io.rong.push.PushContext this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.rong.push.PushContext$2 -> io.rong.push.PushContext$2:
    java.text.Collator mCollator -> mCollator
    io.rong.push.PushContext this$0 -> this$0
    int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
io.rong.push.PushContext$ServiceConnectionListener -> io.rong.push.PushContext$ServiceConnectionListener:
    io.rong.imlib.IVersionHandler mHandler -> mHandler
    boolean mIsBind -> mIsBind
    java.lang.String packageName -> packageName
    java.util.concurrent.CountDownLatch count -> count
    io.rong.push.PushContext this$0 -> this$0
    io.rong.imlib.IVersionHandler getHandler() -> getHandler
    boolean isBind() -> isBind
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
io.rong.push.PushContext$ServiceConnectionListener$1 -> io.rong.push.PushContext$ServiceConnectionListener$1:
    io.rong.push.PushContext$ServiceConnectionListener this$1 -> this$1
    void run() -> run
io.rong.push.PushContext$Status -> io.rong.push.PushContext$Status:
    io.rong.push.PushContext$Status CONNECTED -> CONNECTED
    io.rong.push.PushContext$Status DISCONNECTED -> DISCONNECTED
    io.rong.push.PushContext$Status SYNC_VERSION -> SYNC_VERSION
    io.rong.push.PushContext$Status[] $VALUES -> $VALUES
    io.rong.push.PushContext$Status[] values() -> values
    io.rong.push.PushContext$Status valueOf(java.lang.String) -> valueOf
io.rong.push.PushProtocalStack -> io.rong.push.PushProtocalStack:
io.rong.push.PushProtocalStack$1 -> io.rong.push.PushProtocalStack$1:
    int[] $SwitchMap$io$rong$push$PushProtocalStack$ConnAckMessage$ConnectionStatus -> $SwitchMap$io$rong$push$PushProtocalStack$ConnAckMessage$ConnectionStatus
    int[] $SwitchMap$io$rong$push$PushProtocalStack$DisconnectMessage$DisconnectionStatus -> $SwitchMap$io$rong$push$PushProtocalStack$DisconnectMessage$DisconnectionStatus
    int[] $SwitchMap$io$rong$push$PushProtocalStack$Message$Type -> $SwitchMap$io$rong$push$PushProtocalStack$Message$Type
io.rong.push.PushProtocalStack$ConnAckMessage -> io.rong.push.PushProtocalStack$ConnAckMessage:
    int MESSAGE_LENGTH -> MESSAGE_LENGTH
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus status -> status
    java.lang.String userId -> userId
    int messageLength() -> messageLength
    void readMessage(java.io.InputStream,int) -> readMessage
    void writeMessage(java.io.OutputStream) -> writeMessage
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus getStatus() -> getStatus
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getUserId() -> getUserId
    void setDup(boolean) -> setDup
    void setRetained(boolean) -> setRetained
    void setQos(io.rong.push.PushProtocalStack$QoS) -> setQos
io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus -> io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus:
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus ACCEPTED -> ACCEPTED
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus UNACCEPTABLE_PROTOCOL_VERSION -> UNACCEPTABLE_PROTOCOL_VERSION
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus IDENTIFIER_REJECTED -> IDENTIFIER_REJECTED
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus SERVER_UNAVAILABLE -> SERVER_UNAVAILABLE
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus BAD_USERNAME_OR_PASSWORD -> BAD_USERNAME_OR_PASSWORD
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus NOT_AUTHORIZED -> NOT_AUTHORIZED
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus REDIRECT -> REDIRECT
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus[] $VALUES -> $VALUES
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus[] values() -> values
    io.rong.push.PushProtocalStack$ConnAckMessage$ConnectionStatus valueOf(java.lang.String) -> valueOf
io.rong.push.PushProtocalStack$ConnectMessage -> io.rong.push.PushProtocalStack$ConnectMessage:
    int CONNECT_HEADER_SIZE -> CONNECT_HEADER_SIZE
    java.lang.String protocolId -> protocolId
    byte protocolVersion -> protocolVersion
    java.lang.String clientId -> clientId
    int keepAlive -> keepAlive
    java.lang.String username -> username
    java.lang.String password -> password
    boolean cleanSession -> cleanSession
    java.lang.String willTopic -> willTopic
    java.lang.String will -> will
    io.rong.push.PushProtocalStack$QoS willQoS -> willQoS
    boolean retainWill -> retainWill
    boolean hasUsername -> hasUsername
    boolean hasPassword -> hasPassword
    boolean hasWill -> hasWill
    int messageLength() -> messageLength
    void readMessage(java.io.InputStream,int) -> readMessage
    void writeMessage(java.io.OutputStream) -> writeMessage
    void setCredentials(java.lang.String) -> setCredentials
    void setCredentials(java.lang.String,java.lang.String) -> setCredentials
    void setWill(java.lang.String,java.lang.String) -> setWill
    void setWill(java.lang.String,java.lang.String,io.rong.push.PushProtocalStack$QoS,boolean) -> setWill
    void setDup(boolean) -> setDup
    void setRetained(boolean) -> setRetained
    void setQos(io.rong.push.PushProtocalStack$QoS) -> setQos
    java.lang.String getProtocolId() -> getProtocolId
    byte getProtocolVersion() -> getProtocolVersion
    java.lang.String getClientId() -> getClientId
    int getKeepAlive() -> getKeepAlive
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    boolean isCleanSession() -> isCleanSession
    java.lang.String getWillTopic() -> getWillTopic
    java.lang.String getWill() -> getWill
    io.rong.push.PushProtocalStack$QoS getWillQoS() -> getWillQoS
    boolean isWillRetained() -> isWillRetained
    boolean hasUsername() -> hasUsername
    boolean hasPassword() -> hasPassword
    boolean hasWill() -> hasWill
io.rong.push.PushProtocalStack$DisconnectMessage -> io.rong.push.PushProtocalStack$DisconnectMessage:
    int MESSAGE_LENGTH -> MESSAGE_LENGTH
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus status -> status
    int messageLength() -> messageLength
    void readMessage(java.io.InputStream,int) -> readMessage
    void writeMessage(java.io.OutputStream) -> writeMessage
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus getStatus() -> getStatus
    void setDup(boolean) -> setDup
    void setQos(io.rong.push.PushProtocalStack$QoS) -> setQos
    void setRetained(boolean) -> setRetained
io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus -> io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus:
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus RECONNECT -> RECONNECT
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus OTHER_DEVICE_LOGIN -> OTHER_DEVICE_LOGIN
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus CLOSURE -> CLOSURE
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus[] $VALUES -> $VALUES
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus[] values() -> values
    io.rong.push.PushProtocalStack$DisconnectMessage$DisconnectionStatus valueOf(java.lang.String) -> valueOf
io.rong.push.PushProtocalStack$FormatUtil -> io.rong.push.PushProtocalStack$FormatUtil:
    java.lang.String dumpByteArray(byte[]) -> dumpByteArray
    byte[] toWMtpString(java.lang.String) -> toWMtpString
    java.lang.String toString(byte[]) -> toString
io.rong.push.PushProtocalStack$Message -> io.rong.push.PushProtocalStack$Message:
    io.rong.push.PushProtocalStack$Message$Header header -> header
    byte headerCode -> headerCode
    void read(java.io.InputStream) -> read
    void write(java.io.OutputStream) -> write
    int readMsgLength(java.io.InputStream) -> readMsgLength
    void writeMsgLength(java.io.OutputStream) -> writeMsgLength
    void writeMsgCode(java.io.OutputStream) -> writeMsgCode
    byte[] toBytes() -> toBytes
    int messageLength() -> messageLength
    void writeMessage(java.io.OutputStream) -> writeMessage
    void readMessage(java.io.InputStream,int) -> readMessage
    void setRetained(boolean) -> setRetained
    boolean isRetained() -> isRetained
    void setQos(io.rong.push.PushProtocalStack$QoS) -> setQos
    io.rong.push.PushProtocalStack$QoS getQos() -> getQos
    void setDup(boolean) -> setDup
    boolean isDup() -> isDup
    io.rong.push.PushProtocalStack$Message$Type getType() -> getType
io.rong.push.PushProtocalStack$Message$Header -> io.rong.push.PushProtocalStack$Message$Header:
    io.rong.push.PushProtocalStack$Message$Type type -> type
    boolean retain -> retain
    io.rong.push.PushProtocalStack$QoS qos -> qos
    boolean dup -> dup
    io.rong.push.PushProtocalStack$Message$Type getType() -> getType
    byte encode() -> encode
    java.lang.String toString() -> toString
    byte access$200(io.rong.push.PushProtocalStack$Message$Header) -> access$200
    boolean access$302(io.rong.push.PushProtocalStack$Message$Header,boolean) -> access$302
    boolean access$300(io.rong.push.PushProtocalStack$Message$Header) -> access$300
    io.rong.push.PushProtocalStack$QoS access$402(io.rong.push.PushProtocalStack$Message$Header,io.rong.push.PushProtocalStack$QoS) -> access$402
    io.rong.push.PushProtocalStack$QoS access$400(io.rong.push.PushProtocalStack$Message$Header) -> access$400
    boolean access$502(io.rong.push.PushProtocalStack$Message$Header,boolean) -> access$502
    boolean access$500(io.rong.push.PushProtocalStack$Message$Header) -> access$500
    io.rong.push.PushProtocalStack$Message$Type access$600(io.rong.push.PushProtocalStack$Message$Header) -> access$600
io.rong.push.PushProtocalStack$Message$Type -> io.rong.push.PushProtocalStack$Message$Type:
    io.rong.push.PushProtocalStack$Message$Type CONNECT -> CONNECT
    io.rong.push.PushProtocalStack$Message$Type CONNACK -> CONNACK
    io.rong.push.PushProtocalStack$Message$Type PUBLISH -> PUBLISH
    io.rong.push.PushProtocalStack$Message$Type PUBACK -> PUBACK
    io.rong.push.PushProtocalStack$Message$Type QUERY -> QUERY
    io.rong.push.PushProtocalStack$Message$Type QUERYACK -> QUERYACK
    io.rong.push.PushProtocalStack$Message$Type QUERYCON -> QUERYCON
    io.rong.push.PushProtocalStack$Message$Type SUBSCRIBE -> SUBSCRIBE
    io.rong.push.PushProtocalStack$Message$Type SUBACK -> SUBACK
    io.rong.push.PushProtocalStack$Message$Type UNSUBSCRIBE -> UNSUBSCRIBE
    io.rong.push.PushProtocalStack$Message$Type UNSUBACK -> UNSUBACK
    io.rong.push.PushProtocalStack$Message$Type PINGREQ -> PINGREQ
    io.rong.push.PushProtocalStack$Message$Type PINGRESP -> PINGRESP
    io.rong.push.PushProtocalStack$Message$Type DISCONNECT -> DISCONNECT
    int val -> val
    io.rong.push.PushProtocalStack$Message$Type[] $VALUES -> $VALUES
    io.rong.push.PushProtocalStack$Message$Type[] values() -> values
    io.rong.push.PushProtocalStack$Message$Type valueOf(java.lang.String) -> valueOf
    io.rong.push.PushProtocalStack$Message$Type valueOf(int) -> valueOf
    int access$000(io.rong.push.PushProtocalStack$Message$Type) -> access$000
io.rong.push.PushProtocalStack$MessageInputStream -> io.rong.push.PushProtocalStack$MessageInputStream:
    java.io.InputStream in -> in
    io.rong.push.PushProtocalStack$Message readMessage() -> readMessage
    void close() -> close
io.rong.push.PushProtocalStack$MessageOutputStream -> io.rong.push.PushProtocalStack$MessageOutputStream:
    java.io.OutputStream out -> out
    void writeMessage(io.rong.push.PushProtocalStack$Message) -> writeMessage
io.rong.push.PushProtocalStack$PingReqMessage -> io.rong.push.PushProtocalStack$PingReqMessage:
    void setDup(boolean) -> setDup
    void setQos(io.rong.push.PushProtocalStack$QoS) -> setQos
    void setRetained(boolean) -> setRetained
io.rong.push.PushProtocalStack$PingRespMessage -> io.rong.push.PushProtocalStack$PingRespMessage:
io.rong.push.PushProtocalStack$PublishMessage -> io.rong.push.PushProtocalStack$PublishMessage:
    java.lang.String topic -> topic
    byte[] data -> data
    java.lang.String targetId -> targetId
    int date -> date
    int messageLength() -> messageLength
    void writeMessage(java.io.OutputStream) -> writeMessage
    void readMessage(java.io.InputStream,int) -> readMessage
    java.lang.String getTopic() -> getTopic
    byte[] getData() -> getData
    int getServerTime() -> getServerTime
    java.lang.String getTargetId() -> getTargetId
    java.lang.String getDataAsString() -> getDataAsString
io.rong.push.PushProtocalStack$QoS -> io.rong.push.PushProtocalStack$QoS:
    io.rong.push.PushProtocalStack$QoS AT_MOST_ONCE -> AT_MOST_ONCE
    io.rong.push.PushProtocalStack$QoS AT_LEAST_ONCE -> AT_LEAST_ONCE
    io.rong.push.PushProtocalStack$QoS EXACTLY_ONCE -> EXACTLY_ONCE
    io.rong.push.PushProtocalStack$QoS DEFAULT -> DEFAULT
    int val -> val
    io.rong.push.PushProtocalStack$QoS[] $VALUES -> $VALUES
    io.rong.push.PushProtocalStack$QoS[] values() -> values
    io.rong.push.PushProtocalStack$QoS valueOf(java.lang.String) -> valueOf
    io.rong.push.PushProtocalStack$QoS valueOf(int) -> valueOf
io.rong.push.PushProtocalStack$RetryableMessage -> io.rong.push.PushProtocalStack$RetryableMessage:
    int messageId -> messageId
    int messageLength() -> messageLength
    void writeMessage(java.io.OutputStream) -> writeMessage
    void readMessage(java.io.InputStream,int) -> readMessage
    void setMessageId(int) -> setMessageId
    int getMessageId() -> getMessageId
io.rong.push.PushReceiver -> io.rong.push.PushReceiver:
    java.lang.String TAG -> TAG
    int STATUS_WIFI -> STATUS_WIFI
    int STATUS_MOBILE -> STATUS_MOBILE
    int STATUS_ERROR -> STATUS_ERROR
    int mStastus -> mStastus
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.rong.push.PushService -> io.rong.push.PushService:
    java.lang.String TAG -> TAG
    io.rong.push.PushService$PushHandler mPushHandler -> mPushHandler
    java.util.Map appIdNotificationIdMapping -> appIdNotificationIdMapping
    android.os.Looper mServiceLooper -> mServiceLooper
    io.rong.push.PushService$ServiceHandler mServiceHandler -> mServiceHandler
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
io.rong.push.PushService$1 -> io.rong.push.PushService$1:
io.rong.push.PushService$PushHandler -> io.rong.push.PushService$PushHandler:
    boolean isClientConnected -> isClientConnected
    io.rong.push.PushClient pushClient -> pushClient
    io.rong.push.PushService this$0 -> this$0
    void connect(android.content.Intent) -> connect
    void disConnect(android.content.Intent) -> disConnect
    boolean isClientConnected() -> isClientConnected
    void heartbeat(android.content.Intent) -> heartbeat
    android.os.Bundle parsePushMsgFromJson(java.lang.String) -> parsePushMsgFromJson
    android.os.Bundle access$300(io.rong.push.PushService$PushHandler,java.lang.String) -> access$300
io.rong.push.PushService$PushHandler$1 -> io.rong.push.PushService$PushHandler$1:
    io.rong.push.PushService$PushHandler this$1 -> this$1
    void onComplete(org.json.JSONObject) -> onComplete
    void onFailure(me.add1.exception.BaseException) -> onFailure
    void onComplete(java.lang.Object) -> onComplete
io.rong.push.PushService$PushHandler$ClientConnectCallback -> io.rong.push.PushService$PushHandler$ClientConnectCallback:
    io.rong.push.PushService$PushHandler this$1 -> this$1
    void onConnected(io.rong.push.PushProtocalStack$ConnAckMessage) -> onConnected
    void onDisconnected(java.io.IOException) -> onDisconnected
io.rong.push.PushService$PushHandler$PushClientListener -> io.rong.push.PushService$PushHandler$PushClientListener:
    io.rong.push.PushService$PushHandler this$1 -> this$1
    void messageArrived(io.rong.push.PushProtocalStack$PublishMessage) -> messageArrived
io.rong.push.PushService$ServiceHandler -> io.rong.push.PushService$ServiceHandler:
    io.rong.push.PushService this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.BaseActivity -> io.rong.voipkit.activity.BaseActivity:
    com.ultrapower.mcs.engine.UMCS session -> session
    com.ultrapower.mcs.engine.internal.UMCSInternal uUMCSInternal -> uUMCSInternal
    android.media.AudioManager mAudioManager -> mAudioManager
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    java.lang.String remoteIp -> remoteIp
    int localPort -> localPort
    int remotePort -> remotePort
    java.lang.String peerid -> peerid
    java.lang.String appId -> appId
    java.lang.String mySelfId -> mySelfId
    java.lang.String sessionId -> sessionId
    java.lang.String peerUserPhoteUri -> peerUserPhoteUri
    boolean isVoIPSuccess -> isVoIPSuccess
    android.widget.TextView calling_state -> calling_state
    io.rong.imkit.widget.AsyncImageView user_photo -> user_photo
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    int initAudioMode -> initAudioMode
    android.hardware.Sensor mSensor -> mSensor
    android.hardware.SensorManager mSensorManager -> mSensorManager
    float mLastEventValue -> mLastEventValue
    android.os.Handler stepTimeHandler -> stepTimeHandler
    java.lang.Runnable mTicker -> mTicker
    long startTime -> startTime
    int RINGSTYLE_CALL -> RINGSTYLE_CALL
    int RINGSTYLE_CALLED -> RINGSTYLE_CALLED
    android.os.Handler setPhotoHandler -> setPhotoHandler
    void onCreate(android.os.Bundle) -> onCreate
    void initAudioManager() -> initAudioManager
    void onResume() -> onResume
    void onPause() -> onPause
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void showMaskLayout(boolean) -> showMaskLayout
    void initCall() -> initCall
    void createVoIP() -> createVoIP
    void createLocaleAudio() -> createLocaleAudio
    void createRemoteAudio() -> createRemoteAudio
    void StartChat() -> StartChat
    void sendMsg(io.rong.imlib.model.MessageContent) -> sendMsg
    void onEventBackgroundThread(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onEventBackgroundThread
    void onEventBackgroundThread(io.rong.imkit.model.Event$OnReceiveVoIPMessageEvent) -> onEventBackgroundThread
    java.lang.String showTimeCount(long) -> showTimeCount
    void startCountTime() -> startCountTime
    void stopCountTime() -> stopCountTime
    void playerRingtone(int,int) -> playerRingtone
    void releaseRingtong() -> releaseRingtong
    void recoverAudiaMode() -> recoverAudiaMode
    void enableHandOffAndSoundOff(android.widget.ImageView,android.widget.ImageView) -> enableHandOffAndSoundOff
    void onDestroy() -> onDestroy
    java.lang.String access$000(io.rong.voipkit.activity.BaseActivity,long) -> access$000
    java.lang.Runnable access$100(io.rong.voipkit.activity.BaseActivity) -> access$100
    android.os.Handler access$200(io.rong.voipkit.activity.BaseActivity) -> access$200
io.rong.voipkit.activity.BaseActivity$1 -> io.rong.voipkit.activity.BaseActivity$1:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void OnTransportFailed() -> OnTransportFailed
io.rong.voipkit.activity.BaseActivity$2 -> io.rong.voipkit.activity.BaseActivity$2:
    java.lang.String val$objectName -> val$objectName
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void onSuccess(java.lang.Integer) -> onSuccess
    void onError(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.voipkit.activity.BaseActivity$3 -> io.rong.voipkit.activity.BaseActivity$3:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.BaseActivity$4 -> io.rong.voipkit.activity.BaseActivity$4:
    io.rong.imlib.model.MessageContent val$messageContent -> val$messageContent
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.BaseActivity$5 -> io.rong.voipkit.activity.BaseActivity$5:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.BaseActivity$6 -> io.rong.voipkit.activity.BaseActivity$6:
    android.widget.ImageView val$sound_off -> val$sound_off
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.voipkit.activity.BaseActivity$7 -> io.rong.voipkit.activity.BaseActivity$7:
    android.widget.ImageView val$hands_off -> val$hands_off
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
io.rong.voipkit.activity.BaseActivity$8 -> io.rong.voipkit.activity.BaseActivity$8:
    io.rong.voipkit.activity.BaseActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CallSideActivity -> io.rong.voipkit.activity.CallSideActivity:
    java.lang.String peerUserName -> peerUserName
    android.widget.TextView userName -> userName
    android.widget.ImageView sound_off -> sound_off
    android.widget.ImageView hands_off -> hands_off
    android.view.View maskView -> maskView
    java.lang.String myselfName -> myselfName
    java.lang.String token -> token
    int STARTVOIP_SUCCESS -> STARTVOIP_SUCCESS
    int STARTVOIP_ERROR -> STARTVOIP_ERROR
    boolean isActiviyShow -> isActiviyShow
    android.os.Handler connectedHandler -> connectedHandler
    android.os.Handler delayHandler -> delayHandler
    java.lang.Runnable finishActivity -> finishActivity
    void onCreate(android.os.Bundle) -> onCreate
    void onEvent(io.rong.imlib.model.UserInfo) -> onEvent
    void onEventBackgroundThread(io.rong.voipkit.model.VOIPCallBackObject) -> onEventBackgroundThread
    void showMaskLayout(boolean) -> showMaskLayout
    void onResume() -> onResume
    void reciveIntentData() -> reciveIntentData
    void connectVoIPServer_call() -> connectVoIPServer_call
    void doFinishChat(android.view.View) -> doFinishChat
    void onBackPressed() -> onBackPressed
    void delayTimesFinish() -> delayTimesFinish
    void CalledAcceptCall() -> CalledAcceptCall
    void onDestroy() -> onDestroy
    boolean access$000() -> access$000
    android.widget.TextView access$100(io.rong.voipkit.activity.CallSideActivity) -> access$100
    java.lang.String access$200(io.rong.voipkit.activity.CallSideActivity) -> access$200
    java.lang.String access$300(io.rong.voipkit.activity.CallSideActivity) -> access$300
    java.lang.String access$400(io.rong.voipkit.activity.CallSideActivity) -> access$400
    android.widget.ImageView access$500(io.rong.voipkit.activity.CallSideActivity) -> access$500
    android.widget.ImageView access$600(io.rong.voipkit.activity.CallSideActivity) -> access$600
io.rong.voipkit.activity.CallSideActivity$1 -> io.rong.voipkit.activity.CallSideActivity$1:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CallSideActivity$1$1 -> io.rong.voipkit.activity.CallSideActivity$1$1:
    io.rong.voipkit.activity.CallSideActivity$1 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.voipkit.activity.CallSideActivity$2 -> io.rong.voipkit.activity.CallSideActivity$2:
    io.rong.imlib.model.UserInfo val$userInfoArg -> val$userInfoArg
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CallSideActivity$3 -> io.rong.voipkit.activity.CallSideActivity$3:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CallSideActivity$3$1 -> io.rong.voipkit.activity.CallSideActivity$3$1:
    io.rong.voipkit.activity.CallSideActivity$3 this$1 -> this$1
    void OnSuccess(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voipkit.activity.CallSideActivity$4 -> io.rong.voipkit.activity.CallSideActivity$4:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CallSideActivity$5 -> io.rong.voipkit.activity.CallSideActivity$5:
    io.rong.voipkit.activity.CallSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CalledSideActivity -> io.rong.voipkit.activity.CalledSideActivity:
    android.widget.Button call_finish -> call_finish
    android.widget.LinearLayout vioce_control_container -> vioce_control_container
    android.widget.LinearLayout voipCalledLayout -> voipCalledLayout
    android.widget.TextView user_name -> user_name
    android.view.View maskView -> maskView
    android.widget.ImageView sound_off -> sound_off
    android.widget.ImageView hands_off -> hands_off
    io.rong.voipkit.message.VoIPCallMessage voipCallMessage -> voipCallMessage
    io.rong.imlib.RongIMClient mRongIMClient -> mRongIMClient
    boolean isPushJumpHere -> isPushJumpHere
    java.lang.String fromUserNameByPush -> fromUserNameByPush
    android.os.Handler acceptVoIPHandler -> acceptVoIPHandler
    android.os.Handler connectedHandler -> connectedHandler
    int MESSAGE_VOIPCALL -> MESSAGE_VOIPCALL
    int MESSAGE_VOIPFINISH -> MESSAGE_VOIPFINISH
    android.os.Handler doPushRecevieHandler -> doPushRecevieHandler
    void onCreate(android.os.Bundle) -> onCreate
    void onEvent(io.rong.imlib.model.UserInfo) -> onEvent
    void showMaskLayout(boolean) -> showMaskLayout
    void initParam() -> initParam
    void connectVoIPServer_accept() -> connectVoIPServer_accept
    void doYes(android.view.View) -> doYes
    void doRefuse(android.view.View) -> doRefuse
    void onBackPressed() -> onBackPressed
    void doFinishChat(android.view.View) -> doFinishChat
    void switchView() -> switchView
    void doPush(java.lang.String,java.lang.String) -> doPush
    void registerReceiveMessage() -> registerReceiveMessage
    void sendMessageByPushJump(io.rong.imlib.model.MessageContent) -> sendMessageByPushJump
    void onDestroy() -> onDestroy
    boolean access$000(io.rong.voipkit.activity.CalledSideActivity) -> access$000
    void access$100(io.rong.voipkit.activity.CalledSideActivity) -> access$100
    android.widget.TextView access$200(io.rong.voipkit.activity.CalledSideActivity) -> access$200
    io.rong.voipkit.message.VoIPCallMessage access$300(io.rong.voipkit.activity.CalledSideActivity) -> access$300
    void access$400(io.rong.voipkit.activity.CalledSideActivity) -> access$400
    io.rong.voipkit.message.VoIPCallMessage access$302(io.rong.voipkit.activity.CalledSideActivity,io.rong.voipkit.message.VoIPCallMessage) -> access$302
    java.lang.String access$500(io.rong.voipkit.activity.CalledSideActivity) -> access$500
io.rong.voipkit.activity.CalledSideActivity$1 -> io.rong.voipkit.activity.CalledSideActivity$1:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CalledSideActivity$2 -> io.rong.voipkit.activity.CalledSideActivity$2:
    io.rong.imlib.model.UserInfo val$userInfoArg -> val$userInfoArg
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CalledSideActivity$3 -> io.rong.voipkit.activity.CalledSideActivity$3:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CalledSideActivity$3$1 -> io.rong.voipkit.activity.CalledSideActivity$3$1:
    io.rong.voipkit.activity.CalledSideActivity$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
io.rong.voipkit.activity.CalledSideActivity$4 -> io.rong.voipkit.activity.CalledSideActivity$4:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void run() -> run
io.rong.voipkit.activity.CalledSideActivity$4$1 -> io.rong.voipkit.activity.CalledSideActivity$4$1:
    io.rong.voipkit.activity.CalledSideActivity$4 this$1 -> this$1
    void OnSuccess() -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voipkit.activity.CalledSideActivity$5 -> io.rong.voipkit.activity.CalledSideActivity$5:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void onSuccess(java.lang.String) -> onSuccess
    void onError(io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.voipkit.activity.CalledSideActivity$6 -> io.rong.voipkit.activity.CalledSideActivity$6:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
io.rong.voipkit.activity.CalledSideActivity$7 -> io.rong.voipkit.activity.CalledSideActivity$7:
    long val$startTime -> val$startTime
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    boolean onReceived(io.rong.imlib.model.Message,int) -> onReceived
io.rong.voipkit.activity.CalledSideActivity$8 -> io.rong.voipkit.activity.CalledSideActivity$8:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void onChanged(io.rong.imlib.RongIMClient$ConnectionStatusListener$ConnectionStatus) -> onChanged
io.rong.voipkit.activity.CalledSideActivity$MySendMessageCallback -> io.rong.voipkit.activity.CalledSideActivity$MySendMessageCallback:
    io.rong.voipkit.activity.CalledSideActivity this$0 -> this$0
    void onError(java.lang.Integer,io.rong.imlib.RongIMClient$ErrorCode) -> onError
    void onSuccess(java.lang.Integer) -> onSuccess
    void onSuccess(java.lang.Object) -> onSuccess
io.rong.voipkit.message.VoIPAcceptMessage -> io.rong.voipkit.message.VoIPAcceptMessage:
    java.lang.String toId -> toId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    java.lang.String getToId() -> getToId
    void setToId(java.lang.String) -> setToId
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.voipkit.message.VoIPAcceptMessage$1 -> io.rong.voipkit.message.VoIPAcceptMessage$1:
    io.rong.voipkit.message.VoIPAcceptMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.voipkit.message.VoIPAcceptMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.voipkit.message.VoIPCallMessage -> io.rong.voipkit.message.VoIPCallMessage:
    java.lang.String sessionId -> sessionId
    java.lang.String ip -> ip
    int remoteTransferPort -> remoteTransferPort
    int remoteControlPort -> remoteControlPort
    java.lang.String toId -> toId
    java.lang.String toUserName -> toUserName
    java.lang.String fromId -> fromId
    java.lang.String fromUserName -> fromUserName
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    java.lang.String getSessionId() -> getSessionId
    void setSessionId(java.lang.String) -> setSessionId
    java.lang.String getIp() -> getIp
    void setIp(java.lang.String) -> setIp
    int getRemoteTransferPort() -> getRemoteTransferPort
    void setRemoteTransferPort(int) -> setRemoteTransferPort
    int getRemoteControlPort() -> getRemoteControlPort
    void setRemoteControlPort(int) -> setRemoteControlPort
    java.lang.String getToId() -> getToId
    void setToId(java.lang.String) -> setToId
    java.lang.String getToUserName() -> getToUserName
    void setToUserName(java.lang.String) -> setToUserName
    java.lang.String getFromId() -> getFromId
    void setFromId(java.lang.String) -> setFromId
    java.lang.String getFromUserName() -> getFromUserName
    void setFromUserName(java.lang.String) -> setFromUserName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.voipkit.message.VoIPCallMessage$1 -> io.rong.voipkit.message.VoIPCallMessage$1:
    io.rong.voipkit.message.VoIPCallMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.voipkit.message.VoIPCallMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.voipkit.message.VoIPFinishMessage -> io.rong.voipkit.message.VoIPFinishMessage:
    int FINISH_NORMAL -> FINISH_NORMAL
    int FINISH_REFUSE -> FINISH_REFUSE
    java.lang.String toId -> toId
    int finish_state -> finish_state
    android.os.Parcelable$Creator CREATOR -> CREATOR
    byte[] encode() -> encode
    java.lang.String getToId() -> getToId
    void setToId(java.lang.String) -> setToId
    int getFinish_state() -> getFinish_state
    void setFinish_state(int) -> setFinish_state
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.rong.voipkit.message.VoIPFinishMessage$1 -> io.rong.voipkit.message.VoIPFinishMessage$1:
    io.rong.voipkit.message.VoIPFinishMessage createFromParcel(android.os.Parcel) -> createFromParcel
    io.rong.voipkit.message.VoIPFinishMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
io.rong.voipkit.model.VOIPCallBackObject -> io.rong.voipkit.model.VOIPCallBackObject:
    boolean isSuccess -> isSuccess
    java.lang.String objectName -> objectName
    java.lang.Object object -> object
    boolean isSuccess() -> isSuccess
    void setSuccess(boolean) -> setSuccess
    java.lang.String getObjectName() -> getObjectName
    void setObjectName(java.lang.String) -> setObjectName
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
io.rong.voiplib.NativeObject -> io.rong.voiplib.NativeObject:
    void setJNIEnv(io.rong.voiplib.NativeObject) -> setJNIEnv
    void StartVoip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,io.rong.voiplib.NativeObject$StartVoIPCallback) -> StartVoip
    void AcceptVoip(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,io.rong.voiplib.NativeObject$AcceptVoIPCallback) -> AcceptVoip
    void EndVoip(java.lang.String,java.lang.String,java.lang.String,io.rong.voiplib.NativeObject$AcceptVoIPCallback) -> EndVoip
io.rong.voiplib.NativeObject$AcceptVoIPCallback -> io.rong.voiplib.NativeObject$AcceptVoIPCallback:
    void OnSuccess() -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voiplib.NativeObject$StartVoIPCallback -> io.rong.voiplib.NativeObject$StartVoIPCallback:
    void OnSuccess(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voiplib.RongIMVoIP -> io.rong.voiplib.RongIMVoIP:
    java.lang.String TAG -> TAG
    io.rong.voiplib.NativeObject nativeObj -> nativeObj
    void startVoIP(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,io.rong.voiplib.NativeObject$StartVoIPCallback) -> startVoIP
    void acceptVoIP(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,io.rong.voiplib.NativeObject$AcceptVoIPCallback) -> acceptVoIP
    void endVoIP(java.lang.String,java.lang.String,java.lang.String) -> endVoIP
io.rong.voiplib.RongIMVoIP$1 -> io.rong.voiplib.RongIMVoIP$1:
    void OnSuccess() -> OnSuccess
    void OnError(int,java.lang.String) -> OnError
io.rong.voiplib.utils.NetworkUtil -> io.rong.voiplib.utils.NetworkUtil:
    void isConnectivityAvailable(android.content.Context,io.rong.voiplib.utils.NetworkUtil$DoEventByConnectivityState) -> isConnectivityAvailable
io.rong.voiplib.utils.NetworkUtil$DoEventByConnectivityState -> io.rong.voiplib.utils.NetworkUtil$DoEventByConnectivityState:
    void doCall() -> doCall
    void doWarnCall() -> doWarnCall
io.rong.voiplib.utils.Res -> io.rong.voiplib.utils.Res:
    java.lang.String LOG_TAG -> LOG_TAG
    io.rong.voiplib.utils.Res instance -> instance
    java.lang.String packageName -> packageName
    java.lang.Class R_id -> R_id
    java.lang.Class R_drawable -> R_drawable
    java.lang.Class R_layout -> R_layout
    java.lang.Class R_anim -> R_anim
    java.lang.Class R_style -> R_style
    java.lang.Class R_string -> R_string
    java.lang.Class R_array -> R_array
    java.lang.Class R_color -> R_color
    java.lang.Class R_dimen -> R_dimen
    java.lang.Class R_integer -> R_integer
    java.lang.Class R_bool -> R_bool
    java.lang.Class R_styleable -> R_styleable
    java.lang.Class R_attr -> R_attr
    io.rong.voiplib.utils.Res getInstance(android.content.Context) -> getInstance
    void setPackageName(java.lang.String) -> setPackageName
    int anim(java.lang.String) -> anim
    int id(java.lang.String) -> id
    int drawable(java.lang.String) -> drawable
    int layout(java.lang.String) -> layout
    int style(java.lang.String) -> style
    int string(java.lang.String) -> string
    int array(java.lang.String) -> array
    int color(java.lang.String) -> color
    int dimen(java.lang.String) -> dimen
    int integer(java.lang.String) -> integer
    int bool(java.lang.String) -> bool
    int styleable(java.lang.String) -> styleable
    int attr(java.lang.String) -> attr
    int[] styleables(java.lang.String) -> styleables
    int getRes(java.lang.Class,java.lang.String) -> getRes
    int[] getResArr(java.lang.Class,java.lang.String) -> getResArr
io.rong.voiplib.utils.VoIPUtil -> io.rong.voiplib.utils.VoIPUtil:
    java.lang.String getLocalIpAddress(android.content.Context) -> getLocalIpAddress
    int getPort() -> getPort
m.framework.network.ByteArrayPart -> m.framework.network.ByteArrayPart:
    byte[] buffer -> buffer
    m.framework.network.ByteArrayPart append(byte[]) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.FilePart -> m.framework.network.FilePart:
    java.io.File file -> file
    void setFile(java.io.File) -> setFile
    void setFile(java.lang.String) -> setFile
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.HTTPPart -> m.framework.network.HTTPPart:
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    org.apache.http.entity.InputStreamEntity getInputStreamEntity() -> getInputStreamEntity
m.framework.network.KVPair -> m.framework.network.KVPair:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.lang.String toString() -> toString
m.framework.network.MultiPart -> m.framework.network.MultiPart:
    java.util.ArrayList parts -> parts
    m.framework.network.MultiPart append(m.framework.network.HTTPPart) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.MultiPartInputStream -> m.framework.network.MultiPartInputStream:
    java.util.ArrayList isList -> isList
    int curIs -> curIs
    void addInputStream(java.io.InputStream) -> addInputStream
    boolean isEmpty() -> isEmpty
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
m.framework.network.NetworkHelper -> m.framework.network.NetworkHelper:
    int connectionTimeout -> connectionTimeout
    int readTimout -> readTimout
    java.lang.String httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> httpGet
    void httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpGet
    void download(java.lang.String,java.io.File) -> download
    void download(java.lang.String,m.framework.network.ResponseCallback) -> download
    java.lang.String httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPost
    void httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpPost
    org.apache.http.client.methods.HttpPost filePost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair) -> filePost
    org.apache.http.client.methods.HttpPost textPost(java.lang.String,java.util.ArrayList) -> textPost
    void rawPost(java.lang.String,java.util.ArrayList,m.framework.network.HTTPPart,m.framework.network.ResponseCallback) -> rawPost
    java.lang.String httpPut(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPut
    java.lang.String kvPairsToUrl(java.util.ArrayList) -> kvPairsToUrl
    org.apache.http.client.HttpClient getSSLHttpClient() -> getSSLHttpClient
m.framework.network.ResponseCallback -> m.framework.network.ResponseCallback:
    void onResponse(java.io.InputStream) -> onResponse
m.framework.network.SSLSocketFactoryEx -> m.framework.network.SSLSocketFactoryEx:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
m.framework.network.SSLSocketFactoryEx$1 -> m.framework.network.SSLSocketFactoryEx$1:
    m.framework.network.SSLSocketFactoryEx this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
m.framework.network.StringPart -> m.framework.network.StringPart:
    java.lang.StringBuilder sb -> sb
    m.framework.network.StringPart append(java.lang.String) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.ui.widget.asyncview.AsyncImageView -> m.framework.ui.widget.asyncview.AsyncImageView:
    int DEFAULT_TRANSPARENT -> DEFAULT_TRANSPARENT
    android.graphics.Bitmap DEFAULT_TRANSPARENT_BITMAP -> DEFAULT_TRANSPARENT_BITMAP
    int MSG_IMG_GOT -> MSG_IMG_GOT
    java.util.Random rnd -> rnd
    java.lang.String cacheDir -> cacheDir
    java.lang.String url -> url
    int defaultRes -> defaultRes
    m.framework.ui.widget.asyncview.OnImageGotListener onImageGotListener -> onImageGotListener
    void init(android.content.Context) -> init
    void setOnImageGotListener(m.framework.ui.widget.asyncview.OnImageGotListener) -> setOnImageGotListener
    java.lang.String getUrl() -> getUrl
    void execute(java.lang.String) -> execute
    void execute(java.lang.String,int) -> execute
    android.graphics.Bitmap getDefaultBitmap(int) -> getDefaultBitmap
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.ui.widget.asyncview.AsyncView -> m.framework.ui.widget.asyncview.AsyncView:
    void execute(java.lang.String,int) -> execute
    java.lang.String getUrl() -> getUrl
m.framework.ui.widget.asyncview.BitmapCallback -> m.framework.ui.widget.asyncview.BitmapCallback:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
m.framework.ui.widget.asyncview.BitmapProcessor -> m.framework.ui.widget.asyncview.BitmapProcessor:
    int CAPACITY -> CAPACITY
    int MAX_REQ_TIME -> MAX_REQ_TIME
    int MAX_SIZE -> MAX_SIZE
    int OVERFLOW_SIZE -> OVERFLOW_SIZE
    m.framework.ui.widget.asyncview.BitmapProcessor instance -> instance
    java.util.WeakHashMap cacheMap -> cacheMap
    boolean work -> work
    java.util.Vector reqList -> reqList
    java.io.File cacheDir -> cacheDir
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] workerList -> workerList
    java.util.Vector netReqTPS -> netReqTPS
    void prepare(java.lang.String) -> prepare
    void start() -> start
    void stop() -> stop
    void process(java.lang.String,m.framework.ui.widget.asyncview.BitmapCallback) -> process
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    boolean access$0(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$0
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] access$1(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$1
    java.util.Vector access$2(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$2
    java.util.WeakHashMap access$3(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$3
    java.io.File access$4(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$4
    java.util.Vector access$5(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq -> m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq:
    java.lang.String url -> url
    m.framework.ui.widget.asyncview.BitmapCallback callback -> callback
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread worker -> worker
    long reqTime -> reqTime
    android.graphics.Bitmap image -> image
    void throwComplete(android.graphics.Bitmap) -> throwComplete
    java.lang.String toString() -> toString
    java.lang.String access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    void access$2(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,java.lang.String) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapCallback) -> access$4
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    void scan() -> scan
    m.framework.ui.widget.asyncview.BitmapProcessor access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$1
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1:
    int counter -> counter
    m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread this$1 -> this$1
    void run() -> run
m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream -> m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream:
    java.io.InputStream in -> in
    long skip(long) -> skip
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    long lastReport -> lastReport
    boolean localType -> localType
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq curReq -> curReq
    void run() -> run
    void doLocalTask() -> doLocalTask
    void doNetworkTask() -> doNetworkTask
    void doTask(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> doTask
    void saveFile(android.graphics.Bitmap,java.io.File) -> saveFile
    void interrupt() -> interrupt
    void access$0(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,boolean) -> access$0
    long access$1(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    boolean access$2(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File) -> access$4
    m.framework.ui.widget.asyncview.BitmapProcessor access$5(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1:
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread this$1 -> this$1
    java.io.File val$file -> val$file
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq val$req -> val$req
    void onResponse(java.io.InputStream) -> onResponse
m.framework.ui.widget.asyncview.OnImageGotListener -> m.framework.ui.widget.asyncview.OnImageGotListener:
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.asyncview.SimpleOnImageGotListener -> m.framework.ui.widget.asyncview.SimpleOnImageGotListener:
    m.framework.ui.widget.asyncview.SimpleOnImageGotListener INSTANCE -> INSTANCE
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.pulltorefresh.GroupListView -> m.framework.ui.widget.pulltorefresh.GroupListView:
    void setAdapter(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter) -> setAdapter
m.framework.ui.widget.pulltorefresh.GroupListView$1 -> m.framework.ui.widget.pulltorefresh.GroupListView$1:
    m.framework.ui.widget.pulltorefresh.GroupListView this$0 -> this$0
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter val$adapter -> val$adapter
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int[] getItemIndex(int) -> getItemIndex
    int getCount() -> getCount
m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter -> m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter:
    android.widget.BaseAdapter adapter -> adapter
    void setInnerAdapter(android.widget.BaseAdapter) -> setInnerAdapter
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter,android.widget.BaseAdapter) -> access$0
m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder -> m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder:
    android.widget.LinearLayout llItem -> llItem
    android.view.View title -> title
    android.view.View child -> child
m.framework.ui.widget.pulltorefresh.ListInnerAdapter -> m.framework.ui.widget.pulltorefresh.ListInnerAdapter:
    m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter adapter -> adapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
m.framework.ui.widget.pulltorefresh.OnListStopScrollListener -> m.framework.ui.widget.pulltorefresh.OnListStopScrollListener:
    void onListStopScrolling(int,int) -> onListStopScrolling
m.framework.ui.widget.pulltorefresh.OnScrollListener -> m.framework.ui.widget.pulltorefresh.OnScrollListener:
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper -> m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper:
    android.content.Context context -> context
    m.framework.ui.widget.pulltorefresh.PullToRefreshView parent -> parent
    android.content.Context getContext() -> getContext
    m.framework.ui.widget.pulltorefresh.PullToRefreshView getParent() -> getParent
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getHeaderView() -> getHeaderView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView gridView -> gridView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.GridView getGridView() -> getGridView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGridView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView listView -> listView
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    m.framework.ui.widget.pulltorefresh.GroupListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2:
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getChild(int,int) -> getChild
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableListView listView -> listView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.ListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshView -> m.framework.ui.widget.pulltorefresh.PullToRefreshView:
    long MIN_REF_TIME -> MIN_REF_TIME
    m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper adapter -> adapter
    android.view.View headerView -> headerView
    android.view.View bodyView -> bodyView
    int headerHeight -> headerHeight
    int top -> top
    float downY -> downY
    boolean requesting -> requesting
    boolean pullingLock -> pullingLock
    java.lang.Runnable stopAct -> stopAct
    long refreshTime -> refreshTime
    void init() -> init
    void setAdapter(m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper) -> setAdapter
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> getCancelEvent
    void performRequest() -> performRequest
    void stopRequest() -> stopRequest
    void performPulling(boolean) -> performPulling
    void reversePulling() -> reversePulling
    void stopPulling() -> stopPulling
    void lockPulling() -> lockPulling
    void releaseLock() -> releaseLock
    boolean canPull() -> canPull
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$0
    void access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$1
m.framework.ui.widget.pulltorefresh.PullToRefreshView$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshView$1:
    m.framework.ui.widget.pulltorefresh.PullToRefreshView this$0 -> this$0
    void run() -> run
m.framework.ui.widget.pulltorefresh.Scrollable -> m.framework.ui.widget.pulltorefresh.Scrollable:
m.framework.ui.widget.pulltorefresh.ScrollableGridView -> m.framework.ui.widget.pulltorefresh.ScrollableGridView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean isReadyToPull() -> isReadyToPull
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGridView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGridView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGridView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGroupListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableListView -> m.framework.ui.widget.pulltorefresh.ScrollableListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.BodyContainer -> m.framework.ui.widget.slidingmenu.BodyContainer:
    int MIN_FLING_VEL -> MIN_FLING_VEL
    int MENU_COVER_ALPHA -> MENU_COVER_ALPHA
    float downX -> downX
    m.framework.ui.widget.slidingmenu.SlidingMenu menu -> menu
    int maxVelocity -> maxVelocity
    android.view.VelocityTracker tracker -> tracker
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onScrollChanged(int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.MenuAdapter -> m.framework.ui.widget.slidingmenu.MenuAdapter:
    java.util.ArrayList menus -> menus
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup findGroupById(int) -> findGroupById
    void setGroup(int,java.lang.String) -> setGroup
    void setGroup(m.framework.ui.widget.slidingmenu.SlidingMenuGroup) -> setGroup
    void setItem(int,m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    android.view.View getMenuTitle() -> getMenuTitle
    int getGroupCount() -> getGroupCount
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup getGroup(int) -> getGroup
    java.lang.String getTitle(int) -> getTitle
    android.view.View getGroupView(int,android.view.ViewGroup) -> getGroupView
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int,int) -> getItem
    android.view.View getItemView(m.framework.ui.widget.slidingmenu.SlidingMenuItem,android.view.ViewGroup) -> getItemView
    void notifyDataSetChanged(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> notifyDataSetChanged
    boolean onItemTrigger(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> onItemTrigger
    void onMenuSwitch(boolean) -> onMenuSwitch
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getMenuItem(int,int) -> getMenuItem
m.framework.ui.widget.slidingmenu.MenuConfig -> m.framework.ui.widget.slidingmenu.MenuConfig:
    int itemDownBack -> itemDownBack
    int itemDownRelease -> itemDownRelease
    float menuWeight -> menuWeight
    int menuBackground -> menuBackground
    int paddingLeft -> paddingLeft
    int paddingTop -> paddingTop
    int paddingRight -> paddingRight
    int paddingBottom -> paddingBottom
    int titleHeight -> titleHeight
    int bodyBackground -> bodyBackground
    int rightShadow -> rightShadow
    int menuSep -> menuSep
m.framework.ui.widget.slidingmenu.SlidingMenu -> m.framework.ui.widget.slidingmenu.SlidingMenu:
    m.framework.ui.widget.slidingmenu.MenuConfig config -> config
    java.util.HashMap itemToView -> itemToView
    android.view.View$OnClickListener ocListener -> ocListener
    android.view.View$OnTouchListener otListener -> otListener
    m.framework.ui.widget.slidingmenu.MenuAdapter adapter -> adapter
    int screenWidth -> screenWidth
    int menuWidth -> menuWidth
    int showMenuWidth -> showMenuWidth
    boolean menuShown -> menuShown
    android.widget.FrameLayout flMenu -> flMenu
    android.widget.LinearLayout llMenu -> llMenu
    android.view.View vCover -> vCover
    m.framework.ui.widget.slidingmenu.BodyContainer svBody -> svBody
    android.widget.LinearLayout llBody -> llBody
    android.view.View curBody -> curBody
    void init(android.content.Context) -> init
    void initMenu(android.content.Context) -> initMenu
    void initBody(android.content.Context) -> initBody
    void setAdapter(m.framework.ui.widget.slidingmenu.MenuAdapter) -> setAdapter
    void refresh() -> refresh
    void reInit(android.content.Context) -> reInit
    void reInitMenu(android.content.Context) -> reInitMenu
    void reInitBody(android.content.Context) -> reInitBody
    void setBodyView(android.view.View) -> setBodyView
    android.view.View getBodyView() -> getBodyView
    void invalidateMenu() -> invalidateMenu
    android.view.View getSepView(android.content.Context) -> getSepView
    void switchMenu() -> switchMenu
    void showMenu() -> showMenu
    void hideMenu() -> hideMenu
    boolean isMenuShown() -> isMenuShown
    int getMenuWidth() -> getMenuWidth
    int getShowMenuWidth() -> getShowMenuWidth
    m.framework.ui.widget.slidingmenu.MenuConfig getMenuConfig() -> getMenuConfig
    android.view.View getMenuCover() -> getMenuCover
    void setMenuItemBackground(int,int) -> setMenuItemBackground
    void setMenuWeight(float) -> setMenuWeight
    void setMenuBackground(int) -> setMenuBackground
    void setMenuPadding(int,int,int,int) -> setMenuPadding
    void setTtleHeight(int) -> setTtleHeight
    void setShadowRes(int) -> setShadowRes
    void setBodyBackground(int) -> setBodyBackground
    void setMenuDivider(int) -> setMenuDivider
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    android.view.View itemToView(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> itemToView
    void triggerItem(int,int) -> triggerItem
    void triggerItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> triggerItem
    m.framework.ui.widget.slidingmenu.MenuAdapter access$0(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$0
    m.framework.ui.widget.slidingmenu.MenuConfig access$1(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$1
    boolean access$2(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$2
    m.framework.ui.widget.slidingmenu.BodyContainer access$3(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$3
    int access$4(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$4
m.framework.ui.widget.slidingmenu.SlidingMenu$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onClick(android.view.View) -> onClick
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$1) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$1$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$1 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$2 -> m.framework.ui.widget.slidingmenu.SlidingMenu$2:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
m.framework.ui.widget.slidingmenu.SlidingMenu$3 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$3) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$3$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$3 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$4 -> m.framework.ui.widget.slidingmenu.SlidingMenu$4:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$5 -> m.framework.ui.widget.slidingmenu.SlidingMenu$5:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$6 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$6) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$6$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$6 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenuGroup -> m.framework.ui.widget.slidingmenu.SlidingMenuGroup:
    int id -> id
    java.lang.String text -> text
    java.util.ArrayList items -> items
    void setItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    m.framework.ui.widget.slidingmenu.SlidingMenuItem findItemById(int) -> findItemById
    int getCount() -> getCount
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int) -> getItem
m.framework.ui.widget.slidingmenu.SlidingMenuItem -> m.framework.ui.widget.slidingmenu.SlidingMenuItem:
    int group -> group
    int id -> id
    java.lang.Object body -> body
m.framework.ui.widget.viewpager.ViewPagerAdapter -> m.framework.ui.widget.viewpager.ViewPagerAdapter:
    int getCount() -> getCount
    void onScreenChange(int,int) -> onScreenChange
    android.view.View getView(int,android.view.ViewGroup) -> getView
m.framework.ui.widget.viewpager.ViewPagerClassic -> m.framework.ui.widget.viewpager.ViewPagerClassic:
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int currentScreen -> currentScreen
    android.widget.Scroller scroller -> scroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float lastMotionX -> lastMotionX
    float lastMotionY -> lastMotionY
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int touchState -> touchState
    int touchSlop -> touchSlop
    int mMaximumVelocity -> mMaximumVelocity
    m.framework.ui.widget.viewpager.ViewPagerAdapter adapter -> adapter
    void init(android.content.Context) -> init
    int getCurrentScreen() -> getCurrentScreen
    void setCurrentScreen(int) -> setCurrentScreen
    void computeScroll() -> computeScroll
    void setAdapter(m.framework.ui.widget.viewpager.ViewPagerAdapter) -> setAdapter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> handleInterceptMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> handleScrollMove
    void scrollToScreen(int) -> scrollToScreen
    void scrollToScreen(int,boolean) -> scrollToScreen
    void scrollLeft() -> scrollLeft
    void scrollRight() -> scrollRight
m.framework.ui.widget.viewpager.ViewPagerClassic$1 -> m.framework.ui.widget.viewpager.ViewPagerClassic$1:
    float[] values -> values
    m.framework.ui.widget.viewpager.ViewPagerClassic this$0 -> this$0
    float getInterpolation(float) -> getInterpolation
m.framework.utils.Data -> m.framework.utils.Data:
    java.lang.String CHAT_SET -> CHAT_SET
    m.framework.utils.Hashon hashon -> hashon
    byte[] SHA1(java.lang.String) -> SHA1
    byte[] AES128Encode(java.lang.String,java.lang.String) -> AES128Encode
    byte[] AES128Encode(byte[],java.lang.String) -> AES128Encode
    java.lang.String AES128Decode(java.lang.String,byte[]) -> AES128Decode
    byte[] AES128Decode(byte[],byte[]) -> AES128Decode
    java.lang.String byteToHex(byte[]) -> byteToHex
    java.util.HashMap parseJson(java.lang.String) -> parseJson
    java.lang.String parseJson(java.util.HashMap) -> parseJson
    java.lang.String base62(long) -> base62
    java.lang.String MD5(java.lang.String) -> MD5
    byte[] rawMD5(java.lang.String) -> rawMD5
    java.lang.String urlEncode(java.lang.String,java.lang.String) -> urlEncode
m.framework.utils.DeviceHelper -> m.framework.utils.DeviceHelper:
    android.content.Context context -> context
    m.framework.utils.DeviceHelper deviceHelper -> deviceHelper
    m.framework.utils.DeviceHelper getInstance(android.content.Context) -> getInstance
    boolean isRooted() -> isRooted
    java.lang.String getMacAddress() -> getMacAddress
    java.lang.String getModel() -> getModel
    java.lang.String getFactory() -> getFactory
    java.lang.String getDeviceId() -> getDeviceId
    java.lang.String getDeviceData() -> getDeviceData
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String getOSVersion() -> getOSVersion
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.String getCarrier() -> getCarrier
    java.lang.String getNetworkType() -> getNetworkType
    int getPlatformCode() -> getPlatformCode
    boolean isFastMobileNetwork() -> isFastMobileNetwork
    org.json.JSONArray getRunningApp() -> getRunningApp
    java.lang.String getRunningAppStr() -> getRunningAppStr
    java.lang.String getDeviceKey() -> getDeviceKey
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    int getAppVersion() -> getAppVersion
    java.lang.String getAppVersionName() -> getAppVersionName
    java.util.ArrayList getInstalledApp(boolean) -> getInstalledApp
    boolean isSystemApp(android.content.pm.PackageInfo) -> isSystemApp
    java.lang.String getNetworkOperator() -> getNetworkOperator
    java.lang.String getTopTaskPackageName() -> getTopTaskPackageName
    boolean getSdcardState() -> getSdcardState
    java.lang.String getSdcardPath() -> getSdcardPath
m.framework.utils.HEX -> m.framework.utils.HEX:
    char[] DIGITS -> DIGITS
    java.lang.String toHex(byte[]) -> toHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    byte[] decodeHexString(java.lang.String) -> decodeHexString
    byte[] decodeHex(char[]) -> decodeHex
    int toDigit(char,int) -> toDigit
    char[] encodeHex(byte[]) -> encodeHex
    byte[] decode(byte[]) -> decode
    byte[] decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    char[] encode(java.lang.Object) -> encode
m.framework.utils.Hashon -> m.framework.utils.Hashon:
    java.util.HashMap fromJson(java.lang.String) -> fromJson
    java.util.HashMap fromJson(org.json.JSONObject) -> fromJson
    java.util.ArrayList fromJson(org.json.JSONArray) -> fromJson
    java.lang.String fromHashMap(java.util.HashMap) -> fromHashMap
    org.json.JSONObject getJSONObject(java.util.HashMap) -> getJSONObject
    boolean isBasicArray(java.lang.Object) -> isBasicArray
    java.util.ArrayList arrayToList(java.lang.Object) -> arrayToList
    org.json.JSONArray getJSONArray(java.util.ArrayList) -> getJSONArray
    java.lang.String format(java.lang.String) -> format
    java.lang.String format(java.lang.String,java.util.HashMap) -> format
    java.lang.String format(java.lang.String,java.util.ArrayList) -> format
m.framework.utils.UIHandler -> m.framework.utils.UIHandler:
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$0(android.os.Message) -> access$0
m.framework.utils.UIHandler$1 -> m.framework.utils.UIHandler$1:
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.utils.Utils -> m.framework.utils.Utils:
    float density -> density
    int dipToPx(android.content.Context,int) -> dipToPx
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    java.lang.String getFileMime(java.lang.String) -> getFileMime
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
me.add1.cache.BaseCache -> me.add1.cache.a:
    java.io.File mTempDir -> g
    me.add1.cache.DiskLruCache mDiskCache -> a
    java.util.Map mDiskCacheEditLocks -> b
    java.util.concurrent.ScheduledThreadPoolExecutor mDiskCacheFlusherExecutor -> c
    me.add1.cache.BaseCache$DiskCacheFlushRunnable mDiskCacheFlusherRunnable -> d
    java.io.File mDiskCacheLocation -> e
    java.util.concurrent.ScheduledFuture mDiskCacheFuture -> f
    boolean validateLocation(java.io.File) -> a
    void checkNotOnMainThread() -> a
    java.lang.String transformUrlForDiskCacheKey(android.net.Uri) -> a
    java.util.concurrent.locks.ReentrantLock getLockForDiskCacheEdit(android.net.Uri) -> b
    void scheduleDiskCacheFlush() -> b
    boolean contains(android.net.Uri) -> c
    java.io.File getFile(android.net.Uri) -> d
    void put(android.net.Uri,java.io.InputStream) -> a
    void remove(android.net.Uri) -> e
    boolean access$000(me.add1.cache.BaseCache,java.io.File) -> a
    java.io.File access$102(me.add1.cache.BaseCache,java.io.File) -> b
me.add1.cache.BaseCache$1 -> me.add1.cache.a$1:
    int[] $SwitchMap$me$add1$cache$BaseCache$RecyclePolicy -> a
me.add1.cache.BaseCache$Builder -> me.add1.cache.a$a:
    java.lang.String type -> a
    me.add1.cache.BaseCache$Builder setType(java.lang.String) -> a
    me.add1.cache.BaseCache build(android.content.Context) -> a
me.add1.cache.BaseCache$ContentStreamProvider -> me.add1.cache.a$b:
    android.net.Uri mContent -> a
    android.content.ContentResolver mResolver -> b
    java.io.InputStream getInputStream() -> a
me.add1.cache.BaseCache$DiskCacheFlushRunnable -> me.add1.cache.a$c:
    me.add1.cache.DiskLruCache mDiskCache -> a
    void run() -> run
me.add1.cache.BaseCache$FileInputStreamProvider -> me.add1.cache.a$d:
    java.io.File mFile -> a
    java.io.InputStream getInputStream() -> a
me.add1.cache.BaseCache$InputStreamProvider -> me.add1.cache.a$e:
    java.io.InputStream getInputStream() -> a
me.add1.cache.BaseCache$RecyclePolicy -> me.add1.cache.a$f:
    me.add1.cache.BaseCache$RecyclePolicy DISABLED -> a
    me.add1.cache.BaseCache$RecyclePolicy PRE_HONEYCOMB_ONLY -> b
    me.add1.cache.BaseCache$RecyclePolicy ALWAYS -> c
    me.add1.cache.BaseCache$RecyclePolicy[] $VALUES -> d
    me.add1.cache.BaseCache$RecyclePolicy[] values() -> values
    me.add1.cache.BaseCache$RecyclePolicy valueOf(java.lang.String) -> valueOf
    boolean canRecycle() -> a
me.add1.cache.BaseCache$SnapshotInputStreamProvider -> me.add1.cache.a$g:
    java.lang.String mKey -> a
    me.add1.cache.BaseCache this$0 -> b
    java.io.InputStream getInputStream() -> a
    java.io.File getFile() -> b
me.add1.cache.BitmapCacheWrapper -> me.add1.cache.b:
    me.add1.cache.BaseCache mCache -> g
    android.content.res.Resources mResources -> h
    android.content.ContentResolver mContentResolver -> i
    me.add1.cache.BitmapMemoryLruCache mMemoryCache -> j
    int mSizeLimit -> k
    me.add1.cache.BaseCache$RecyclePolicy mRecyclePolicy -> l
    void setMemoryCache(me.add1.cache.BitmapMemoryLruCache) -> a
    void setCache(me.add1.cache.BaseCache) -> a
    boolean contains(android.net.Uri) -> c
    boolean containsInDiskCache(android.net.Uri) -> f
    boolean containsInMemoryCache(android.net.Uri) -> g
    void setSizeLimit(int) -> a
    me.add1.cache.CacheableBitmapDrawable get(android.net.Uri) -> h
    me.add1.cache.CacheableBitmapDrawable get(android.net.Uri,android.graphics.BitmapFactory$Options) -> a
    me.add1.cache.CacheableBitmapDrawable getFromDiskCache(android.net.Uri,android.graphics.BitmapFactory$Options) -> b
    me.add1.cache.CacheableBitmapDrawable getFromContent(android.net.Uri,android.graphics.BitmapFactory$Options) -> c
    me.add1.cache.CacheableBitmapDrawable getFromDisk(android.net.Uri,android.graphics.BitmapFactory$Options) -> d
    java.io.File getFileFromDiskCache(android.net.Uri) -> i
    me.add1.cache.CacheableBitmapDrawable getFromMemoryCache(android.net.Uri) -> j
    void put(android.net.Uri,java.io.InputStream) -> a
    void put(android.net.Uri,java.io.InputStream,android.graphics.BitmapFactory$Options) -> a
    void remove(android.net.Uri) -> e
    me.add1.cache.CacheableBitmapDrawable decodeBitmap(me.add1.cache.BaseCache$InputStreamProvider,java.lang.String,android.graphics.BitmapFactory$Options,int) -> a
    me.add1.cache.CacheableBitmapDrawable decodeBitmap(me.add1.cache.BaseCache$InputStreamProvider,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    boolean addSimpleSizeBitmapOptions(me.add1.cache.BaseCache$InputStreamProvider,android.graphics.BitmapFactory$Options,int) -> a
me.add1.cache.BitmapCacheWrapper$Builder -> me.add1.cache.b$a:
    me.add1.cache.BaseCache$RecyclePolicy DEFAULT_RECYCLE_POLICY -> a
    android.content.Context mContext -> b
    boolean mMemoryCacheEnabled -> c
    int mMemoryCacheMaxSize -> d
    me.add1.cache.BaseCache$RecyclePolicy mRecyclePolicy -> e
    me.add1.cache.BaseCache mCache -> f
    me.add1.cache.BitmapCacheWrapper build() -> a
    me.add1.cache.BitmapCacheWrapper$Builder setCache(me.add1.cache.BaseCache) -> a
    boolean isValidOptionsForMemoryCache() -> b
me.add1.cache.BitmapMemoryLruCache -> me.add1.cache.c:
    me.add1.cache.BaseCache$RecyclePolicy mRecyclePolicy -> a
    me.add1.cache.CacheableBitmapDrawable put(me.add1.cache.CacheableBitmapDrawable) -> a
    me.add1.cache.BaseCache$RecyclePolicy getRecyclePolicy() -> a
    int sizeOf(java.lang.String,me.add1.cache.CacheableBitmapDrawable) -> a
    void entryRemoved(boolean,java.lang.String,me.add1.cache.CacheableBitmapDrawable,me.add1.cache.CacheableBitmapDrawable) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
me.add1.cache.CacheableBitmapDrawable -> me.add1.cache.d:
    java.lang.String mUrl -> a
    me.add1.cache.BaseCache$RecyclePolicy mRecyclePolicy -> b
    int mDisplayingCount -> c
    boolean mHasBeenDisplayed -> d
    int mCacheCount -> e
    java.lang.Runnable mCheckStateRunnable -> f
    java.lang.Throwable mStackTraceWhenRecycled -> g
    android.os.Handler sHandler -> h
    int mMemorySize -> i
    int mSource -> j
    void draw(android.graphics.Canvas) -> draw
    int getMemorySize() -> a
    java.lang.String getUrl() -> b
    boolean isBitmapValid() -> c
    void setBeingUsed(boolean) -> a
    void setCached(boolean) -> b
    void cancelCheckStateCallback() -> d
    void checkState() -> e
    void checkState(boolean) -> c
    void access$000(me.add1.cache.CacheableBitmapDrawable,boolean) -> a
me.add1.cache.CacheableBitmapDrawable$CheckStateRunnable -> me.add1.cache.d$a:
    void run(me.add1.cache.CacheableBitmapDrawable) -> a
    void run(java.lang.Object) -> a
me.add1.cache.CacheableImageView -> me.add1.cache.CacheableImageView:
    void onDrawableSet(android.graphics.drawable.Drawable) -> onDrawableSet
    void onDrawableUnset(android.graphics.drawable.Drawable) -> onDrawableUnset
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void onDetachedFromWindow() -> onDetachedFromWindow
me.add1.cache.Constants -> me.add1.cache.e:
    boolean DEBUG -> a
    java.lang.String LOG_TAG -> b
me.add1.cache.DiskCacheWrapper -> me.add1.cache.f:
    me.add1.cache.BaseCache mCache -> g
    boolean contains(android.net.Uri) -> c
    java.io.File getFile(android.net.Uri) -> d
    void put(android.net.Uri,java.io.InputStream) -> a
    void remove(android.net.Uri) -> e
me.add1.cache.DiskCacheWrapper$Builder -> me.add1.cache.f$a:
    me.add1.cache.BaseCache mCache -> a
    me.add1.cache.DiskCacheWrapper build() -> a
    me.add1.cache.DiskCacheWrapper$Builder setCache(me.add1.cache.BaseCache) -> a
me.add1.cache.DiskLruCache -> me.add1.cache.g:
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> a
    java.io.File directory -> c
    java.io.File journalFile -> d
    java.io.File journalFileTmp -> e
    java.io.File journalFileBackup -> f
    int appVersion -> g
    long maxSize -> h
    int valueCount -> i
    long size -> j
    java.io.Writer journalWriter -> k
    java.util.LinkedHashMap lruEntries -> l
    int redundantOpCount -> m
    long nextSequenceNumber -> n
    java.util.concurrent.ThreadPoolExecutor executorService -> b
    java.util.concurrent.Callable cleanupCallable -> o
    java.io.OutputStream NULL_OUTPUT_STREAM -> p
    me.add1.cache.DiskLruCache open(java.io.File,int,int,long) -> a
    void readJournal() -> d
    void readJournalLine(java.lang.String) -> d
    void processJournal() -> e
    void rebuildJournal() -> f
    void deleteIfExists(java.io.File) -> a
    void renameTo(java.io.File,java.io.File,boolean) -> a
    me.add1.cache.DiskLruCache$Snapshot get(java.lang.String) -> a
    me.add1.cache.DiskLruCache$Editor edit(java.lang.String) -> b
    me.add1.cache.DiskLruCache$Editor edit(java.lang.String,long) -> a
    void completeEdit(me.add1.cache.DiskLruCache$Editor,boolean) -> a
    boolean journalRebuildRequired() -> g
    boolean remove(java.lang.String) -> c
    void checkNotClosed() -> h
    void flush() -> a
    void close() -> close
    void trimToSize() -> i
    void delete() -> b
    void validateKey(java.lang.String) -> e
    java.io.Writer access$000(me.add1.cache.DiskLruCache) -> a
    void access$100(me.add1.cache.DiskLruCache) -> b
    boolean access$200(me.add1.cache.DiskLruCache) -> c
    void access$300(me.add1.cache.DiskLruCache) -> d
    int access$402(me.add1.cache.DiskLruCache,int) -> a
    int access$1800(me.add1.cache.DiskLruCache) -> e
    java.io.File access$1900(me.add1.cache.DiskLruCache) -> f
    java.io.OutputStream access$2000() -> c
    void access$2200(me.add1.cache.DiskLruCache,me.add1.cache.DiskLruCache$Editor,boolean) -> a
me.add1.cache.DiskLruCache$1 -> me.add1.cache.h:
    me.add1.cache.DiskLruCache this$0 -> a
    java.lang.Void call() -> a
    java.lang.Object call() -> call
me.add1.cache.DiskLruCache$2 -> me.add1.cache.i:
    void write(int) -> write
me.add1.cache.DiskLruCache$Editor -> me.add1.cache.g$a:
    me.add1.cache.DiskLruCache$Entry entry -> b
    boolean[] written -> c
    boolean hasErrors -> d
    boolean committed -> e
    me.add1.cache.DiskLruCache this$0 -> a
    java.io.OutputStream newOutputStream(int) -> a
    void commit() -> a
    void abort() -> b
    me.add1.cache.DiskLruCache$Entry access$1400(me.add1.cache.DiskLruCache$Editor) -> a
    boolean[] access$1500(me.add1.cache.DiskLruCache$Editor) -> b
    boolean access$2302(me.add1.cache.DiskLruCache$Editor,boolean) -> a
me.add1.cache.DiskLruCache$Editor$FaultHidingOutputStream -> me.add1.cache.g$a$a:
    me.add1.cache.DiskLruCache$Editor this$1 -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
me.add1.cache.DiskLruCache$Entry -> me.add1.cache.g$b:
    java.lang.String key -> b
    long[] lengths -> c
    boolean readable -> d
    me.add1.cache.DiskLruCache$Editor currentEditor -> e
    long sequenceNumber -> f
    me.add1.cache.DiskLruCache this$0 -> a
    java.lang.String getLengths() -> a
    void setLengths(java.lang.String[]) -> a
    java.io.IOException invalidLengths(java.lang.String[]) -> b
    java.io.File getCleanFile(int) -> a
    java.io.File getDirtyFile(int) -> b
    boolean access$602(me.add1.cache.DiskLruCache$Entry,boolean) -> a
    me.add1.cache.DiskLruCache$Editor access$702(me.add1.cache.DiskLruCache$Entry,me.add1.cache.DiskLruCache$Editor) -> a
    void access$800(me.add1.cache.DiskLruCache$Entry,java.lang.String[]) -> a
    me.add1.cache.DiskLruCache$Editor access$700(me.add1.cache.DiskLruCache$Entry) -> a
    long[] access$1000(me.add1.cache.DiskLruCache$Entry) -> b
    java.lang.String access$1100(me.add1.cache.DiskLruCache$Entry) -> c
    boolean access$600(me.add1.cache.DiskLruCache$Entry) -> d
    long access$1200(me.add1.cache.DiskLruCache$Entry) -> e
    long access$1202(me.add1.cache.DiskLruCache$Entry,long) -> a
me.add1.cache.DiskLruCache$Snapshot -> me.add1.cache.g$c:
    java.lang.String key -> b
    long sequenceNumber -> c
    java.io.InputStream[] ins -> d
    long[] lengths -> e
    me.add1.cache.DiskLruCache$Entry entry -> f
    me.add1.cache.DiskLruCache this$0 -> a
    java.io.InputStream getInputStream(int) -> a
    java.io.File getFile(int) -> b
    void close() -> close
me.add1.cache.IoUtils -> me.add1.cache.j:
    void closeStream(java.io.InputStream) -> a
    void closeStream(java.io.OutputStream) -> a
    long copy(java.io.File,java.io.OutputStream) -> a
    long copy(java.io.InputStream,java.io.File) -> a
    long copy(java.io.InputStream,java.io.OutputStream) -> a
me.add1.cache.Md5 -> me.add1.cache.k:
    char[] DIGITS -> a
    java.lang.String encode(java.lang.String) -> a
    java.lang.String bytesToHexString(byte[]) -> a
me.add1.cache.R -> me.add1.cache.R:
me.add1.cache.R$attr -> me.add1.cache.R$attr:
me.add1.cache.R$drawable -> me.add1.cache.R$drawable:
    int ic_launcher -> ic_launcher
me.add1.cache.R$string -> me.add1.cache.R$string:
    int app_name -> app_name
me.add1.cache.StrictLineReader -> me.add1.cache.l:
    java.io.InputStream in -> a
    java.nio.charset.Charset charset -> b
    byte[] buf -> c
    int pos -> d
    int end -> e
    void close() -> close
    java.lang.String readLine() -> a
    boolean hasUnterminatedLine() -> b
    void fillBuf() -> c
    java.nio.charset.Charset access$000(me.add1.cache.StrictLineReader) -> a
me.add1.cache.StrictLineReader$1 -> me.add1.cache.m:
    me.add1.cache.StrictLineReader this$0 -> a
    java.lang.String toString() -> toString
me.add1.cache.Util -> me.add1.cache.n:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset UTF_8 -> b
    void deleteContents(java.io.File) -> a
    void closeQuietly(java.io.Closeable) -> a
me.add1.cache.WeakReferenceRunnable -> me.add1.cache.o:
    java.lang.ref.WeakReference mObjectRef -> a
    void run() -> run
    void run(java.lang.Object) -> a
me.add1.common.BackgroundThread -> me.add1.common.a:
    void run() -> run
    void runImpl() -> runImpl
    boolean isInterrupted() -> isInterrupted
me.add1.common.ParcelUtils -> me.add1.common.b:
    void writeToParcel(android.os.Parcel,java.lang.String) -> a
    void writeToParcel(android.os.Parcel,java.lang.Long) -> a
    void writeToParcel(android.os.Parcel,java.lang.Integer) -> a
    void writeToParcel(android.os.Parcel,java.lang.Double) -> a
    java.lang.Double readDoubleFromParcel(android.os.Parcel) -> a
    java.lang.Integer readIntFromParcel(android.os.Parcel) -> b
    java.lang.Long readLongFromParcel(android.os.Parcel) -> c
    java.lang.String readFromParcel(android.os.Parcel) -> d
    android.os.Parcelable readFromParcel(android.os.Parcel,java.lang.Class) -> a
    void writeToParcel(android.os.Parcel,android.os.Parcelable) -> a
    void writeToParcel(android.os.Parcel,java.util.List) -> a
    java.util.ArrayList readListFromParcel(android.os.Parcel,java.lang.Class) -> b
    void writeListToParcel(android.os.Parcel,java.util.List) -> b
me.add1.common.PriorityRunnable -> me.add1.common.c:
    int NORMAL -> NORMAL
    int LOW -> LOW
    int HIGH -> HIGH
    int VERY_HIGH -> VERY_HIGH
    int priority -> priority
    int compareTo(me.add1.common.PriorityRunnable) -> compareTo
    int getPriority() -> getPriority
    int compareTo(java.lang.Object) -> compareTo
me.add1.common.R -> me.add1.common.R:
me.add1.common.R$attr -> me.add1.common.R$attr:
me.add1.common.R$drawable -> me.add1.common.R$drawable:
    int ic_launcher -> ic_launcher
me.add1.common.R$string -> me.add1.common.R$string:
    int app_name -> app_name
me.add1.common.RequestProcess -> me.add1.common.d:
    void onComplete(java.lang.Object) -> onComplete
    void onFailure(me.add1.exception.BaseException) -> onFailure
me.add1.exception.BaseException -> me.add1.a.a:
me.add1.exception.HttpException -> me.add1.a.b:
    java.lang.String toString() -> toString
me.add1.exception.InternalException -> me.add1.a.c:
    java.util.HashMap codeMapping -> a
    int code -> b
    java.lang.String toString() -> toString
    int getGeneralCode() -> a
me.add1.exception.PackException -> me.add1.a.d:
    java.lang.String toString() -> toString
me.add1.exception.ParseException -> me.add1.a.e:
    java.lang.String toString() -> toString
me.add1.network.AbstractHttpRequest -> me.add1.network.a:
    int NORMAL -> NORMAL
    int LOW -> LOW
    int HIGH -> HIGH
    int callId -> callId
    int priority -> priority
    java.net.URI uri -> uri
    java.util.List params -> params
    java.io.InputStream resStream -> resStream
    boolean isMultiPart -> isMultiPart
    java.lang.String resName -> resName
    java.lang.String fileName -> fileName
    int method -> method
    me.add1.network.parser.IEntityParser parser -> parser
    me.add1.network.packer.AbsEntityPacker packer -> packer
    boolean supportGzip -> supportGzip
    java.util.Map attrs -> attrs
    me.add1.network.StatusCallback statusCallback -> statusCallback
    int GET_METHOD -> GET_METHOD
    int POST_METHOD -> POST_METHOD
    int PUT_METHOD -> PUT_METHOD
    me.add1.network.StatusCallback getStatusCallback() -> getStatusCallback
    void setStatusCallback(me.add1.network.StatusCallback) -> setStatusCallback
    boolean isSupportGzip() -> isSupportGzip
    void setSupportGzip(boolean) -> setSupportGzip
    void cancelRequest(me.add1.exception.BaseException) -> cancelRequest
    int getMethod() -> getMethod
    void setMethod(int) -> setMethod
    int getCallId() -> getCallId
    java.net.URI getUri() -> getUri
    void setUri(java.net.URI) -> setUri
    java.util.List getParamsMap() -> getParamsMap
    void setParamsMap(java.util.List) -> setParamsMap
    me.add1.network.parser.IEntityParser getParser() -> getParser
    void setParser(me.add1.network.parser.IEntityParser) -> setParser
    me.add1.network.packer.AbsEntityPacker getPacker() -> getPacker
    void setPacker(me.add1.network.packer.AbsEntityPacker) -> setPacker
    void setResStream(java.io.InputStream) -> setResStream
    void setResName(java.lang.String) -> setResName
    void setFileName(java.lang.String) -> setFileName
    java.io.InputStream getResStream() -> getResStream
    void putAttr(java.lang.String,java.lang.Object) -> putAttr
    boolean containsAttr(java.lang.String) -> containsAttr
    java.lang.Object getAttr(java.lang.String) -> getAttr
    java.lang.String toString() -> toString
    org.apache.http.client.methods.HttpUriRequest obtainRequest() -> obtainRequest
    int getPriority() -> getPriority
    void processReadyRequest(org.apache.http.HttpRequest) -> processReadyRequest
me.add1.network.DefaultHttpHandler -> me.add1.network.b:
    org.apache.http.impl.client.DefaultHttpClient client -> a
    java.util.Map requestMap -> b
    java.util.concurrent.ThreadPoolExecutor executor -> c
    android.content.Context context -> d
    org.apache.http.params.HttpParams createHttpParams(int) -> a
    org.apache.http.params.HttpParams createHttpParams(int,java.lang.String,int) -> a
    int executeRequest(me.add1.network.AbstractHttpRequest) -> a
    java.lang.Object executeRequestSync(me.add1.network.AbstractHttpRequest) -> b
me.add1.network.DefaultHttpHandler$PriorityRequestRunnable -> me.add1.network.b$a:
    me.add1.network.AbstractHttpRequest request -> b
    org.apache.http.client.methods.HttpUriRequest uriRequest -> c
    me.add1.network.DefaultHttpHandler this$0 -> a
    void run() -> run
    me.add1.network.AbstractHttpRequest getRequest() -> a
me.add1.network.DiscardOldestPolicy -> me.add1.network.c:
    void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor) -> rejectedExecution
me.add1.network.HttpHandler -> me.add1.network.d:
    int executeRequest(me.add1.network.AbstractHttpRequest) -> a
    java.lang.Object executeRequestSync(me.add1.network.AbstractHttpRequest) -> b
me.add1.network.HttpRequestProcess -> me.add1.network.e:
me.add1.network.MultipartUtils -> me.add1.network.f:
    java.lang.String getContentType(java.lang.String) -> a
    java.lang.String getFormDataContent(java.util.List,java.lang.String) -> a
    java.lang.String getFileSeparator(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getEndSeparator(java.lang.String) -> b
me.add1.network.NetworkManager -> me.add1.network.g:
    me.add1.network.NetworkManager sS -> a
    me.add1.network.HttpHandler mHandler -> b
    void init(android.content.Context) -> a
    me.add1.network.NetworkManager getInstance() -> a
    void requestAsync(me.add1.network.AbstractHttpRequest) -> a
me.add1.network.NetworkManager$1 -> me.add1.network.h:
    java.util.concurrent.atomic.AtomicInteger mCount -> b
    me.add1.network.NetworkManager this$0 -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
me.add1.network.R -> me.add1.network.R:
me.add1.network.R$attr -> me.add1.network.R$attr:
me.add1.network.R$drawable -> me.add1.network.R$drawable:
    int ic_launcher -> ic_launcher
me.add1.network.R$string -> me.add1.network.R$string:
    int app_name -> app_name
me.add1.network.RequestCallback -> me.add1.network.i:
    void onComplete(me.add1.network.AbstractHttpRequest,java.lang.Object) -> onComplete
    void onFailure(me.add1.network.AbstractHttpRequest,me.add1.exception.BaseException) -> onFailure
me.add1.network.StatusCallback -> me.add1.network.j:
me.add1.network.StoreStatusCallback -> me.add1.network.k:
me.add1.network.StoreStatusCallback$StoreStatus -> me.add1.network.k$a:
    int totalSize -> a
    int receivedSize -> b
    java.lang.String toString() -> toString
me.add1.network.entity.GzipEntity -> me.add1.network.a.a:
    org.apache.http.HttpEntity mEntity -> a
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    boolean isChunked() -> isChunked
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
me.add1.network.entity.MultipartEntity -> me.add1.network.a.b:
    java.lang.String mBoundary -> a
    byte[] content -> b
    byte[] fileSeparator -> c
    byte[] endSeparator -> d
    byte[] mStream -> e
    java.io.InputStream inputStream -> f
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
me.add1.network.packer.AbsEntityPacker -> me.add1.network.b.a:
    org.apache.http.HttpEntity pack() -> a
me.add1.network.parser.IEntityParser -> me.add1.network.c.a:
    void onHeaderParsed(org.apache.http.Header[]) -> onHeaderParsed
    java.lang.Object parse(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parse
    java.lang.Object parseGzip(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parseGzip
me.add1.resource.CachedImageResourceHandler -> me.add1.resource.a:
    me.add1.cache.BitmapCacheWrapper cache -> a
    java.io.File getFile(me.add1.resource.Resource) -> a
    void store(me.add1.resource.Resource,java.io.InputStream) -> a
    void store(me.add1.resource.Resource,java.io.InputStream,long,me.add1.network.StoreStatusCallback) -> a
me.add1.resource.CachedResourceHandler -> me.add1.resource.b:
    me.add1.cache.DiskCacheWrapper mCache -> a
    java.io.File getFile(me.add1.resource.Resource) -> a
    void store(me.add1.resource.Resource,java.io.InputStream) -> a
    void store(me.add1.resource.Resource,java.io.InputStream,long,me.add1.network.StoreStatusCallback) -> a
me.add1.resource.IResourceHandler -> me.add1.resource.c:
    java.io.File getFile(me.add1.resource.Resource) -> a
    void store(me.add1.resource.Resource,java.io.InputStream) -> a
    void store(me.add1.resource.Resource,java.io.InputStream,long,me.add1.network.StoreStatusCallback) -> a
me.add1.resource.R -> me.add1.resource.R:
me.add1.resource.R$attr -> me.add1.resource.R$attr:
me.add1.resource.R$drawable -> me.add1.resource.R$drawable:
    int ic_launcher -> ic_launcher
me.add1.resource.R$string -> me.add1.resource.R$string:
    int app_name -> app_name
me.add1.resource.ResCallback -> me.add1.resource.d:
me.add1.resource.ResParser -> me.add1.resource.e:
    me.add1.resource.Resource res -> a
    me.add1.resource.ResourceHandler handler -> b
    void onHeaderParsed(org.apache.http.Header[]) -> onHeaderParsed
    java.io.File parseEntityStream(me.add1.resource.IResourceHandler,java.io.InputStream,long,me.add1.network.StoreStatusCallback) -> a
    java.io.File parseEntityStream(me.add1.resource.IResourceHandler,java.io.InputStream) -> a
    java.io.File parse(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> a
    java.io.File parseGzip(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> b
    java.lang.Object parseGzip(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parseGzip
    java.lang.Object parse(org.apache.http.HttpEntity,me.add1.network.StatusCallback) -> parse
me.add1.resource.ResRequest -> me.add1.resource.f:
    me.add1.resource.Resource res -> a
    me.add1.resource.ResourceHandler handler -> b
    me.add1.network.StoreStatusCallback storeStatusCallback -> c
    me.add1.network.AbstractHttpRequest obtainRequest() -> a
me.add1.resource.ResRequest$1 -> me.add1.resource.g:
    me.add1.resource.ResRequest this$0 -> a
    void processReadyRequest(org.apache.http.HttpRequest) -> processReadyRequest
    void onFailure(me.add1.exception.BaseException) -> onFailure
    void onComplete(java.io.File) -> a
    void onComplete(java.lang.Object) -> onComplete
me.add1.resource.Resource -> me.add1.resource.Resource:
    android.net.Uri uri -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.net.Uri getUri() -> a
    int hashCode() -> hashCode
    int describeContents() -> describeContents
    boolean equals(me.add1.resource.Resource) -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
me.add1.resource.Resource$1 -> me.add1.resource.h:
    me.add1.resource.Resource createFromParcel(android.os.Parcel) -> a
    me.add1.resource.Resource[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
me.add1.resource.ResourceHandler -> me.add1.resource.i:
    me.add1.resource.ResourceHandler sS -> a
    me.add1.network.NetworkManager mNetworkManager -> b
    me.add1.cache.DiskCacheWrapper mDiskCache -> c
    me.add1.cache.BitmapCacheWrapper mBitmapCache -> d
    me.add1.cache.BaseCache mBaseCache -> e
    java.util.Map mHandlerMap -> f
    java.util.Map mRequestQueue -> g
    android.content.Context mContext -> h
    me.add1.resource.ResourceHandler getInstance() -> a
    void init(android.content.Context) -> a
    void enableBitmapCache() -> b
    me.add1.network.AbstractHttpRequest requestResource(me.add1.resource.Resource,me.add1.resource.ResCallback) -> a
    me.add1.network.AbstractHttpRequest requestResource(me.add1.resource.Resource,me.add1.resource.ResCallback,me.add1.network.StoreStatusCallback) -> a
    me.add1.network.AbstractHttpRequest requestResource(me.add1.resource.Resource) -> a
    boolean contains(me.add1.resource.Resource) -> b
    boolean containsInDiskCache(me.add1.resource.Resource) -> c
    boolean containsInMemoryCache(me.add1.resource.Resource) -> d
    java.io.File getFile(me.add1.resource.Resource) -> e
    me.add1.cache.CacheableBitmapDrawable getDrawable(me.add1.resource.Resource) -> f
    me.add1.resource.IResourceHandler getResourceHandler(org.apache.http.HttpEntity) -> a
    void put(me.add1.resource.Resource,java.io.InputStream) -> a
    void access$100(me.add1.resource.ResourceHandler) -> a
    void access$200(me.add1.resource.ResourceHandler,android.content.Context) -> a
    void access$300(me.add1.resource.ResourceHandler) -> b
    void access$400(me.add1.resource.ResourceHandler) -> c
    void access$500(me.add1.resource.ResourceHandler) -> d
    void access$600(me.add1.resource.ResourceHandler) -> e
me.add1.resource.ResourceHandler$1 -> me.add1.resource.j:
    me.add1.resource.ResCallback val$callback -> a
    me.add1.resource.Resource val$resource -> b
    me.add1.resource.ResourceHandler this$0 -> c
    void onComplete(me.add1.network.AbstractHttpRequest,java.io.File) -> a
    void onFailure(me.add1.network.AbstractHttpRequest,me.add1.exception.BaseException) -> onFailure
    void onComplete(me.add1.network.AbstractHttpRequest,java.lang.Object) -> onComplete
me.add1.resource.ResourceHandler$2 -> me.add1.resource.k:
    me.add1.resource.ResCallback val$callback -> a
    me.add1.resource.Resource val$resource -> b
    me.add1.resource.ResourceHandler this$0 -> c
    void onComplete(me.add1.network.AbstractHttpRequest,java.io.File) -> a
    void onFailure(me.add1.network.AbstractHttpRequest,me.add1.exception.BaseException) -> onFailure
    void onComplete(me.add1.network.AbstractHttpRequest,java.lang.Object) -> onComplete
me.add1.resource.ResourceHandler$Builder -> me.add1.resource.i$a:
    boolean enableBitmapCache -> a
    int sizeLimit -> b
    java.lang.String type -> c
    me.add1.resource.ResourceHandler$Builder setType(java.lang.String) -> a
    me.add1.resource.ResourceHandler$Builder setOutputSizeLimit(int) -> a
    me.add1.resource.ResourceHandler build(android.content.Context) -> a
    me.add1.resource.ResourceHandler$Builder enableBitmapCache() -> a
me.add1.resource.ResourceHandler$RequestCallback -> me.add1.resource.i$b:
    me.add1.resource.Resource resource -> a
    boolean result -> b
    me.add1.resource.ResourceHandler this$0 -> c
    me.add1.resource.Resource getResource() -> a
    boolean isSuccess() -> b
me.add1.widget.AsyncImageView -> me.add1.widget.AsyncImageView:
    java.util.concurrent.ExecutorService mMultiThreadExecutor -> a
    me.add1.resource.Resource mResource -> b
    java.util.concurrent.Future mCurrentRunnable -> c
    android.graphics.drawable.Drawable mDefaultDrawable -> d
    java.lang.Runnable mAttachedRunnable -> e
    boolean isAttached -> f
    boolean isCircle -> g
    int status -> h
    void update(java.util.Observable,java.lang.Object) -> update
    me.add1.resource.Resource getResource() -> getResource
    void setDefaultDrawable(android.graphics.drawable.Drawable) -> setDefaultDrawable
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setResource(me.add1.resource.Resource) -> setResource
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void cancelRequest() -> a
    void refreshResouce() -> b
    int access$000(me.add1.widget.AsyncImageView) -> a
    boolean access$200(me.add1.widget.AsyncImageView) -> b
    int access$002(me.add1.widget.AsyncImageView,int) -> a
me.add1.widget.AsyncImageView$1 -> me.add1.widget.a:
    me.add1.widget.AsyncImageView this$0 -> a
    void run() -> run
me.add1.widget.AsyncImageView$PhotoLoadRunnable -> me.add1.widget.AsyncImageView$a:
    java.lang.ref.WeakReference mImageView -> a
    me.add1.resource.ResourceHandler mHandler -> b
    me.add1.resource.Resource mResource -> c
    void runImpl() -> runImpl
    me.add1.resource.Resource access$100(me.add1.widget.AsyncImageView$PhotoLoadRunnable) -> a
me.add1.widget.AsyncImageView$PhotoLoadRunnable$1 -> me.add1.widget.b:
    me.add1.widget.AsyncImageView val$imageView -> a
    android.graphics.drawable.BitmapDrawable val$drawable -> b
    me.add1.widget.AsyncImageView$PhotoLoadRunnable this$0 -> c
    void run() -> run
me.add1.widget.AsyncImageView$PhotoLoadRunnable$2 -> me.add1.widget.c:
    me.add1.widget.AsyncImageView val$imageView -> a
    android.graphics.drawable.BitmapDrawable val$drawable -> b
    me.add1.widget.AsyncImageView$PhotoLoadRunnable this$0 -> c
    void run() -> run
me.add1.widget.AsyncImageView$PhotoLoadRunnable$3 -> me.add1.widget.d:
    me.add1.widget.AsyncImageView val$imageView -> a
    me.add1.widget.AsyncImageView$PhotoLoadRunnable this$0 -> b
    void run() -> run
me.add1.widget.AsyncImageView$PhotoLoadRunnable$4 -> me.add1.widget.e:
    me.add1.widget.AsyncImageView val$imageView -> a
    me.add1.widget.AsyncImageView$PhotoLoadRunnable this$0 -> b
    void run() -> run
me.add1.widget.AsyncImageView$PhotoThreadFactory -> me.add1.widget.AsyncImageView$b:
    java.lang.String mThreadName -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
me.add1.widget.CircleBitmapDrawable -> me.add1.widget.f:
    me.add1.widget.CircleBitmapDrawable$BitmapState mBitmapState -> a
    android.graphics.Bitmap mBitmap -> b
    int mTargetDensity -> c
    android.graphics.Rect mDstRect -> d
    boolean mApplyGravity -> e
    boolean mMutated -> f
    int mBitmapWidth -> g
    int mBitmapHeight -> h
    void computeBitmapSize() -> a
    void setBitmap(android.graphics.Bitmap) -> a
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    int getChangingConfigurations() -> getChangingConfigurations
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.drawable.Drawable mutate() -> mutate
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void setAlpha(int) -> setAlpha
me.add1.widget.CircleBitmapDrawable$1 -> me.add1.widget.f$1:
me.add1.widget.CircleBitmapDrawable$BitmapState -> me.add1.widget.f$a:
    android.graphics.Bitmap mBitmap -> a
    int mChangingConfigurations -> b
    int mGravity -> c
    android.graphics.Paint mPaint -> d
    android.graphics.Shader$TileMode mTileModeX -> e
    android.graphics.Shader$TileMode mTileModeY -> f
    int mTargetDensity -> g
    android.graphics.drawable.Drawable newDrawable() -> newDrawable
    android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    int getChangingConfigurations() -> getChangingConfigurations
me.add1.widget.R -> me.add1.widget.R:
me.add1.widget.R$attr -> me.add1.widget.R$attr:
    int defDrawable -> defDrawable
    int shape -> shape
me.add1.widget.R$drawable -> me.add1.widget.R$drawable:
    int ic_launcher -> ic_launcher
me.add1.widget.R$id -> me.add1.widget.R$id:
    int circle -> circle
    int square -> square
me.add1.widget.R$string -> me.add1.widget.R$string:
    int app_name -> app_name
me.add1.widget.R$styleable -> me.add1.widget.R$styleable:
    int[] AsyncImageView -> AsyncImageView
    int AsyncImageView_defDrawable -> AsyncImageView_defDrawable
    int AsyncImageView_shape -> AsyncImageView_shape
me.grantland.widget.AutofitHelper -> me.grantland.widget.a:
    android.widget.TextView mTextView -> a
    android.text.TextPaint mPaint -> b
    float mTextSize -> c
    int mMaxLines -> d
    float mMinTextSize -> e
    float mMaxTextSize -> f
    float mPrecision -> g
    boolean mEnabled -> h
    boolean mIsAutofitting -> i
    java.util.ArrayList mListeners -> j
    android.text.TextWatcher mTextWatcher -> k
    android.view.View$OnLayoutChangeListener mOnLayoutChangeListener -> l
    me.grantland.widget.AutofitHelper create(android.widget.TextView) -> a
    me.grantland.widget.AutofitHelper create(android.widget.TextView,android.util.AttributeSet,int) -> a
    void autofit(android.widget.TextView,android.text.TextPaint,float,float,int,float) -> a
    float getAutofitTextSize(java.lang.CharSequence,android.text.TextPaint,float,int,float,float,float,android.util.DisplayMetrics) -> a
    int getLineCount(java.lang.CharSequence,android.text.TextPaint,float,float,android.util.DisplayMetrics) -> a
    int getMaxLines(android.widget.TextView) -> b
    me.grantland.widget.AutofitHelper addOnTextSizeChangeListener(me.grantland.widget.AutofitHelper$OnTextSizeChangeListener) -> a
    float getPrecision() -> a
    me.grantland.widget.AutofitHelper setPrecision(float) -> a
    float getMinTextSize() -> b
    me.grantland.widget.AutofitHelper setMinTextSize(int,float) -> a
    void setRawMinTextSize(float) -> c
    float getMaxTextSize() -> c
    me.grantland.widget.AutofitHelper setMaxTextSize(float) -> b
    me.grantland.widget.AutofitHelper setMaxTextSize(int,float) -> b
    void setRawMaxTextSize(float) -> d
    me.grantland.widget.AutofitHelper setMaxLines(int) -> a
    me.grantland.widget.AutofitHelper setEnabled(boolean) -> a
    void setTextSize(int,float) -> c
    void setRawTextSize(float) -> e
    void autofit() -> d
    void sendTextSizeChange(float,float) -> a
    void access$200(me.grantland.widget.AutofitHelper) -> a
me.grantland.widget.AutofitHelper$1 -> me.grantland.widget.a$1:
me.grantland.widget.AutofitHelper$AutofitOnLayoutChangeListener -> me.grantland.widget.a$a:
    me.grantland.widget.AutofitHelper this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
me.grantland.widget.AutofitHelper$AutofitTextWatcher -> me.grantland.widget.a$b:
    me.grantland.widget.AutofitHelper this$0 -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
me.grantland.widget.AutofitHelper$OnTextSizeChangeListener -> me.grantland.widget.a$c:
    void onTextSizeChange(float,float) -> a
me.grantland.widget.AutofitLayout -> me.grantland.widget.AutofitLayout:
    boolean mEnabled -> a
    float mMinTextSize -> b
    float mPrecision -> c
    java.util.WeakHashMap mHelpers -> d
    void init(android.content.Context,android.util.AttributeSet,int) -> a
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
me.grantland.widget.AutofitTextView -> me.grantland.widget.AutofitTextView:
    me.grantland.widget.AutofitHelper mHelper -> a
    void init(android.content.Context,android.util.AttributeSet,int) -> a
    void setTextSize(int,float) -> setTextSize
    void setLines(int) -> setLines
    void setMaxLines(int) -> setMaxLines
    me.grantland.widget.AutofitHelper getAutofitHelper() -> getAutofitHelper
    void setSizeToFit() -> setSizeToFit
    void setSizeToFit(boolean) -> setSizeToFit
    float getMaxTextSize() -> getMaxTextSize
    void setMaxTextSize(float) -> setMaxTextSize
    void setMaxTextSize(int,float) -> setMaxTextSize
    float getMinTextSize() -> getMinTextSize
    void setMinTextSize(int) -> setMinTextSize
    void setMinTextSize(int,float) -> setMinTextSize
    float getPrecision() -> getPrecision
    void setPrecision(float) -> setPrecision
    void onTextSizeChange(float,float) -> a
me.grantland.widget.R -> me.grantland.widget.R:
me.grantland.widget.R$attr -> me.grantland.widget.R$attr:
    int minTextSize -> minTextSize
    int precision -> precision
    int sizeToFit -> sizeToFit
me.grantland.widget.R$styleable -> me.grantland.widget.R$styleable:
    int[] AutofitTextView -> AutofitTextView
    int AutofitTextView_minTextSize -> AutofitTextView_minTextSize
    int AutofitTextView_precision -> AutofitTextView_precision
    int AutofitTextView_sizeToFit -> AutofitTextView_sizeToFit
me.imid.swipebacklayout.lib.SwipeBackLayout -> me.imid.swipebacklayout.lib.SwipeBackLayout:
    int[] EDGE_FLAGS -> a
    int mEdgeFlag -> b
    float mScrollThreshold -> c
    android.app.Activity mActivity -> d
    boolean mEnable -> e
    android.view.View mContentView -> f
    me.imid.swipebacklayout.lib.ViewDragHelper mDragHelper -> g
    float mScrollPercent -> h
    int mContentLeft -> i
    int mContentTop -> j
    java.util.List mListeners -> k
    android.graphics.drawable.Drawable mShadowLeft -> l
    android.graphics.drawable.Drawable mShadowRight -> m
    android.graphics.drawable.Drawable mShadowBottom -> n
    float mScrimOpacity -> o
    int mScrimColor -> p
    boolean mInLayout -> q
    android.graphics.Rect mTmpRect -> r
    int mTrackingEdge -> s
    void setSensitivity(android.content.Context,float) -> setSensitivity
    void setContentView(android.view.View) -> setContentView
    void setEnableGesture(boolean) -> setEnableGesture
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    void setScrimColor(int) -> setScrimColor
    void setEdgeSize(int) -> setEdgeSize
    void setSwipeListener(me.imid.swipebacklayout.lib.SwipeBackLayout$SwipeListener) -> setSwipeListener
    void addSwipeListener(me.imid.swipebacklayout.lib.SwipeBackLayout$SwipeListener) -> a
    void setScrollThresHold(float) -> setScrollThresHold
    void setShadow(android.graphics.drawable.Drawable,int) -> setShadow
    void setShadow(int,int) -> setShadow
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void drawScrim(android.graphics.Canvas,android.view.View) -> a
    void drawShadow(android.graphics.Canvas,android.view.View) -> b
    void attachToActivity(android.app.Activity) -> a
    void computeScroll() -> computeScroll
    int access$100(me.imid.swipebacklayout.lib.SwipeBackLayout) -> a
    me.imid.swipebacklayout.lib.ViewDragHelper access$200(me.imid.swipebacklayout.lib.SwipeBackLayout) -> b
    int access$302(me.imid.swipebacklayout.lib.SwipeBackLayout,int) -> a
    java.util.List access$400(me.imid.swipebacklayout.lib.SwipeBackLayout) -> c
    int access$300(me.imid.swipebacklayout.lib.SwipeBackLayout) -> d
    float access$502(me.imid.swipebacklayout.lib.SwipeBackLayout,float) -> a
    android.view.View access$600(me.imid.swipebacklayout.lib.SwipeBackLayout) -> e
    android.graphics.drawable.Drawable access$700(me.imid.swipebacklayout.lib.SwipeBackLayout) -> f
    android.graphics.drawable.Drawable access$800(me.imid.swipebacklayout.lib.SwipeBackLayout) -> g
    android.graphics.drawable.Drawable access$900(me.imid.swipebacklayout.lib.SwipeBackLayout) -> h
    int access$1002(me.imid.swipebacklayout.lib.SwipeBackLayout,int) -> b
    int access$1102(me.imid.swipebacklayout.lib.SwipeBackLayout,int) -> c
    float access$500(me.imid.swipebacklayout.lib.SwipeBackLayout) -> i
    float access$1200(me.imid.swipebacklayout.lib.SwipeBackLayout) -> j
    android.app.Activity access$1300(me.imid.swipebacklayout.lib.SwipeBackLayout) -> k
me.imid.swipebacklayout.lib.SwipeBackLayout$1 -> me.imid.swipebacklayout.lib.SwipeBackLayout$1:
me.imid.swipebacklayout.lib.SwipeBackLayout$SwipeListener -> me.imid.swipebacklayout.lib.SwipeBackLayout$a:
    void onScrollStateChange(int,float) -> a
    void onEdgeTouch(int) -> a
    void onScrollOverThreshold() -> a
me.imid.swipebacklayout.lib.SwipeBackLayout$ViewDragCallback -> me.imid.swipebacklayout.lib.SwipeBackLayout$b:
    boolean mIsScrollOverValid -> b
    me.imid.swipebacklayout.lib.SwipeBackLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void onViewDragStateChanged(int) -> a
me.imid.swipebacklayout.lib.Utils -> me.imid.swipebacklayout.lib.a:
    void convertActivityToTranslucent(android.app.Activity) -> a
me.imid.swipebacklayout.lib.ViewDragHelper -> me.imid.swipebacklayout.lib.b:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgeTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    me.imid.swipebacklayout.lib.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    me.imid.swipebacklayout.lib.ViewDragHelper create(android.view.ViewGroup,me.imid.swipebacklayout.lib.ViewDragHelper$Callback) -> a
    void setSensitivity(android.content.Context,float) -> a
    void setMinVelocity(float) -> a
    void setMaxVelocity(float) -> b
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    void setEdgeSize(int) -> b
    void captureChildView(android.view.View,int) -> a
    void cancel() -> b
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> c
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> c
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> c
    void setDragState(int) -> d
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean isEdgeTouched(int,int) -> b
    void releaseViewForPointerUp() -> d
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> a
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgeTouched(int,int) -> e
me.imid.swipebacklayout.lib.ViewDragHelper$1 -> me.imid.swipebacklayout.lib.c:
    float getInterpolation(float) -> getInterpolation
me.imid.swipebacklayout.lib.ViewDragHelper$2 -> me.imid.swipebacklayout.lib.d:
    me.imid.swipebacklayout.lib.ViewDragHelper this$0 -> a
    void run() -> run
me.imid.swipebacklayout.lib.ViewDragHelper$Callback -> me.imid.swipebacklayout.lib.b$a:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
me.imid.swipebacklayout.lib.app.SwipeBackActivity -> me.imid.swipebacklayout.lib.app.SwipeBackActivity:
    me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    me.imid.swipebacklayout.lib.SwipeBackLayout getSwipeBackLayout() -> v
    void setSwipeBackEnable(boolean) -> b
me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper -> me.imid.swipebacklayout.lib.app.a:
    android.app.Activity mActivity -> a
    me.imid.swipebacklayout.lib.SwipeBackLayout mSwipeBackLayout -> b
    void onActivityCreate() -> a
    void onPostCreate() -> b
    android.view.View findViewById(int) -> a
    me.imid.swipebacklayout.lib.SwipeBackLayout getSwipeBackLayout() -> c
    android.app.Activity access$000(me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper) -> a
me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper$1 -> me.imid.swipebacklayout.lib.app.b:
    me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper this$0 -> a
    void onScrollStateChange(int,float) -> a
    void onEdgeTouch(int) -> a
    void onScrollOverThreshold() -> a
me.imid.swipebacklayout.lib.app.SwipeBackPreferenceActivity -> me.imid.swipebacklayout.lib.app.SwipeBackPreferenceActivity:
    me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper mHelper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
org.apache.commons.codec.binary.Base64 -> org.a.a.a.a.a:
    byte[] CHUNK_SEPARATOR -> a
    byte[] base64Alphabet -> b
    byte[] lookUpBase64Alphabet -> c
    boolean isBase64(byte) -> a
    byte[] encodeBase64(byte[]) -> a
    byte[] encodeBase64(byte[],boolean) -> a
    byte[] decodeBase64(byte[]) -> b
    byte[] discardNonBase64(byte[]) -> c
org.parceler.Generated -> org.parceler.Generated:
    java.lang.String[] value() -> value
    java.lang.String date() -> date
    java.lang.String comments() -> comments
org.parceler.InjectionUtil -> org.parceler.InjectionUtil:
    java.lang.String GET_FIELD_METHOD -> GET_FIELD_METHOD
    java.lang.String SET_FIELD_METHOD -> SET_FIELD_METHOD
    java.lang.String CALL_METHOD_METHOD -> CALL_METHOD_METHOD
    java.lang.String CALL_CONSTRUCTOR_METHOD -> CALL_CONSTRUCTOR_METHOD
    java.lang.Object getField(java.lang.Class,java.lang.Class,java.lang.Object,java.lang.String) -> getField
    void setField(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object) -> setField
    java.lang.Object callMethod(java.lang.Class,java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> callMethod
    java.lang.Object callConstructor(java.lang.Class,java.lang.Class[],java.lang.Object[]) -> callConstructor
org.parceler.InjectionUtil$1 -> org.parceler.InjectionUtil$1:
org.parceler.InjectionUtil$AccessibleElementPrivilegedAction -> org.parceler.InjectionUtil$AccessibleElementPrivilegedAction:
    java.lang.reflect.AccessibleObject accessible -> accessible
    java.lang.Object run() -> run
    java.lang.Object run(java.lang.reflect.AccessibleObject) -> run
org.parceler.InjectionUtil$GetFieldPrivilegedAction -> org.parceler.InjectionUtil$GetFieldPrivilegedAction:
    java.lang.Object target -> target
    java.lang.Object run(java.lang.reflect.Field) -> run
    java.lang.Object run(java.lang.reflect.AccessibleObject) -> run
org.parceler.InjectionUtil$SetConstructorPrivilegedAction -> org.parceler.InjectionUtil$SetConstructorPrivilegedAction:
    java.lang.Object[] args -> args
    java.lang.Object run(java.lang.reflect.Constructor) -> run
    java.lang.Object run(java.lang.reflect.AccessibleObject) -> run
org.parceler.InjectionUtil$SetFieldPrivilegedAction -> org.parceler.InjectionUtil$SetFieldPrivilegedAction:
    java.lang.Object target -> target
    java.lang.Object value -> value
    java.lang.Void run(java.lang.reflect.Field) -> run
    java.lang.Object run(java.lang.reflect.AccessibleObject) -> run
org.parceler.InjectionUtil$SetMethodPrivilegedAction -> org.parceler.InjectionUtil$SetMethodPrivilegedAction:
    java.lang.Object target -> target
    java.lang.Object[] args -> args
    java.lang.Object run(java.lang.reflect.Method) -> run
    java.lang.Object run(java.lang.reflect.AccessibleObject) -> run
org.parceler.NonParcelRepository -> org.parceler.NonParcelRepository:
    org.parceler.NonParcelRepository INSTANCE -> INSTANCE
    java.util.Map parcelableCollectionFactories -> parcelableCollectionFactories
    org.parceler.NonParcelRepository getInstance() -> getInstance
    java.util.Map get() -> get
org.parceler.NonParcelRepository$1 -> org.parceler.NonParcelRepository$1:
org.parceler.NonParcelRepository$BooleanArrayParcelable -> org.parceler.NonParcelRepository$BooleanArrayParcelable:
    org.parceler.converter.BooleanArrayParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$BooleanArrayParcelable$BooleanArrayParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$BooleanArrayParcelable$BooleanArrayParcelableCreator -> org.parceler.NonParcelRepository$BooleanArrayParcelable$BooleanArrayParcelableCreator:
    org.parceler.NonParcelRepository$BooleanArrayParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$BooleanArrayParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$BooleanArrayParcelableFactory -> org.parceler.NonParcelRepository$BooleanArrayParcelableFactory:
    android.os.Parcelable buildParcelable(boolean[]) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$BooleanParcelable -> org.parceler.NonParcelRepository$BooleanParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$BooleanParcelable$BooleanParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$BooleanParcelable$1 -> org.parceler.NonParcelRepository$BooleanParcelable$1:
    java.lang.Boolean nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Boolean,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$BooleanParcelable$BooleanParcelableCreator -> org.parceler.NonParcelRepository$BooleanParcelable$BooleanParcelableCreator:
    org.parceler.NonParcelRepository$BooleanParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$BooleanParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$BooleanParcelableFactory -> org.parceler.NonParcelRepository$BooleanParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.Boolean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$BundleParcelableFactory -> org.parceler.NonParcelRepository$BundleParcelableFactory:
    android.os.Parcelable buildParcelable(android.os.Bundle) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$ByteArrayParcelable -> org.parceler.NonParcelRepository$ByteArrayParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$ByteArrayParcelable$ByteArrayParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$ByteArrayParcelable$1 -> org.parceler.NonParcelRepository$ByteArrayParcelable$1:
    byte[] nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(byte[],android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$ByteArrayParcelable$ByteArrayParcelableCreator -> org.parceler.NonParcelRepository$ByteArrayParcelable$ByteArrayParcelableCreator:
    org.parceler.NonParcelRepository$ByteArrayParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$ByteArrayParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$ByteArrayParcelableFactory -> org.parceler.NonParcelRepository$ByteArrayParcelableFactory:
    android.os.Parcelable buildParcelable(byte[]) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$ByteParcelable -> org.parceler.NonParcelRepository$ByteParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$ByteParcelable$ByteParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$ByteParcelable$1 -> org.parceler.NonParcelRepository$ByteParcelable$1:
    java.lang.Byte nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Byte,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$ByteParcelable$ByteParcelableCreator -> org.parceler.NonParcelRepository$ByteParcelable$ByteParcelableCreator:
    org.parceler.NonParcelRepository$ByteParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$ByteParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$ByteParcelableFactory -> org.parceler.NonParcelRepository$ByteParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.Byte) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$CharArrayParcelable -> org.parceler.NonParcelRepository$CharArrayParcelable:
    org.parceler.converter.CharArrayParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$CharArrayParcelable$CharArrayParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$CharArrayParcelable$CharArrayParcelableCreator -> org.parceler.NonParcelRepository$CharArrayParcelable$CharArrayParcelableCreator:
    org.parceler.NonParcelRepository$CharArrayParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$CharArrayParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$CharArrayParcelableFactory -> org.parceler.NonParcelRepository$CharArrayParcelableFactory:
    android.os.Parcelable buildParcelable(char[]) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$CharacterParcelable -> org.parceler.NonParcelRepository$CharacterParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$CharacterParcelable$CharacterParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$CharacterParcelable$1 -> org.parceler.NonParcelRepository$CharacterParcelable$1:
    java.lang.Character nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Character,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$CharacterParcelable$CharacterParcelableCreator -> org.parceler.NonParcelRepository$CharacterParcelable$CharacterParcelableCreator:
    org.parceler.NonParcelRepository$CharacterParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$CharacterParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$CharacterParcelableFactory -> org.parceler.NonParcelRepository$CharacterParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.Character) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$CollectionParcelable -> org.parceler.NonParcelRepository$CollectionParcelable:
    org.parceler.converter.CollectionParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$CollectionParcelable$CollectionParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$CollectionParcelable$1 -> org.parceler.NonParcelRepository$CollectionParcelable$1:
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
org.parceler.NonParcelRepository$CollectionParcelable$CollectionParcelableCreator -> org.parceler.NonParcelRepository$CollectionParcelable$CollectionParcelableCreator:
    org.parceler.NonParcelRepository$CollectionParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$CollectionParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$CollectionParcelableFactory -> org.parceler.NonParcelRepository$CollectionParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.Collection) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$ConverterParcelable -> org.parceler.NonParcelRepository$ConverterParcelable:
    java.lang.Object value -> value
    org.parceler.TypeRangeParcelConverter converter -> converter
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.Object getParcel() -> getParcel
org.parceler.NonParcelRepository$DoubleParcelable -> org.parceler.NonParcelRepository$DoubleParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$DoubleParcelable$DoubleParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$DoubleParcelable$1 -> org.parceler.NonParcelRepository$DoubleParcelable$1:
    java.lang.Double nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Double,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$DoubleParcelable$DoubleParcelableCreator -> org.parceler.NonParcelRepository$DoubleParcelable$DoubleParcelableCreator:
    org.parceler.NonParcelRepository$DoubleParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$DoubleParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$DoubleParcelableFactory -> org.parceler.NonParcelRepository$DoubleParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.Double) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$FloatParcelable -> org.parceler.NonParcelRepository$FloatParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$FloatParcelable$FloatParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$FloatParcelable$1 -> org.parceler.NonParcelRepository$FloatParcelable$1:
    java.lang.Float nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Float,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$FloatParcelable$FloatParcelableCreator -> org.parceler.NonParcelRepository$FloatParcelable$FloatParcelableCreator:
    org.parceler.NonParcelRepository$FloatParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$FloatParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$FloatParcelableFactory -> org.parceler.NonParcelRepository$FloatParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.Float) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$IBinderParcelable -> org.parceler.NonParcelRepository$IBinderParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$IBinderParcelable$IBinderParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$IBinderParcelable$1 -> org.parceler.NonParcelRepository$IBinderParcelable$1:
    android.os.IBinder nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(android.os.IBinder,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$IBinderParcelable$IBinderParcelableCreator -> org.parceler.NonParcelRepository$IBinderParcelable$IBinderParcelableCreator:
    org.parceler.NonParcelRepository$IBinderParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$IBinderParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$IBinderParcelableFactory -> org.parceler.NonParcelRepository$IBinderParcelableFactory:
    android.os.Parcelable buildParcelable(android.os.IBinder) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$IntegerParcelable -> org.parceler.NonParcelRepository$IntegerParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$IntegerParcelable$IntegerParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$IntegerParcelable$1 -> org.parceler.NonParcelRepository$IntegerParcelable$1:
    java.lang.Integer nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Integer,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$IntegerParcelable$IntegerParcelableCreator -> org.parceler.NonParcelRepository$IntegerParcelable$IntegerParcelableCreator:
    org.parceler.NonParcelRepository$IntegerParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$IntegerParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$IntegerParcelableFactory -> org.parceler.NonParcelRepository$IntegerParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.Integer) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$LinkedHashMapParcelable -> org.parceler.NonParcelRepository$LinkedHashMapParcelable:
    org.parceler.converter.LinkedHashMapParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$LinkedHashMapParcelable$LinkedHashMapParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$LinkedHashMapParcelable$1 -> org.parceler.NonParcelRepository$LinkedHashMapParcelable$1:
    void mapKeyToParcel(java.lang.Object,android.os.Parcel) -> mapKeyToParcel
    void mapValueToParcel(java.lang.Object,android.os.Parcel) -> mapValueToParcel
    java.lang.Object mapKeyFromParcel(android.os.Parcel) -> mapKeyFromParcel
    java.lang.Object mapValueFromParcel(android.os.Parcel) -> mapValueFromParcel
org.parceler.NonParcelRepository$LinkedHashMapParcelable$LinkedHashMapParcelableCreator -> org.parceler.NonParcelRepository$LinkedHashMapParcelable$LinkedHashMapParcelableCreator:
    org.parceler.NonParcelRepository$LinkedHashMapParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$LinkedHashMapParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$LinkedHashMapParcelableFactory -> org.parceler.NonParcelRepository$LinkedHashMapParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.LinkedHashMap) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$LinkedHashSetParcelable -> org.parceler.NonParcelRepository$LinkedHashSetParcelable:
    org.parceler.converter.LinkedHashSetParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$LinkedHashSetParcelable$LinkedHashSetParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$LinkedHashSetParcelable$1 -> org.parceler.NonParcelRepository$LinkedHashSetParcelable$1:
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
org.parceler.NonParcelRepository$LinkedHashSetParcelable$LinkedHashSetParcelableCreator -> org.parceler.NonParcelRepository$LinkedHashSetParcelable$LinkedHashSetParcelableCreator:
    org.parceler.NonParcelRepository$LinkedHashSetParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$LinkedHashSetParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$LinkedHashSetParcelableFactory -> org.parceler.NonParcelRepository$LinkedHashSetParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.LinkedHashSet) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$LinkedListParcelable -> org.parceler.NonParcelRepository$LinkedListParcelable:
    org.parceler.converter.LinkedListParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$LinkedListParcelable$LinkedListParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$LinkedListParcelable$1 -> org.parceler.NonParcelRepository$LinkedListParcelable$1:
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
org.parceler.NonParcelRepository$LinkedListParcelable$LinkedListParcelableCreator -> org.parceler.NonParcelRepository$LinkedListParcelable$LinkedListParcelableCreator:
    org.parceler.NonParcelRepository$LinkedListParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$LinkedListParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$LinkedListParcelableFactory -> org.parceler.NonParcelRepository$LinkedListParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.LinkedList) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$ListParcelable -> org.parceler.NonParcelRepository$ListParcelable:
    org.parceler.converter.ArrayListParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$ListParcelable$ListParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$ListParcelable$1 -> org.parceler.NonParcelRepository$ListParcelable$1:
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
org.parceler.NonParcelRepository$ListParcelable$ListParcelableCreator -> org.parceler.NonParcelRepository$ListParcelable$ListParcelableCreator:
    org.parceler.NonParcelRepository$ListParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$ListParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$ListParcelableFactory -> org.parceler.NonParcelRepository$ListParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.List) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$LongParcelable -> org.parceler.NonParcelRepository$LongParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$LongParcelable$LongParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$LongParcelable$1 -> org.parceler.NonParcelRepository$LongParcelable$1:
    java.lang.Long nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Long,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$LongParcelable$LongParcelableCreator -> org.parceler.NonParcelRepository$LongParcelable$LongParcelableCreator:
    org.parceler.NonParcelRepository$LongParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$LongParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$LongParcelableFactory -> org.parceler.NonParcelRepository$LongParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.Long) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$MapParcelable -> org.parceler.NonParcelRepository$MapParcelable:
    org.parceler.converter.HashMapParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$MapParcelable$MapParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$MapParcelable$1 -> org.parceler.NonParcelRepository$MapParcelable$1:
    void mapKeyToParcel(java.lang.Object,android.os.Parcel) -> mapKeyToParcel
    void mapValueToParcel(java.lang.Object,android.os.Parcel) -> mapValueToParcel
    java.lang.Object mapKeyFromParcel(android.os.Parcel) -> mapKeyFromParcel
    java.lang.Object mapValueFromParcel(android.os.Parcel) -> mapValueFromParcel
org.parceler.NonParcelRepository$MapParcelable$MapParcelableCreator -> org.parceler.NonParcelRepository$MapParcelable$MapParcelableCreator:
    org.parceler.NonParcelRepository$MapParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$MapParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$MapParcelableFactory -> org.parceler.NonParcelRepository$MapParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.Map) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$SetParcelable -> org.parceler.NonParcelRepository$SetParcelable:
    org.parceler.converter.HashSetParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$SetParcelable$SetParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$SetParcelable$1 -> org.parceler.NonParcelRepository$SetParcelable$1:
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
org.parceler.NonParcelRepository$SetParcelable$SetParcelableCreator -> org.parceler.NonParcelRepository$SetParcelable$SetParcelableCreator:
    org.parceler.NonParcelRepository$SetParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$SetParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$SetParcelableFactory -> org.parceler.NonParcelRepository$SetParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.Set) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$SparseArrayParcelable -> org.parceler.NonParcelRepository$SparseArrayParcelable:
    org.parceler.converter.SparseArrayParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$SparseArrayParcelable$SparseArrayCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$SparseArrayParcelable$1 -> org.parceler.NonParcelRepository$SparseArrayParcelable$1:
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
org.parceler.NonParcelRepository$SparseArrayParcelable$SparseArrayCreator -> org.parceler.NonParcelRepository$SparseArrayParcelable$SparseArrayCreator:
    org.parceler.NonParcelRepository$SparseArrayParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$SparseArrayParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$SparseArrayParcelableFactory -> org.parceler.NonParcelRepository$SparseArrayParcelableFactory:
    android.os.Parcelable buildParcelable(android.util.SparseArray) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$SparseBooleanArrayParcelable -> org.parceler.NonParcelRepository$SparseBooleanArrayParcelable:
    org.parceler.converter.NullableParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$SparseBooleanArrayParcelable$SparseBooleanArrayCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$SparseBooleanArrayParcelable$1 -> org.parceler.NonParcelRepository$SparseBooleanArrayParcelable$1:
    android.util.SparseBooleanArray nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(android.util.SparseBooleanArray,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
org.parceler.NonParcelRepository$SparseBooleanArrayParcelable$SparseBooleanArrayCreator -> org.parceler.NonParcelRepository$SparseBooleanArrayParcelable$SparseBooleanArrayCreator:
    org.parceler.NonParcelRepository$SparseBooleanArrayParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$SparseBooleanArrayParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$SparseBooleanArrayParcelableFactory -> org.parceler.NonParcelRepository$SparseBooleanArrayParcelableFactory:
    android.os.Parcelable buildParcelable(android.util.SparseBooleanArray) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$StringParcelable -> org.parceler.NonParcelRepository$StringParcelable:
    java.lang.String contents -> contents
    org.parceler.NonParcelRepository$StringParcelable$StringParcelableCreator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.String getParcel() -> getParcel
    java.lang.Object getParcel() -> getParcel
org.parceler.NonParcelRepository$StringParcelable$StringParcelableCreator -> org.parceler.NonParcelRepository$StringParcelable$StringParcelableCreator:
    org.parceler.NonParcelRepository$StringParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$StringParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$StringParcelableFactory -> org.parceler.NonParcelRepository$StringParcelableFactory:
    android.os.Parcelable buildParcelable(java.lang.String) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$TreeMapParcelable -> org.parceler.NonParcelRepository$TreeMapParcelable:
    org.parceler.converter.TreeMapParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$TreeMapParcelable$TreeMapParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$TreeMapParcelable$1 -> org.parceler.NonParcelRepository$TreeMapParcelable$1:
    void mapKeyToParcel(java.lang.Object,android.os.Parcel) -> mapKeyToParcel
    void mapValueToParcel(java.lang.Object,android.os.Parcel) -> mapValueToParcel
    java.lang.Object mapKeyFromParcel(android.os.Parcel) -> mapKeyFromParcel
    java.lang.Object mapValueFromParcel(android.os.Parcel) -> mapValueFromParcel
org.parceler.NonParcelRepository$TreeMapParcelable$TreeMapParcelableCreator -> org.parceler.NonParcelRepository$TreeMapParcelable$TreeMapParcelableCreator:
    org.parceler.NonParcelRepository$TreeMapParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$TreeMapParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$TreeMapParcelableFactory -> org.parceler.NonParcelRepository$TreeMapParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.Map) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.NonParcelRepository$TreeSetParcelable -> org.parceler.NonParcelRepository$TreeSetParcelable:
    org.parceler.converter.TreeSetParcelConverter CONVERTER -> CONVERTER
    org.parceler.NonParcelRepository$TreeSetParcelable$TreeSetParcelableCreator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.parceler.NonParcelRepository$TreeSetParcelable$1 -> org.parceler.NonParcelRepository$TreeSetParcelable$1:
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
org.parceler.NonParcelRepository$TreeSetParcelable$TreeSetParcelableCreator -> org.parceler.NonParcelRepository$TreeSetParcelable$TreeSetParcelableCreator:
    org.parceler.NonParcelRepository$TreeSetParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.NonParcelRepository$TreeSetParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.NonParcelRepository$TreeSetParcelableFactory -> org.parceler.NonParcelRepository$TreeSetParcelableFactory:
    android.os.Parcelable buildParcelable(java.util.Set) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parcel -> org.parceler.Parcel:
    org.parceler.Parcel$Serialization value() -> value
    java.lang.Class[] implementations() -> implementations
    boolean parcelsIndex() -> parcelsIndex
    java.lang.Class[] analyze() -> analyze
    java.lang.Class converter() -> converter
org.parceler.Parcel$Serialization -> org.parceler.Parcel$Serialization:
    org.parceler.Parcel$Serialization FIELD -> FIELD
    org.parceler.Parcel$Serialization METHOD -> METHOD
    org.parceler.Parcel$Serialization BEAN -> BEAN
    org.parceler.Parcel$Serialization[] $VALUES -> $VALUES
    org.parceler.Parcel$Serialization[] values() -> values
    org.parceler.Parcel$Serialization valueOf(java.lang.String) -> valueOf
org.parceler.ParcelClass -> org.parceler.ParcelClass:
    java.lang.Class value() -> value
    org.parceler.Parcel annotation() -> annotation
org.parceler.ParcelClasses -> org.parceler.ParcelClasses:
    org.parceler.ParcelClass[] value() -> value
org.parceler.ParcelConstructor -> org.parceler.ParcelConstructor:
org.parceler.ParcelConverter -> org.parceler.ParcelConverter:
    java.lang.String CONVERT_TO_PARCEL -> CONVERT_TO_PARCEL
    java.lang.String CONVERT_FROM_PARCEL -> CONVERT_FROM_PARCEL
org.parceler.ParcelConverter$EmptyConverter -> org.parceler.ParcelConverter$EmptyConverter:
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
org.parceler.ParcelFactory -> org.parceler.ParcelFactory:
org.parceler.ParcelProperty -> org.parceler.ParcelProperty:
    java.lang.String value() -> value
org.parceler.ParcelPropertyConverter -> org.parceler.ParcelPropertyConverter:
    java.lang.Class value() -> value
org.parceler.ParcelWrapper -> org.parceler.ParcelWrapper:
    java.lang.String GET_PARCEL -> GET_PARCEL
    java.lang.Object getParcel() -> getParcel
org.parceler.Parceler$$Parcels -> org.parceler.Parceler$$Parcels:
    java.util.Map map$$0 -> map$$0
    java.util.Map get() -> get
org.parceler.Parceler$$Parcels$1 -> org.parceler.Parceler$$Parcels$1:
org.parceler.Parceler$$Parcels$AlertSetBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$AlertSetBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.AlertSetBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.AlertSetBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$CombinationBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$CombinationBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.CombinationBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.CombinationBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$CompareFundItem$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$CompareFundItem$$Parcelable$$0:
    com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem$$Parcelable buildParcelable(com.dkhs.portfolio.ui.adapter.CompareIndexAdapter$CompareFundItem) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$ConStockBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$ConStockBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.ConStockBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.ConStockBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$DragListItem$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$DragListItem$$Parcelable$$0:
    com.dkhs.portfolio.bean.DragListItem$$Parcelable buildParcelable(com.dkhs.portfolio.bean.DragListItem) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$FundQuoteBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$FundQuoteBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.FundQuoteBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.FundQuoteBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$ManagersEntity$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$ManagersEntity$$Parcelable$$0:
    com.dkhs.portfolio.bean.ManagersEntity$$Parcelable buildParcelable(com.dkhs.portfolio.bean.ManagersEntity) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$NewsforModel$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$NewsforModel$$Parcelable$$0:
    com.dkhs.portfolio.engine.NewsforModel$$Parcelable buildParcelable(com.dkhs.portfolio.engine.NewsforModel) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$PortfolioAlertBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$PortfolioAlertBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.PortfolioAlertBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.PortfolioAlertBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$PositionAdjustBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$PositionAdjustBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.PositionAdjustBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.PositionAdjustBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$PositionDetail$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$PositionDetail$$Parcelable$$0:
    com.dkhs.portfolio.bean.PositionDetail$$Parcelable buildParcelable(com.dkhs.portfolio.bean.PositionDetail) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$SelectStockBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$SelectStockBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.SelectStockBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.SelectStockBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$StockBean$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$StockBean$$Parcelable$$0:
    com.dkhs.portfolio.bean.StockBean$$Parcelable buildParcelable(com.dkhs.portfolio.bean.StockBean) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parceler$$Parcels$UserEntity$$Parcelable$$0 -> org.parceler.Parceler$$Parcels$UserEntity$$Parcelable$$0:
    com.dkhs.portfolio.bean.UserEntity$$Parcelable buildParcelable(com.dkhs.portfolio.bean.UserEntity) -> buildParcelable
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.ParcelerRuntimeException -> org.parceler.ParcelerRuntimeException:
org.parceler.Parcels -> org.parceler.Parcels:
    java.lang.String PARCELS_NAME -> PARCELS_NAME
    java.lang.String PARCELS_REPOSITORY_NAME -> PARCELS_REPOSITORY_NAME
    java.lang.String PARCELS_PACKAGE -> PARCELS_PACKAGE
    java.lang.String IMPL_EXT -> IMPL_EXT
    org.parceler.Parcels$ParcelCodeRepository REPOSITORY -> REPOSITORY
    org.parceler.Parcels$NullParcelable NULL_PARCELABLE -> NULL_PARCELABLE
    void update(java.lang.ClassLoader) -> update
    android.os.Parcelable wrap(java.lang.Object) -> wrap
    android.os.Parcelable wrap(java.lang.Class,java.lang.Object) -> wrap
    java.lang.Object unwrap(android.os.Parcelable) -> unwrap
org.parceler.Parcels$1 -> org.parceler.Parcels$1:
org.parceler.Parcels$NullParcelable -> org.parceler.Parcels$NullParcelable:
    org.parceler.Parcels$NullParcelable$NullParcelableCreator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.Object getParcel() -> getParcel
org.parceler.Parcels$NullParcelable$NullParcelableCreator -> org.parceler.Parcels$NullParcelable$NullParcelableCreator:
    org.parceler.Parcels$NullParcelable createFromParcel(android.os.Parcel) -> createFromParcel
    org.parceler.Parcels$NullParcelable[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.parceler.Parcels$ParcelCodeRepository -> org.parceler.Parcels$ParcelCodeRepository:
    java.util.concurrent.ConcurrentMap generatedMap -> generatedMap
    org.parceler.Parcels$ParcelableFactory get(java.lang.Class) -> get
    java.lang.String buildParcelableImplName(java.lang.Class) -> buildParcelableImplName
    org.parceler.Parcels$ParcelableFactory findClass(java.lang.Class) -> findClass
    void loadRepository(java.lang.ClassLoader) -> loadRepository
    void loadRepository(org.parceler.Repository) -> loadRepository
org.parceler.Parcels$ParcelableFactory -> org.parceler.Parcels$ParcelableFactory:
    java.lang.String BUILD_PARCELABLE -> BUILD_PARCELABLE
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Parcels$ParcelableFactoryReflectionProxy -> org.parceler.Parcels$ParcelableFactoryReflectionProxy:
    java.lang.reflect.Constructor constructor -> constructor
    android.os.Parcelable buildParcelable(java.lang.Object) -> buildParcelable
org.parceler.Repository -> org.parceler.Repository:
    java.util.Map get() -> get
org.parceler.Transient -> org.parceler.Transient:
org.parceler.TypeRangeParcelConverter -> org.parceler.TypeRangeParcelConverter:
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
org.parceler.converter.ArrayListParcelConverter -> org.parceler.converter.ArrayListParcelConverter:
    java.util.ArrayList createCollection() -> createCollection
    java.util.Collection createCollection() -> createCollection
org.parceler.converter.BooleanArrayParcelConverter -> org.parceler.converter.BooleanArrayParcelConverter:
    int NULL -> NULL
    void toParcel(boolean[],android.os.Parcel) -> toParcel
    boolean[] fromParcel(android.os.Parcel) -> fromParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
org.parceler.converter.CharArrayParcelConverter -> org.parceler.converter.CharArrayParcelConverter:
    int NULL -> NULL
    void toParcel(char[],android.os.Parcel) -> toParcel
    char[] fromParcel(android.os.Parcel) -> fromParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
org.parceler.converter.CollectionParcelConverter -> org.parceler.converter.CollectionParcelConverter:
    int NULL -> NULL
    void toParcel(java.util.Collection,android.os.Parcel) -> toParcel
    java.util.Collection fromParcel(android.os.Parcel) -> fromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    java.util.Collection createCollection() -> createCollection
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
org.parceler.converter.HashMapParcelConverter -> org.parceler.converter.HashMapParcelConverter:
    java.util.HashMap createMap() -> createMap
    java.util.Map createMap() -> createMap
org.parceler.converter.HashSetParcelConverter -> org.parceler.converter.HashSetParcelConverter:
    java.util.HashSet createCollection() -> createCollection
    java.util.Collection createCollection() -> createCollection
org.parceler.converter.LinkedHashMapParcelConverter -> org.parceler.converter.LinkedHashMapParcelConverter:
    java.util.LinkedHashMap createMap() -> createMap
    java.util.Map createMap() -> createMap
org.parceler.converter.LinkedHashSetParcelConverter -> org.parceler.converter.LinkedHashSetParcelConverter:
    java.util.LinkedHashSet createCollection() -> createCollection
    java.util.Collection createCollection() -> createCollection
org.parceler.converter.LinkedListParcelConverter -> org.parceler.converter.LinkedListParcelConverter:
    java.util.LinkedList createCollection() -> createCollection
    java.util.Collection createCollection() -> createCollection
org.parceler.converter.MapParcelConverter -> org.parceler.converter.MapParcelConverter:
    int NULL -> NULL
    void toParcel(java.util.Map,android.os.Parcel) -> toParcel
    java.util.Map fromParcel(android.os.Parcel) -> fromParcel
    java.util.Map createMap() -> createMap
    void mapKeyToParcel(java.lang.Object,android.os.Parcel) -> mapKeyToParcel
    void mapValueToParcel(java.lang.Object,android.os.Parcel) -> mapValueToParcel
    java.lang.Object mapKeyFromParcel(android.os.Parcel) -> mapKeyFromParcel
    java.lang.Object mapValueFromParcel(android.os.Parcel) -> mapValueFromParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
org.parceler.converter.NullableParcelConverter -> org.parceler.converter.NullableParcelConverter:
    int NULL -> NULL
    int NOT_NULL -> NOT_NULL
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    void nullSafeToParcel(java.lang.Object,android.os.Parcel) -> nullSafeToParcel
    java.lang.Object nullSafeFromParcel(android.os.Parcel) -> nullSafeFromParcel
org.parceler.converter.SparseArrayParcelConverter -> org.parceler.converter.SparseArrayParcelConverter:
    void toParcel(android.util.SparseArray,android.os.Parcel) -> toParcel
    android.util.SparseArray fromParcel(android.os.Parcel) -> fromParcel
    void itemToParcel(java.lang.Object,android.os.Parcel) -> itemToParcel
    java.lang.Object itemFromParcel(android.os.Parcel) -> itemFromParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    void toParcel(java.lang.Object,android.os.Parcel) -> toParcel
org.parceler.converter.TreeMapParcelConverter -> org.parceler.converter.TreeMapParcelConverter:
    java.util.TreeMap createMap() -> createMap
    java.util.Map createMap() -> createMap
org.parceler.converter.TreeSetParcelConverter -> org.parceler.converter.TreeSetParcelConverter:
    java.util.TreeSet createCollection() -> createCollection
    java.util.Collection createCollection() -> createCollection
u.aly.a -> a.a.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ar e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ar d() -> d
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.as) -> a
u.aly.ab -> a.a.b:
    java.util.HashMap b(java.util.Map) -> b
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ac -> a.a.c:
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ae -> a.a.d:
    void a(org.json.JSONArray) -> a
u.aly.af -> a.a.e:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ag -> a.a.f:
    u.aly.ag a -> a
    u.aly.ag b -> b
    u.aly.ag c -> c
    u.aly.ag d -> d
    int e -> e
    u.aly.ag[] f -> f
    u.aly.ag[] values() -> values
    u.aly.ag valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ag a(int) -> a
u.aly.ah -> a.a.g:
    u.aly.dd c -> c
    u.aly.ct d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dd h() -> c
    u.aly.ct i() -> d
u.aly.ah$1 -> a.a.g$1:
u.aly.ah$a -> a.a.g$a:
    void a(u.aly.cy,u.aly.ah) -> a
    void b(u.aly.cy,u.aly.ah) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$b -> a.a.g$b:
    u.aly.ah$a a() -> a
    u.aly.dg b() -> b
u.aly.ah$c -> a.a.g$c:
    void a(u.aly.cy,u.aly.ah) -> a
    void b(u.aly.cy,u.aly.ah) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$d -> a.a.g$d:
    u.aly.ah$c a() -> a
    u.aly.dg b() -> b
u.aly.ah$e -> a.a.g$e:
    u.aly.ah$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.ah$e[] e -> e
    u.aly.ah$e[] values() -> values
    u.aly.ah$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ai -> a.a.h:
    u.aly.dd l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bc e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.ai$e[] A -> y
    java.util.Map k -> k
    u.aly.ai a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ai b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ai a(int) -> a
    boolean l() -> b
    void c(boolean) -> c
    u.aly.ai c(java.lang.String) -> c
    boolean o() -> c
    void d(boolean) -> d
    u.aly.ai a(u.aly.bc) -> a
    void e(boolean) -> e
    u.aly.ai d(java.lang.String) -> d
    void f(boolean) -> f
    u.aly.ai e(java.lang.String) -> e
    void g(boolean) -> g
    u.aly.ai f(java.lang.String) -> f
    boolean A() -> d
    void h(boolean) -> h
    u.aly.ai g(java.lang.String) -> g
    boolean D() -> e
    void i(boolean) -> i
    u.aly.ai c(int) -> b
    boolean G() -> f
    void j(boolean) -> j
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void H() -> g
    u.aly.dd I() -> h
    u.aly.ct J() -> i
    u.aly.ct K() -> j
    u.aly.ct L() -> k
    u.aly.ct M() -> l
    u.aly.ct N() -> m
    u.aly.ct O() -> n
    u.aly.ct P() -> o
    u.aly.ct Q() -> p
    u.aly.ct R() -> q
    u.aly.ct S() -> r
u.aly.ai$1 -> a.a.h$1:
u.aly.ai$a -> a.a.h$a:
    void a(u.aly.cy,u.aly.ai) -> a
    void b(u.aly.cy,u.aly.ai) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$b -> a.a.h$b:
    u.aly.ai$a a() -> a
    u.aly.dg b() -> b
u.aly.ai$c -> a.a.h$c:
    void a(u.aly.cy,u.aly.ai) -> a
    void b(u.aly.cy,u.aly.ai) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$d -> a.a.h$d:
    u.aly.ai$c a() -> a
    u.aly.dg b() -> b
u.aly.ai$e -> a.a.h$e:
    u.aly.ai$e a -> a
    u.aly.ai$e b -> b
    u.aly.ai$e c -> c
    u.aly.ai$e d -> d
    u.aly.ai$e e -> e
    u.aly.ai$e f -> f
    u.aly.ai$e g -> g
    u.aly.ai$e h -> h
    u.aly.ai$e i -> i
    u.aly.ai$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.ai$e[] n -> n
    u.aly.ai$e[] values() -> values
    u.aly.ai$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.aj -> a.a.i:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.aj$e[] n -> k
    java.util.Map d -> d
    u.aly.aj a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.aj c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.aj d(int) -> c
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dd n() -> e
    u.aly.ct o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
u.aly.aj$1 -> a.a.i$1:
u.aly.aj$a -> a.a.i$a:
    void a(u.aly.cy,u.aly.aj) -> a
    void b(u.aly.cy,u.aly.aj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$b -> a.a.i$b:
    u.aly.aj$a a() -> a
    u.aly.dg b() -> b
u.aly.aj$c -> a.a.i$c:
    void a(u.aly.cy,u.aly.aj) -> a
    void b(u.aly.cy,u.aly.aj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$d -> a.a.i$d:
    u.aly.aj$c a() -> a
    u.aly.dg b() -> b
u.aly.aj$e -> a.a.i$e:
    u.aly.aj$e a -> a
    u.aly.aj$e b -> b
    u.aly.aj$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aj$e[] g -> g
    u.aly.aj$e[] values() -> values
    u.aly.aj$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ak -> a.a.j:
    u.aly.dd s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    u.aly.ct y -> y
    u.aly.ct z -> z
    u.aly.ct A -> A
    u.aly.ct B -> B
    u.aly.ct C -> C
    u.aly.ct D -> D
    u.aly.ct E -> E
    u.aly.ct F -> F
    u.aly.ct G -> G
    u.aly.ct H -> H
    u.aly.ct I -> I
    u.aly.ct J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.ba i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.ak$e[] P -> M
    java.util.Map r -> r
    u.aly.ak a(java.lang.String) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ak b(java.lang.String) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ak c(java.lang.String) -> c
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    u.aly.ak e(java.lang.String) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ak f(java.lang.String) -> e
    boolean u() -> f
    void f(boolean) -> f
    u.aly.ak g(java.lang.String) -> f
    boolean x() -> g
    void g(boolean) -> g
    u.aly.ak h(java.lang.String) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ak a(u.aly.ba) -> a
    boolean D() -> i
    void i(boolean) -> i
    boolean G() -> j
    void k(boolean) -> j
    boolean J() -> k
    void m(boolean) -> k
    u.aly.ak i(java.lang.String) -> h
    boolean M() -> l
    void n(boolean) -> l
    u.aly.ak j(java.lang.String) -> i
    boolean P() -> m
    void o(boolean) -> m
    u.aly.ak a(long) -> a
    boolean S() -> n
    void p(boolean) -> n
    u.aly.ak k(java.lang.String) -> j
    boolean V() -> o
    void q(boolean) -> o
    u.aly.ak l(java.lang.String) -> k
    boolean Y() -> p
    void r(boolean) -> p
    u.aly.ak m(java.lang.String) -> l
    boolean ab() -> q
    void s(boolean) -> q
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void ac() -> r
    u.aly.dd ad() -> s
    u.aly.ct ae() -> t
    u.aly.ct af() -> u
    u.aly.ct ag() -> v
    u.aly.ct ah() -> w
    u.aly.ct ai() -> x
    u.aly.ct aj() -> y
    u.aly.ct ak() -> z
    u.aly.ct al() -> A
    u.aly.ct am() -> B
    u.aly.ct an() -> C
    u.aly.ct ao() -> D
    u.aly.ct ap() -> E
    u.aly.ct aq() -> F
    u.aly.ct ar() -> G
    u.aly.ct as() -> H
    u.aly.ct at() -> I
    u.aly.ct au() -> J
u.aly.ak$1 -> a.a.j$1:
u.aly.ak$a -> a.a.j$a:
    void a(u.aly.cy,u.aly.ak) -> a
    void b(u.aly.cy,u.aly.ak) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$b -> a.a.j$b:
    u.aly.ak$a a() -> a
    u.aly.dg b() -> b
u.aly.ak$c -> a.a.j$c:
    void a(u.aly.cy,u.aly.ak) -> a
    void b(u.aly.cy,u.aly.ak) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$d -> a.a.j$d:
    u.aly.ak$c a() -> a
    u.aly.dg b() -> b
u.aly.ak$e -> a.a.j$e:
    u.aly.ak$e a -> a
    u.aly.ak$e b -> b
    u.aly.ak$e c -> c
    u.aly.ak$e d -> d
    u.aly.ak$e e -> e
    u.aly.ak$e f -> f
    u.aly.ak$e g -> g
    u.aly.ak$e h -> h
    u.aly.ak$e i -> i
    u.aly.ak$e j -> j
    u.aly.ak$e k -> k
    u.aly.ak$e l -> l
    u.aly.ak$e m -> m
    u.aly.ak$e n -> n
    u.aly.ak$e o -> o
    u.aly.ak$e p -> p
    u.aly.ak$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.ak$e[] u -> u
    u.aly.ak$e[] values() -> values
    u.aly.ak$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.am -> a.a.k:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.an c -> c
    byte k -> j
    u.aly.am$e[] l -> k
    java.util.Map d -> d
    u.aly.am a(long) -> a
    boolean e() -> a
    void b(boolean) -> a
    u.aly.am a(java.lang.String) -> a
    void c(boolean) -> b
    u.aly.am a(u.aly.an) -> a
    boolean l() -> b
    void d(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> c
    u.aly.dd n() -> d
    u.aly.ct o() -> e
    u.aly.ct p() -> f
    u.aly.ct q() -> g
u.aly.am$1 -> a.a.k$1:
u.aly.am$a -> a.a.k$a:
    void a(u.aly.cy,u.aly.am) -> a
    void b(u.aly.cy,u.aly.am) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$b -> a.a.k$b:
    u.aly.am$a a() -> a
    u.aly.dg b() -> b
u.aly.am$c -> a.a.k$c:
    void a(u.aly.cy,u.aly.am) -> a
    void b(u.aly.cy,u.aly.am) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$d -> a.a.k$d:
    u.aly.am$c a() -> a
    u.aly.dg b() -> b
u.aly.am$e -> a.a.k$e:
    u.aly.am$e a -> a
    u.aly.am$e b -> b
    u.aly.am$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.am$e[] g -> g
    u.aly.am$e[] values() -> values
    u.aly.am$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.an -> a.a.l:
    u.aly.an a -> a
    u.aly.an b -> b
    int c -> c
    u.aly.an[] d -> d
    u.aly.an[] values() -> values
    u.aly.an valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.an a(int) -> a
u.aly.ao -> a.a.m:
    u.aly.dd g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.ao$e[] r -> o
    java.util.Map f -> f
    u.aly.ao a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ao a(java.util.Map) -> a
    void b(boolean) -> b
    u.aly.ao a(long) -> a
    boolean m() -> a
    void c(boolean) -> c
    u.aly.ao a(int) -> a
    boolean p() -> b
    void d(boolean) -> d
    u.aly.ao b(long) -> b
    boolean s() -> c
    void e(boolean) -> e
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void t() -> d
    u.aly.dd u() -> e
    u.aly.ct v() -> f
    u.aly.ct w() -> g
    u.aly.ct x() -> h
    u.aly.ct y() -> i
    u.aly.ct z() -> j
u.aly.ao$1 -> a.a.m$1:
u.aly.ao$a -> a.a.m$a:
    void a(u.aly.cy,u.aly.ao) -> a
    void b(u.aly.cy,u.aly.ao) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$b -> a.a.m$b:
    u.aly.ao$a a() -> a
    u.aly.dg b() -> b
u.aly.ao$c -> a.a.m$c:
    void a(u.aly.cy,u.aly.ao) -> a
    void b(u.aly.cy,u.aly.ao) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$d -> a.a.m$d:
    u.aly.ao$c a() -> a
    u.aly.dg b() -> b
u.aly.ao$e -> a.a.m$e:
    u.aly.ao$e a -> a
    u.aly.ao$e b -> b
    u.aly.ao$e c -> c
    u.aly.ao$e d -> d
    u.aly.ao$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.ao$e[] i -> i
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ap -> a.a.n:
    u.aly.ap a -> a
    u.aly.ap b -> b
    u.aly.ap c -> c
    int d -> d
    u.aly.ap[] e -> e
    u.aly.ap[] values() -> values
    u.aly.ap valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.ap a(int) -> a
u.aly.aq -> a.a.o:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.aq$e[] n -> m
    java.util.Map e -> e
    u.aly.aq a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.aq b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.aq c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.aq a(long) -> a
    boolean o() -> b
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> c
    u.aly.dd q() -> d
    u.aly.ct r() -> e
    u.aly.ct s() -> f
    u.aly.ct t() -> g
    u.aly.ct u() -> h
u.aly.aq$1 -> a.a.o$1:
u.aly.aq$a -> a.a.o$a:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$b -> a.a.o$b:
    u.aly.aq$a a() -> a
    u.aly.dg b() -> b
u.aly.aq$c -> a.a.o$c:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$d -> a.a.o$d:
    u.aly.aq$c a() -> a
    u.aly.dg b() -> b
u.aly.aq$e -> a.a.o$e:
    u.aly.aq$e a -> a
    u.aly.aq$e b -> b
    u.aly.aq$e c -> c
    u.aly.aq$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.aq$e[] h -> h
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ar -> a.a.p:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    java.lang.String c() -> a
    u.aly.ar a(java.lang.String) -> a
    void a(boolean) -> a
    long f() -> b
    u.aly.ar a(long) -> a
    boolean i() -> c
    void b(boolean) -> b
    int j() -> d
    u.aly.ar a(int) -> a
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.ar$1 -> a.a.p$1:
u.aly.ar$a -> a.a.p$a:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$b -> a.a.p$b:
    u.aly.ar$a a() -> a
    u.aly.dg b() -> b
u.aly.ar$c -> a.a.p$c:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$d -> a.a.p$d:
    u.aly.ar$c a() -> a
    u.aly.dg b() -> b
u.aly.ar$e -> a.a.p$e:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ar$e[] g -> g
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.as -> a.a.q:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.as$e[] j -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    u.aly.as a(java.util.Map) -> a
    void a(boolean) -> a
    java.util.List j() -> b
    u.aly.as a(java.util.List) -> a
    boolean l() -> c
    void b(boolean) -> b
    boolean o() -> d
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dd q() -> f
    u.aly.ct r() -> g
    u.aly.ct s() -> h
    u.aly.ct t() -> i
u.aly.as$1 -> a.a.q$1:
u.aly.as$a -> a.a.q$a:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$b -> a.a.q$b:
    u.aly.as$a a() -> a
    u.aly.dg b() -> b
u.aly.as$c -> a.a.q$c:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$d -> a.a.q$d:
    u.aly.as$c a() -> a
    u.aly.dg b() -> b
u.aly.as$e -> a.a.q$e:
    u.aly.as$e a -> a
    u.aly.as$e b -> b
    u.aly.as$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.as$e[] g -> g
    u.aly.as$e[] values() -> values
    u.aly.as$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.at -> a.a.r:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    void a(boolean) -> a
    int h() -> b
    u.aly.at a(int) -> a
    boolean j() -> c
    void b(boolean) -> b
    java.lang.String k() -> d
    u.aly.at a(java.lang.String) -> a
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void n() -> e
    u.aly.dd o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
    u.aly.ct r() -> i
u.aly.at$1 -> a.a.r$1:
u.aly.at$a -> a.a.r$a:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$b -> a.a.r$b:
    u.aly.at$a a() -> a
    u.aly.dg b() -> b
u.aly.at$c -> a.a.r$c:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$d -> a.a.r$d:
    u.aly.at$c a() -> a
    u.aly.dg b() -> b
u.aly.at$e -> a.a.r$e:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.at$e[] g -> g
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.au -> a.a.s:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.au$e[] l -> k
    java.util.Map d -> d
    java.lang.String c() -> a
    boolean e() -> b
    void a(boolean) -> a
    long f() -> c
    boolean i() -> d
    void b(boolean) -> b
    java.lang.String j() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.au$1 -> a.a.s$1:
u.aly.au$a -> a.a.s$a:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$b -> a.a.s$b:
    u.aly.au$a a() -> a
    u.aly.dg b() -> b
u.aly.au$c -> a.a.s$c:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$d -> a.a.s$d:
    u.aly.au$c a() -> a
    u.aly.dg b() -> b
u.aly.au$e -> a.a.s$e:
    u.aly.au$e a -> a
    u.aly.au$e b -> b
    u.aly.au$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.au$e[] g -> g
    u.aly.au$e[] values() -> values
    u.aly.au$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.av -> a.a.t:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.av$e[] l -> l
    java.util.Map e -> e
    java.lang.String c() -> a
    u.aly.av a(java.lang.String) -> a
    void a(boolean) -> a
    void a(u.aly.am) -> a
    boolean k() -> b
    void b(boolean) -> b
    void a(u.aly.ao) -> a
    boolean p() -> c
    void c(boolean) -> c
    boolean u() -> d
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void v() -> e
    u.aly.dd w() -> f
    u.aly.ct x() -> g
    u.aly.ct y() -> h
    u.aly.ct z() -> i
    u.aly.ct A() -> j
u.aly.av$1 -> a.a.t$1:
u.aly.av$a -> a.a.t$a:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$b -> a.a.t$b:
    u.aly.av$a a() -> a
    u.aly.dg b() -> b
u.aly.av$c -> a.a.t$c:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$d -> a.a.t$d:
    u.aly.av$c a() -> a
    u.aly.dg b() -> b
u.aly.av$e -> a.a.t$e:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    u.aly.av$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.av$e[] h -> h
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.aw -> a.a.u:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dd n() -> e
    u.aly.ct o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
u.aly.aw$1 -> a.a.u$1:
u.aly.aw$a -> a.a.u$a:
    void a(u.aly.cy,u.aly.aw) -> a
    void b(u.aly.cy,u.aly.aw) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$b -> a.a.u$b:
    u.aly.aw$a a() -> a
    u.aly.dg b() -> b
u.aly.aw$c -> a.a.u$c:
    void a(u.aly.cy,u.aly.aw) -> a
    void b(u.aly.cy,u.aly.aw) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$d -> a.a.u$d:
    u.aly.aw$c a() -> a
    u.aly.dg b() -> b
u.aly.aw$e -> a.a.u$e:
    u.aly.aw$e a -> a
    u.aly.aw$e b -> b
    u.aly.aw$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aw$e[] g -> g
    u.aly.aw$e[] values() -> values
    u.aly.aw$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ax -> a.a.v:
    u.aly.dd m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    java.util.Map y -> y
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.ag i -> i
    java.lang.String j -> j
    u.aly.bg k -> k
    byte D -> z
    u.aly.ax$e[] E -> A
    java.util.Map l -> l
    u.aly.ax a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ax a(java.lang.String) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ax b(java.lang.String) -> b
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ax c(java.lang.String) -> c
    boolean u() -> f
    void f(boolean) -> f
    boolean x() -> g
    void g(boolean) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ax a(u.aly.ag) -> a
    boolean D() -> i
    void i(boolean) -> i
    u.aly.ax e(java.lang.String) -> d
    boolean G() -> j
    void j(boolean) -> j
    u.aly.ax a(u.aly.bg) -> a
    boolean J() -> k
    void k(boolean) -> k
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void K() -> l
    u.aly.dd L() -> m
    u.aly.ct M() -> n
    u.aly.ct N() -> o
    u.aly.ct O() -> p
    u.aly.ct P() -> q
    u.aly.ct Q() -> r
    u.aly.ct R() -> s
    u.aly.ct S() -> t
    u.aly.ct T() -> u
    u.aly.ct U() -> v
    u.aly.ct V() -> w
    u.aly.ct W() -> x
u.aly.ax$1 -> a.a.v$1:
u.aly.ax$a -> a.a.v$a:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$b -> a.a.v$b:
    u.aly.ax$a a() -> a
    u.aly.dg b() -> b
u.aly.ax$c -> a.a.v$c:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$d -> a.a.v$d:
    u.aly.ax$c a() -> a
    u.aly.dg b() -> b
u.aly.ax$e -> a.a.v$e:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    u.aly.ax$e e -> e
    u.aly.ax$e f -> f
    u.aly.ax$e g -> g
    u.aly.ax$e h -> h
    u.aly.ax$e i -> i
    u.aly.ax$e j -> j
    u.aly.ax$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.ax$e[] o -> o
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.ay -> a.a.w:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    u.aly.ay a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ay a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> b
    u.aly.dd k() -> c
    u.aly.ct l() -> d
    u.aly.ct m() -> e
u.aly.ay$1 -> a.a.w$1:
u.aly.ay$a -> a.a.w$a:
    void a(u.aly.cy,u.aly.ay) -> a
    void b(u.aly.cy,u.aly.ay) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$b -> a.a.w$b:
    u.aly.ay$a a() -> a
    u.aly.dg b() -> b
u.aly.ay$c -> a.a.w$c:
    void a(u.aly.cy,u.aly.ay) -> a
    void b(u.aly.cy,u.aly.ay) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$d -> a.a.w$d:
    u.aly.ay$c a() -> a
    u.aly.dg b() -> b
u.aly.ay$e -> a.a.w$e:
    u.aly.ay$e a -> a
    u.aly.ay$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ay$e[] f -> f
    u.aly.ay$e[] values() -> values
    u.aly.ay$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.az -> a.a.x:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map a -> a
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.ct a(u.aly.az$a) -> a
    u.aly.dd c() -> a
    u.aly.az$a a(short) -> a
    void b(java.lang.String) -> a
    void b(long) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.az) -> a
    int hashCode() -> hashCode
    u.aly.cg b(short) -> b
    u.aly.ct a(u.aly.cg) -> a
u.aly.az$1 -> a.a.x$1:
    int[] a -> a
u.aly.az$a -> a.a.x$a:
    u.aly.az$a a -> a
    u.aly.az$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.az$a[] f -> f
    u.aly.az$a[] values() -> values
    u.aly.az$a valueOf(java.lang.String) -> valueOf
    u.aly.az$a a(int) -> a
    u.aly.az$a b(int) -> b
    short a() -> a
    java.lang.String b() -> b
u.aly.b -> a.a.y:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.ba -> a.a.z:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dd k() -> d
    u.aly.ct l() -> e
    u.aly.ct m() -> f
u.aly.ba$1 -> a.a.z$1:
u.aly.ba$a -> a.a.z$a:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$b -> a.a.z$b:
    u.aly.ba$a a() -> a
    u.aly.dg b() -> b
u.aly.ba$c -> a.a.z$c:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$d -> a.a.z$d:
    u.aly.ba$c a() -> a
    u.aly.dg b() -> b
u.aly.ba$e -> a.a.z$e:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ba$e[] f -> f
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bb -> a.a.aa:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.at c -> c
    byte k -> j
    u.aly.bb$e[] l -> k
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    java.lang.String f() -> b
    boolean i() -> c
    void b(boolean) -> b
    u.aly.at j() -> d
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.bb$1 -> a.a.aa$1:
u.aly.bb$a -> a.a.aa$a:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$b -> a.a.aa$b:
    u.aly.bb$a a() -> a
    u.aly.dg b() -> b
u.aly.bb$c -> a.a.aa$c:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$d -> a.a.aa$d:
    u.aly.bb$c a() -> a
    u.aly.dg b() -> b
u.aly.bb$e -> a.a.aa$e:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bc -> a.a.ab:
    u.aly.bc a -> a
    u.aly.bc b -> b
    u.aly.bc c -> c
    u.aly.bc d -> d
    int e -> e
    u.aly.bc[] f -> f
    u.aly.bc[] values() -> values
    u.aly.bc valueOf(java.lang.String) -> valueOf
    int a() -> a
    u.aly.bc a(int) -> a
u.aly.bd -> a.a.ac:
    u.aly.dd i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.be g -> g
    byte u -> r
    u.aly.bd$e[] v -> s
    java.util.Map h -> h
    u.aly.bd a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bd a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    u.aly.bd b(long) -> b
    boolean l() -> b
    void c(boolean) -> c
    u.aly.bd c(long) -> c
    boolean o() -> c
    void d(boolean) -> d
    int p() -> d
    u.aly.bd a(java.util.List) -> a
    boolean t() -> e
    void e(boolean) -> e
    void a(u.aly.aw) -> a
    u.aly.bd b(java.util.List) -> b
    boolean y() -> f
    void f(boolean) -> f
    u.aly.bd a(u.aly.be) -> a
    boolean B() -> g
    void g(boolean) -> g
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void C() -> h
    u.aly.dd D() -> i
    u.aly.ct E() -> j
    u.aly.ct F() -> k
    u.aly.ct G() -> l
    u.aly.ct H() -> m
    u.aly.ct I() -> n
    u.aly.ct J() -> o
    u.aly.ct K() -> p
u.aly.bd$1 -> a.a.ac$1:
u.aly.bd$a -> a.a.ac$a:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$b -> a.a.ac$b:
    u.aly.bd$a a() -> a
    u.aly.dg b() -> b
u.aly.bd$c -> a.a.ac$c:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$d -> a.a.ac$d:
    u.aly.bd$c a() -> a
    u.aly.dg b() -> b
u.aly.bd$e -> a.a.ac$e:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    u.aly.bd$e c -> c
    u.aly.bd$e d -> d
    u.aly.bd$e e -> e
    u.aly.bd$e f -> f
    u.aly.bd$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bd$e[] k -> k
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.be -> a.a.ad:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.be a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.be c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dd k() -> d
    u.aly.ct l() -> e
    u.aly.ct m() -> f
u.aly.be$1 -> a.a.ad$1:
u.aly.be$a -> a.a.ad$a:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$b -> a.a.ad$b:
    u.aly.be$a a() -> a
    u.aly.dg b() -> b
u.aly.be$c -> a.a.ad$c:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$d -> a.a.ad$d:
    u.aly.be$c a() -> a
    u.aly.dg b() -> b
u.aly.be$e -> a.a.ad$e:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.be$e[] f -> f
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bf -> a.a.ae:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    u.aly.aj a -> a
    u.aly.ai b -> b
    u.aly.ak c -> c
    u.aly.ax d -> d
    u.aly.ah e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.at h -> h
    u.aly.as i -> i
    u.aly.bf$e[] v -> v
    java.util.Map j -> j
    u.aly.bf a(u.aly.aj) -> a
    void a(boolean) -> a
    u.aly.bf a(u.aly.ai) -> a
    void b(boolean) -> b
    u.aly.bf a(u.aly.ak) -> a
    void c(boolean) -> c
    u.aly.bf a(u.aly.ax) -> a
    void d(boolean) -> d
    u.aly.bf a(u.aly.ah) -> a
    boolean r() -> a
    void e(boolean) -> e
    int s() -> b
    void a(u.aly.av) -> a
    java.util.List u() -> c
    boolean w() -> d
    void f(boolean) -> f
    void a(u.aly.bd) -> a
    java.util.List z() -> e
    boolean B() -> f
    void g(boolean) -> g
    u.aly.bf a(u.aly.at) -> a
    boolean E() -> g
    void h(boolean) -> h
    u.aly.bf a(u.aly.as) -> a
    boolean H() -> h
    void i(boolean) -> i
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void I() -> i
    u.aly.dd J() -> j
    u.aly.ct K() -> k
    u.aly.ct L() -> l
    u.aly.ct M() -> m
    u.aly.ct N() -> n
    u.aly.ct O() -> o
    u.aly.ct P() -> p
    u.aly.ct Q() -> q
    u.aly.ct R() -> r
    u.aly.ct S() -> s
u.aly.bf$1 -> a.a.ae$1:
u.aly.bf$a -> a.a.ae$a:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$b -> a.a.ae$b:
    u.aly.bf$a a() -> a
    u.aly.dg b() -> b
u.aly.bf$c -> a.a.ae$c:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$d -> a.a.ae$d:
    u.aly.bf$c a() -> a
    u.aly.dg b() -> b
u.aly.bf$e -> a.a.ae$e:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    u.aly.bf$e c -> c
    u.aly.bf$e d -> d
    u.aly.bf$e e -> e
    u.aly.bf$e f -> f
    u.aly.bf$e g -> g
    u.aly.bf$e h -> h
    u.aly.bf$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bf$e[] m -> m
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bg -> a.a.af:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    u.aly.ap a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    byte m -> l
    u.aly.bg$e[] n -> m
    java.util.Map e -> e
    u.aly.bg a(u.aly.ap) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bg a(int) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.bg a(java.lang.String) -> a
    boolean l() -> c
    void c(boolean) -> c
    u.aly.bg b(java.lang.String) -> b
    boolean o() -> d
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dd q() -> f
    u.aly.ct r() -> g
    u.aly.ct s() -> h
    u.aly.ct t() -> i
    u.aly.ct u() -> j
u.aly.bg$1 -> a.a.af$1:
u.aly.bg$a -> a.a.af$a:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$b -> a.a.af$b:
    u.aly.bg$a a() -> a
    u.aly.dg b() -> b
u.aly.bg$c -> a.a.af$c:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$d -> a.a.af$d:
    u.aly.bg$c a() -> a
    u.aly.dg b() -> b
u.aly.bg$e -> a.a.af$e:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    u.aly.bg$e c -> c
    u.aly.bg$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bg$e[] h -> h
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bh -> a.a.ag:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    byte y -> v
    java.util.Map j -> j
    u.aly.bh a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bh b(java.lang.String) -> b
    void b(boolean) -> b
    u.aly.bh c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.bh a(int) -> a
    boolean o() -> a
    void d(boolean) -> d
    u.aly.bh c(int) -> b
    boolean r() -> b
    void e(boolean) -> e
    u.aly.bh d(int) -> c
    boolean u() -> c
    void f(boolean) -> f
    u.aly.bh a(byte[]) -> a
    u.aly.bh a(java.nio.ByteBuffer) -> a
    void g(boolean) -> g
    u.aly.bh d(java.lang.String) -> d
    void h(boolean) -> h
    u.aly.bh e(java.lang.String) -> e
    void i(boolean) -> i
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void F() -> d
    u.aly.dd G() -> e
    u.aly.ct H() -> f
    u.aly.ct I() -> g
    u.aly.ct J() -> h
    u.aly.ct K() -> i
    u.aly.ct L() -> j
    u.aly.ct M() -> k
    u.aly.ct N() -> l
    u.aly.ct O() -> m
    u.aly.ct P() -> n
u.aly.bh$1 -> a.a.ag$1:
u.aly.bh$a -> a.a.ag$a:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$b -> a.a.ag$b:
    u.aly.bh$a a() -> a
    u.aly.dg b() -> b
u.aly.bh$c -> a.a.ag$c:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$d -> a.a.ag$d:
    u.aly.bh$c a() -> a
    u.aly.dg b() -> b
u.aly.bh$e -> a.a.ag$e:
    u.aly.bh$e a -> a
    u.aly.bh$e b -> b
    u.aly.bh$e c -> c
    u.aly.bh$e d -> d
    u.aly.bh$e e -> e
    u.aly.bh$e f -> f
    u.aly.bh$e g -> g
    u.aly.bh$e h -> h
    u.aly.bh$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bh$e[] m -> m
    u.aly.bh$e[] values() -> values
    u.aly.bh$e valueOf(java.lang.String) -> valueOf
    short a() -> a
    java.lang.String b() -> b
u.aly.bi -> a.a.ah:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    boolean l(android.content.Context) -> g
    int m(android.content.Context) -> h
    java.lang.String[] n(android.content.Context) -> i
    java.util.Locale x(android.content.Context) -> r
    java.lang.String o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> m
    java.lang.String t(android.content.Context) -> n
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
    boolean w(android.content.Context) -> q
u.aly.bj -> a.a.ai:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> c
u.aly.bu -> a.a.aj:
    int a -> a
    byte[] a(byte[]) -> a
u.aly.bv -> a.a.ak:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
u.aly.bw -> a.a.al:
    boolean a(byte,int) -> a
    boolean a(int,int) -> a
    int b(int,int) -> b
    byte a(byte,int,boolean) -> a
    int a(int,int,boolean) -> a
u.aly.bx -> a.a.am:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> c
    void c() -> b
    java.lang.String toString() -> toString
u.aly.bz -> a.a.an:
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
u.aly.c -> a.a.ao:
    byte[] a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    byte[] d -> d
    byte[] e -> e
    byte[] f -> f
    int g -> g
    int h -> h
    int i -> i
    byte[] j -> j
    byte[] k -> k
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    java.lang.String toString() -> toString
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    byte[] b(java.lang.String) -> b
u.aly.ca -> a.a.ap:
    java.util.Comparator a -> a
    int a(byte,byte) -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
u.aly.ca$1 -> a.a.ap$1:
u.aly.ca$a -> a.a.ap$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.cc -> a.a.aq:
    u.aly.cy a -> a
    u.aly.dl b -> b
    void a(u.aly.bz,byte[]) -> a
u.aly.cf -> a.a.ar:
u.aly.cg -> a.a.as:
    short a() -> a
u.aly.ci -> a.a.at:
    java.io.ByteArrayOutputStream a -> a
    u.aly.dk b -> b
    u.aly.cy c -> c
    byte[] a(u.aly.bz) -> a
u.aly.cj -> a.a.au:
    java.lang.Object b -> b
    u.aly.cg c -> c
    java.util.Map a -> a
    u.aly.cg i() -> b
    java.lang.Object j() -> c
    boolean k() -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.dd c() -> a
    u.aly.ct a(u.aly.cg) -> a
    u.aly.cg b(short) -> b
    java.lang.String toString() -> toString
u.aly.cj$1 -> a.a.au$1:
u.aly.cj$a -> a.a.au$a:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$b -> a.a.au$b:
    u.aly.cj$a a() -> a
    u.aly.dg b() -> b
u.aly.cj$c -> a.a.au$c:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$d -> a.a.au$d:
    u.aly.cj$c a() -> a
    u.aly.dg b() -> b
u.aly.ck -> a.a.av:
    java.lang.Class a -> a
u.aly.cl -> a.a.aw:
    java.lang.String a -> a
    byte b -> b
    u.aly.cm c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
u.aly.cm -> a.a.ax:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
u.aly.cn -> a.a.ay:
    u.aly.cm a -> a
u.aly.co -> a.a.az:
    u.aly.cm a -> a
    u.aly.cm c -> c
u.aly.cq -> a.a.ba:
    java.lang.Class a -> a
u.aly.cr -> a.a.bb:
    u.aly.dd h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.cv) -> a
    void e() -> d
    void a(u.aly.cu) -> a
    void f() -> e
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    void m() -> i
    u.aly.cv n() -> j
    void o() -> k
    u.aly.cu p() -> l
    void q() -> m
    u.aly.dc r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> w
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.cr$a -> a.a.bb$a:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.cy a(u.aly.dm) -> a
u.aly.cs -> a.a.bc:
    u.aly.dd d -> d
    u.aly.ct e -> f
    byte[] f -> g
    u.aly.bx m -> h
    short n -> i
    u.aly.ct o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> x
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void a(u.aly.ct,byte) -> a
    void d() -> c
    void a(u.aly.cv) -> a
    void a(u.aly.cu) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void e() -> d
    void f() -> e
    void c() -> b
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    u.aly.cv n() -> j
    u.aly.cu p() -> l
    u.aly.dc r() -> n
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    byte[] e(int) -> e
    void f(int) -> f
    void m() -> i
    void o() -> k
    void q() -> m
    void s() -> o
    int E() -> z
    long F() -> A
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.cs$a -> a.a.bc$a:
    long a -> a
    u.aly.cy a(u.aly.dm) -> a
u.aly.ct -> a.a.bd:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
u.aly.cu -> a.a.be:
    byte a -> a
    int b -> b
u.aly.cv -> a.a.bf:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.cy -> a.a.bg:
    u.aly.dm g -> e
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.cv) -> a
    void e() -> d
    void a(u.aly.cu) -> a
    void f() -> e
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    void m() -> i
    u.aly.cv n() -> j
    void o() -> k
    u.aly.cu p() -> l
    void q() -> m
    u.aly.dc r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    void B() -> x
    java.lang.Class D() -> y
u.aly.cz -> a.a.bh:
    int g -> a
u.aly.d -> a.a.bi:
    java.lang.String a -> a
    java.io.File b -> b
    u.aly.as c -> c
    long d -> d
    long e -> e
    java.util.Set f -> f
    void a(u.aly.a) -> a
    void a() -> a
    u.aly.as b() -> b
    void g() -> f
    void d() -> c
    void e() -> d
    void f() -> e
    u.aly.as h() -> g
    void a(u.aly.as) -> a
u.aly.da -> a.a.bj:
    u.aly.cy a(u.aly.dm) -> a
u.aly.db -> a.a.bk:
    int a -> a
    void a(u.aly.cy,byte) -> a
    void a(u.aly.cy,byte,int) -> a
u.aly.dc -> a.a.bl:
    byte a -> a
    int b -> b
u.aly.dd -> a.a.bm:
    java.lang.String a -> a
u.aly.de -> a.a.bn:
    java.lang.Class D() -> y
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.dg -> a.a.bo:
    void b(u.aly.cy,u.aly.bz) -> b
    void a(u.aly.cy,u.aly.bz) -> a
u.aly.dh -> a.a.bp:
    u.aly.dg b() -> b
u.aly.di -> a.a.bq:
u.aly.dj -> a.a.br:
u.aly.dk -> a.a.bs:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dl -> a.a.bt:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dm -> a.a.bu:
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dn -> a.a.bv:
    int f -> a
u.aly.e -> a.a.bw:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.f -> a.a.bx:
    byte[] b -> a
    u.aly.at c -> b
    android.content.Context d -> c
    java.lang.String a(u.aly.at) -> a
    boolean c(u.aly.at) -> c
    byte[] a(u.aly.au) -> a
    void b(u.aly.at) -> b
    u.aly.at a(u.aly.at,u.aly.at) -> a
    u.aly.at a() -> a
    void b() -> b
    void c() -> c
u.aly.g -> a.a.by:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.h -> a.a.bz:
    u.aly.d a -> a
    u.aly.f b -> b
    u.aly.d a(android.content.Context) -> a
    u.aly.f b(android.content.Context) -> b
u.aly.i -> a.a.ca:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.j -> a.a.cb:
    u.aly.q a -> a
    u.aly.r b -> b
    com.umeng.analytics.ReportPolicy$e c -> c
    com.umeng.analytics.f d -> d
    u.aly.w e -> e
    u.aly.d f -> f
    int g -> g
    android.content.Context h -> h
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void b() -> a
    byte[] c() -> b
    u.aly.bf a(byte[]) -> a
    byte[] a(u.aly.bf) -> a
    boolean a(boolean) -> a
    boolean d() -> c
    void e() -> d
    void f() -> e
    void a(int,int) -> a
u.aly.k -> a.a.cc:
    u.aly.o a -> a
    android.content.Context b -> b
    u.aly.k c -> c
    u.aly.k a(android.content.Context) -> a
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void b() -> a
    u.aly.o a(u.aly.k) -> a
u.aly.k$1 -> a.a.cd:
    u.aly.p a -> a
    u.aly.k b -> b
    void a() -> a
u.aly.k$3 -> a.a.ce:
    u.aly.k a -> a
    void a() -> a
u.aly.l -> a.a.cf:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
u.aly.m -> a.a.cg:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.t b -> b
    void a(u.aly.t) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.n -> a.a.ch:
    int a -> a
    int b -> b
    u.aly.l c -> c
    android.content.Context d -> d
    u.aly.k e -> e
    void a(java.lang.String,java.lang.String,long,int) -> a
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
u.aly.o -> a.a.ci:
    void b(u.aly.p) -> b
    void a(u.aly.p) -> a
    void b() -> a
u.aly.p -> a.a.cj:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.q -> a.a.ck:
    java.util.List a -> a
    u.aly.ah b -> b
    u.aly.ai c -> c
    u.aly.ak d -> d
    u.aly.ax e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.p) -> a
    void a(u.aly.bf) -> a
    java.lang.String i() -> h
    void a(u.aly.ah) -> a
    u.aly.ai c() -> b
    u.aly.ak d() -> c
    u.aly.ax e() -> d
    u.aly.at f() -> e
    u.aly.as g() -> f
    u.aly.aj h() -> g
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.r -> a.a.cl:
    int d -> a
    java.lang.String e -> b
    java.lang.String f -> c
    int g -> d
    android.content.Context h -> e
    u.aly.w i -> f
    u.aly.f j -> g
    void a(u.aly.w) -> a
    int a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int b(byte[]) -> b
u.aly.t -> a.a.cm:
    void a(java.lang.Throwable) -> a
u.aly.u -> a.a.cn:
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.v -> a.a.co:
    java.lang.String d -> a
    java.lang.String e -> b
    u.aly.af a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
u.aly.w -> a.a.cp:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context m -> h
    void b(android.content.Context) -> b
    boolean b() -> a
    void c() -> b
    void d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    void h() -> g
    boolean i() -> h
    long j() -> i
    u.aly.aj a(android.content.Context) -> a
u.aly.x -> a.a.cq:
    java.lang.String a -> a
    long b -> b
u.aly.y -> a.a.cr:
    u.aly.be a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.z -> a.a.cs:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
uk.co.senab.photoview.Compat -> uk.co.senab.photoview.a:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> b
    int getPointerIndex(int) -> a
    int getPointerIndexEclair(int) -> b
    int getPointerIndexHoneyComb(int) -> c
uk.co.senab.photoview.PhotoView -> uk.co.senab.photoview.PhotoView:
    uk.co.senab.photoview.PhotoViewAttacher mAttacher -> a
    android.widget.ImageView$ScaleType mPendingScaleType -> b
    void setPhotoViewRotation(float) -> setPhotoViewRotation
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    float getMinScale() -> getMinScale
    float getMinimumScale() -> getMinimumScale
    float getMidScale() -> getMidScale
    float getMediumScale() -> getMediumScale
    float getMaxScale() -> getMaxScale
    float getMaximumScale() -> getMaximumScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMinimumScale(float) -> setMinimumScale
    void setMidScale(float) -> setMidScale
    void setMediumScale(float) -> setMediumScale
    void setMaxScale(float) -> setMaxScale
    void setMaximumScale(float) -> setMaximumScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScale(float) -> setScale
    void setScale(float,boolean) -> setScale
    void setScale(float,float,float,boolean) -> setScale
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void onDetachedFromWindow() -> onDetachedFromWindow
uk.co.senab.photoview.PhotoViewAttacher -> uk.co.senab.photoview.b:
    boolean DEBUG -> b
    android.view.animation.Interpolator sInterpolator -> a
    float mMinScale -> c
    float mMidScale -> d
    float mMaxScale -> e
    boolean mAllowParentInterceptOnEdge -> f
    java.lang.ref.WeakReference mImageView -> g
    android.view.GestureDetector mGestureDetector -> h
    uk.co.senab.photoview.gestures.GestureDetector mScaleDragDetector -> i
    android.graphics.Matrix mBaseMatrix -> j
    android.graphics.Matrix mDrawMatrix -> k
    android.graphics.Matrix mSuppMatrix -> l
    android.graphics.RectF mDisplayRect -> m
    float[] mMatrixValues -> n
    uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> o
    uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> p
    uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> q
    android.view.View$OnLongClickListener mLongClickListener -> r
    int mIvTop -> s
    int mIvRight -> t
    int mIvBottom -> u
    int mIvLeft -> v
    uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> w
    int mScrollEdge -> x
    boolean mZoomEnabled -> y
    android.widget.ImageView$ScaleType mScaleType -> z
    float mLastRotation -> A
    void checkZoomLevels(float,float,float) -> b
    boolean hasDrawable(android.widget.ImageView) -> a
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> b
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> b
    void cleanup() -> a
    android.graphics.RectF getDisplayRect() -> b
    void setPhotoViewRotation(float) -> a
    android.widget.ImageView getImageView() -> c
    float getMinimumScale() -> d
    float getMediumScale() -> e
    float getMaximumScale() -> f
    float getScale() -> g
    android.widget.ImageView$ScaleType getScaleType() -> h
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> a
    void setMinimumScale(float) -> b
    void setMediumScale(float) -> c
    void setMaximumScale(float) -> d
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> a
    void setOnMatrixChangeListener(uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> a
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> a
    void setOnViewTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener) -> a
    void setScale(float) -> e
    void setScale(float,boolean) -> a
    void setScale(float,float,float,boolean) -> a
    void setScaleType(android.widget.ImageView$ScaleType) -> a
    void setZoomable(boolean) -> b
    void update() -> i
    android.graphics.Matrix getDrawMatrix() -> j
    void cancelFling() -> l
    void checkAndDisplayMatrix() -> m
    void checkImageViewScaleType() -> n
    boolean checkMatrixBounds() -> o
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> a
    float getValue(android.graphics.Matrix,int) -> a
    void resetMatrix() -> p
    void setImageViewMatrix(android.graphics.Matrix) -> b
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> a
    int getImageViewWidth(android.widget.ImageView) -> c
    int getImageViewHeight(android.widget.ImageView) -> d
    android.view.View$OnLongClickListener access$000(uk.co.senab.photoview.PhotoViewAttacher) -> a
    android.graphics.Matrix access$100(uk.co.senab.photoview.PhotoViewAttacher) -> b
    void access$200(uk.co.senab.photoview.PhotoViewAttacher) -> c
    boolean access$300() -> k
    void access$400(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix) -> a
uk.co.senab.photoview.PhotoViewAttacher$1 -> uk.co.senab.photoview.c:
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void onLongPress(android.view.MotionEvent) -> onLongPress
uk.co.senab.photoview.PhotoViewAttacher$2 -> uk.co.senab.photoview.b$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> a
uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> uk.co.senab.photoview.b$a:
    float mFocalX -> b
    float mFocalY -> c
    long mStartTime -> d
    float mZoomStart -> e
    float mZoomEnd -> f
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void run() -> run
    float interpolate() -> a
uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable -> uk.co.senab.photoview.b$b:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy mScroller -> b
    int mCurrentX -> c
    int mCurrentY -> d
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void cancelFling() -> a
    void fling(int,int,int,int) -> a
    void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener -> uk.co.senab.photoview.b$c:
    void onMatrixChanged(android.graphics.RectF) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener -> uk.co.senab.photoview.b$d:
    void onPhotoTap(android.view.View,float,float) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener -> uk.co.senab.photoview.b$e:
    void onViewTap(android.view.View,float,float) -> a
uk.co.senab.photoview.gestures.CupcakeGestureDetector -> uk.co.senab.photoview.a.a:
    uk.co.senab.photoview.gestures.OnGestureListener mListener -> a
    float mLastTouchX -> b
    float mLastTouchY -> c
    float mTouchSlop -> d
    float mMinimumVelocity -> e
    android.view.VelocityTracker mVelocityTracker -> f
    boolean mIsDragging -> g
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.EclairGestureDetector -> uk.co.senab.photoview.a.b:
    int mActivePointerId -> f
    int mActivePointerIndex -> g
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector -> uk.co.senab.photoview.a.c:
    android.view.ScaleGestureDetector mDetector -> f
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector$1 -> uk.co.senab.photoview.a.d:
    uk.co.senab.photoview.gestures.FroyoGestureDetector this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
uk.co.senab.photoview.gestures.GestureDetector -> uk.co.senab.photoview.a.e:
    boolean onTouchEvent(android.view.MotionEvent) -> c
    boolean isScaling() -> a
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.gestures.OnGestureListener -> uk.co.senab.photoview.a.f:
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onScale(float,float,float) -> a
uk.co.senab.photoview.gestures.VersionedGestureDetector -> uk.co.senab.photoview.a.g:
    uk.co.senab.photoview.gestures.GestureDetector newInstance(android.content.Context,uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.log.LogManager -> uk.co.senab.photoview.b.a:
    uk.co.senab.photoview.log.Logger logger -> a
    uk.co.senab.photoview.log.Logger getLogger() -> a
uk.co.senab.photoview.log.Logger -> uk.co.senab.photoview.b.b:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.log.LoggerDefault -> uk.co.senab.photoview.b.c:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.scrollerproxy.GingerScroller -> uk.co.senab.photoview.c.a:
    android.widget.OverScroller mScroller -> a
    boolean mFirstScroll -> b
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.IcsScroller -> uk.co.senab.photoview.c.b:
    boolean computeScrollOffset() -> a
uk.co.senab.photoview.scrollerproxy.PreGingerScroller -> uk.co.senab.photoview.c.c:
    android.widget.Scroller mScroller -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.ScrollerProxy -> uk.co.senab.photoview.c.d:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy getScroller(android.content.Context) -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
