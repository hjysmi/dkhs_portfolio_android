   apply plugin: 'com.android.application'

apply plugin: 'findbugs'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    compileOptions {
        encoding "UTF-8"
    }
    defaultConfig {
        applicationId "com.dkhs.portfolio"
        minSdkVersion 14
        targetSdkVersion 21


        versionCode 109000714
        versionName "1.9.0.0714"
        //    manifestPlaceholders = [RONG_CLOUD_KEY: "k51hidwq1fqzb"]  //test key
        manifestPlaceholders = [RONG_CLOUD_KEY: "tdrvipksrgsu5"]
    }

    signingConfigs {

        debug {
            // No debug config
        }
        release {
            storeFile file("xdsdkhs.keystore")
            storePassword "xdsdkhs"
            keyAlias "xdsdkhs"
            keyPassword "xdsdkhsadmin"
        }
    }


    buildTypes {
        release {
            buildConfigField 'boolean', 'isSandbox', 'false'
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles 'proguard.cfg'
            debuggable false
        }
        pre_release {
            buildConfigField 'boolean', 'isSandbox', 'true'
            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable true
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
        }
        debug {
            buildConfigField 'boolean', 'isSandbox', 'true'
            minifyEnabled false
            debuggable true
            zipAlignEnabled false
            shrinkResources false
            //debug的 versionName 跟正式的不一样
            versionNameSuffix 'debug'
        }
    }

    productFlavors {
        rong_release {
            manifestPlaceholders = [RONG_CLOUD_KEY: "tdrvipksrgsu5"]
        }
        rong_debug {
            manifestPlaceholders = [RONG_CLOUD_KEY: "k51hidwq1fqzb"]
        }

    }

    task findbugs(type: FindBugs) {
        ignoreFailures = false
        effort = "max"
        reportLevel = "high"
        excludeFilter = new File("${project.rootDir}/config/quality/findbugs/findbugs-filter.xml")
        classes = files("${project.rootDir}/app/build/classes")

        source 'src'
        include '**/*.java'
        exclude '**/gen/**'

        reports {
            xml.enabled = false
            html.enabled = true
            xml {
                destination "$project.buildDir/reports/findbugs/findbugs.xml"
            }
            html {
                destination "$project.buildDir/reports/findbugs/findbugs.html"
            }
        }

        classpath = files()
    }
    android {
        packagingOptions {
            exclude 'META-INF/LICENSE.txt'
        }
    }


}
dependencies {

    //    compile 'com.android.support:design:22.2.0'

    //ANR catch
    compile 'com.github.anrwatchdog:anrwatchdog:1.1.+'
    compile 'com.android.support:gridlayout-v7:21.0.0'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.squareup:otto:1.3.5'
    //    compile 'com.github.gfx.util.encrypt:android-encrypt-utils:2.0.0'
    compile files('libs/commons-codec.jar')
    compile files('libs/ShareSDK-Core-2.6.0.jar')
    compile files('libs/ShareSDK-QZone-2.6.0.jar')
    compile files('libs/ShareSDK-Wechat-2.6.0.jar')
    compile files('libs/ShareSDK-Wechat-Core-2.6.0.jar')
    //    compile files('libs/ShareSDK-Wechat-Favorite-2.6.0.jar')
    compile files('libs/ShareSDK-Wechat-Moments-2.6.0.jar')
    compile project(':kit')
    compile 'org.parceler:parceler-api:1.0.0'
    provided 'org.parceler:parceler:1.0.0'
    compile project(':library')
    compile project(':baselibrary')
    compile files('libs/ShareSDK-SinaWeibo-2.6.0.jar')
    compile files('libs/MobTools.jar')
    compile files('libs/ShareSDK-QQ-2.6.0.jar')
    compile 'com.android.support:percent:22.2.0'
    compile 'com.umeng.analytics:analytics:latest.integration'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
    compile 'joda-time:joda-time:2.3'
}
